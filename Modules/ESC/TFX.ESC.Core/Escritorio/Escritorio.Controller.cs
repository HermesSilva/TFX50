//<auto-generated/>
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using TFX.Core.Controllers;
using TFX.Core.Services;
using System;
using TFX.Core.Model;
using Microsoft.AspNetCore.Http;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using TFX.Core.Data;
using TFX.ESC.Core.Escritorio;
using TFX.ESC.Core.Escritorio.Rules;
using TFX.Core.Data.DB;
using TFX.ESC.Core.DB;

namespace TFX.ESC.Core.Escritorio
{
    [Route("Escritorio")]
    [ApiController]
    public class EscritorioController : XController
    {
        public abstract class BaseINFEscritorioControllerRule : XControllerINFRule<EscritorioController>
        {
            public BaseINFEscritorioControllerRule(EscritorioController pController)
                :base(pController)
            {
            }
        }

        public EscritorioController(IEscritorioService pService)
        {
            Service = pService;
            _Rule = new INFEscritorioControllerRule(this);
        }

        internal readonly IEscritorioService Service;
        private readonly INFEscritorioControllerRule _Rule;

        [HttpPost("Lista")]
        public IActionResult Lista([FromBody] EscritorioFilter pFilter)
        {
            try
            {
                var dst = Service.Execute(pFilter);
                return Ok(dst);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }

        [HttpPost("Flush")]
        [XEndpointDescription(typeof(EscritorioService.CORxAgregado), typeof(EscritorioService.CORxPessoa), typeof(EscritorioService.ESCxEscritorio))]
        public IActionResult Flush([FromBody] EscritorioDataSet pDataSet)
        {
            try
            {
                var result = Service.Flush(pDataSet);
                Service.GracefullyClose();
                return Ok(result);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }
    }
}