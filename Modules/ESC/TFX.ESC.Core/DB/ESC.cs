//<auto-generated/>
using System;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore.Infrastructure;
using TFX.Core;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using TFX.Core.Lzma;

namespace TFX.ESC.Core.DB
{
    public  partial class TFXESCCoreContext : XDBContext
    {
        #region _ESCxEscritorio

        public class _ESCxEscritorio
        {
            public Boolean IsPKEmpty => !ESCxEscritorioID.HasValue;
            [Display(Name = "Escritório")]
            [Required()]
            public Guid? ESCxEscritorioID {get; set;}
            public _CORxAgregado CORxAgregado {get; set;}
            public List<_ESCxContabilistaEscritorio> ESCxContabilistaEscritorio {get; set;} = new List<_ESCxContabilistaEscritorio>();
        }

        #endregion _ESCxEscritorio

        #region _CORxPessoa

        public class _CORxPessoa
        {
            [Display(Name = "Localidade")]
            [Required()]
            public Int32 CEPxLocalidadePrincipalID {get; set;}
            public Boolean IsPKEmpty => !CORxPessoaID.HasValue;
            [Display(Name = "Pessoa")]
            [Required()]
            public Guid? CORxPessoaID {get; set;}
            [MaxLength(180)]
            [Required()]
            public String Nome {get; set;}
            public List<_ESCxContabilista> ESCxContabilista {get; set;} = new List<_ESCxContabilista>();
        }

        #endregion _CORxPessoa

        #region _ESCxContabilista

        public class _ESCxContabilista
        {
            [MaxLength(15)]
            [Required()]
            public String CRC {get; set;}
            public Boolean IsPKEmpty => !ESCxContabilistaID.HasValue;
            [Display(Name = "Contabilista")]
            [Required()]
            public Guid? ESCxContabilistaID {get; set;}
            public _CORxPessoa CORxPessoa {get; set;}
            public List<_ESCxContabilistaEscritorio> ESCxContabilistaEscritorio {get; set;} = new List<_ESCxContabilistaEscritorio>();
            public List<_ESCxEmpresa> ESCxEmpresa {get; set;} = new List<_ESCxEmpresa>();
        }

        #endregion _ESCxContabilista

        #region _ESCxContabilistaEscritorio

        public class _ESCxContabilistaEscritorio
        {
            public Boolean IsPKEmpty => !ESCxContabilistaEscritorioID.HasValue;
            [Display(Name = "Contabilistas por Escritório")]
            [Required()]
            public Guid? ESCxContabilistaEscritorioID {get; set;}
            [Display(Name = "Contabilista")]
            [Required()]
            public Guid ESCxContabilistaID {get; set;}
            [Display(Name = "Escritório")]
            [Required()]
            public Guid ESCxEscritorioID {get; set;}
            public _ESCxEscritorio ESCxEscritorio {get; set;}
            public _ESCxContabilista ESCxContabilista {get; set;}
        }

        #endregion _ESCxContabilistaEscritorio

        #region _CORxAgregado

        public class _CORxAgregado
        {
            public Boolean IsPKEmpty => !CORxAgregadoID.HasValue;
            [Display(Name = "Agregado")]
            [Required()]
            public Guid? CORxAgregadoID {get; set;}
            [Display(Name = "Estado")]
            [Required()]
            public Int16 CORxStatusID {get; set;}
            [Display(Name = "CPF ou CNPJ")]
            [MaxLength(14)]
            [DisplayFormat(DataFormatString = "###.###.###-##|##.###.###/####-##")]
            [Required()]
            public String CPFCNPJ {get; set;}
            public List<_ESCxEscritorio> ESCxEscritorio {get; set;} = new List<_ESCxEscritorio>();
        }

        #endregion _CORxAgregado

        #region _CORxEmpresa

        public class _CORxEmpresa
        {
            [MaxLength(14)]
            [DisplayFormat(DataFormatString = "##.###.###/####-##")]
            [Required()]
            public String CNPJ {get; set;}
            [Display(Name = "Agregado")]
            [Required()]
            public Guid CORxAgregadoID {get; set;}
            public Boolean IsPKEmpty => !CORxEmpresaID.HasValue;
            [Display(Name = "Empresa")]
            [Required()]
            public Guid? CORxEmpresaID {get; set;}
            [Display(Name = "Estado")]
            [Required()]
            public Int16 CORxStatusID {get; set;}
            public List<_ESCxEmpresa> ESCxEmpresa {get; set;} = new List<_ESCxEmpresa>();
        }

        #endregion _CORxEmpresa

        #region _ESCxEmpresa

        public class _ESCxEmpresa
        {
            [Display(Name = "Contabilista")]
            [Required()]
            public Guid ESCxContabilistaID {get; set;}
            public Boolean IsPKEmpty => !ESCxEmpresaID.HasValue;
            [Display(Name = "Empresa")]
            [Required()]
            public Guid? ESCxEmpresaID {get; set;}
            public _CORxEmpresa CORxEmpresa {get; set;}
            public _ESCxContabilista ESCxContabilista {get; set;}
        }

        #endregion _ESCxEmpresa


        protected TFXESCCoreContext(DbContextOptions pOptions)
          : base(pOptions)
        {
        
        }

        public TFXESCCoreContext(DbContextOptions<TFXESCCoreContext> pOptions)
          : base(pOptions)
        {
        
        }

        internal DbSet<_ESCxContabilista> ESCxContabilista{get; set;}
        internal DbSet<_ESCxContabilistaEscritorio> ESCxContabilistaEscritorio{get; set;}
        internal DbSet<_ESCxEmpresa> ESCxEmpresa{get; set;}
        internal DbSet<_ESCxEscritorio> ESCxEscritorio{get; set;}
        protected override void OnModelCreating(ModelBuilder pBuilder)
        {
            ConfigureCORxAgregado(pBuilder);
            ConfigureCORxEmpresa(pBuilder);
            ConfigureCORxPessoa(pBuilder);
            ConfigureESCxContabilista(pBuilder);
            ConfigureESCxContabilistaEscritorio(pBuilder);
            ConfigureESCxEmpresa(pBuilder);
            ConfigureESCxEscritorio(pBuilder);
        }

        private void ConfigureCORxAgregado(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_CORxAgregado>(ett =>
            {
                ett.HasKey(e => e.CORxAgregadoID).HasName("PK_CORxAgregado");
                
                ett.Property(d => d.CORxAgregadoID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.CORxStatusID).HasColumnType(GetDBType("Int16"));
                ett.Property(d => d.CPFCNPJ).HasColumnType(GetDBType("String", 14));
                ett.ToTable("CORxAgregado", t => t.ExcludeFromMigrations());
            });
        }

        private void ConfigureCORxEmpresa(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_CORxEmpresa>(ett =>
            {
                ett.HasKey(e => e.CORxEmpresaID).HasName("PK_CORxEmpresa");
                
                ett.Property(d => d.CORxEmpresaID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.CORxAgregadoID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.CORxStatusID).HasColumnType(GetDBType("Int16"));
                ett.Property(d => d.CNPJ).HasColumnType(GetDBType("String", 14));
                ett.ToTable("CORxEmpresa", t => t.ExcludeFromMigrations());
            });
        }

        private void ConfigureCORxPessoa(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_CORxPessoa>(ett =>
            {
                ett.HasKey(e => e.CORxPessoaID).HasName("PK_CORxPessoa");
                
                ett.Property(d => d.CORxPessoaID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.Nome).HasColumnType(GetDBType("String", 180));
                ett.Property(d => d.CEPxLocalidadePrincipalID).HasColumnType(GetDBType("Int32"));
                ett.ToTable("CORxPessoa", t => t.ExcludeFromMigrations());
            });
        }

        private void ConfigureESCxContabilista(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxContabilista>(ett =>
            {
                ett.HasKey(e => e.ESCxContabilistaID).HasName("PK_ESCxContabilista");
                
                ett.Property(d => d.ESCxContabilistaID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.CRC).HasColumnType(GetDBType("String", 15));
                ett.ToTable("ESCxContabilista");

                ett.HasOne(d => d.CORxPessoa)
                   .WithMany()
                   .HasForeignKey(d => d.ESCxContabilistaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_016960BD2E3F483B996E31532D8B0BE2");

                ett.HasIndex(d => d.ESCxContabilistaID).HasDatabaseName("IX_016960BD2E3F483B996E31532D8B0BE2");
            });
        }

        private void ConfigureESCxContabilistaEscritorio(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxContabilistaEscritorio>(ett =>
            {
                ett.HasKey(e => e.ESCxContabilistaEscritorioID).HasName("PK_ESCxContabilistaEscritorio");
                
                ett.Property(d => d.ESCxContabilistaEscritorioID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.ESCxEscritorioID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.ESCxContabilistaID).HasColumnType(GetDBType("Guid"));
                ett.ToTable("ESCxContabilistaEscritorio");

                ett.HasOne(d => d.ESCxContabilista)
                   .WithMany(p => p.ESCxContabilistaEscritorio)
                   .HasForeignKey(d => d.ESCxContabilistaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_EFCC8459492A4DA1A909F4C0AAA6AC6A");

                ett.HasOne(d => d.ESCxEscritorio)
                   .WithMany(p => p.ESCxContabilistaEscritorio)
                   .HasForeignKey(d => d.ESCxEscritorioID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_0BD4C3A6E5B349649102390CF008FE7D");

                ett.HasIndex(d => d.ESCxEscritorioID).HasDatabaseName("IX_0BD4C3A6E5B349649102390CF008FE7D");
                ett.HasIndex(d => d.ESCxContabilistaID).HasDatabaseName("IX_EFCC8459492A4DA1A909F4C0AAA6AC6A");
            });
        }

        private void ConfigureESCxEmpresa(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxEmpresa>(ett =>
            {
                ett.HasKey(e => e.ESCxEmpresaID).HasName("PK_ESCxEmpresa");
                
                ett.Property(d => d.ESCxEmpresaID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.ESCxContabilistaID).HasColumnType(GetDBType("Guid"));
                ett.ToTable("ESCxEmpresa");

                ett.HasOne(d => d.CORxEmpresa)
                   .WithMany()
                   .HasForeignKey(d => d.ESCxEmpresaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_B41CDCE03FE9462798A4F2E3AEFF7442");

                ett.HasOne(d => d.ESCxContabilista)
                   .WithMany(p => p.ESCxEmpresa)
                   .HasForeignKey(d => d.ESCxContabilistaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_FCAEEE2632074900A104B57043F6C318");

                ett.HasIndex(d => d.ESCxEmpresaID).HasDatabaseName("IX_B41CDCE03FE9462798A4F2E3AEFF7442");
                ett.HasIndex(d => d.ESCxContabilistaID).HasDatabaseName("IX_FCAEEE2632074900A104B57043F6C318");
            });
        }

        private void ConfigureESCxEscritorio(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxEscritorio>(ett =>
            {
                ett.HasKey(e => e.ESCxEscritorioID).HasName("PK_ESCxEscritorio");
                
                ett.Property(d => d.ESCxEscritorioID).HasColumnType(GetDBType("Guid"));
                ett.ToTable("ESCxEscritorio");

                ett.HasOne(d => d.CORxAgregado)
                   .WithMany()
                   .HasForeignKey(d => d.ESCxEscritorioID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_4A3824E876B5459E8901E1C2D47FB104");

                ett.HasIndex(d => d.ESCxEscritorioID).HasDatabaseName("IX_4A3824E876B5459E8901E1C2D47FB104");
            });
        }
    }
}