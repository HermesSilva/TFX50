// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TFX.ESC.Core.DB;

#nullable disable

namespace TFX.Core.DB.Migrations
{
    [DbContext(typeof(TFXESCCoreContext))]
    partial class TFXESCCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_CORxAgregado", b =>
                {
                    b.Property<Guid>("CORxAgregadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("CORxStatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("CPFCNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.HasKey("CORxAgregadoID")
                        .HasName("PK_CORxAgregado");

                    b.ToTable("CORxAgregado", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_CORxEmpresa", b =>
                {
                    b.Property<Guid>("CORxEmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<Guid>("CORxAgregadoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("CORxStatusID")
                        .HasColumnType("smallint");

                    b.HasKey("CORxEmpresaID")
                        .HasName("PK_CORxEmpresa");

                    b.ToTable("CORxEmpresa", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_CORxPessoa", b =>
                {
                    b.Property<Guid>("CORxPessoaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)");

                    b.HasKey("CORxPessoaID")
                        .HasName("PK_CORxPessoa");

                    b.ToTable("CORxPessoa", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilista", b =>
                {
                    b.Property<Guid>("ESCxContabilistaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRC")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("ESCxContabilistaID")
                        .HasName("PK_ESCxContabilista");

                    b.HasIndex("ESCxContabilistaID")
                        .HasDatabaseName("IX_016960BD2E3F483B996E31532D8B0BE2");

                    b.ToTable("ESCxContabilista", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilistaEscritorio", b =>
                {
                    b.Property<Guid>("ESCxContabilistaEscritorioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ESCxContabilistaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ESCxEscritorioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ESCxContabilistaEscritorioID")
                        .HasName("PK_ESCxContabilistaEscritorio");

                    b.HasIndex("ESCxContabilistaID")
                        .HasDatabaseName("IX_EFCC8459492A4DA1A909F4C0AAA6AC6A");

                    b.HasIndex("ESCxEscritorioID")
                        .HasDatabaseName("IX_0BD4C3A6E5B349649102390CF008FE7D");

                    b.ToTable("ESCxContabilistaEscritorio", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxEmpresa", b =>
                {
                    b.Property<Guid>("ESCxEmpresaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ESCxContabilistaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ESCxEmpresaID")
                        .HasName("PK_ESCxEmpresa");

                    b.HasIndex("ESCxContabilistaID")
                        .HasDatabaseName("IX_FCAEEE2632074900A104B57043F6C318");

                    b.HasIndex("ESCxEmpresaID")
                        .HasDatabaseName("IX_B41CDCE03FE9462798A4F2E3AEFF7442");

                    b.ToTable("ESCxEmpresa", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxEscritorio", b =>
                {
                    b.Property<Guid>("ESCxEscritorioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ESCxEscritorioID")
                        .HasName("PK_ESCxEscritorio");

                    b.HasIndex("ESCxEscritorioID")
                        .HasDatabaseName("IX_4A3824E876B5459E8901E1C2D47FB104");

                    b.ToTable("ESCxEscritorio", (string)null);
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilista", b =>
                {
                    b.HasOne("TFX.ESC.Core.DB.TFXESCCoreContext+_CORxPessoa", "CORxPessoa")
                        .WithMany()
                        .HasForeignKey("ESCxContabilistaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_016960BD2E3F483B996E31532D8B0BE2");

                    b.Navigation("CORxPessoa");
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilistaEscritorio", b =>
                {
                    b.HasOne("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilista", "ESCxContabilista")
                        .WithMany("ESCxContabilistaEscritorio")
                        .HasForeignKey("ESCxContabilistaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EFCC8459492A4DA1A909F4C0AAA6AC6A");

                    b.HasOne("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxEscritorio", "ESCxEscritorio")
                        .WithMany("ESCxContabilistaEscritorio")
                        .HasForeignKey("ESCxEscritorioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_0BD4C3A6E5B349649102390CF008FE7D");

                    b.Navigation("ESCxContabilista");

                    b.Navigation("ESCxEscritorio");
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxEmpresa", b =>
                {
                    b.HasOne("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilista", "ESCxContabilista")
                        .WithMany("ESCxEmpresa")
                        .HasForeignKey("ESCxContabilistaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_FCAEEE2632074900A104B57043F6C318");

                    b.HasOne("TFX.ESC.Core.DB.TFXESCCoreContext+_CORxEmpresa", "CORxEmpresa")
                        .WithMany()
                        .HasForeignKey("ESCxEmpresaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_B41CDCE03FE9462798A4F2E3AEFF7442");

                    b.Navigation("CORxEmpresa");

                    b.Navigation("ESCxContabilista");
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxEscritorio", b =>
                {
                    b.HasOne("TFX.ESC.Core.DB.TFXESCCoreContext+_CORxAgregado", "CORxAgregado")
                        .WithMany()
                        .HasForeignKey("ESCxEscritorioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_4A3824E876B5459E8901E1C2D47FB104");

                    b.Navigation("CORxAgregado");
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxContabilista", b =>
                {
                    b.Navigation("ESCxContabilistaEscritorio");

                    b.Navigation("ESCxEmpresa");
                });

            modelBuilder.Entity("TFX.ESC.Core.DB.TFXESCCoreContext+_ESCxEscritorio", b =>
                {
                    b.Navigation("ESCxContabilistaEscritorio");
                });
#pragma warning restore 612, 618
        }
    }
}
