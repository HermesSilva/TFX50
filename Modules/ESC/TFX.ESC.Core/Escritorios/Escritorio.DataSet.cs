//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace TFX.ESC.Core.Escritorios
{
    public class EscritorioServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("94D6CBB1-BC80-448E-B38D-56FA234CD41E");
        public EscritorioServiceModel()
        {
            SearchPath = "Escritorio/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "Nome", Title = "Nome", Type = "String" });
            DataView.Columns.Add(new XColumnModel() { Name = "CPFCNPJ", Title = "CPF ou CNPJ", Type = "String" });
            Forms.Add(new FRMEscritorioFilter());
        }
    }
    public class EscritorioTuple : XServiceDataTuple
    {
        public EscritorioTuple()
        {
            Initialize();
        }

        public EscritorioTuple(String pCPFCNPJ, Int16 pCORxStatusID, String pNome, Guid? pCORxPessoaID, Guid? pCORxAgregadoID, Guid? pESCxEscritorioID, String pStatus)
            : this()
        {
            CPFCNPJ.Value = pCPFCNPJ;
            CORxStatusID.Value = pCORxStatusID;
            Nome.Value = pNome;
            CORxPessoaID.Value = pCORxPessoaID;
            CORxAgregadoID.Value = pCORxAgregadoID;
            ESCxEscritorioID.Value = pESCxEscritorioID;
            Status.Value = pStatus;
        }

        public override void Initialize()
        {
            CPFCNPJ = new XStringDataField();
            CORxStatusID = new XInt16DataField();
            Nome = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            CORxAgregadoID = new XGuidNullableDataField();
            ESCxEscritorioID = new XGuidNullableDataField();
            Status = new XStringDataField();
        }

        [Display(Name = "CPF ou CNPJ")]
        public XStringDataField CPFCNPJ {get;set;}
        [Display(Name = "Estado")]
        public XInt16DataField CORxStatusID {get;set;}
        public XStringDataField Nome {get;set;}
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        [Display(Name = "Agregado")]
        public XGuidNullableDataField CORxAgregadoID {get;set;}
        [Display(Name = "Escrit√≥rio")]
        public XGuidNullableDataField ESCxEscritorioID {get;set;}
        public XStringDataField Status {get;set;}
    }

    public class EscritorioFilter : XFilter
    {

        public EscritorioFilter()
        {
        }
        public String Nome {get;set;}
        public String CPFCNPJ {get;set;}
    }
    public class FRMEscritorioFilter : XFRMModel
    {
        public FRMEscritorioFilter()
        {
            ID = new Guid("8EA042E6-E564-4DB1-8303-3896A1E67C3F");
            Name = "EscritorioFilter";
            Title = "";
            MinRows = 2;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
            fld = AddField(new XFRMField());
            fld.ForceRW = true;
            fld.Title = "Nome";
            fld.CanInsert = true;
            fld.CanUpdate = true;
            fld.RowCount = 2;
            fld.ColCount = 32;
            fld.IsHidden = false;
            fld.Location = 1;
            fld.EditorCID = XModelEditors.XSearchBox;
            fld.Operator = XOperator.EqualTo;
            fld.JustifyHeight = false;
            fld.AllowEmpty = true;
            fld.FontColor = "#000000";
            fld.FontStyle = XFontStyle.Normal;
            fld.ShowFooter = false;
            fld.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
            fld.Order = 1;
            fld.Scale = -1;
            fld.Length = -1;
            fld.TypeID = XDataTypes.XString;
            fld.AdditionalFieldsID = new Guid[] {  };
            fld.AdditionalDataFieldsID = new Guid[] {  };
            fld.TargetFilterFieldID = new Guid[] {  };
            fld.SourceFilterFieldID = new Guid[] {  };
            fld.TargetDisplayFieldID = new Guid[] {  };
            fld.SourceDisplayFieldID = new Guid[] {  };
            fld.AutoLoad = false;
            fld.FilterInative = true;
            fld.IsAnswer = false;
            fld.AllowMultiSelect = false;
        }
    }


    public class EscritorioRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IEscritorioService : XIService
    {
        object Flush(EscritorioDataSet pDataSet);

        EscritorioDataSet Execute(EscritorioFilter pFilter);
        IQueryable<EscritorioTuple> ExecuteQuery(EscritorioFilter pFilter);
    }

    public abstract class BaseEscritorioRule : XServiceRule<EscritorioTuple, EscritorioTuple>
    {
        public BaseEscritorioRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual EscritorioFilter Execute(EscritorioFilter pFilter)
        {
            return pFilter;
        }
    }

    public class EscritorioDataSet : XDataSet<EscritorioTuple>
    {
        public override Guid ID => new Guid("94D6CBB1-BC80-448E-B38D-56FA234CD41E");
    }
}