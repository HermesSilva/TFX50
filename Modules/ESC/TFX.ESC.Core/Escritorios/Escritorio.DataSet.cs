//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;

namespace TFX.ESC.Core.Escritorios
{
    public class EscritorioTuple : XServiceDataTuple
    {
        public EscritorioTuple()
        {
            Initialize();
        }

        public EscritorioTuple(String pCPFCNPJ, Int16 pCORxStatusID, String pNome, Guid? pCORxPessoaID, Guid? pCORxAgregadoID, Guid? pESCxEscritorioID, String pStatus)
            : this()
        {
            CPFCNPJ.Value = pCPFCNPJ;
            CORxStatusID.Value = pCORxStatusID;
            Nome.Value = pNome;
            CORxPessoaID.Value = pCORxPessoaID;
            CORxAgregadoID.Value = pCORxAgregadoID;
            ESCxEscritorioID.Value = pESCxEscritorioID;
            Status.Value = pStatus;
        }

        public override void Initialize()
        {
            CPFCNPJ = new XStringDataField();
            CORxStatusID = new XInt16DataField();
            Nome = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            CORxAgregadoID = new XGuidNullableDataField();
            ESCxEscritorioID = new XGuidNullableDataField();
            Status = new XStringDataField();
        }

        [Display(Name = "CPF ou CNPJ")]
        public XStringDataField CPFCNPJ {get;set;}
        [Display(Name = "Estado")]
        public XInt16DataField CORxStatusID {get;set;}
        public XStringDataField Nome {get;set;}
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        [Display(Name = "Agregado")]
        public XGuidNullableDataField CORxAgregadoID {get;set;}
        [Display(Name = "Escrit√≥rio")]
        public XGuidNullableDataField ESCxEscritorioID {get;set;}
        public XStringDataField Status {get;set;}
    }

    public class EscritorioFilter : XFilter
    {

        public EscritorioFilter()
        {
        }
        public String Nome {get;set;}
        public String CPFCNPJ {get;set;}
    }
    public static class FRMEscritorioFilter
    {
        public static readonly XFRMField Nome = new XFRMField(new Guid("B7A9B060-997F-4091-90E4-68DFA1D12EB3"), "Nome");
    }

    public class EscritorioRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IEscritorioService : XIService
    {
        object Flush(EscritorioDataSet pDataSet);

        EscritorioDataSet Execute(EscritorioFilter pFilter);
        IQueryable<EscritorioTuple> ExecuteQuery(EscritorioFilter pFilter);
    }

    public abstract class BaseEscritorioRule : XServiceRule<EscritorioTuple, EscritorioTuple>
    {
        public BaseEscritorioRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual EscritorioFilter Execute(EscritorioFilter pFilter)
        {
            return pFilter;
        }
    }

    public class EscritorioDataSet : XDataSet<EscritorioTuple>
    {
        public override Guid ID => new Guid("94D6CBB1-BC80-448E-B38D-56FA234CD41E");
    }
}