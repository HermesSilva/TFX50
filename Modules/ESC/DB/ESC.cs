//<auto-generated/>
using System;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore.Infrastructure;
using TFX.Core;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using TFX.Core.Lzma;
using TFX.Core.Data.DB;

namespace TFX.ESC.Core.DB
{
    public class TFXESCCoreContext : XDBContext
    {
        #region _ESCxContabilista

        public class _ESCxContabilista
        {
            [MaxLength(15)]
            [Required()]
            public String CRC {get; set;}
            public Boolean IsPKEmpty => Object.Equals(ESCxContabilistaID, typeof(Guid).GetDefault());
            [Display(Name = "Contabilista")]
            [Required()]
            public Guid? ESCxContabilistaID {get; set;}
            public TFXCoreDataContext._CORxPessoa CORxPessoa {get; set;}
            public List<_ESCxContabilistaEscritorio> ESCxContabilistaEscritorio {get; set;} = new List<_ESCxContabilistaEscritorio>();
            public List<_ESCxEmpresa> ESCxEmpresa {get; set;} = new List<_ESCxEmpresa>();
        }

        #endregion _ESCxContabilista

        #region _ESCxContabilistaEscritorio

        public class _ESCxContabilistaEscritorio
        {
            public Boolean IsPKEmpty => Object.Equals(ESCxContabilistaEscritorioID, typeof(Guid).GetDefault());
            [Display(Name = "Contabilistas por Escritório")]
            [Required()]
            public Guid? ESCxContabilistaEscritorioID {get; set;}
            [Display(Name = "Contabilista")]
            [Required()]
            public Guid ESCxContabilistaID {get; set;}
            [Display(Name = "Escritório")]
            [Required()]
            public Guid ESCxEscritorioID {get; set;}
            public _ESCxEscritorio ESCxEscritorio {get; set;}
            public _ESCxContabilista ESCxContabilista {get; set;}
        }

        #endregion _ESCxContabilistaEscritorio

        #region _ESCxEmpresa

        public class _ESCxEmpresa
        {
            [Display(Name = "Contabilista")]
            [Required()]
            public Guid ESCxContabilistaID {get; set;}
            public Boolean IsPKEmpty => Object.Equals(ESCxEmpresaID, typeof(Guid).GetDefault());
            [Display(Name = "Empresa")]
            [Required()]
            public Guid? ESCxEmpresaID {get; set;}
            public TFXCoreDataContext._CORxEmpresa CORxEmpresa {get; set;}
            public _ESCxContabilista ESCxContabilista {get; set;}
        }

        #endregion _ESCxEmpresa

        #region _ESCxEscritorio

        public class _ESCxEscritorio
        {
            public Boolean IsPKEmpty => Object.Equals(ESCxEscritorioID, typeof(Guid).GetDefault());
            [Display(Name = "Escritório")]
            [Required()]
            public Guid? ESCxEscritorioID {get; set;}
            public TFXCoreDataContext._CORxAgregado CORxAgregado {get; set;}
            public List<_ESCxContabilistaEscritorio> ESCxContabilistaEscritorio {get; set;} = new List<_ESCxContabilistaEscritorio>();
        }

        #endregion _ESCxEscritorio


        protected TFXESCCoreContext(DbContextOptions pOptions)
          : base(pOptions)
        {
        
        }

        public TFXESCCoreContext(DbContextOptions<TFXESCCoreContext> pOptions)
          : base(pOptions)
        {
        
        }

        internal DbSet<_ESCxContabilista> ESCxContabilista{get; set;}
        internal DbSet<_ESCxContabilistaEscritorio> ESCxContabilistaEscritorio{get; set;}
        internal DbSet<_ESCxEmpresa> ESCxEmpresa{get; set;}
        internal DbSet<_ESCxEscritorio> ESCxEscritorio{get; set;}
        protected override void OnModelCreating(ModelBuilder pBuilder)
        {
            ConfigureESCxContabilista(pBuilder);
            ConfigureESCxContabilistaEscritorio(pBuilder);
            ConfigureESCxEmpresa(pBuilder);
            ConfigureESCxEscritorio(pBuilder);
        }

        private void ConfigureESCxContabilista(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxContabilista>(ett =>
            {
                ett.HasKey(e => e.ESCxContabilistaID).HasName("PK_ESCxContabilista");
                
                ett.Property(d => d.ESCxContabilistaID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.CRC).HasColumnType(GetDBType("String", 15));
                ett.ToTable("ESCxContabilista");

                ett.HasOne(d => d.CORxPessoa)
                   .WithMany()
                   .HasForeignKey(d => d.ESCxContabilistaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_016960BD2E3F483B996E31532D8B0BE2");

                ett.HasIndex(d => d.ESCxContabilistaID).HasDatabaseName("IX_016960BD2E3F483B996E31532D8B0BE2");
            });
        }

        private void ConfigureESCxContabilistaEscritorio(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxContabilistaEscritorio>(ett =>
            {
                ett.HasKey(e => e.ESCxContabilistaEscritorioID).HasName("PK_ESCxContabilistaEscritorio");
                
                ett.Property(d => d.ESCxContabilistaEscritorioID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.ESCxEscritorioID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.ESCxContabilistaID).HasColumnType(GetDBType("Guid"));
                ett.ToTable("ESCxContabilistaEscritorio");

                ett.HasOne(d => d.ESCxContabilista)
                   .WithMany(p => p.ESCxContabilistaEscritorio)
                   .HasForeignKey(d => d.ESCxContabilistaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_EFCC8459492A4DA1A909F4C0AAA6AC6A");

                ett.HasOne(d => d.ESCxEscritorio)
                   .WithMany(p => p.ESCxContabilistaEscritorio)
                   .HasForeignKey(d => d.ESCxEscritorioID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_0BD4C3A6E5B349649102390CF008FE7D");

                ett.HasIndex(d => d.ESCxEscritorioID).HasDatabaseName("IX_0BD4C3A6E5B349649102390CF008FE7D");
                ett.HasIndex(d => d.ESCxContabilistaID).HasDatabaseName("IX_EFCC8459492A4DA1A909F4C0AAA6AC6A");
            });
        }

        private void ConfigureESCxEmpresa(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxEmpresa>(ett =>
            {
                ett.HasKey(e => e.ESCxEmpresaID).HasName("PK_ESCxEmpresa");
                
                ett.Property(d => d.ESCxEmpresaID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.ESCxContabilistaID).HasColumnType(GetDBType("Guid"));
                ett.ToTable("ESCxEmpresa");

                ett.HasOne(d => d.CORxEmpresa)
                   .WithMany()
                   .HasForeignKey(d => d.ESCxEmpresaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_B41CDCE03FE9462798A4F2E3AEFF7442");

                ett.HasOne(d => d.ESCxContabilista)
                   .WithMany(p => p.ESCxEmpresa)
                   .HasForeignKey(d => d.ESCxContabilistaID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_FCAEEE2632074900A104B57043F6C318");

                ett.HasIndex(d => d.ESCxEmpresaID).HasDatabaseName("IX_B41CDCE03FE9462798A4F2E3AEFF7442");
                ett.HasIndex(d => d.ESCxContabilistaID).HasDatabaseName("IX_FCAEEE2632074900A104B57043F6C318");
            });
        }

        private void ConfigureESCxEscritorio(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_ESCxEscritorio>(ett =>
            {
                ett.HasKey(e => e.ESCxEscritorioID).HasName("PK_ESCxEscritorio");
                
                ett.Property(d => d.ESCxEscritorioID).HasColumnType(GetDBType("Guid"));
                ett.ToTable("ESCxEscritorio");

                ett.HasOne(d => d.CORxAgregado)
                   .WithMany()
                   .HasForeignKey(d => d.ESCxEscritorioID)
                   .OnDelete(DeleteBehavior.Restrict)
                   .HasConstraintName("FK_4A3824E876B5459E8901E1C2D47FB104");

                ett.HasIndex(d => d.ESCxEscritorioID).HasDatabaseName("IX_4A3824E876B5459E8901E1C2D47FB104");
            });
        }
    }
}