//<auto-generated/>
using System;
using TFX.Core.Data;
using System.Drawing;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.DIC;
using TFX.Core.Reflections;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;

namespace Projecao.Core.CRD.Convenio.Importacao
{
    [XRegister(typeof(ImportacaoSAM), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Convenio\Importacao\Importacao.dssam")]
    public class ImportacaoSAM : XAPPModel
    {
        #region xImportacaoACT

        [XRegister(typeof(xImportacaoACT), sCID)]
        public class xImportacaoACT : XAPPStep
        {
            public const String sCID = "B58211EE-F3EE-49BC-8573-4AFBE24063A6";
            public static Guid gCID = new Guid(sCID);
            public xImportacaoACT(Guid pID, String pName, String pTitle, Guid pFormID, Guid pDataSourceID)
              :base(pID, pName, pTitle, pFormID, pDataSourceID)
            {
            }
        }

        #endregion xImportacaoACT

        #region ImportacaoFRM

        [XRegister(typeof(ImportacaoFRM), sCID)]
        public class ImportacaoFRM : XFRMModel
        {
            public const String sCID = "13D0978E-9F44-4C49-B74B-27BCECDC189C";
            static ImportacaoFRM()
            {
                gCID = new Guid(sCID);
            }
            public ImportacaoFRM()
            {
                ID = gCID;
                Name = "Importacao";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 1008, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(NomeArquivo);
                NomeArquivo.CanInsert = true;
                NomeArquivo.CanUpdate = true;
                NomeArquivo.RowCount = 1;
                NomeArquivo.ColCount = 32;
                NomeArquivo.RowCountSmall = 1;
                NomeArquivo.ColCountSmall = 32;
                NomeArquivo.IsHidden = false;
                NomeArquivo.IsHiddenSmall = false;
                NomeArquivo.AdditionalTitle = "";
                NomeArquivo.Location = 1;
                NomeArquivo.EditorCID = new Guid("F427FA36-C763-455B-9C58-182E347E01DC");
                NomeArquivo.FormImplace = true;
                NomeArquivo.Operator = XOperator.EqualTo;
                NomeArquivo.JustifyHeight = false;
                NomeArquivo.AllowEmpty = true;
                NomeArquivo.FontColor = "#000000";
                NomeArquivo.FontStyle = XFontStyle.Normal;
                NomeArquivo.ShowFooter = false;
                NomeArquivo.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                NomeArquivo.Scale = 0;
                NomeArquivo.Length = 0;
                NomeArquivo.SearchAction = XSearchAction.Default;
                NomeArquivo.TypeID = XString.CID;
                NomeArquivo.AdditionalFieldsID = new Guid[] {  };
                NomeArquivo.AdditionalDataFieldsID = new Guid[] {  };
                NomeArquivo.TargetFilterFieldID = new Guid[] {  };
                NomeArquivo.SourceFilterFieldID = new Guid[] {  };
                NomeArquivo.TargetDisplayFieldID = new Guid[] {  };
                NomeArquivo.SourceDisplayFieldID = new Guid[] {  };
                NomeArquivo.AutoLoad = false;
                NomeArquivo.FilterInative = true;
                NomeArquivo.IsAnswer = false;
                NomeArquivo.AllowMultiSelect = false;
            }
            public XFRMField NomeArquivo = new XFRMField(new Guid("C7B083E3-458B-4C4D-9F71-F0A4DDB76020"), "NomeArquivo", "Lista de Conveniados em CSV", XString.CID, 1, 32, false, gCID, null, new Guid("B13128EE-D436-448D-A716-C0079D545CFB")); // String;
            public static class Fields
            {
                public static XFieldInfo NomeArquivo = new XFieldInfo(new Guid("C7B083E3-458B-4C4D-9F71-F0A4DDB76020"), "NomeArquivo", "Lista de Conveniados em CSV", typeof(String));
            }
        }

        #endregion ImportacaoFRM

        public const String sCID = "076BBF5F-D6CD-4B07-834D-DB295156AED0";
        public static Guid gCID = new Guid(sCID);
        public static readonly xImportacaoACT ImportacaoACT;

        static ImportacaoSAM()
        {
            ImportacaoACT = new xImportacaoACT(new Guid("B58211EE-F3EE-49BC-8573-4AFBE24063A6"), "ImportacaoACT", "Importação", new Guid("13D0978E-9F44-4C49-B74B-27BCECDC189C"), new Guid("00000000-0000-0000-0000-000000000000"));
        }

        public ImportacaoSAM()
        {
            ID = new Guid("076BBF5F-D6CD-4B07-834D-DB295156AED0");
            Name = "Importacao";
            Title = "Importação de Conveniados";
            AppTypeID = XAppType.SAM;
            Userlevel = XUserlevel.User;
            UseTypeID = new Int16[] { 1, 2 };
            Rights = new Int16[] { 3, 6, 4, 1, 5, 2 }; 
            IsDisabled = false;
            StartAction = XStartAction.Insert;
            ClientScript = "Projecao.Core.CRD.js";
            Size = new Size(10, 10);
            DataSourceID = global::Projecao.Core.CRD.Convenio.Importacao.ImportacaoSVC.gCID;
            AppModulesID = new [] { (Int16)9 };
            AppGroupsID = new [] { (Int16)2 };
            ImportacaoACT.FormID = new Guid("13D0978E-9F44-4C49-B74B-27BCECDC189C"); 
            ImportacaoACT.Type = XActivityType.UserActivity;
            AddItem(ImportacaoACT);
        }
    }
}