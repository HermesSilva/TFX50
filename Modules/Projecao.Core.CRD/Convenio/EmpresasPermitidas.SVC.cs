//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.Convenio
{
    [XRegister(typeof(EmpresasPermitidasSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Convenio\EmpresasPermitidas.dssvc")]
    public class EmpresasPermitidasSVC : XSVCModel
    {
        #region EmpresasPermitidasFilterFRM

        [XRegister(typeof(EmpresasPermitidasFilterFRM), sCID)]
        public class EmpresasPermitidasFilterFRM : XFRMModel
        {
            public const String sCID = "AE8C3EBF-5EE2-4A84-8D82-96EA330E8DCC";
            static EmpresasPermitidasFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public EmpresasPermitidasFilterFRM()
            {
                ID = gCID;
                Name = "EmpresasPermitidasFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] { new Guid("64AA07BC-360B-4C35-8E9B-514B68AA6759") };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("B1C1B054-8142-42ED-8116-9E714C395CD0"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("846B674F-647A-4323-9F65-9F423A2BB445")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("B1C1B054-8142-42ED-8116-9E714C395CD0"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion EmpresasPermitidasFilterFRM

        public const String sCID = "FA31B29C-61B8-4300-9510-1C2311785241";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConvenioEmpresa_SYSxProprietariaID; // SYSxPessoa.SYSxPessoaID --> CRDxConvenioEmpresa.SYSxProprietariaID
        public static XSVCReference SYSxEmpresa_SYSxEmpresaID_CRDxConvenioEmpresa_SYSxProprietariaID; // SYSxEmpresa.SYSxEmpresaID --> CRDxConvenioEmpresa.SYSxProprietariaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("38CC6F47-CF7A-4EC8-85AE-30FACA1E7604");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("846B674F-647A-4323-9F65-9F423A2BB445"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("E14744F9-28D0-4490-815D-D07EA9299C9B"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxConvenioEmpresa 
        public class xCRDxConvenioEmpresa : XSVCTable
        {

            public static Guid gCID => new Guid("72AA023A-830B-4BA6-A119-AE992ABA71C5");

            public xCRDxConvenioEmpresa()
            {
                Name = "CRDxConvenioEmpresa";
                Alias = "CRDxConvenioEmpresa";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioEmpresa.gCID;

                Items.Add(SYSxProprietariaID, SYSxProprietariaID.ID);
                SYSxProprietariaID.Owner = this;
                SYSxProprietariaID.OwnerID = ID;
                SYSxProprietariaID.TableName = Name;
                SYSxProprietariaID.Alias = "SYSxProprietariaID";
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(CRDxConvenioEmpresaID, CRDxConvenioEmpresaID.ID);
                CRDxConvenioEmpresaID.Owner = this;
                CRDxConvenioEmpresaID.OwnerID = ID;
                CRDxConvenioEmpresaID.TableName = Name;
                CRDxConvenioEmpresaID.Alias = "CRDxConvenioEmpresaID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFKField SYSxProprietariaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioEmpresa.SYSxProprietariaID, new Guid("C4C79F95-CFF8-4EF0-80C3-ED732117F106"), "SYSxProprietariaID", "Empresa");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioEmpresa.CRDxConvenioID, new Guid("D9E0D987-EBBE-4FEF-BE82-2F777E3B41E7"), "CRDxConvenioID", "Convênio");
            public static XORMPKField CRDxConvenioEmpresaID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioEmpresa.CRDxConvenioEmpresaID, new Guid("0E412740-22E0-43F2-A83E-F734066D333D"), "CRDxConvenioEmpresaID", "Empresas por Convênio");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioEmpresa.SYSxEstadoID, new Guid("170BCF05-E7B6-4A4B-B4BB-69A17FF14ED6"), "SYSxEstadoID", "Estado");
        }
        #endregion xCRDxConvenioEmpresa 


        #region xSYSxEmpresa 
        public class xSYSxEmpresa : XSVCTable
        {

            public static Guid gCID => new Guid("AA81680A-11F5-44AA-90F3-3D12097478CB");

            public xSYSxEmpresa()
            {
                Name = "SYSxEmpresa";
                Alias = "SYSxEmpresa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID;

                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "Sigla";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(SYSxEmpresaMatrizID, SYSxEmpresaMatrizID.ID);
                SYSxEmpresaMatrizID.Owner = this;
                SYSxEmpresaMatrizID.OwnerID = ID;
                SYSxEmpresaMatrizID.TableName = Name;
                Items.Add(SYSxEmpresaGrupoID, SYSxEmpresaGrupoID.ID);
                SYSxEmpresaGrupoID.Owner = this;
                SYSxEmpresaGrupoID.OwnerID = ID;
                SYSxEmpresaGrupoID.TableName = Name;
            }

            public static XORMFaceField Sigla = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.Sigla, new Guid("72F0F6BB-3DDB-46FD-BC7F-F4CA1ED5AEE1"), "Sigla", "Sigla");
            public static XORMPKField SYSxEmpresaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID, new Guid("3529AB0E-2539-402B-9A00-F2FF3E278E49"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEstadoID, new Guid("61338A19-D152-4D08-85F8-898F75D13C1B"), "SYSxEstadoID", "Estado");
            public static XORMFKField SYSxEmpresaMatrizID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaMatrizID, new Guid("D5950141-AF2E-41CC-9036-79C9151EB42D"), "SYSxEmpresaMatrizID", "Empresa");
            public static XORMFKField SYSxEmpresaGrupoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaGrupoID, new Guid("CB7B4643-57FC-4733-A937-F3E22A1017F0"), "SYSxEmpresaGrupoID", "Grupo de Empresas");
        }
        #endregion xSYSxEmpresa 


        public xCRDxConvenioEmpresa CRDxConvenioEmpresa;
        public xSYSxEmpresa SYSxEmpresa;
        public xSYSxPessoa SYSxPessoa;

        public EmpresasPermitidasSVC()
        {
            TupleType = typeof(EmpresasPermitidasSVC.XTuple);
            DataSetType = typeof(EmpresasPermitidasSVC.XDataSet);
            ServiceRuleCID = new Guid("71990B24-0CB9-4174-92A1-47CCCBCB1818");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("FA31B29C-61B8-4300-9510-1C2311785241");
            Name = "EmpresasPermitidas";
            Title = "Empresas Participantes";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("AE8C3EBF-5EE2-4A84-8D82-96EA330E8DCC");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xSYSxEmpresa.Sigla.ID, xSYSxPessoa.Nome.ID };
            OrderByFields = new Guid[] { xSYSxEmpresa.Sigla.ID };
            DataSetFields = new Guid[] { xCRDxConvenioEmpresa.SYSxEstadoID.ID, xSYSxEmpresa.Sigla.ID, xSYSxPessoa.Nome.ID, xCRDxConvenioEmpresa.SYSxProprietariaID.ID, xCRDxConvenioEmpresa.CRDxConvenioID.ID, xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.ID };
            StateField = xCRDxConvenioEmpresa.SYSxEstadoID.ID;
            PKField = xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.ID;
            ConfigTableID = new Guid("A7625E52-5208-49D4-AE45-87CFEA28EDDA");
            MasterRuleCID = new Guid("71990B24-0CB9-4174-92A1-47CCCBCB1818");
            CRDxConvenioEmpresa = new xCRDxConvenioEmpresa();
            CRDxConvenioEmpresa.IsReadOnly = false;
            AddTable(CRDxConvenioEmpresa);
            SYSxEmpresa = new xSYSxEmpresa();
            SYSxEmpresa.IsReadOnly = true;
            AddTable(SYSxEmpresa);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxConvenioEmpresa.ID;
            SYSxPessoa_SYSxPessoaID_CRDxConvenioEmpresa_SYSxProprietariaID = AddReference(new XSVCReference(new Guid("34855949-3DE6-4969-B4F4-16F958070AAF"), "FK_348559493DE64969B4F416F958070AAF", EmpresasPermitidasSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, EmpresasPermitidasSVC.xCRDxConvenioEmpresa.gCID, xCRDxConvenioEmpresa.SYSxProprietariaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConvenioEmpresa.SYSxProprietariaID
            SYSxEmpresa_SYSxEmpresaID_CRDxConvenioEmpresa_SYSxProprietariaID = AddReference(new XSVCReference(new Guid("63A584EB-FA16-483B-AE3F-73FA015443EC"), "FK_63A584EBFA16483BAE3F73FA015443EC", EmpresasPermitidasSVC.xSYSxEmpresa.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, EmpresasPermitidasSVC.xCRDxConvenioEmpresa.gCID, xCRDxConvenioEmpresa.SYSxProprietariaID.ID, XJoinType.Inner)); // SYSxEmpresa.SYSxEmpresaID --> CRDxConvenioEmpresa.SYSxProprietariaID
            xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.GeneratePK = true;
            xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.IsDataField = true;
            xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.AllowEmpty = true;
            xCRDxConvenioEmpresa.CRDxConvenioID.IsDataField = true;
            xCRDxConvenioEmpresa.CRDxConvenioID.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xSYSxEmpresa.Sigla.IsReadOnly = true;
            xSYSxEmpresa.Sigla.OrderType = XOrderType.Asc;
            xSYSxEmpresa.Sigla.Length = 25;
            xSYSxEmpresa.Sigla.IsDataField = true;
            xSYSxEmpresa.Sigla.AllowEmpty = true;
            xCRDxConvenioEmpresa.SYSxEstadoID.IsDataField = true;
            xCRDxConvenioEmpresa.SYSxEstadoID.AllowEmpty = true;
            xCRDxConvenioEmpresa.SYSxProprietariaID.IsDataField = true;
            xCRDxConvenioEmpresa.SYSxProprietariaID.AllowEmpty = true;
            xCRDxConvenioEmpresa.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConvenioEmpresaID => xCRDxConvenioEmpresa.CRDxConvenioEmpresaID;
        public XORMField CRDxConvenioID => xCRDxConvenioEmpresa.CRDxConvenioID;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Sigla => xSYSxEmpresa.Sigla;
        public XORMField SYSxEstadoID => xCRDxConvenioEmpresa.SYSxEstadoID;
        public XORMField SYSxProprietariaID => xCRDxConvenioEmpresa.SYSxProprietariaID;
        }
        #endregion XFields
        #region EmpresasPermitidasSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxConvenioEmpresaID
        {
            get
            {
                return (Int32)Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.ID];
            }
            set
            {
                Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.ID] = value;
            }
        }
        public Int32? oCRDxConvenioEmpresaID
        {
            get
            {
                GetOldValue(EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioEmpresaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioID.ID];
            }
            set
            {
                Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[EmpresasPermitidasSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[EmpresasPermitidasSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(EmpresasPermitidasSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Sigla
        {
            get
            {
                return (String)Value[EmpresasPermitidasSVC.xSYSxEmpresa.Sigla.ID];
            }
            set
            {
                Value[EmpresasPermitidasSVC.xSYSxEmpresa.Sigla.ID] = value;
            }
        }
        public String? oSigla
        {
            get
            {
                GetOldValue(EmpresasPermitidasSVC.xSYSxEmpresa.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxEstadoID.ID];
            }
            set
            {
                Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxProprietariaID
        {
            get
            {
                return (Guid)Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxProprietariaID.ID];
            }
            set
            {
                Value[EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxProprietariaID.ID] = value;
            }
        }
        public Guid? oSYSxProprietariaID
        {
            get
            {
                GetOldValue(EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxProprietariaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion EmpresasPermitidasSVC.XTuple

        #region EmpresasPermitidasSVC.XRule
        public abstract class XRule : XServiceRule<EmpresasPermitidasSVC.XDataSet, EmpresasPermitidasSVC, EmpresasPermitidasSVC.XTuple>
        {
        }
        #endregion EmpresasPermitidasSVC.XRule

        #region EmpresasPermitidasSVC.XDataSet

        public class XDataSet : XDataSet<EmpresasPermitidasSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(EmpresasPermitidasSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<EmpresasPermitidasSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConvenioEmpresaID => EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioEmpresaID.ID;
            public Guid CRDxConvenioID => EmpresasPermitidasSVC.xCRDxConvenioEmpresa.CRDxConvenioID.ID;
            public Guid Nome => EmpresasPermitidasSVC.xSYSxPessoa.Nome.ID;
            public Guid Sigla => EmpresasPermitidasSVC.xSYSxEmpresa.Sigla.ID;
            public Guid SYSxEstadoID => EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxEstadoID.ID;
            public Guid SYSxProprietariaID => EmpresasPermitidasSVC.xCRDxConvenioEmpresa.SYSxProprietariaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(EmpresasPermitidasSVC.XDataSet);
            }

        }
        #endregion EmpresasPermitidasSVC.XDataSet

        [Guid(EmpresasPermitidasSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(EmpresasPermitidasSVC))]
        protected class _Service : Service<EmpresasPermitidasSVC, XDataSet, XTuple>
        {
            public const String sCID = "7B1307B4-CECF-40D8-94CC-E9FD76AE9650";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<EmpresasPermitidasSVC, XDataSet, XTuple>, XService
             where TModel : EmpresasPermitidasSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}