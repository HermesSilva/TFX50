//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.FaturaFranqueado
{
    [XRegister(typeof(VendaFranqueadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\FaturaFranqueado\VendaFranqueado.dssvc")]
    public class VendaFranqueadoSVC : XSVCModel
    {
        #region VendaFranqueadoFilterFRM

        [XRegister(typeof(VendaFranqueadoFilterFRM), sCID)]
        public class VendaFranqueadoFilterFRM : XFRMModel
        {
            public const String sCID = "5747797B-EC32-4F96-AB77-EDC9F5CC5362";
            static VendaFranqueadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public VendaFranqueadoFilterFRM()
            {
                ID = gCID;
                Name = "VendaFranqueadoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion VendaFranqueadoFilterFRM

        public const String sCID = "7E426FB7-779C-4531-B17E-4C15EC1B81D3";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID; // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID

        #region xCRDxCartaoLog 
        public class xCRDxCartaoLog : XSVCTable
        {

            public static Guid gCID => new Guid("AB324023-05D9-4672-B420-A17F0AE2D86C");

            public xCRDxCartaoLog()
            {
                Name = "CRDxCartaoLog";
                Alias = "CRDxCartaoLog";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.gCID;

                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(CRDxCartaoLogID, CRDxCartaoLogID.ID);
                CRDxCartaoLogID.Owner = this;
                CRDxCartaoLogID.OwnerID = ID;
                CRDxCartaoLogID.TableName = Name;
                CRDxCartaoLogID.Alias = "CRDxCartaoLogID";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
                Items.Add(NumeroVenda, NumeroVenda.ID);
                NumeroVenda.Owner = this;
                NumeroVenda.OwnerID = ID;
                NumeroVenda.TableName = Name;
                Items.Add(CRDxCartaoLogOrigemID, CRDxCartaoLogOrigemID.ID);
                CRDxCartaoLogOrigemID.Owner = this;
                CRDxCartaoLogOrigemID.OwnerID = ID;
                CRDxCartaoLogOrigemID.TableName = Name;
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
            }

            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoID, new Guid("D5AAFB37-4DAF-49E9-AC2D-1AF152F34C46"), "CRDxCartaoID", "Cartão");
            public static XORMFaceField CRDxCartaoLogID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogID, new Guid("46294AF6-BDF0-4EEB-A0AE-0AB8A9F8B786"), "CRDxCartaoLogID", "Log de Atividades");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxPontoVendaID, new Guid("8A47D39F-3B3F-4EC1-9243-DF837AAD61EF"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Mensagem, new Guid("4382A549-DF6E-4247-9673-5B513E661A7D"), "Mensagem", "Mensagem");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Data, new Guid("2D3F66DF-D7D0-43D6-A6AC-030BA9E866C7"), "Data", "Data Ocorrência");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Valor, new Guid("9526029F-4B51-49BC-AF11-14084087202A"), "Valor", "Valor");
            public static XORMFKField CRDxCartaoLogTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogTipoID, new Guid("997C72FB-34FD-415F-99C1-D972DD9C5753"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
            public static XORMField NumeroVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.NumeroVenda, new Guid("E132F037-84A9-409D-B87A-3936FBB72D48"), "NumeroVenda", "Número da Venda");
            public static XORMFKField CRDxCartaoLogOrigemID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogOrigemID, new Guid("6509184D-3BC3-4F38-B370-16415CA3B08C"), "CRDxCartaoLogOrigemID", "Log de Atividades");
            public static XORMField Origem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Origem, new Guid("EC30E25F-B84E-4E18-98AE-5323245A3FDB"), "Origem", "Origem");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Desconto, new Guid("8F811DFA-D2E7-4A2C-98CE-6A6E0A7323F1"), "Desconto", "Desconto");
        }
        #endregion xCRDxCartaoLog 


        #region xCRDxCartaoVenda 
        public class xCRDxCartaoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("F50E7A25-6362-4653-8540-9A32A1C79A4A");

            public xCRDxCartaoVenda()
            {
                Name = "CRDxCartaoVenda";
                Alias = "CRDxCartaoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.gCID;

                Items.Add(CRDxCartaoVendaID, CRDxCartaoVendaID.ID);
                CRDxCartaoVendaID.Owner = this;
                CRDxCartaoVendaID.OwnerID = ID;
                CRDxCartaoVendaID.TableName = Name;
                CRDxCartaoVendaID.Alias = "CRDxCartaoVendaID";
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(DadosVenda, DadosVenda.ID);
                DadosVenda.Owner = this;
                DadosVenda.OwnerID = ID;
                DadosVenda.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(FaturadoFranqueado, FaturadoFranqueado.ID);
                FaturadoFranqueado.Owner = this;
                FaturadoFranqueado.OwnerID = ID;
                FaturadoFranqueado.TableName = Name;
                Items.Add(FaturadoCartao, FaturadoCartao.ID);
                FaturadoCartao.Owner = this;
                FaturadoCartao.OwnerID = ID;
                FaturadoCartao.TableName = Name;
            }

            public static XORMPKField CRDxCartaoVendaID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoVendaID, new Guid("CE6286D3-7263-48A4-8275-9908F3C9E14C"), "CRDxCartaoVendaID", "Venda por cartão");
            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoID, new Guid("B30CD3C8-8F1D-433D-BEF8-1E03B63F96E4"), "CRDxCartaoID", "Cartão");
            public static XORMField DadosVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.DadosVenda, new Guid("89AB4547-E922-4D98-982E-D42A6FEBE14D"), "DadosVenda", "Dado da venda");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.SYSxEstadoID, new Guid("FF0F8666-24A6-4D4A-BE4C-651EB9869337"), "SYSxEstadoID", "Estado");
            public static XORMField FaturadoFranqueado = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoFranqueado, new Guid("548DA868-FCEE-42F1-ACA7-D96828909446"), "FaturadoFranqueado", "Faturado para Franqueado");
            public static XORMField FaturadoCartao = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoCartao, new Guid("63A14D5E-8293-49A4-86D2-BF443E7A1C30"), "FaturadoCartao", "Faturado para Cartão");
        }
        #endregion xCRDxCartaoVenda 


        public xCRDxCartaoLog CRDxCartaoLog;
        public xCRDxCartaoVenda CRDxCartaoVenda;

        public VendaFranqueadoSVC()
        {
            TupleType = typeof(VendaFranqueadoSVC.XTuple);
            DataSetType = typeof(VendaFranqueadoSVC.XDataSet);
            ServiceRuleCID = new Guid("09C88F2E-D8C0-4882-B7A2-48310B7C21BC");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("7E426FB7-779C-4531-B17E-4C15EC1B81D3");
            Name = "VendaFranqueado";
            Title = "Vendas por Franqueado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            DataSetFields = new Guid[] { xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLog.CRDxPontoVendaID.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.Valor.ID, xCRDxCartaoVenda.CRDxCartaoVendaID.ID };
            PKField = xCRDxCartaoLog.CRDxCartaoLogID.ID;
            ConfigTableID = new Guid("F49233DE-4561-4573-895B-9C2421492A52");
            MasterRuleCID = new Guid("09C88F2E-D8C0-4882-B7A2-48310B7C21BC");
            CRDxCartaoLog = new xCRDxCartaoLog();
            CRDxCartaoLog.IsReadOnly = true;
            AddTable(CRDxCartaoLog);
            CRDxCartaoVenda = new xCRDxCartaoVenda();
            CRDxCartaoVenda.IsReadOnly = true;
            AddTable(CRDxCartaoVenda);
            MasterTableID = CRDxCartaoLog.ID;
            CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID = AddReference(new XSVCReference(new Guid("A38B2DF1-5B0C-4D03-A8D9-B3D8599FE02B"), "FK_A38B2DF15B0C4D03A8D9B3D8599FE02B", VendaFranqueadoSVC.xCRDxCartaoVenda.gCID, xCRDxCartaoVenda.CRDxCartaoVendaID.ID, VendaFranqueadoSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogID.ID, XJoinType.Inner)); // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
            xCRDxCartaoLog.CRDxCartaoLogID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoLogID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoLogID.AllowEmpty = true;
            xCRDxCartaoVenda.CRDxCartaoVendaID.IsReadOnly = true;
            xCRDxCartaoVenda.CRDxCartaoVendaID.IsDataField = true;
            xCRDxCartaoVenda.CRDxCartaoVendaID.AllowEmpty = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsDataField = true;
            xCRDxCartaoLog.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxCartaoLog.Data.IsReadOnly = true;
            xCRDxCartaoLog.Data.IsDataField = true;
            xCRDxCartaoLog.Data.AllowEmpty = true;
            xCRDxCartaoLog.Valor.IsReadOnly = true;
            xCRDxCartaoLog.Valor.Length = 20;
            xCRDxCartaoLog.Valor.Scale = 2;
            xCRDxCartaoLog.Valor.IsDataField = true;
            xCRDxCartaoLog.Valor.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxCartaoLogID => xCRDxCartaoLog.CRDxCartaoLogID;
        public XORMField CRDxCartaoVendaID => xCRDxCartaoVenda.CRDxCartaoVendaID;
        public XORMField CRDxPontoVendaID => xCRDxCartaoLog.CRDxPontoVendaID;
        public XORMField Data => xCRDxCartaoLog.Data;
        public XORMField Valor => xCRDxCartaoLog.Valor;
        }
        #endregion XFields
        #region VendaFranqueadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxCartaoLogID
        {
            get
            {
                return (Int32)Value[VendaFranqueadoSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID];
            }
            set
            {
                Value[VendaFranqueadoSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoLogID
        {
            get
            {
                GetOldValue(VendaFranqueadoSVC.xCRDxCartaoLog.CRDxCartaoLogID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 CRDxCartaoVendaID
        {
            get
            {
                return (Int32)Value[VendaFranqueadoSVC.xCRDxCartaoVenda.CRDxCartaoVendaID.ID];
            }
            set
            {
                Value[VendaFranqueadoSVC.xCRDxCartaoVenda.CRDxCartaoVendaID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoVendaID
        {
            get
            {
                GetOldValue(VendaFranqueadoSVC.xCRDxCartaoVenda.CRDxCartaoVendaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[VendaFranqueadoSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[VendaFranqueadoSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(VendaFranqueadoSVC.xCRDxCartaoLog.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[VendaFranqueadoSVC.xCRDxCartaoLog.Data.ID];
            }
            set
            {
                Value[VendaFranqueadoSVC.xCRDxCartaoLog.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(VendaFranqueadoSVC.xCRDxCartaoLog.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[VendaFranqueadoSVC.xCRDxCartaoLog.Valor.ID];
            }
            set
            {
                Value[VendaFranqueadoSVC.xCRDxCartaoLog.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(VendaFranqueadoSVC.xCRDxCartaoLog.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VendaFranqueadoSVC.XTuple

        #region VendaFranqueadoSVC.XRule
        public abstract class XRule : XServiceRule<VendaFranqueadoSVC.XDataSet, VendaFranqueadoSVC, VendaFranqueadoSVC.XTuple>
        {
        }
        #endregion VendaFranqueadoSVC.XRule

        #region VendaFranqueadoSVC.XDataSet

        public class XDataSet : XDataSet<VendaFranqueadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VendaFranqueadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VendaFranqueadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxCartaoLogID => VendaFranqueadoSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID;
            public Guid CRDxCartaoVendaID => VendaFranqueadoSVC.xCRDxCartaoVenda.CRDxCartaoVendaID.ID;
            public Guid CRDxPontoVendaID => VendaFranqueadoSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID;
            public Guid Data => VendaFranqueadoSVC.xCRDxCartaoLog.Data.ID;
            public Guid Valor => VendaFranqueadoSVC.xCRDxCartaoLog.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(VendaFranqueadoSVC.XDataSet);
            }

        }
        #endregion VendaFranqueadoSVC.XDataSet

        [Guid(VendaFranqueadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VendaFranqueadoSVC))]
        protected class _Service : Service<VendaFranqueadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "B2588B8E-1B5B-460B-8E1E-0C233B6FFC05";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VendaFranqueadoSVC, XDataSet, XTuple>, XService
             where TModel : VendaFranqueadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}