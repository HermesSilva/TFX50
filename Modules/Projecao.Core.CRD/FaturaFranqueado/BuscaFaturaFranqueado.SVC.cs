//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.FaturaFranqueado
{
    [XRegister(typeof(BuscaFaturaFranqueadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\FaturaFranqueado\BuscaFaturaFranqueado.dssvc")]
    public class BuscaFaturaFranqueadoSVC : XSVCModel
    {
        #region BuscaFaturaFranqueadoFilterFRM

        [XRegister(typeof(BuscaFaturaFranqueadoFilterFRM), sCID)]
        public class BuscaFaturaFranqueadoFilterFRM : XFRMModel
        {
            public const String sCID = "E1E6EAB3-87B7-4A9C-BD27-D507F214439A";
            static BuscaFaturaFranqueadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public BuscaFaturaFranqueadoFilterFRM()
            {
                ID = gCID;
                Name = "BuscaFaturaFranqueadoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 50);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion BuscaFaturaFranqueadoFilterFRM

        public const String sCID = "726002FF-89EF-4FBA-81E1-C39E095FB90A";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxFaturaFranqueado_CRDxPontoVendaID_CRDxPontoVenda_CRDxPontoVendaID; // CRDxFaturaFranqueado.CRDxPontoVendaID --> CRDxPontoVenda.CRDxPontoVendaID

        #region xCRDxFaturaFranqueado 
        public class xCRDxFaturaFranqueado : XSVCTable
        {

            public static Guid gCID => new Guid("627A7548-AFCE-4D59-A4F8-2F0BFA939A95");

            public xCRDxFaturaFranqueado()
            {
                Name = "CRDxFaturaFranqueado";
                Alias = "CRDxFaturaFranqueado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.gCID;

                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Items.Add(Fim, Fim.ID);
                Fim.Owner = this;
                Fim.OwnerID = ID;
                Fim.TableName = Name;
                Fim.Alias = "Fim";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                Items.Add(CRDxFaturaFranqueadoID, CRDxFaturaFranqueadoID.ID);
                CRDxFaturaFranqueadoID.Owner = this;
                CRDxFaturaFranqueadoID.OwnerID = ID;
                CRDxFaturaFranqueadoID.TableName = Name;
                Items.Add(QuantidadeVenda, QuantidadeVenda.ID);
                QuantidadeVenda.Owner = this;
                QuantidadeVenda.OwnerID = ID;
                QuantidadeVenda.TableName = Name;
                Items.Add(CRDxFaturaEstadoID, CRDxFaturaEstadoID.ID);
                CRDxFaturaEstadoID.Owner = this;
                CRDxFaturaEstadoID.OwnerID = ID;
                CRDxFaturaEstadoID.TableName = Name;
            }

            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.SYSxEstadoID, new Guid("9DC9D042-DD74-493A-A307-ACF17A63C8D4"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.Inicio, new Guid("95F44F7E-18AB-4961-8487-78A34B3000D1"), "Inicio", "Início");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.Valor, new Guid("BFCFBD26-E13D-4F70-86C3-EF3E5BE73654"), "Valor", "Valor");
            public static XORMDateTimeField Fim = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.Fim, new Guid("D81E0D88-7199-495D-AE3C-D582E9354648"), "Fim", "Fim");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.CRDxPontoVendaID, new Guid("97CC0737-8F3B-4D9C-A95C-05546BBDF45F"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMPKField CRDxFaturaFranqueadoID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.CRDxFaturaFranqueadoID, new Guid("0C55AD4E-34C8-404E-9CE2-83027A533CA2"), "CRDxFaturaFranqueadoID", "Fatura por Franqueado");
            public static XORMField QuantidadeVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.QuantidadeVenda, new Guid("F7DFCE74-9459-4093-B635-CF2A51B49CD2"), "QuantidadeVenda", "Quantidade de Vendas");
            public static XORMFKField CRDxFaturaEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.CRDxFaturaEstadoID, new Guid("12F18B0C-02AE-4D9D-9409-B9CE8BC07714"), "CRDxFaturaEstadoID", "Estado da Fatura");
        }
        #endregion xCRDxFaturaFranqueado 


        #region xCRDxPontoVenda 
        public class xCRDxPontoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("ECF5D55B-64BA-4957-A245-2E4FFED359B6");

            public xCRDxPontoVenda()
            {
                Name = "CRDxPontoVenda";
                Alias = "CRDxPontoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.gCID;

                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Items.Add(TaxaAdministracao, TaxaAdministracao.ID);
                TaxaAdministracao.Owner = this;
                TaxaAdministracao.OwnerID = ID;
                TaxaAdministracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(Inclusao, Inclusao.ID);
                Inclusao.Owner = this;
                Inclusao.OwnerID = ID;
                Inclusao.TableName = Name;
                Items.Add(SYSxFranqueadorID, SYSxFranqueadorID.ID);
                SYSxFranqueadorID.Owner = this;
                SYSxFranqueadorID.OwnerID = ID;
                SYSxFranqueadorID.TableName = Name;
                Items.Add(DataChave, DataChave.ID);
                DataChave.Owner = this;
                DataChave.OwnerID = ID;
                DataChave.TableName = Name;
                Items.Add(ChaveSeguranca, ChaveSeguranca.ID);
                ChaveSeguranca.Owner = this;
                ChaveSeguranca.OwnerID = ID;
                ChaveSeguranca.TableName = Name;
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
            }

            public static XORMFaceField CRDxPontoVendaID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.CRDxPontoVendaID, new Guid("33C95F66-ADF5-451E-94E5-026B9274F6C6"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Fechamento, new Guid("4CDEE96B-6DCF-4D82-8B74-03FD3A9D585B"), "Fechamento", "Dia de Fechamento");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Pagamento, new Guid("43063BFE-A968-402A-A4B6-1B95BAEA390F"), "Pagamento", "Dia de Pagamento");
            public static XORMDecimalField TaxaAdministracao = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.TaxaAdministracao, new Guid("9D54B46C-625F-4861-9729-D04490646101"), "TaxaAdministracao", "Taxa de Administração");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxEstadoID, new Guid("5AEBA62F-4D6B-4782-BD91-C9EDC0927E54"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inclusao = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Inclusao, new Guid("81C91345-5FF6-47CC-9607-E8B67E4759AE"), "Inclusao", "Inclusão");
            public static XORMFKField SYSxFranqueadorID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxFranqueadorID, new Guid("A65E1BA9-9436-4F44-87F0-307FB0C5C0A4"), "SYSxFranqueadorID", "Franqueador");
            public static XORMDateTimeField DataChave = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.DataChave, new Guid("C7B2FB7F-B2D5-4A5C-AF6E-B0C2898F32C1"), "DataChave", "Data da Chave");
            public static XORMField ChaveSeguranca = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.ChaveSeguranca, new Guid("23ACCDC1-D5AE-4A65-8150-A589A1B3FE50"), "ChaveSeguranca", "Change de Segurança");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Sigla, new Guid("1DAB56BA-F31C-4AB2-B02E-256F9177B57E"), "Sigla", "Sigla");
        }
        #endregion xCRDxPontoVenda 


        public xCRDxFaturaFranqueado CRDxFaturaFranqueado;
        public xCRDxPontoVenda CRDxPontoVenda;

        public BuscaFaturaFranqueadoSVC()
        {
            TupleType = typeof(BuscaFaturaFranqueadoSVC.XTuple);
            DataSetType = typeof(BuscaFaturaFranqueadoSVC.XDataSet);
            ServiceRuleCID = new Guid("6F67086D-B129-49AA-ACDB-1AE901BDCC6C");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("726002FF-89EF-4FBA-81E1-C39E095FB90A");
            Name = "BuscaFaturaFranqueado";
            Title = "Busca Fatura por Franqueado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            DataSetFields = new Guid[] { xCRDxFaturaFranqueado.Fim.ID, xCRDxPontoVenda.Fechamento.ID, xCRDxPontoVenda.CRDxPontoVendaID.ID };
            PKField = xCRDxPontoVenda.CRDxPontoVendaID.ID;
            ConfigTableID = new Guid("71F309BB-69A1-41B9-A07C-B3A63A4295D3");
            MasterRuleCID = new Guid("6F67086D-B129-49AA-ACDB-1AE901BDCC6C");
            CRDxFaturaFranqueado = new xCRDxFaturaFranqueado();
            CRDxFaturaFranqueado.IsReadOnly = true;
            AddTable(CRDxFaturaFranqueado);
            CRDxPontoVenda = new xCRDxPontoVenda();
            CRDxPontoVenda.IsReadOnly = true;
            AddTable(CRDxPontoVenda);
            MasterTableID = CRDxPontoVenda.ID;
            CRDxFaturaFranqueado_CRDxPontoVendaID_CRDxPontoVenda_CRDxPontoVendaID = AddReference(new XSVCReference(new Guid("69C29253-7CB1-4483-A5C1-A27E617CABA0"), "FK_69C292537CB14483A5C1A27E617CABA0", BuscaFaturaFranqueadoSVC.xCRDxFaturaFranqueado.gCID, xCRDxFaturaFranqueado.CRDxPontoVendaID.ID, BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, XJoinType.Left)); // CRDxFaturaFranqueado.CRDxPontoVendaID --> CRDxPontoVenda.CRDxPontoVendaID
            xCRDxPontoVenda.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxPontoVenda.CRDxPontoVendaID.IsDataField = true;
            xCRDxPontoVenda.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxPontoVenda.Fechamento.IsReadOnly = true;
            xCRDxPontoVenda.Fechamento.IsDataField = true;
            xCRDxPontoVenda.Fechamento.AllowEmpty = true;
            xCRDxFaturaFranqueado.Fim.IsReadOnly = true;
            xCRDxFaturaFranqueado.Fim.IsDataField = true;
            xCRDxFaturaFranqueado.Fim.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxPontoVendaID => xCRDxPontoVenda.CRDxPontoVendaID;
        public XORMField Fechamento => xCRDxPontoVenda.Fechamento;
        public XORMField Fim => xCRDxFaturaFranqueado.Fim;
        }
        #endregion XFields
        #region BuscaFaturaFranqueadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.Fechamento.ID];
            }
            set
            {
                Value[BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public DateTime Fim
        {
            get
            {
                return (DateTime)Value[BuscaFaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim.ID];
            }
            set
            {
                Value[BuscaFaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim.ID] = value;
            }
        }
        public DateTime? oFim
        {
            get
            {
                GetOldValue(BuscaFaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion BuscaFaturaFranqueadoSVC.XTuple

        #region BuscaFaturaFranqueadoSVC.XRule
        public abstract class XRule : XServiceRule<BuscaFaturaFranqueadoSVC.XDataSet, BuscaFaturaFranqueadoSVC, BuscaFaturaFranqueadoSVC.XTuple>
        {
        }
        #endregion BuscaFaturaFranqueadoSVC.XRule

        #region BuscaFaturaFranqueadoSVC.XDataSet

        public class XDataSet : XDataSet<BuscaFaturaFranqueadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(BuscaFaturaFranqueadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<BuscaFaturaFranqueadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxPontoVendaID => BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID;
            public Guid Fechamento => BuscaFaturaFranqueadoSVC.xCRDxPontoVenda.Fechamento.ID;
            public Guid Fim => BuscaFaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim.ID;

            public XDataSet()
            {
                DataSetType = typeof(BuscaFaturaFranqueadoSVC.XDataSet);
            }

        }
        #endregion BuscaFaturaFranqueadoSVC.XDataSet

        [Guid(BuscaFaturaFranqueadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(BuscaFaturaFranqueadoSVC))]
        protected class _Service : Service<BuscaFaturaFranqueadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "C81F228D-29D0-4459-87EE-D89E76B5AB92";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<BuscaFaturaFranqueadoSVC, XDataSet, XTuple>, XService
             where TModel : BuscaFaturaFranqueadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}