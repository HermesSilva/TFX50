//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.FaturaFranqueado
{
    [XRegister(typeof(FaturaFranqueadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\FaturaFranqueado\FaturaFranqueado.dssvc")]
    public class FaturaFranqueadoSVC : XSVCModel
    {
        #region FaturaFranqueadoFilterFRM

        [XRegister(typeof(FaturaFranqueadoFilterFRM), sCID)]
        public class FaturaFranqueadoFilterFRM : XFRMModel
        {
            public const String sCID = "F905729A-C02B-4ED1-94D9-677B4DCF5461";
            static FaturaFranqueadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public FaturaFranqueadoFilterFRM()
            {
                ID = gCID;
                Name = "FaturaFranqueadoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 1181, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 18;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 18;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("66290387-F0AD-4746-A1F7-B0D8D4C5C2EE");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] { new Guid("DAF6A077-070E-437E-B855-29683176A585") };
                Nome.SourceDisplayFieldID = new Guid[] { new Guid("CA91AAEC-4C75-40E5-8FFC-C326828E9CC1") };
                Nome.DataSourceID = global::Projecao.Core.CRD.ReadOnly.FranqueadoSVC.gCID;
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
                AddItem(Inicio);
                Inicio.ForceRW = true;
                Inicio.CanInsert = true;
                Inicio.CanUpdate = true;
                Inicio.RowCount = 1;
                Inicio.ColCount = 7;
                Inicio.RowCountSmall = 1;
                Inicio.ColCountSmall = 7;
                Inicio.IsHidden = false;
                Inicio.IsHiddenSmall = false;
                Inicio.AdditionalTitle = "";
                Inicio.Location = 2;
                Inicio.EditorCID = new Guid("D56E8E17-9D09-4FE9-9A30-A6AA5865ABC6");
                Inicio.FormImplace = true;
                Inicio.Operator = XOperator.EqualTo;
                Inicio.JustifyHeight = false;
                Inicio.AllowEmpty = true;
                Inicio.FontColor = "#000000";
                Inicio.FontStyle = XFontStyle.Normal;
                Inicio.ShowFooter = false;
                Inicio.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Inicio.Scale = 0;
                Inicio.Length = 0;
                Inicio.SearchAction = XSearchAction.Default;
                Inicio.TypeID = XDateTime.CID;
                Inicio.AdditionalFieldsID = new Guid[] {  };
                Inicio.AdditionalDataFieldsID = new Guid[] {  };
                Inicio.TargetFilterFieldID = new Guid[] {  };
                Inicio.SourceFilterFieldID = new Guid[] {  };
                Inicio.TargetDisplayFieldID = new Guid[] {  };
                Inicio.SourceDisplayFieldID = new Guid[] {  };
                Inicio.AutoLoad = false;
                Inicio.FilterInative = true;
                Inicio.IsAnswer = false;
                Inicio.AllowMultiSelect = false;
                AddItem(Fim);
                Fim.ForceRW = true;
                Fim.CanInsert = true;
                Fim.CanUpdate = true;
                Fim.RowCount = 1;
                Fim.ColCount = 7;
                Fim.RowCountSmall = 1;
                Fim.ColCountSmall = 7;
                Fim.IsHidden = false;
                Fim.IsHiddenSmall = false;
                Fim.AdditionalTitle = "";
                Fim.Location = 3;
                Fim.EditorCID = new Guid("D56E8E17-9D09-4FE9-9A30-A6AA5865ABC6");
                Fim.FormImplace = true;
                Fim.Operator = XOperator.EqualTo;
                Fim.JustifyHeight = false;
                Fim.AllowEmpty = true;
                Fim.FontColor = "#000000";
                Fim.FontStyle = XFontStyle.Normal;
                Fim.ShowFooter = false;
                Fim.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Fim.Scale = 0;
                Fim.Length = 0;
                Fim.SearchAction = XSearchAction.Default;
                Fim.TypeID = XDateTime.CID;
                Fim.AdditionalFieldsID = new Guid[] {  };
                Fim.AdditionalDataFieldsID = new Guid[] {  };
                Fim.TargetFilterFieldID = new Guid[] {  };
                Fim.SourceFilterFieldID = new Guid[] {  };
                Fim.TargetDisplayFieldID = new Guid[] {  };
                Fim.SourceDisplayFieldID = new Guid[] {  };
                Fim.AutoLoad = false;
                Fim.FilterInative = true;
                Fim.IsAnswer = false;
                Fim.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("02203A54-4C3C-45C5-86CE-6383F4DEBC76"), "Nome", "Nome", XString.CID, 1, 18, false, gCID, null, new Guid("DAF6A077-070E-437E-B855-29683176A585")); // String;
            public XFRMField Inicio = new XFRMField(new Guid("67E34C61-F6BF-40A6-8B03-E36A191BFFB4"), "Inicio", "InÃ­cio", XDateTime.CID, 1, 7, false, gCID, null, new Guid("403C21A9-DC8F-48D8-BBF9-27741DABAC16")); // DateTime;
            public XFRMField Fim = new XFRMField(new Guid("875691C7-350F-4EF1-9646-F900A9B5E31F"), "Fim", "Fim", XDateTime.CID, 1, 7, false, gCID, null, new Guid("AE0BAACC-B967-4999-BCC5-51D5C5D9F091")); // DateTime;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("02203A54-4C3C-45C5-86CE-6383F4DEBC76"), "Nome", "Nome", typeof(String));
                public static XFieldInfo Inicio = new XFieldInfo(new Guid("67E34C61-F6BF-40A6-8B03-E36A191BFFB4"), "Inicio", "InÃ­cio", typeof(DateTime));
                public static XFieldInfo Fim = new XFieldInfo(new Guid("875691C7-350F-4EF1-9646-F900A9B5E31F"), "Fim", "Fim", typeof(DateTime));
            }
        }

        #endregion FaturaFranqueadoFilterFRM

        public const String sCID = "DAEDB6AF-96F4-45F6-93F5-3CD00D3D3C20";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxPontoVenda_CRDxPontoVendaID; // SYSxPessoa.SYSxPessoaID --> CRDxPontoVenda.CRDxPontoVendaID
        public static XSVCReference CRDxFaturaFranqueado_CRDxPontoVendaID_CRDxPontoVenda_CRDxPontoVendaID; // CRDxFaturaFranqueado.CRDxPontoVendaID --> CRDxPontoVenda.CRDxPontoVendaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("2E803F49-A066-42AB-9D6C-FBE6403E58B6");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("DAF6A077-070E-437E-B855-29683176A585"), "Nome", "Nome do Franqueado");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("6BC69FB4-2D08-4A42-8331-492898366BCE"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxPontoVenda 
        public class xCRDxPontoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("5A0F8FCD-CFE2-4227-8F64-C1E5FA34F906");

            public xCRDxPontoVenda()
            {
                Name = "CRDxPontoVenda";
                Alias = "CRDxPontoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.gCID;

                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Items.Add(TaxaAdministracao, TaxaAdministracao.ID);
                TaxaAdministracao.Owner = this;
                TaxaAdministracao.OwnerID = ID;
                TaxaAdministracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(Inclusao, Inclusao.ID);
                Inclusao.Owner = this;
                Inclusao.OwnerID = ID;
                Inclusao.TableName = Name;
                Items.Add(SYSxFranqueadorID, SYSxFranqueadorID.ID);
                SYSxFranqueadorID.Owner = this;
                SYSxFranqueadorID.OwnerID = ID;
                SYSxFranqueadorID.TableName = Name;
                Items.Add(DataChave, DataChave.ID);
                DataChave.Owner = this;
                DataChave.OwnerID = ID;
                DataChave.TableName = Name;
                Items.Add(ChaveSeguranca, ChaveSeguranca.ID);
                ChaveSeguranca.Owner = this;
                ChaveSeguranca.OwnerID = ID;
                ChaveSeguranca.TableName = Name;
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
            }

            public static XORMFaceField CRDxPontoVendaID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.CRDxPontoVendaID, new Guid("CEE36226-5EDD-4B68-A9AD-A4A96AB97A67"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Fechamento, new Guid("B31000FE-1024-48F6-A0DC-19CE0F7E02A1"), "Fechamento", "Dia de Fechamento");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Pagamento, new Guid("72747274-18C2-4662-8D41-D39B8315D328"), "Pagamento", "Dia de Pagamento");
            public static XORMDecimalField TaxaAdministracao = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.TaxaAdministracao, new Guid("88F9CAEC-3401-4ED5-B9F3-E03F84523A44"), "TaxaAdministracao", "Taxa de AdministraÃ§Ã£o");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxEstadoID, new Guid("FBE27E6F-1884-4985-A4E3-0550091860E9"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inclusao = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Inclusao, new Guid("8DE1DF6E-9CBF-478D-9D69-36C47715471A"), "Inclusao", "InclusÃ£o");
            public static XORMFKField SYSxFranqueadorID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxFranqueadorID, new Guid("A412E911-2441-4CEF-A00D-F9CC28CAFACE"), "SYSxFranqueadorID", "Franqueador");
            public static XORMDateTimeField DataChave = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.DataChave, new Guid("E5C9BD1A-4528-4B93-B7F1-672863FD19CB"), "DataChave", "Data da Chave");
            public static XORMField ChaveSeguranca = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.ChaveSeguranca, new Guid("09F870DC-743B-47E0-AD06-B406209536F0"), "ChaveSeguranca", "Change de SeguranÃ§a");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Sigla, new Guid("21B668A0-8419-409C-935C-96571BEFF334"), "Sigla", "Sigla");
        }
        #endregion xCRDxPontoVenda 


        #region xCRDxFaturaFranqueado 
        public class xCRDxFaturaFranqueado : XSVCTable
        {

            public static Guid gCID => new Guid("E6EE1C50-A61F-4AEA-B816-BCD55F7B3EE3");

            public xCRDxFaturaFranqueado()
            {
                Name = "CRDxFaturaFranqueado";
                Alias = "CRDxFaturaFranqueado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.gCID;

                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Inicio.Alias = "Inicio";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(Fim, Fim.ID);
                Fim.Owner = this;
                Fim.OwnerID = ID;
                Fim.TableName = Name;
                Fim.Alias = "Fim";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                Items.Add(CRDxFaturaFranqueadoID, CRDxFaturaFranqueadoID.ID);
                CRDxFaturaFranqueadoID.Owner = this;
                CRDxFaturaFranqueadoID.OwnerID = ID;
                CRDxFaturaFranqueadoID.TableName = Name;
                CRDxFaturaFranqueadoID.Alias = "CRDxFaturaFranqueadoID";
                Items.Add(QuantidadeVenda, QuantidadeVenda.ID);
                QuantidadeVenda.Owner = this;
                QuantidadeVenda.OwnerID = ID;
                QuantidadeVenda.TableName = Name;
                Items.Add(CRDxFaturaEstadoID, CRDxFaturaEstadoID.ID);
                CRDxFaturaEstadoID.Owner = this;
                CRDxFaturaEstadoID.OwnerID = ID;
                CRDxFaturaEstadoID.TableName = Name;
            }

            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.SYSxEstadoID, new Guid("F1E2176C-DB92-4BE2-9C10-9B9BCCAAD4AF"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.Inicio, new Guid("403C21A9-DC8F-48D8-BBF9-27741DABAC16"), "Inicio", "InÃ­cio");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.Valor, new Guid("6D80D68D-F839-49D1-BC00-5C1F392B743E"), "Valor", "Valor");
            public static XORMDateTimeField Fim = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.Fim, new Guid("AE0BAACC-B967-4999-BCC5-51D5C5D9F091"), "Fim", "Fim");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.CRDxPontoVendaID, new Guid("1177C92F-716A-4D67-AC88-17E9D05E9311"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMPKField CRDxFaturaFranqueadoID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.CRDxFaturaFranqueadoID, new Guid("C23FE007-B1FF-4633-802A-61E81AB06CEA"), "CRDxFaturaFranqueadoID", "Fatura por Franqueado");
            public static XORMField QuantidadeVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.QuantidadeVenda, new Guid("9AF09216-E971-4D2E-B68C-AA19E40B5374"), "QuantidadeVenda", "Quantidade de Vendas");
            public static XORMFKField CRDxFaturaEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxFaturaFranqueado.CRDxFaturaEstadoID, new Guid("F8DC036D-C0E7-446C-9175-0DC15C2B8648"), "CRDxFaturaEstadoID", "Estado da Fatura");
        }
        #endregion xCRDxFaturaFranqueado 


        public xCRDxFaturaFranqueado CRDxFaturaFranqueado;
        public xCRDxPontoVenda CRDxPontoVenda;
        public xSYSxPessoa SYSxPessoa;

        public FaturaFranqueadoSVC()
        {
            TupleType = typeof(FaturaFranqueadoSVC.XTuple);
            DataSetType = typeof(FaturaFranqueadoSVC.XDataSet);
            ServiceRuleCID = new Guid("C2A2A390-2FB8-4AE6-9E56-8D6943F136E0");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("DAEDB6AF-96F4-45F6-93F5-3CD00D3D3C20");
            Name = "FaturaFranqueado";
            Title = "Faturas por Franqueado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("F905729A-C02B-4ED1-94D9-677B4DCF5461");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxFaturaFranqueado.Inicio.ID, xCRDxFaturaFranqueado.Fim.ID, xCRDxFaturaFranqueado.Valor.ID, xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xCRDxFaturaFranqueado.Fim.ID, xCRDxFaturaFranqueado.Inicio.ID, xCRDxFaturaFranqueado.Valor.ID, xSYSxPessoa.Nome.ID, xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.ID };
            PKField = xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.ID;
            ConfigTableID = new Guid("D128A252-B9F7-44EB-B2F4-229EAF5235C6");
            MasterRuleCID = new Guid("C2A2A390-2FB8-4AE6-9E56-8D6943F136E0");
            CRDxFaturaFranqueado = new xCRDxFaturaFranqueado();
            CRDxFaturaFranqueado.IsReadOnly = true;
            AddTable(CRDxFaturaFranqueado);
            CRDxPontoVenda = new xCRDxPontoVenda();
            CRDxPontoVenda.IsReadOnly = true;
            AddTable(CRDxPontoVenda);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxPontoVenda.ID;
            SYSxPessoa_SYSxPessoaID_CRDxPontoVenda_CRDxPontoVendaID = AddReference(new XSVCReference(new Guid("9A4650D7-9BC0-471B-B2A1-A0026A04521F"), "FK_9A4650D79BC0471BB2A1A0026A04521F", FaturaFranqueadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, FaturaFranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxPontoVenda.CRDxPontoVendaID
            CRDxFaturaFranqueado_CRDxPontoVendaID_CRDxPontoVenda_CRDxPontoVendaID = AddReference(new XSVCReference(new Guid("E2F91A19-129C-4D80-9C99-68939C69303F"), "FK_E2F91A19129C4D809C9968939C69303F", FaturaFranqueadoSVC.xCRDxFaturaFranqueado.gCID, xCRDxFaturaFranqueado.CRDxPontoVendaID.ID, FaturaFranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, XJoinType.Inner)); // CRDxFaturaFranqueado.CRDxPontoVendaID --> CRDxPontoVenda.CRDxPontoVendaID
            xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.IsReadOnly = true;
            xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.IsDataField = true;
            xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.AllowEmpty = true;
            xCRDxFaturaFranqueado.Fim.IsReadOnly = true;
            xCRDxFaturaFranqueado.Fim.IsDataField = true;
            xCRDxFaturaFranqueado.Fim.AllowEmpty = true;
            xCRDxFaturaFranqueado.Inicio.IsReadOnly = true;
            xCRDxFaturaFranqueado.Inicio.IsDataField = true;
            xCRDxFaturaFranqueado.Inicio.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxFaturaFranqueado.Valor.IsReadOnly = true;
            xCRDxFaturaFranqueado.Valor.Length = 20;
            xCRDxFaturaFranqueado.Valor.Scale = 2;
            xCRDxFaturaFranqueado.Valor.IsDataField = true;
            xCRDxFaturaFranqueado.Valor.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxFaturaFranqueadoID => xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID;
        public XORMField Fim => xCRDxFaturaFranqueado.Fim;
        public XORMField Inicio => xCRDxFaturaFranqueado.Inicio;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Valor => xCRDxFaturaFranqueado.Valor;
        }
        #endregion XFields
        #region FaturaFranqueadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxFaturaFranqueadoID
        {
            get
            {
                return (Int32)Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.ID];
            }
            set
            {
                Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.ID] = value;
            }
        }
        public Int32? oCRDxFaturaFranqueadoID
        {
            get
            {
                GetOldValue(FaturaFranqueadoSVC.xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public DateTime Fim
        {
            get
            {
                return (DateTime)Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim.ID];
            }
            set
            {
                Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim.ID] = value;
            }
        }
        public DateTime? oFim
        {
            get
            {
                GetOldValue(FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public DateTime Inicio
        {
            get
            {
                return (DateTime)Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Inicio.ID];
            }
            set
            {
                Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Inicio.ID] = value;
            }
        }
        public DateTime? oInicio
        {
            get
            {
                GetOldValue(FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Inicio, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[FaturaFranqueadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[FaturaFranqueadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(FaturaFranqueadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Valor.ID];
            }
            set
            {
                Value[FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FaturaFranqueadoSVC.XTuple

        #region FaturaFranqueadoSVC.XRule
        public abstract class XRule : XServiceRule<FaturaFranqueadoSVC.XDataSet, FaturaFranqueadoSVC, FaturaFranqueadoSVC.XTuple>
        {
        }
        #endregion FaturaFranqueadoSVC.XRule

        #region FaturaFranqueadoSVC.XDataSet

        public class XDataSet : XDataSet<FaturaFranqueadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FaturaFranqueadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FaturaFranqueadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxFaturaFranqueadoID => FaturaFranqueadoSVC.xCRDxFaturaFranqueado.CRDxFaturaFranqueadoID.ID;
            public Guid Fim => FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Fim.ID;
            public Guid Inicio => FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Inicio.ID;
            public Guid Nome => FaturaFranqueadoSVC.xSYSxPessoa.Nome.ID;
            public Guid Valor => FaturaFranqueadoSVC.xCRDxFaturaFranqueado.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(FaturaFranqueadoSVC.XDataSet);
            }

        }
        #endregion FaturaFranqueadoSVC.XDataSet

        [Guid(FaturaFranqueadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FaturaFranqueadoSVC))]
        protected class _Service : Service<FaturaFranqueadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "D7B20152-6122-4A5F-A39A-ACF4D0F43C37";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FaturaFranqueadoSVC, XDataSet, XTuple>, XService
             where TModel : FaturaFranqueadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}