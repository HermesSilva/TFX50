//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.AutomatedService
{
    [XRegister(typeof(FechamentoFaturaSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\AutomatedService\FechamentoFatura.dssvc")]
    public class FechamentoFaturaSVC : XSVCModel
    {
        #region FechamentoFaturaFilterFRM

        [XRegister(typeof(FechamentoFaturaFilterFRM), sCID)]
        public class FechamentoFaturaFilterFRM : XFRMModel
        {
            public const String sCID = "560ABFF3-2047-48CF-AE0A-EA52A27FD83A";
            static FechamentoFaturaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public FechamentoFaturaFilterFRM()
            {
                ID = gCID;
                Name = "FechamentoFaturaFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 889, 50);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion FechamentoFaturaFilterFRM

        public const String sCID = "7910CC92-A5D1-417D-BFF2-044DC4499D1C";
        public static Guid gCID = new Guid(sCID);

        #region xSYSxJobLog 
        public class xSYSxJobLog : XSVCTable
        {

            public static Guid gCID => new Guid("2098BA0C-B53D-4CAC-94DA-5B27A95B201F");

            public xSYSxJobLog()
            {
                Name = "SYSxJobLog";
                Alias = "SYSxJobLog";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.gCID;

                Items.Add(SYSxJobLogTipoID, SYSxJobLogTipoID.ID);
                SYSxJobLogTipoID.Owner = this;
                SYSxJobLogTipoID.OwnerID = ID;
                SYSxJobLogTipoID.TableName = Name;
                SYSxJobLogTipoID.Alias = "SYSxJobLogTipoID";
                Items.Add(SYSxJobLogEstadoID, SYSxJobLogEstadoID.ID);
                SYSxJobLogEstadoID.Owner = this;
                SYSxJobLogEstadoID.OwnerID = ID;
                SYSxJobLogEstadoID.TableName = Name;
                SYSxJobLogEstadoID.Alias = "SYSxJobLogEstadoID";
                Items.Add(SYSxJobID, SYSxJobID.ID);
                SYSxJobID.Owner = this;
                SYSxJobID.OwnerID = ID;
                SYSxJobID.TableName = Name;
                SYSxJobID.Alias = "SYSxJobID";
                Items.Add(SYSxJobLogID, SYSxJobLogID.ID);
                SYSxJobLogID.Owner = this;
                SYSxJobLogID.OwnerID = ID;
                SYSxJobLogID.TableName = Name;
                SYSxJobLogID.Alias = "SYSxJobLogID";
                Items.Add(Relatorio, Relatorio.ID);
                Relatorio.Owner = this;
                Relatorio.OwnerID = ID;
                Relatorio.TableName = Name;
                Relatorio.Alias = "Relatorio";
                Items.Add(Momento, Momento.ID);
                Momento.Owner = this;
                Momento.OwnerID = ID;
                Momento.TableName = Name;
                Momento.Alias = "Momento";
            }

            public static XORMFKField SYSxJobLogTipoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogTipoID, new Guid("366072A5-FEBC-4A9E-86BA-68839A5AD0CD"), "SYSxJobLogTipoID", "Tabela");
            public static XORMFKField SYSxJobLogEstadoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogEstadoID, new Guid("4DEE8D26-7F61-45EA-9818-A6B96B9B70E2"), "SYSxJobLogEstadoID", "Tabela");
            public static XORMFKField SYSxJobID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobID, new Guid("C8229AA5-0ABE-4C4C-9200-C9DDC8C66C90"), "SYSxJobID", "Tabela");
            public static XORMPKField SYSxJobLogID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogID, new Guid("3580A761-C18B-4131-A573-AC7E5F315DE5"), "SYSxJobLogID", "Tabela");
            public static XORMField Relatorio = new XORMField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Relatorio, new Guid("AE3319C6-C0B2-4D3A-9511-DDE8D3CAD451"), "Relatorio", "RelatÃ³rio");
            public static XORMDateTimeField Momento = new XORMDateTimeField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Momento, new Guid("61596B07-2D4D-44D2-A448-6DD51248AD80"), "Momento", "Momento");
        }
        #endregion xSYSxJobLog 


        public xSYSxJobLog SYSxJobLog;

        public FechamentoFaturaSVC()
        {
            TupleType = typeof(FechamentoFaturaSVC.XTuple);
            DataSetType = typeof(FechamentoFaturaSVC.XDataSet);
            ServiceRuleCID = new Guid("06C502CE-723F-46F6-BCE6-33E52C62489E");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("7910CC92-A5D1-417D-BFF2-044DC4499D1C");
            Name = "FechamentoFatura";
            Title = "Fechamento de Faturas";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ClientScript = "Projecao.Core.CRD.js";
            DataSetFields = new Guid[] { xSYSxJobLog.Momento.ID, xSYSxJobLog.Relatorio.ID, xSYSxJobLog.SYSxJobID.ID, xSYSxJobLog.SYSxJobLogEstadoID.ID, xSYSxJobLog.SYSxJobLogID.ID, xSYSxJobLog.SYSxJobLogTipoID.ID };
            PKField = xSYSxJobLog.SYSxJobLogID.ID;
            ConfigTableID = new Guid("88D46CC5-6549-43BB-9076-50A4B84BBA23");
            MasterRuleCID = new Guid("06C502CE-723F-46F6-BCE6-33E52C62489E");
            SYSxJobLog = new xSYSxJobLog();
            SYSxJobLog.IsReadOnly = false;
            AddTable(SYSxJobLog);
            MasterTableID = SYSxJobLog.ID;
            xSYSxJobLog.Momento.IsDataField = true;
            xSYSxJobLog.Momento.AllowEmpty = true;
            xSYSxJobLog.Relatorio.IsDataField = true;
            xSYSxJobLog.Relatorio.AllowEmpty = true;
            xSYSxJobLog.SYSxJobID.IsDataField = true;
            xSYSxJobLog.SYSxJobID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogEstadoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogEstadoID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogID.GeneratePK = true;
            xSYSxJobLog.SYSxJobLogID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogTipoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogTipoID.AllowEmpty = true;
            xSYSxJobLog.Relatorio.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Momento => xSYSxJobLog.Momento;
        public XORMField Relatorio => xSYSxJobLog.Relatorio;
        public XORMField SYSxJobID => xSYSxJobLog.SYSxJobID;
        public XORMField SYSxJobLogEstadoID => xSYSxJobLog.SYSxJobLogEstadoID;
        public XORMField SYSxJobLogID => xSYSxJobLog.SYSxJobLogID;
        public XORMField SYSxJobLogTipoID => xSYSxJobLog.SYSxJobLogTipoID;
        }
        #endregion XFields
        #region FechamentoFaturaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Momento
        {
            get
            {
                return (DateTime)Value[FechamentoFaturaSVC.xSYSxJobLog.Momento.ID];
            }
            set
            {
                Value[FechamentoFaturaSVC.xSYSxJobLog.Momento.ID] = value;
            }
        }
        public DateTime? oMomento
        {
            get
            {
                GetOldValue(FechamentoFaturaSVC.xSYSxJobLog.Momento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Byte[] Relatorio
        {
            get
            {
                return (Byte[])Value[FechamentoFaturaSVC.xSYSxJobLog.Relatorio.ID];
            }
            set
            {
                Value[FechamentoFaturaSVC.xSYSxJobLog.Relatorio.ID] = value;
            }
        }
        public Byte[]? oRelatorio
        {
            get
            {
                GetOldValue(FechamentoFaturaSVC.xSYSxJobLog.Relatorio, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public Guid SYSxJobID
        {
            get
            {
                return (Guid)Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobID.ID];
            }
            set
            {
                Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobID.ID] = value;
            }
        }
        public Guid? oSYSxJobID
        {
            get
            {
                GetOldValue(FechamentoFaturaSVC.xSYSxJobLog.SYSxJobID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxJobLogEstadoID
        {
            get
            {
                return (Int16)Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID];
            }
            set
            {
                Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogEstadoID
        {
            get
            {
                GetOldValue(FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int64 SYSxJobLogID
        {
            get
            {
                return (Int64)Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogID.ID];
            }
            set
            {
                Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogID.ID] = value;
            }
        }
        public Int64? oSYSxJobLogID
        {
            get
            {
                GetOldValue(FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogID, out Object ovlr);
                return (Int64?)ovlr;
            }
        }

        public Int16 SYSxJobLogTipoID
        {
            get
            {
                return (Int16)Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogTipoID.ID];
            }
            set
            {
                Value[FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogTipoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogTipoID
        {
            get
            {
                GetOldValue(FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FechamentoFaturaSVC.XTuple

        #region FechamentoFaturaSVC.XRule
        public abstract class XRule : XServiceRule<FechamentoFaturaSVC.XDataSet, FechamentoFaturaSVC, FechamentoFaturaSVC.XTuple>
        {
        }
        #endregion FechamentoFaturaSVC.XRule

        #region FechamentoFaturaSVC.XDataSet

        public class XDataSet : XDataSet<FechamentoFaturaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FechamentoFaturaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FechamentoFaturaSVC.XTuple> where T : XDataTuple
        {

            public Guid Momento => FechamentoFaturaSVC.xSYSxJobLog.Momento.ID;
            public Guid Relatorio => FechamentoFaturaSVC.xSYSxJobLog.Relatorio.ID;
            public Guid SYSxJobID => FechamentoFaturaSVC.xSYSxJobLog.SYSxJobID.ID;
            public Guid SYSxJobLogEstadoID => FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID;
            public Guid SYSxJobLogID => FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogID.ID;
            public Guid SYSxJobLogTipoID => FechamentoFaturaSVC.xSYSxJobLog.SYSxJobLogTipoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(FechamentoFaturaSVC.XDataSet);
            }

        }
        #endregion FechamentoFaturaSVC.XDataSet

        [Guid(FechamentoFaturaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FechamentoFaturaSVC))]
        protected class _Service : Service<FechamentoFaturaSVC, XDataSet, XTuple>
        {
            public const String sCID = "A6756F96-3DDA-4C8E-B42A-11E301179778";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FechamentoFaturaSVC, XDataSet, XTuple>, XService
             where TModel : FechamentoFaturaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}