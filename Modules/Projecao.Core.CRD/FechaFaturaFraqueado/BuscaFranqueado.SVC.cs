//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.FechaFaturaFraqueado
{
    [XRegister(typeof(BuscaFranqueadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\FechaFaturaFraqueado\BuscaFranqueado.dssvc")]
    public class BuscaFranqueadoSVC : XSVCModel
    {
        #region BuscaFranqueadoFilterFRM

        [XRegister(typeof(BuscaFranqueadoFilterFRM), sCID)]
        public class BuscaFranqueadoFilterFRM : XFRMModel
        {
            public const String sCID = "42DB5DB8-90E4-422E-8775-337A2F26C22D";
            static BuscaFranqueadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public BuscaFranqueadoFilterFRM()
            {
                ID = gCID;
                Name = "BuscaFranqueadoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion BuscaFranqueadoFilterFRM

        public const String sCID = "69887BB5-4E82-4232-9733-1202000C3654";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxPontoVenda_CRDxPontoVendaID; // SYSxPessoa.SYSxPessoaID --> CRDxPontoVenda.CRDxPontoVendaID

        #region xCRDxPontoVenda 
        public class xCRDxPontoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("119B5741-A3A8-4307-9F7D-E73376DC156F");

            public xCRDxPontoVenda()
            {
                Name = "CRDxPontoVenda";
                Alias = "CRDxPontoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.gCID;

                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Items.Add(TaxaAdministracao, TaxaAdministracao.ID);
                TaxaAdministracao.Owner = this;
                TaxaAdministracao.OwnerID = ID;
                TaxaAdministracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(Inclusao, Inclusao.ID);
                Inclusao.Owner = this;
                Inclusao.OwnerID = ID;
                Inclusao.TableName = Name;
                Items.Add(SYSxFranqueadorID, SYSxFranqueadorID.ID);
                SYSxFranqueadorID.Owner = this;
                SYSxFranqueadorID.OwnerID = ID;
                SYSxFranqueadorID.TableName = Name;
                Items.Add(DataChave, DataChave.ID);
                DataChave.Owner = this;
                DataChave.OwnerID = ID;
                DataChave.TableName = Name;
                Items.Add(ChaveSeguranca, ChaveSeguranca.ID);
                ChaveSeguranca.Owner = this;
                ChaveSeguranca.OwnerID = ID;
                ChaveSeguranca.TableName = Name;
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "Sigla";
            }

            public static XORMFaceField CRDxPontoVendaID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.CRDxPontoVendaID, new Guid("A1EE929F-412B-4F70-96BD-67295F3EAB13"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Fechamento, new Guid("6D49B64A-666D-44C6-88B5-653CDB7B3F10"), "Fechamento", "Dia de Fechamento");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Pagamento, new Guid("0EB60C88-D4BD-40E0-B98C-895B01F1971D"), "Pagamento", "Dia de Pagamento");
            public static XORMDecimalField TaxaAdministracao = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.TaxaAdministracao, new Guid("DFF3E0D2-9F99-4DB1-B770-3A4344509C9C"), "TaxaAdministracao", "Taxa de Administração");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxEstadoID, new Guid("BAFDE657-4649-40F8-A4F5-F496C240F6F1"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inclusao = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Inclusao, new Guid("CE211B49-450D-41B6-A108-F732075A373C"), "Inclusao", "Inclusão");
            public static XORMFKField SYSxFranqueadorID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxFranqueadorID, new Guid("5FA1DE0C-63EB-428B-921C-865C3D66F585"), "SYSxFranqueadorID", "Franqueador");
            public static XORMDateTimeField DataChave = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.DataChave, new Guid("B09C0748-F9F3-411B-A4B9-F283B73FC8B7"), "DataChave", "Data da Chave");
            public static XORMField ChaveSeguranca = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.ChaveSeguranca, new Guid("06F16C53-A240-4F0B-B838-71767D059152"), "ChaveSeguranca", "Change de Segurança");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Sigla, new Guid("BCEE13D2-ECC1-4A35-945F-4104FF61C0D3"), "Sigla", "Sigla");
        }
        #endregion xCRDxPontoVenda 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("4D401EBD-00BD-4685-9D79-A7200108B702");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("4F2CC3A6-9A6B-4335-978E-FABD669F786E"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("745037A4-5B9A-4BEC-95B3-E130BE2D4BC2"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        public xCRDxPontoVenda CRDxPontoVenda;
        public xSYSxPessoa SYSxPessoa;

        public BuscaFranqueadoSVC()
        {
            TupleType = typeof(BuscaFranqueadoSVC.XTuple);
            DataSetType = typeof(BuscaFranqueadoSVC.XDataSet);
            ServiceRuleCID = new Guid("6C548552-A573-44BA-B89B-3EE7B889D921");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("69887BB5-4E82-4232-9733-1202000C3654");
            Name = "BuscaFranqueado";
            Title = "Busca Franqueado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xSYSxPessoa.Nome.ID, xCRDxPontoVenda.CRDxPontoVendaID.ID, xCRDxPontoVenda.Sigla.ID, xCRDxPontoVenda.Fechamento.ID };
            PKField = xCRDxPontoVenda.CRDxPontoVendaID.ID;
            ConfigTableID = new Guid("71F309BB-69A1-41B9-A07C-B3A63A4295D3");
            MasterRuleCID = new Guid("6C548552-A573-44BA-B89B-3EE7B889D921");
            CRDxPontoVenda = new xCRDxPontoVenda();
            CRDxPontoVenda.IsReadOnly = true;
            AddTable(CRDxPontoVenda);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxPontoVenda.ID;
            SYSxPessoa_SYSxPessoaID_CRDxPontoVenda_CRDxPontoVendaID = AddReference(new XSVCReference(new Guid("5DB5CA07-CE9A-4DA7-81C6-8EF2BE38E769"), "FK_5DB5CA07CE9A4DA781C68EF2BE38E769", BuscaFranqueadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, BuscaFranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxPontoVenda.CRDxPontoVendaID
            xCRDxPontoVenda.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxPontoVenda.CRDxPontoVendaID.IsDataField = true;
            xCRDxPontoVenda.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxPontoVenda.Fechamento.IsReadOnly = true;
            xCRDxPontoVenda.Fechamento.IsDataField = true;
            xCRDxPontoVenda.Fechamento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxPontoVenda.Sigla.IsReadOnly = true;
            xCRDxPontoVenda.Sigla.Length = 25;
            xCRDxPontoVenda.Sigla.IsDataField = true;
            xCRDxPontoVenda.Sigla.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxPontoVendaID => xCRDxPontoVenda.CRDxPontoVendaID;
        public XORMField Fechamento => xCRDxPontoVenda.Fechamento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Sigla => xCRDxPontoVenda.Sigla;
        }
        #endregion XFields
        #region BuscaFranqueadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[BuscaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[BuscaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(BuscaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[BuscaFranqueadoSVC.xCRDxPontoVenda.Fechamento.ID];
            }
            set
            {
                Value[BuscaFranqueadoSVC.xCRDxPontoVenda.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(BuscaFranqueadoSVC.xCRDxPontoVenda.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[BuscaFranqueadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[BuscaFranqueadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(BuscaFranqueadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Sigla
        {
            get
            {
                return (String)Value[BuscaFranqueadoSVC.xCRDxPontoVenda.Sigla.ID];
            }
            set
            {
                Value[BuscaFranqueadoSVC.xCRDxPontoVenda.Sigla.ID] = value;
            }
        }
        public String? oSigla
        {
            get
            {
                GetOldValue(BuscaFranqueadoSVC.xCRDxPontoVenda.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion BuscaFranqueadoSVC.XTuple

        #region BuscaFranqueadoSVC.XRule
        public abstract class XRule : XServiceRule<BuscaFranqueadoSVC.XDataSet, BuscaFranqueadoSVC, BuscaFranqueadoSVC.XTuple>
        {
        }
        #endregion BuscaFranqueadoSVC.XRule

        #region BuscaFranqueadoSVC.XDataSet

        public class XDataSet : XDataSet<BuscaFranqueadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(BuscaFranqueadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<BuscaFranqueadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxPontoVendaID => BuscaFranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID;
            public Guid Fechamento => BuscaFranqueadoSVC.xCRDxPontoVenda.Fechamento.ID;
            public Guid Nome => BuscaFranqueadoSVC.xSYSxPessoa.Nome.ID;
            public Guid Sigla => BuscaFranqueadoSVC.xCRDxPontoVenda.Sigla.ID;

            public XDataSet()
            {
                DataSetType = typeof(BuscaFranqueadoSVC.XDataSet);
            }

        }
        #endregion BuscaFranqueadoSVC.XDataSet

        [Guid(BuscaFranqueadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(BuscaFranqueadoSVC))]
        protected class _Service : Service<BuscaFranqueadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "68FF993D-E86B-4966-B5CD-F378A67D528B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<BuscaFranqueadoSVC, XDataSet, XTuple>, XService
             where TModel : BuscaFranqueadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}