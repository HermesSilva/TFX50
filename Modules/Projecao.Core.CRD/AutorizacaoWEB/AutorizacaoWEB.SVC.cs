//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.AutorizacaoWEB
{
    [XRegister(typeof(AutorizacaoWEBSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\AutorizacaoWEB\AutorizacaoWEB.dssvc")]
    public class AutorizacaoWEBSVC : XSVCModel
    {
        #region AutorizacaoWEBFilterFRM

        [XRegister(typeof(AutorizacaoWEBFilterFRM), sCID)]
        public class AutorizacaoWEBFilterFRM : XFRMModel
        {
            public const String sCID = "492BAC59-6A50-4887-9CE3-F4838FC83D0F";
            static AutorizacaoWEBFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AutorizacaoWEBFilterFRM()
            {
                ID = gCID;
                Name = "AutorizacaoWEBFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 858, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(CRDxCartaoLogTipoID);
                CRDxCartaoLogTipoID.ForceRW = true;
                CRDxCartaoLogTipoID.CanInsert = true;
                CRDxCartaoLogTipoID.CanUpdate = true;
                CRDxCartaoLogTipoID.RowCount = 1;
                CRDxCartaoLogTipoID.ColCount = 7;
                CRDxCartaoLogTipoID.RowCountSmall = 1;
                CRDxCartaoLogTipoID.ColCountSmall = 7;
                CRDxCartaoLogTipoID.IsHidden = false;
                CRDxCartaoLogTipoID.IsHiddenSmall = false;
                CRDxCartaoLogTipoID.AdditionalTitle = "";
                CRDxCartaoLogTipoID.DataSourceID = global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.gCID;
                CRDxCartaoLogTipoID.Location = 1;
                CRDxCartaoLogTipoID.EditorCID = new Guid("AC111493-AD7B-4F74-A0E8-DF0E0BB6B74A");
                CRDxCartaoLogTipoID.FormImplace = true;
                CRDxCartaoLogTipoID.Operator = XOperator.EqualTo;
                CRDxCartaoLogTipoID.JustifyHeight = false;
                CRDxCartaoLogTipoID.AllowEmpty = true;
                CRDxCartaoLogTipoID.FontColor = "#000000";
                CRDxCartaoLogTipoID.FontStyle = XFontStyle.Normal;
                CRDxCartaoLogTipoID.ShowFooter = false;
                CRDxCartaoLogTipoID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                CRDxCartaoLogTipoID.Scale = 0;
                CRDxCartaoLogTipoID.Length = 0;
                CRDxCartaoLogTipoID.SearchAction = XSearchAction.Default;
                CRDxCartaoLogTipoID.TypeID = XInt16.CID;
                CRDxCartaoLogTipoID.AdditionalFieldsID = new Guid[] {  };
                CRDxCartaoLogTipoID.AdditionalDataFieldsID = new Guid[] {  };
                CRDxCartaoLogTipoID.TargetFilterFieldID = new Guid[] {  };
                CRDxCartaoLogTipoID.SourceFilterFieldID = new Guid[] {  };
                CRDxCartaoLogTipoID.TargetDisplayFieldID = new Guid[] { new Guid("D0465AFB-F827-4539-BBED-B3A97DE7ECEE") };
                CRDxCartaoLogTipoID.SourceDisplayFieldID = new Guid[] { new Guid("49E8F3F9-D585-4316-9A3D-90701EB8DF0B") };
                CRDxCartaoLogTipoID.DataSourceID = global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.gCID;
                CRDxCartaoLogTipoID.AutoLoad = false;
                CRDxCartaoLogTipoID.FilterInative = true;
                CRDxCartaoLogTipoID.IsAnswer = false;
                CRDxCartaoLogTipoID.AllowMultiSelect = false;
                AddItem(DataInicio);
                DataInicio.ForceRW = true;
                DataInicio.CanInsert = true;
                DataInicio.CanUpdate = true;
                DataInicio.RowCount = 1;
                DataInicio.ColCount = 6;
                DataInicio.RowCountSmall = 1;
                DataInicio.ColCountSmall = 6;
                DataInicio.IsHidden = false;
                DataInicio.IsHiddenSmall = false;
                DataInicio.AdditionalTitle = "";
                DataInicio.Location = 2;
                DataInicio.EditorCID = new Guid("D56E8E17-9D09-4FE9-9A30-A6AA5865ABC6");
                DataInicio.FormImplace = true;
                DataInicio.Operator = XOperator.GreaterThan;
                DataInicio.JustifyHeight = false;
                DataInicio.AllowEmpty = true;
                DataInicio.FontColor = "#000000";
                DataInicio.FontStyle = XFontStyle.Normal;
                DataInicio.ShowFooter = false;
                DataInicio.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataInicio.Scale = 0;
                DataInicio.Length = 0;
                DataInicio.SearchAction = XSearchAction.Default;
                DataInicio.TypeID = XDateTime.CID;
                DataInicio.AdditionalFieldsID = new Guid[] {  };
                DataInicio.AdditionalDataFieldsID = new Guid[] {  };
                DataInicio.TargetFilterFieldID = new Guid[] {  };
                DataInicio.SourceFilterFieldID = new Guid[] {  };
                DataInicio.TargetDisplayFieldID = new Guid[] {  };
                DataInicio.SourceDisplayFieldID = new Guid[] {  };
                DataInicio.AutoLoad = false;
                DataInicio.FilterInative = true;
                DataInicio.IsAnswer = false;
                DataInicio.AllowMultiSelect = false;
                AddItem(DataFim);
                DataFim.ForceRW = true;
                DataFim.CanInsert = true;
                DataFim.CanUpdate = true;
                DataFim.RowCount = 1;
                DataFim.ColCount = 6;
                DataFim.RowCountSmall = 1;
                DataFim.ColCountSmall = 6;
                DataFim.IsHidden = false;
                DataFim.IsHiddenSmall = false;
                DataFim.AdditionalTitle = "";
                DataFim.Location = 3;
                DataFim.EditorCID = new Guid("D56E8E17-9D09-4FE9-9A30-A6AA5865ABC6");
                DataFim.FormImplace = true;
                DataFim.Operator = XOperator.LessThan;
                DataFim.JustifyHeight = false;
                DataFim.AllowEmpty = true;
                DataFim.FontColor = "#000000";
                DataFim.FontStyle = XFontStyle.Normal;
                DataFim.ShowFooter = false;
                DataFim.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataFim.Scale = 0;
                DataFim.Length = 0;
                DataFim.SearchAction = XSearchAction.Default;
                DataFim.TypeID = XDateTime.CID;
                DataFim.AdditionalFieldsID = new Guid[] {  };
                DataFim.AdditionalDataFieldsID = new Guid[] {  };
                DataFim.TargetFilterFieldID = new Guid[] {  };
                DataFim.SourceFilterFieldID = new Guid[] {  };
                DataFim.TargetDisplayFieldID = new Guid[] {  };
                DataFim.SourceDisplayFieldID = new Guid[] {  };
                DataFim.AutoLoad = false;
                DataFim.FilterInative = true;
                DataFim.IsAnswer = false;
                DataFim.AllowMultiSelect = false;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 13;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 13;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 4;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField CRDxCartaoLogTipoID = new XFRMField(new Guid("1E4E17A8-BAB6-47ED-81DB-D38063827407"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão", XInt16.CID, 1, 7, false, gCID, null, new Guid("24DAB3FB-E98C-4537-B68E-621A5B9F5DAA")); // Int16;
            public XFRMField DataInicio = new XFRMField(new Guid("21EF62EC-CF28-4E27-83F7-427B16D59179"), "DataInicio", "Data Início", XDateTime.CID, 1, 6, false, gCID, null, new Guid("9050F994-2772-43B0-82CB-4B5ABE0F9FB3")); // DateTime;
            public XFRMField DataFim = new XFRMField(new Guid("1040A312-5803-4AAD-8460-AC82B95847D2"), "DataFim", "Data Fim", XDateTime.CID, 1, 6, false, gCID, null, new Guid("9050F994-2772-43B0-82CB-4B5ABE0F9FB3")); // DateTime;
            public XFRMField Nome = new XFRMField(new Guid("20821A6F-15C7-49FC-8DE7-270D86CA42DB"), "Nome", "Nome do Cliente", XString.CID, 1, 13, false, gCID, null, new Guid("0494B023-EFC8-40EE-BDCE-4A0EBD4D3451")); // String;
            public static class Fields
            {
                public static XFieldInfo CRDxCartaoLogTipoID = new XFieldInfo(new Guid("1E4E17A8-BAB6-47ED-81DB-D38063827407"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão", typeof(Int16));
                public static XFieldInfo DataInicio = new XFieldInfo(new Guid("21EF62EC-CF28-4E27-83F7-427B16D59179"), "DataInicio", "Data Início", typeof(DateTime));
                public static XFieldInfo DataFim = new XFieldInfo(new Guid("1040A312-5803-4AAD-8460-AC82B95847D2"), "DataFim", "Data Fim", typeof(DateTime));
                public static XFieldInfo Nome = new XFieldInfo(new Guid("20821A6F-15C7-49FC-8DE7-270D86CA42DB"), "Nome", "Nome do Cliente", typeof(String));
            }
        }

        #endregion AutorizacaoWEBFilterFRM

        public const String sCID = "AF7591E1-6BBF-412D-BCE1-7CFE51480579";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID; // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
        public static XSVCReference CRDxConveniado_CRDxConveniadoID_CRDxCartao_CRDxConveniadoID; // CRDxConveniado.CRDxConveniadoID --> CRDxCartao.CRDxConveniadoID
        public static XSVCReference CRDxCartaoLog_CRDxCartaoLogTipoID_CRDxCartaoLogTipo_CRDxCartaoLogTipoID; // CRDxCartaoLog.CRDxCartaoLogTipoID --> CRDxCartaoLogTipo.CRDxCartaoLogTipoID
        public static XSVCReference CRDxCartaoLog_CRDxCartaoID_CRDxCartao_CRDxCartaoID; // CRDxCartaoLog.CRDxCartaoID --> CRDxCartao.CRDxCartaoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID; // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID

        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("2EE7E8C0-F701-4263-99C0-BA261AC0EF5F");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("2FA473DA-8582-49FD-8E0D-EA9A54F90F61"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("5C56AAA7-0DF3-4DFF-89FE-77359C5A88D7"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("90461ED2-FDFF-4DD5-B9BD-4BF460F377BF"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("4E90BB61-EE7E-4717-B1F7-419387052890"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("2FA7F4DF-A3F1-48C8-A009-8C0E16B582AE"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("58218E75-9D29-4111-A9F7-690C40F15ECE"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("C873CB8D-70AF-467F-BA4D-56214D5E37D7"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("39C587BC-F4CF-45BF-B204-5964A318EDC7");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("0494B023-EFC8-40EE-BDCE-4A0EBD4D3451"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("D0E6B90B-2D41-4F32-A19D-0D92865D0BB6"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxCartaoLogTipo 
        public class xCRDxCartaoLogTipo : XSVCTable
        {

            public static Guid gCID => new Guid("75994818-7AED-43D8-81D9-D30418AAB525");

            public xCRDxCartaoLogTipo()
            {
                Name = "CRDxCartaoLogTipo";
                Alias = "CRDxCartaoLogTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.gCID;

                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "Tipo";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
            }

            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.Tipo, new Guid("D0465AFB-F827-4539-BBED-B3A97DE7ECEE"), "Tipo", "Tipo");
            public static XORMPKField CRDxCartaoLogTipoID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.CRDxCartaoLogTipoID, new Guid("F0C8CF8D-19BA-41E5-B4DA-1ED5A991C868"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
        }
        #endregion xCRDxCartaoLogTipo 


        #region xCRDxCartaoLog 
        public class xCRDxCartaoLog : XSVCTable
        {

            public static Guid gCID => new Guid("8DADA48D-FB62-4FC2-9951-358724071B6E");

            public xCRDxCartaoLog()
            {
                Name = "CRDxCartaoLog";
                Alias = "CRDxCartaoLog";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.gCID;

                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                CRDxCartaoID.Alias = "CRDxCartaoID";
                Items.Add(CRDxCartaoLogID, CRDxCartaoLogID.ID);
                CRDxCartaoLogID.Owner = this;
                CRDxCartaoLogID.OwnerID = ID;
                CRDxCartaoLogID.TableName = Name;
                CRDxCartaoLogID.Alias = "CRDxCartaoLogID";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Mensagem.Alias = "Mensagem";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
                Items.Add(NumeroVenda, NumeroVenda.ID);
                NumeroVenda.Owner = this;
                NumeroVenda.OwnerID = ID;
                NumeroVenda.TableName = Name;
                NumeroVenda.Alias = "NumeroVenda";
                Items.Add(CRDxCartaoLogOrigemID, CRDxCartaoLogOrigemID.ID);
                CRDxCartaoLogOrigemID.Owner = this;
                CRDxCartaoLogOrigemID.OwnerID = ID;
                CRDxCartaoLogOrigemID.TableName = Name;
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Origem.Alias = "Origem";
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
            }

            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoID, new Guid("6C5400B9-77EA-4E5D-9178-A531B8A24441"), "CRDxCartaoID", "Cartão");
            public static XORMFaceField CRDxCartaoLogID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogID, new Guid("84659C04-01E5-4DEB-93A5-FA7B93E42E4D"), "CRDxCartaoLogID", "Número da Transação");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxPontoVendaID, new Guid("75A41E08-4009-458E-8E89-F067C6A8692A"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Mensagem, new Guid("DB258BD5-9B78-4A48-9635-DA82D11621B4"), "Mensagem", "Mensagem");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Data, new Guid("9050F994-2772-43B0-82CB-4B5ABE0F9FB3"), "Data", "Data Ocorrência");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Valor, new Guid("D9236BC3-BDF1-471A-94F6-EF9EC85B3839"), "Valor", "Valor");
            public static XORMFKField CRDxCartaoLogTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogTipoID, new Guid("24DAB3FB-E98C-4537-B68E-621A5B9F5DAA"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
            public static XORMField NumeroVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.NumeroVenda, new Guid("9D45EC9C-F062-4541-A656-10AC6C7A7D39"), "NumeroVenda", "Número da Venda");
            public static XORMFKField CRDxCartaoLogOrigemID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogOrigemID, new Guid("D2255CD5-E7C8-4D5D-AE95-4363FC1FF8AF"), "CRDxCartaoLogOrigemID", "Log de Atividades");
            public static XORMField Origem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Origem, new Guid("430CDF40-91C9-49B4-9E5A-50A81EDC811D"), "Origem", "Origem");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Desconto, new Guid("2DC54590-A418-4660-B6E2-AEBBBC1AC99D"), "Desconto", "Desconto");
        }
        #endregion xCRDxCartaoLog 


        #region xCRDxCartaoVenda 
        public class xCRDxCartaoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("B80AF7A5-E9F1-43E8-BCC4-E2EDB4FC67D2");

            public xCRDxCartaoVenda()
            {
                Name = "CRDxCartaoVenda";
                Alias = "CRDxCartaoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.gCID;

                Items.Add(CRDxCartaoVendaID, CRDxCartaoVendaID.ID);
                CRDxCartaoVendaID.Owner = this;
                CRDxCartaoVendaID.OwnerID = ID;
                CRDxCartaoVendaID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(DadosVenda, DadosVenda.ID);
                DadosVenda.Owner = this;
                DadosVenda.OwnerID = ID;
                DadosVenda.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(FaturadoFranqueado, FaturadoFranqueado.ID);
                FaturadoFranqueado.Owner = this;
                FaturadoFranqueado.OwnerID = ID;
                FaturadoFranqueado.TableName = Name;
                Items.Add(FaturadoCartao, FaturadoCartao.ID);
                FaturadoCartao.Owner = this;
                FaturadoCartao.OwnerID = ID;
                FaturadoCartao.TableName = Name;
            }

            public static XORMPKField CRDxCartaoVendaID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoVendaID, new Guid("B99E3D0A-4C1B-4706-99CE-629C33EBD1E9"), "CRDxCartaoVendaID", "Venda por cartão");
            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoID, new Guid("F102E226-F6F0-4084-9291-5D44432A76EC"), "CRDxCartaoID", "Cartão");
            public static XORMField DadosVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.DadosVenda, new Guid("F69483C6-6DA0-4214-A2C9-5C76BE0B7420"), "DadosVenda", "Dado da venda");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.SYSxEstadoID, new Guid("A0B4DC01-EAE3-428A-A288-CCE3C61AF99F"), "SYSxEstadoID", "Estado");
            public static XORMField FaturadoFranqueado = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoFranqueado, new Guid("EECF8F71-1F74-4AD0-8E74-59FA617246DA"), "FaturadoFranqueado", "Faturado para Franqueado");
            public static XORMField FaturadoCartao = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoCartao, new Guid("12EE7FF3-F503-4E8F-882F-4FD7F369DB8A"), "FaturadoCartao", "Faturado para Cartão");
        }
        #endregion xCRDxCartaoVenda 


        #region xCRDxCartao 
        public class xCRDxCartao : XSVCTable
        {

            public static Guid gCID => new Guid("EC8735A5-7FDB-41BF-8CCA-5243BBF1952B");

            public xCRDxCartao()
            {
                Name = "CRDxCartao";
                Alias = "CRDxCartao";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(Vencimento, Vencimento.ID);
                Vencimento.Owner = this;
                Vencimento.OwnerID = ID;
                Vencimento.TableName = Name;
                Items.Add(Emissao, Emissao.ID);
                Emissao.Owner = this;
                Emissao.OwnerID = ID;
                Emissao.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFKField CRDxConveniadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxConveniadoID, new Guid("D9E54CD7-6CE2-4B03-9565-AAE64D153763"), "CRDxConveniadoID", "Conveniado");
            public static XORMFaceField CRDxCartaoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoID, new Guid("83602299-D1AB-40D3-8D85-B223601AA97D"), "CRDxCartaoID", "Cartão");
            public static XORMDateField Vencimento = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Vencimento, new Guid("043ACB14-9ABA-450F-AE20-E6C19C431E08"), "Vencimento", "Vencimento");
            public static XORMDateField Emissao = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Emissao, new Guid("DD0153DE-132E-4AF2-A7B6-377D941F16D9"), "Emissao", "Emissão");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Numero, new Guid("E6D2C5CF-5363-44ED-ADB2-E96A9BDDB6D1"), "Numero", "Número");
            public static XORMFKField CRDxCartaoEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoEstadoID, new Guid("C1A535A6-20C2-40AB-A0BD-C6734BDE0D3C"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartao 


        public xCRDxCartao CRDxCartao;
        public xCRDxCartaoLog CRDxCartaoLog;
        public xCRDxCartaoLogTipo CRDxCartaoLogTipo;
        public xCRDxCartaoVenda CRDxCartaoVenda;
        public xCRDxConveniado CRDxConveniado;
        public xSYSxPessoa SYSxPessoa;

        public AutorizacaoWEBSVC()
        {
            TupleType = typeof(AutorizacaoWEBSVC.XTuple);
            DataSetType = typeof(AutorizacaoWEBSVC.XDataSet);
            ServiceRuleCID = new Guid("ED133D55-C9BF-4330-8985-4A90D6024116");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("AF7591E1-6BBF-412D-BCE1-7CFE51480579");
            Name = "AutorizacaoWEB";
            Title = "Autorização WEB";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("492BAC59-6A50-4887-9CE3-F4838FC83D0F");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLogTipo.Tipo.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.Valor.ID, xCRDxCartaoLog.Origem.ID, xSYSxPessoa.Nome.ID, xCRDxCartaoVenda.SYSxEstadoID.ID };
            DataSetFields = new Guid[] { xCRDxCartaoLog.CRDxCartaoID.ID, xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLog.CRDxPontoVendaID.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.Mensagem.ID, xCRDxCartaoLog.NumeroVenda.ID, xCRDxCartaoLog.Origem.ID, xCRDxCartaoLog.Valor.ID, xCRDxCartaoLogTipo.Tipo.ID, xCRDxCartaoVenda.SYSxEstadoID.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxCartaoLog.CRDxCartaoLogID.ID;
            ConfigTableID = new Guid("F49233DE-4561-4573-895B-9C2421492A52");
            StateField = xCRDxCartaoVenda.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("ED133D55-C9BF-4330-8985-4A90D6024116");
            CRDxCartao = new xCRDxCartao();
            CRDxCartao.IsReadOnly = true;
            AddTable(CRDxCartao);
            CRDxCartaoLog = new xCRDxCartaoLog();
            CRDxCartaoLog.IsReadOnly = true;
            AddTable(CRDxCartaoLog);
            CRDxCartaoLogTipo = new xCRDxCartaoLogTipo();
            CRDxCartaoLogTipo.IsReadOnly = true;
            AddTable(CRDxCartaoLogTipo);
            CRDxCartaoVenda = new xCRDxCartaoVenda();
            CRDxCartaoVenda.IsReadOnly = true;
            AddTable(CRDxCartaoVenda);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxCartaoLog.ID;
            CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID = AddReference(new XSVCReference(new Guid("148256E5-025A-40AA-BEF9-8EE17B6BE9C1"), "FK_148256E5025A40AABEF98EE17B6BE9C1", AutorizacaoWEBSVC.xCRDxCartaoVenda.gCID, xCRDxCartaoVenda.CRDxCartaoVendaID.ID, AutorizacaoWEBSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogID.ID, XJoinType.Left)); // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
            CRDxConveniado_CRDxConveniadoID_CRDxCartao_CRDxConveniadoID = AddReference(new XSVCReference(new Guid("2207B991-8C01-4A03-BB18-E6A3862ED350"), "FK_2207B9918C014A03BB18E6A3862ED350", AutorizacaoWEBSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConveniadoID.ID, AutorizacaoWEBSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxConveniadoID.ID, XJoinType.Inner)); // CRDxConveniado.CRDxConveniadoID --> CRDxCartao.CRDxConveniadoID
            CRDxCartaoLog_CRDxCartaoLogTipoID_CRDxCartaoLogTipo_CRDxCartaoLogTipoID = AddReference(new XSVCReference(new Guid("D95855AA-BF2D-4C6C-A29F-83EAF87D47E3"), "FK_D95855AABF2D4C6CA29F83EAF87D47E3", AutorizacaoWEBSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogTipoID.ID, AutorizacaoWEBSVC.xCRDxCartaoLogTipo.gCID, xCRDxCartaoLogTipo.CRDxCartaoLogTipoID.ID, XJoinType.Inner)); // CRDxCartaoLog.CRDxCartaoLogTipoID --> CRDxCartaoLogTipo.CRDxCartaoLogTipoID
            CRDxCartaoLog_CRDxCartaoID_CRDxCartao_CRDxCartaoID = AddReference(new XSVCReference(new Guid("DF104C35-CADD-4CB1-9BD2-3F6FFDD2BFF4"), "FK_DF104C35CADD4CB19BD23F6FFDD2BFF4", AutorizacaoWEBSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoID.ID, AutorizacaoWEBSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxCartaoID.ID, XJoinType.Inner)); // CRDxCartaoLog.CRDxCartaoID --> CRDxCartao.CRDxCartaoID
            SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID = AddReference(new XSVCReference(new Guid("F900B4DC-8F0F-485F-81E5-80AFC146783F"), "FK_F900B4DC8F0F485F81E580AFC146783F", AutorizacaoWEBSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, AutorizacaoWEBSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID
            xCRDxCartaoLog.CRDxCartaoID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoID.AllowEmpty = true;
            xCRDxCartaoLog.CRDxCartaoLogID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoLogID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoLogID.AllowEmpty = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsDataField = true;
            xCRDxCartaoLog.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxCartaoLog.Data.IsReadOnly = true;
            xCRDxCartaoLog.Data.IsDataField = true;
            xCRDxCartaoLog.Data.AllowEmpty = true;
            xCRDxCartaoLog.Mensagem.IsReadOnly = true;
            xCRDxCartaoLog.Mensagem.IsDataField = true;
            xCRDxCartaoLog.Mensagem.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxCartaoLog.NumeroVenda.IsReadOnly = true;
            xCRDxCartaoLog.NumeroVenda.Length = 50;
            xCRDxCartaoLog.NumeroVenda.IsDataField = true;
            xCRDxCartaoLog.NumeroVenda.AllowEmpty = true;
            xCRDxCartaoLog.Origem.IsReadOnly = true;
            xCRDxCartaoLog.Origem.Length = 15;
            xCRDxCartaoLog.Origem.IsDataField = true;
            xCRDxCartaoLog.Origem.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsReadOnly = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxCartaoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxCartaoLogTipo.Tipo.IsReadOnly = true;
            xCRDxCartaoLogTipo.Tipo.Length = 54;
            xCRDxCartaoLogTipo.Tipo.IsDataField = true;
            xCRDxCartaoLogTipo.Tipo.AllowEmpty = true;
            xCRDxCartaoLog.Valor.IsReadOnly = true;
            xCRDxCartaoLog.Valor.Length = 20;
            xCRDxCartaoLog.Valor.Scale = 2;
            xCRDxCartaoLog.Valor.IsDataField = true;
            xCRDxCartaoLog.Valor.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxCartaoID => xCRDxCartaoLog.CRDxCartaoID;
        public XORMField CRDxCartaoLogID => xCRDxCartaoLog.CRDxCartaoLogID;
        public XORMField CRDxPontoVendaID => xCRDxCartaoLog.CRDxPontoVendaID;
        public XORMField Data => xCRDxCartaoLog.Data;
        public XORMField Mensagem => xCRDxCartaoLog.Mensagem;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NumeroVenda => xCRDxCartaoLog.NumeroVenda;
        public XORMField Origem => xCRDxCartaoLog.Origem;
        public XORMField SYSxEstadoID => xCRDxCartaoVenda.SYSxEstadoID;
        public XORMField Tipo => xCRDxCartaoLogTipo.Tipo;
        public XORMField Valor => xCRDxCartaoLog.Valor;
        }
        #endregion XFields
        #region AutorizacaoWEBSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxCartaoID
        {
            get
            {
                return (Int32)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoID.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoID
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 CRDxCartaoLogID
        {
            get
            {
                return (Int32)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoLogID
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoLogID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Data.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Mensagem
        {
            get
            {
                return (String)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Mensagem.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Mensagem.ID] = value;
            }
        }
        public String? oMensagem
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.Mensagem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AutorizacaoWEBSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroVenda
        {
            get
            {
                return (String)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.NumeroVenda.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.NumeroVenda.ID] = value;
            }
        }
        public String? oNumeroVenda
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.NumeroVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Origem
        {
            get
            {
                return (String)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Origem.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Origem.ID] = value;
            }
        }
        public String? oOrigem
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.Origem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AutorizacaoWEBSVC.xCRDxCartaoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Tipo
        {
            get
            {
                return (String)Value[AutorizacaoWEBSVC.xCRDxCartaoLogTipo.Tipo.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLogTipo.Tipo.ID] = value;
            }
        }
        public String? oTipo
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLogTipo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Valor.ID];
            }
            set
            {
                Value[AutorizacaoWEBSVC.xCRDxCartaoLog.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(AutorizacaoWEBSVC.xCRDxCartaoLog.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AutorizacaoWEBSVC.XTuple

        #region AutorizacaoWEBSVC.XRule
        public abstract class XRule : XServiceRule<AutorizacaoWEBSVC.XDataSet, AutorizacaoWEBSVC, AutorizacaoWEBSVC.XTuple>
        {
        }
        #endregion AutorizacaoWEBSVC.XRule

        #region AutorizacaoWEBSVC.XDataSet

        public class XDataSet : XDataSet<AutorizacaoWEBSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AutorizacaoWEBSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AutorizacaoWEBSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxCartaoID => AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoID.ID;
            public Guid CRDxCartaoLogID => AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID;
            public Guid CRDxPontoVendaID => AutorizacaoWEBSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID;
            public Guid Data => AutorizacaoWEBSVC.xCRDxCartaoLog.Data.ID;
            public Guid Mensagem => AutorizacaoWEBSVC.xCRDxCartaoLog.Mensagem.ID;
            public Guid Nome => AutorizacaoWEBSVC.xSYSxPessoa.Nome.ID;
            public Guid NumeroVenda => AutorizacaoWEBSVC.xCRDxCartaoLog.NumeroVenda.ID;
            public Guid Origem => AutorizacaoWEBSVC.xCRDxCartaoLog.Origem.ID;
            public Guid SYSxEstadoID => AutorizacaoWEBSVC.xCRDxCartaoVenda.SYSxEstadoID.ID;
            public Guid Tipo => AutorizacaoWEBSVC.xCRDxCartaoLogTipo.Tipo.ID;
            public Guid Valor => AutorizacaoWEBSVC.xCRDxCartaoLog.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(AutorizacaoWEBSVC.XDataSet);
            }

        }
        #endregion AutorizacaoWEBSVC.XDataSet

        [Guid(AutorizacaoWEBSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AutorizacaoWEBSVC))]
        protected class _Service : Service<AutorizacaoWEBSVC, XDataSet, XTuple>
        {
            public const String sCID = "9CD193A5-C5DF-4A0E-9A50-7B2F2A5A08E9";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AutorizacaoWEBSVC, XDataSet, XTuple>, XService
             where TModel : AutorizacaoWEBSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}