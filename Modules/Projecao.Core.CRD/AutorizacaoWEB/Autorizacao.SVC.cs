//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.AutorizacaoWEB
{
    [XRegister(typeof(AutorizacaoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\AutorizacaoWEB\Autorizacao.dssvc")]
    public class AutorizacaoSVC : XSVCModel
    {
        #region AutorizacaoFilterFRM

        [XRegister(typeof(AutorizacaoFilterFRM), sCID)]
        public class AutorizacaoFilterFRM : XFRMModel
        {
            public const String sCID = "E66379C7-A8E9-4C1B-AA56-96F96B187CA4";
            static AutorizacaoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AutorizacaoFilterFRM()
            {
                ID = gCID;
                Name = "AutorizacaoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion AutorizacaoFilterFRM

        public const String sCID = "75CC6E87-CBD0-4000-BCD2-14EEAFE55D7F";
        public static Guid gCID = new Guid(sCID);

        public static readonly XORMParameterField Acao = new XORMParameterField(new Guid("2EF2F279-BEB1-4249-88DC-01B9A8D64808"), "Acao", "Ação", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField ChaveSeguranca = new XORMParameterField(new Guid("E1B9FD68-DD2A-4566-A94C-F4A984B532A5"), "ChaveSeguranca", "Chave de Segurança", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField CNPJPontoVenda = new XORMParameterField(new Guid("508E14C3-3D1F-45EB-BF32-28FF52A97C57"), "CNPJPontoVenda", "CNPJ do Ponto de Venda", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField ConvenioID = new XORMParameterField(new Guid("EF84FF57-61E8-4694-85F2-7A0F7F58AAC7"), "ConvenioID", "ID do Convênio", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField ConvenioTipo = new XORMParameterField(new Guid("84BFE9AD-6260-4EDD-9ABE-8DB30BF5DE99"), "ConvenioTipo", "Tipo do Convênio", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Dados = new XORMParameterField(new Guid("CBC3FCCA-207C-4464-ACCE-72423AA6F326"), "Dados", "Dados", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField DadosVenda = new XORMParameterField(new Guid("C645EE12-1EE9-4A0C-8858-6129AF8973A0"), "DadosVenda", "Dados da Venda", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Documento = new XORMParameterField(new Guid("24CAF7BE-4C23-4545-B8F9-28FE278F811F"), "Documento", "Documento do Cliente", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField DocumentoTipo = new XORMParameterField(new Guid("285261CE-814F-459B-83B2-99FB90859130"), "DocumentoTipo", "Tipo de Documento", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField GrupoProduto = new XORMParameterField(new Guid("09F8001D-8419-49E2-BEC0-8012BF05AF6B"), "GrupoProduto", "Grupo de Produto", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Mensagem = new XORMParameterField(new Guid("1A1AE4DA-9D7C-4DEB-9821-9AA18CA169D1"), "Mensagem", "Mensagem", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField NumeroVenda = new XORMParameterField(new Guid("494F0CA2-F066-452D-9057-6356BBE1A43D"), "NumeroVenda", "Número da Venda", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Ordem = new XORMParameterField(new Guid("33CFB7F4-C45C-40E9-BF9A-0AA2965F7D03"), "Ordem", "Ordem", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Valor = new XORMParameterField(new Guid("4EA73D31-04A3-4C15-8529-AAE9D4BED6B3"), "Valor", "Valor", XDecimal.CID, 0, 0, false, gCID, null);

        public AutorizacaoSVC()
        {
            TupleType = typeof(AutorizacaoSVC.XTuple);
            DataSetType = typeof(AutorizacaoSVC.XDataSet);
            ServiceRuleCID = new Guid("918A2275-9DB3-40BC-8A6B-EA45240A1F2D");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Utility;
            ID = new Guid("75CC6E87-CBD0-4000-BCD2-14EEAFE55D7F");
            Name = "Autorizacao";
            Title = "Autorização";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = true;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            DataSetFields = new Guid[] { ChaveSeguranca.ID, CNPJPontoVenda.ID, ConvenioTipo.ID, Acao.ID, Dados.ID, DadosVenda.ID, Documento.ID, DocumentoTipo.ID, GrupoProduto.ID, Mensagem.ID, NumeroVenda.ID, Ordem.ID, Valor.ID, ConvenioID.ID };
            PKField = Ordem.ID;
            MasterRuleCID = new Guid("918A2275-9DB3-40BC-8A6B-EA45240A1F2D");
            AddField(Ordem);
            Ordem.IsParam = true;
            AddField(Valor);
            Valor.IsParam = true;
            AddField(Documento);
            Documento.IsParam = true;
            AddField(CNPJPontoVenda);
            CNPJPontoVenda.IsParam = true;
            AddField(DadosVenda);
            DadosVenda.IsParam = true;
            AddField(Acao);
            Acao.IsParam = true;
            AddField(ChaveSeguranca);
            ChaveSeguranca.IsParam = true;
            AddField(NumeroVenda);
            NumeroVenda.IsParam = true;
            AddField(Mensagem);
            Mensagem.IsParam = true;
            AddField(ConvenioTipo);
            ConvenioTipo.IsParam = true;
            AddField(DocumentoTipo);
            DocumentoTipo.IsParam = true;
            AddField(GrupoProduto);
            GrupoProduto.IsParam = true;
            AddField(Dados);
            Dados.IsParam = true;
            AddField(ConvenioID);
            ConvenioID.IsParam = true;
            Acao.IsReadOnly = false;
            Acao.Length = 0;
            Acao.Scale = 0;
            Acao.IsDataField = true;
            Acao.AllowEmpty = true;
            ChaveSeguranca.IsReadOnly = false;
            ChaveSeguranca.Length = 0;
            ChaveSeguranca.Scale = 0;
            ChaveSeguranca.IsDataField = true;
            ChaveSeguranca.AllowEmpty = true;
            CNPJPontoVenda.IsReadOnly = false;
            CNPJPontoVenda.Length = 0;
            CNPJPontoVenda.Scale = 0;
            CNPJPontoVenda.IsDataField = true;
            CNPJPontoVenda.AllowEmpty = true;
            ConvenioID.IsReadOnly = false;
            ConvenioID.Length = 0;
            ConvenioID.Scale = 0;
            ConvenioID.IsDataField = true;
            ConvenioID.AllowEmpty = true;
            ConvenioTipo.IsReadOnly = false;
            ConvenioTipo.Length = 0;
            ConvenioTipo.Scale = 0;
            ConvenioTipo.IsDataField = true;
            ConvenioTipo.AllowEmpty = true;
            Dados.IsReadOnly = false;
            Dados.Length = 0;
            Dados.Scale = 0;
            Dados.IsDataField = true;
            Dados.AllowEmpty = true;
            DadosVenda.IsReadOnly = false;
            DadosVenda.Length = 0;
            DadosVenda.Scale = 0;
            DadosVenda.IsDataField = true;
            DadosVenda.AllowEmpty = true;
            Documento.IsReadOnly = false;
            Documento.Length = 0;
            Documento.Scale = 0;
            Documento.IsDataField = true;
            Documento.AllowEmpty = true;
            DocumentoTipo.IsReadOnly = false;
            DocumentoTipo.Length = 0;
            DocumentoTipo.Scale = 0;
            DocumentoTipo.IsDataField = true;
            DocumentoTipo.AllowEmpty = true;
            GrupoProduto.IsReadOnly = false;
            GrupoProduto.Length = 0;
            GrupoProduto.Scale = 0;
            GrupoProduto.IsDataField = true;
            GrupoProduto.AllowEmpty = true;
            Mensagem.IsReadOnly = false;
            Mensagem.Length = 0;
            Mensagem.Scale = 0;
            Mensagem.IsDataField = true;
            Mensagem.AllowEmpty = true;
            NumeroVenda.IsReadOnly = false;
            NumeroVenda.Length = 0;
            NumeroVenda.Scale = 0;
            NumeroVenda.IsDataField = true;
            NumeroVenda.AllowEmpty = true;
            Ordem.GeneratePK = true;
            Ordem.IsReadOnly = false;
            Ordem.Length = 0;
            Ordem.Scale = 0;
            Ordem.IsDataField = true;
            Ordem.AllowEmpty = true;
            Valor.IsReadOnly = false;
            Valor.Length = 0;
            Valor.Scale = 0;
            Valor.IsDataField = true;
            Valor.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Acao => AutorizacaoSVC.Acao;
        public XORMField ChaveSeguranca => AutorizacaoSVC.ChaveSeguranca;
        public XORMField CNPJPontoVenda => AutorizacaoSVC.CNPJPontoVenda;
        public XORMField ConvenioID => AutorizacaoSVC.ConvenioID;
        public XORMField ConvenioTipo => AutorizacaoSVC.ConvenioTipo;
        public XORMField Dados => AutorizacaoSVC.Dados;
        public XORMField DadosVenda => AutorizacaoSVC.DadosVenda;
        public XORMField Documento => AutorizacaoSVC.Documento;
        public XORMField DocumentoTipo => AutorizacaoSVC.DocumentoTipo;
        public XORMField GrupoProduto => AutorizacaoSVC.GrupoProduto;
        public XORMField Mensagem => AutorizacaoSVC.Mensagem;
        public XORMField NumeroVenda => AutorizacaoSVC.NumeroVenda;
        public XORMField Ordem => AutorizacaoSVC.Ordem;
        public XORMField Valor => AutorizacaoSVC.Valor;
        }
        #endregion XFields
        #region AutorizacaoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 Acao
        {
            get
            {
                return (Int32)Value[AutorizacaoSVC.Acao.ID];
            }
            set
            {
                Value[AutorizacaoSVC.Acao.ID] = value;
            }
        }
        public Int32? oAcao
        {
            get
            {
                GetOldValue(AutorizacaoSVC.Acao, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String ChaveSeguranca
        {
            get
            {
                return (String)Value[AutorizacaoSVC.ChaveSeguranca.ID];
            }
            set
            {
                Value[AutorizacaoSVC.ChaveSeguranca.ID] = value;
            }
        }
        public String? oChaveSeguranca
        {
            get
            {
                GetOldValue(AutorizacaoSVC.ChaveSeguranca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String CNPJPontoVenda
        {
            get
            {
                return (String)Value[AutorizacaoSVC.CNPJPontoVenda.ID];
            }
            set
            {
                Value[AutorizacaoSVC.CNPJPontoVenda.ID] = value;
            }
        }
        public String? oCNPJPontoVenda
        {
            get
            {
                GetOldValue(AutorizacaoSVC.CNPJPontoVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 ConvenioID
        {
            get
            {
                return (Int32)Value[AutorizacaoSVC.ConvenioID.ID];
            }
            set
            {
                Value[AutorizacaoSVC.ConvenioID.ID] = value;
            }
        }
        public Int32? oConvenioID
        {
            get
            {
                GetOldValue(AutorizacaoSVC.ConvenioID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ConvenioTipo
        {
            get
            {
                return (Int32)Value[AutorizacaoSVC.ConvenioTipo.ID];
            }
            set
            {
                Value[AutorizacaoSVC.ConvenioTipo.ID] = value;
            }
        }
        public Int32? oConvenioTipo
        {
            get
            {
                GetOldValue(AutorizacaoSVC.ConvenioTipo, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Dados
        {
            get
            {
                return (String)Value[AutorizacaoSVC.Dados.ID];
            }
            set
            {
                Value[AutorizacaoSVC.Dados.ID] = value;
            }
        }
        public String? oDados
        {
            get
            {
                GetOldValue(AutorizacaoSVC.Dados, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String DadosVenda
        {
            get
            {
                return (String)Value[AutorizacaoSVC.DadosVenda.ID];
            }
            set
            {
                Value[AutorizacaoSVC.DadosVenda.ID] = value;
            }
        }
        public String? oDadosVenda
        {
            get
            {
                GetOldValue(AutorizacaoSVC.DadosVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Documento
        {
            get
            {
                return (String)Value[AutorizacaoSVC.Documento.ID];
            }
            set
            {
                Value[AutorizacaoSVC.Documento.ID] = value;
            }
        }
        public String? oDocumento
        {
            get
            {
                GetOldValue(AutorizacaoSVC.Documento, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 DocumentoTipo
        {
            get
            {
                return (Int32)Value[AutorizacaoSVC.DocumentoTipo.ID];
            }
            set
            {
                Value[AutorizacaoSVC.DocumentoTipo.ID] = value;
            }
        }
        public Int32? oDocumentoTipo
        {
            get
            {
                GetOldValue(AutorizacaoSVC.DocumentoTipo, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String GrupoProduto
        {
            get
            {
                return (String)Value[AutorizacaoSVC.GrupoProduto.ID];
            }
            set
            {
                Value[AutorizacaoSVC.GrupoProduto.ID] = value;
            }
        }
        public String? oGrupoProduto
        {
            get
            {
                GetOldValue(AutorizacaoSVC.GrupoProduto, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Mensagem
        {
            get
            {
                return (String)Value[AutorizacaoSVC.Mensagem.ID];
            }
            set
            {
                Value[AutorizacaoSVC.Mensagem.ID] = value;
            }
        }
        public String? oMensagem
        {
            get
            {
                GetOldValue(AutorizacaoSVC.Mensagem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroVenda
        {
            get
            {
                return (String)Value[AutorizacaoSVC.NumeroVenda.ID];
            }
            set
            {
                Value[AutorizacaoSVC.NumeroVenda.ID] = value;
            }
        }
        public String? oNumeroVenda
        {
            get
            {
                GetOldValue(AutorizacaoSVC.NumeroVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 Ordem
        {
            get
            {
                return (Int32)Value[AutorizacaoSVC.Ordem.ID];
            }
            set
            {
                Value[AutorizacaoSVC.Ordem.ID] = value;
            }
        }
        public Int32? oOrdem
        {
            get
            {
                GetOldValue(AutorizacaoSVC.Ordem, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[AutorizacaoSVC.Valor.ID];
            }
            set
            {
                Value[AutorizacaoSVC.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(AutorizacaoSVC.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AutorizacaoSVC.XTuple

        #region AutorizacaoSVC.XRule
        public abstract class XRule : XServiceUtilRule<AutorizacaoSVC.XDataSet, AutorizacaoSVC, AutorizacaoSVC.XTuple>
        {
        }
        #endregion AutorizacaoSVC.XRule

        #region AutorizacaoSVC.XDataSet

        public class XDataSet : XDataSet<AutorizacaoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AutorizacaoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AutorizacaoSVC.XTuple> where T : XDataTuple
        {

            public Guid Acao => AutorizacaoSVC.Acao.ID;
            public Guid ChaveSeguranca => AutorizacaoSVC.ChaveSeguranca.ID;
            public Guid CNPJPontoVenda => AutorizacaoSVC.CNPJPontoVenda.ID;
            public Guid ConvenioID => AutorizacaoSVC.ConvenioID.ID;
            public Guid ConvenioTipo => AutorizacaoSVC.ConvenioTipo.ID;
            public Guid Dados => AutorizacaoSVC.Dados.ID;
            public Guid DadosVenda => AutorizacaoSVC.DadosVenda.ID;
            public Guid Documento => AutorizacaoSVC.Documento.ID;
            public Guid DocumentoTipo => AutorizacaoSVC.DocumentoTipo.ID;
            public Guid GrupoProduto => AutorizacaoSVC.GrupoProduto.ID;
            public Guid Mensagem => AutorizacaoSVC.Mensagem.ID;
            public Guid NumeroVenda => AutorizacaoSVC.NumeroVenda.ID;
            public Guid Ordem => AutorizacaoSVC.Ordem.ID;
            public Guid Valor => AutorizacaoSVC.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(AutorizacaoSVC.XDataSet);
            }

        }
        #endregion AutorizacaoSVC.XDataSet

        [Guid(AutorizacaoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AutorizacaoSVC))]
        protected class _Service : Service<AutorizacaoSVC, XDataSet, XTuple>
        {
            public const String sCID = "4ECCBD54-A7D1-4565-AC72-19EAA788BCB5";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AutorizacaoSVC, XDataSet, XTuple>, XService
             where TModel : AutorizacaoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}