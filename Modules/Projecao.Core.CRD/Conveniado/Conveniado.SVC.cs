//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using Projecao.Core.ERP.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using Projecao.Core.ERP.Pessoa;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using Projecao.Core.CRD.ReadOnly;
using Projecao.Core.CRD.Conveniado;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.Conveniado
{
    [XRegister(typeof(ConveniadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Conveniado\Conveniado.dssvc")]
    public class ConveniadoSVC : XSVCModel
    {
        #region ConveniadoFilterFRM

        [XRegister(typeof(ConveniadoFilterFRM), sCID)]
        public class ConveniadoFilterFRM : XFRMModel
        {
            public const String sCID = "24324F82-7711-4F29-8A8B-B600AF7CB82C";
            static ConveniadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConveniadoFilterFRM()
            {
                ID = gCID;
                Name = "ConveniadoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 834, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(CRDxConvenioID);
                CRDxConvenioID.ForceRW = true;
                CRDxConvenioID.CanInsert = true;
                CRDxConvenioID.CanUpdate = true;
                CRDxConvenioID.RowCount = 1;
                CRDxConvenioID.ColCount = 16;
                CRDxConvenioID.RowCountSmall = 1;
                CRDxConvenioID.ColCountSmall = 16;
                CRDxConvenioID.IsHidden = false;
                CRDxConvenioID.IsHiddenSmall = false;
                CRDxConvenioID.AdditionalTitle = "";
                CRDxConvenioID.Location = 1;
                CRDxConvenioID.EditorCID = new Guid("66290387-F0AD-4746-A1F7-B0D8D4C5C2EE");
                CRDxConvenioID.FormImplace = true;
                CRDxConvenioID.Operator = XOperator.EqualTo;
                CRDxConvenioID.JustifyHeight = false;
                CRDxConvenioID.AllowEmpty = true;
                CRDxConvenioID.FontColor = "#000000";
                CRDxConvenioID.FontStyle = XFontStyle.Normal;
                CRDxConvenioID.ShowFooter = false;
                CRDxConvenioID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                CRDxConvenioID.Scale = 0;
                CRDxConvenioID.Length = 0;
                CRDxConvenioID.SearchAction = XSearchAction.Default;
                CRDxConvenioID.TypeID = XInt64.CID;
                CRDxConvenioID.AdditionalFieldsID = new Guid[] {  };
                CRDxConvenioID.AdditionalDataFieldsID = new Guid[] {  };
                CRDxConvenioID.TargetFilterFieldID = new Guid[] {  };
                CRDxConvenioID.SourceFilterFieldID = new Guid[] {  };
                CRDxConvenioID.TargetDisplayFieldID = new Guid[] { new Guid("588FB0E7-6BAF-4DED-BCE2-7AA50A85AE6D") };
                CRDxConvenioID.SourceDisplayFieldID = new Guid[] { new Guid("C972E047-4809-488B-9F2A-F2EA8ED46235") };
                CRDxConvenioID.DataSourceID = global::Projecao.Core.CRD.ReadOnly.ConvenioSVC.gCID;
                CRDxConvenioID.AutoLoad = false;
                CRDxConvenioID.FilterInative = true;
                CRDxConvenioID.IsAnswer = false;
                CRDxConvenioID.AllowMultiSelect = false;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 16;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 16;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 2;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] { new Guid("F08FE609-6332-44C8-A569-CA9D51765F56") };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField CRDxConvenioID = new XFRMField(new Guid("B43BE345-222E-4C78-B47C-95E438FED398"), "CRDxConvenioID", "Nome do Convênio", XInt64.CID, 1, 16, false, gCID, null, new Guid("6A6DC57C-B50A-41A8-985D-F8CBD3DA9685")); // Int64;
            public XFRMField Nome = new XFRMField(new Guid("48072D31-DE46-4AD9-81A7-B172BAC6B9DC"), "Nome", "Nome do Conveniado", XString.CID, 1, 16, false, gCID, null, new Guid("B6F82E3B-FED5-4AB0-8A5A-C918AA54366D")); // String;
            public static class Fields
            {
                public static XFieldInfo CRDxConvenioID = new XFieldInfo(new Guid("B43BE345-222E-4C78-B47C-95E438FED398"), "CRDxConvenioID", "Nome do Convênio", typeof(Int64));
                public static XFieldInfo Nome = new XFieldInfo(new Guid("48072D31-DE46-4AD9-81A7-B172BAC6B9DC"), "Nome", "Nome do Conveniado", typeof(String));
            }
        }

        #endregion ConveniadoFilterFRM

        public const String sCID = "F0E1D828-648D-4947-AAE6-17AA16973860";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference CRDxConvenioUsuario_CRDxConvenioID_CRDxConveniado_CRDxConvenioID; // CRDxConvenioUsuario.CRDxConvenioID --> CRDxConveniado.CRDxConvenioID
        public static XSVCReference CRDxConveniado_ERPxPessoaFisicaID_ERPxPessoaFisica_ERPxPessoaFisicaID; // CRDxConveniado.ERPxPessoaFisicaID --> ERPxPessoaFisica.ERPxPessoaFisicaID
        public static XSVCReference ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID
        public static XSVCReference SYSxPessoaConvenio_SYSxPessoaID_CRDxConveniado_CRDxConvenioID; // SYSxPessoaConvenio.SYSxPessoaID --> CRDxConveniado.CRDxConvenioID

        #region xSYSxPessoaConvenio 
        public class xSYSxPessoaConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("15C15BE4-2129-4D71-9937-AC71553EECF5");

            public xSYSxPessoaConvenio()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoaConvenio";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "ConvenioNome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("588FB0E7-6BAF-4DED-BCE2-7AA50A85AE6D"), "Nome", "Nome do Convênio");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("6FB24F83-CDC2-4D80-A81F-C77368350538"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoaConvenio 


        #region xCRDxConvenioUsuario 
        public class xCRDxConvenioUsuario : XSVCTable
        {

            public static Guid gCID => new Guid("219CA847-2522-44FC-85B6-149779F62DB8");

            public xCRDxConvenioUsuario()
            {
                Name = "CRDxConvenioUsuario";
                Alias = "CRDxConvenioUsuario";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.gCID;

                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(CRDxConvenioUsuarioID, CRDxConvenioUsuarioID.ID);
                CRDxConvenioUsuarioID.Owner = this;
                CRDxConvenioUsuarioID.OwnerID = ID;
                CRDxConvenioUsuarioID.TableName = Name;
            }

            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.CRDxConvenioID, new Guid("AC755EFB-0AD1-4CEA-A953-BEF5FFF424A1"), "CRDxConvenioID", "Convênio");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.CTLxUsuarioID, new Guid("9359E700-A87E-48D3-A011-D25D76F192A0"), "CTLxUsuarioID", "Usuário");
            public static XORMPKField CRDxConvenioUsuarioID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.CRDxConvenioUsuarioID, new Guid("8A97061A-2549-4547-8C2B-09547B83293C"), "CRDxConvenioUsuarioID", "Convênio por Usuário");
        }
        #endregion xCRDxConvenioUsuario 


        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("2C4A100C-26F7-4D55-AC3F-1A6454AD7A17");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                CRDxConveniadoID.Alias = "CRDxConveniadoID";
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Limite.Alias = "Limite";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Inicio.Alias = "Inicio";
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Matricula.Alias = "Matricula";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("76F11E02-CFA6-4AC2-BAA8-6FE67B5E2A2D"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("AC9F5CCA-F431-4835-A54E-1EB75E8FDA8C"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("7318D29C-F5CE-45B1-B8F1-F90803192909"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("6A6DC57C-B50A-41A8-985D-F8CBD3DA9685"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("9DB9C3BC-F66D-4E8F-A29B-96DE1F64AF74"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("E9010CEB-7EB1-4CF3-8267-C300804BA12D"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("09E0CFA5-C3C2-4547-8C7A-9AD57FB17114"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("6F9F572A-C42B-4CFB-87F1-5FD84674C62C");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("B6F82E3B-FED5-4AB0-8A5A-C918AA54366D"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("77B43AAD-BB01-4514-AED2-3EE4AE90DACD"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("8DBAB19D-5483-43A7-9016-7AA39818EC46");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("65BA690B-C2FB-4769-9874-F240A89FAB12"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("6EC9D25D-1D85-42BC-AB2F-6FE548F763C3"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("B456A29F-1FE9-422C-B967-4D698EBAB97A"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("9B0525A7-88DD-417F-9902-6FD0086CD8B5"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xERPxPessoaFisica 
        public class xERPxPessoaFisica : XSVCTable
        {

            public static Guid gCID => new Guid("A1DE3AEA-A15D-49FE-8772-1B0A7E122E19");

            public xERPxPessoaFisica()
            {
                Name = "ERPxPessoaFisica";
                Alias = "ERPxPessoaFisica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.gCID;

                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
            }

            public static XORMFaceField ERPxPessoaFisicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxPessoaFisicaID, new Guid("C12B97E6-C22B-4770-BAA2-82C925C43A36"), "ERPxPessoaFisicaID", "Pessoa Física");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.SYSxEstadoID, new Guid("C0AEA6B2-67CA-47A8-8506-B61B637E0B0C"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxGeneroID, new Guid("A816E81A-762F-4BE5-8D56-A242BC27394C"), "ERPxGeneroID", "Gênero");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.Nascimento, new Guid("12B6C874-3B56-491E-A597-EAA7ECF43EF2"), "Nascimento", "Data de Nascimento");
        }
        #endregion xERPxPessoaFisica 


        public xCRDxConveniado CRDxConveniado;
        public xCRDxConvenioUsuario CRDxConvenioUsuario;
        public xERPxGenero ERPxGenero;
        public xERPxPessoaFisica ERPxPessoaFisica;
        public xSYSxPessoa SYSxPessoa;
        public xSYSxPessoaConvenio SYSxPessoaConvenio;
        public static readonly XORMParameterField CPF = new XORMParameterField(new Guid("E7B653E5-A2BF-47D0-BBD3-635EA7BB8CB9"), "CPF", "CPF", XString.CID, 0, 0, false, gCID, null);

        public ConveniadoSVC()
        {
            TupleType = typeof(ConveniadoSVC.XTuple);
            DataSetType = typeof(ConveniadoSVC.XDataSet);
            ServiceRuleCID = new Guid("A440B3BC-7CF7-495E-9B27-86238D2FA115");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F0E1D828-648D-4947-AAE6-17AA16973860");
            Name = "Conveniado";
            Title = "Conveniado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("24324F82-7711-4F29-8A8B-B600AF7CB82C");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxConveniado.Matricula.ID, xSYSxPessoa.Nome.ID, xERPxGenero.Genero.ID, xSYSxPessoaConvenio.Nome.ID };
            DataSetFields = new Guid[] { CPF.ID, xCRDxConveniado.CRDxConveniadoID.ID, xCRDxConveniado.CRDxConvenioID.ID, xCRDxConveniado.Inicio.ID, xCRDxConveniado.Limite.ID, xCRDxConveniado.Matricula.ID, xCRDxConveniado.SYSxEstadoID.ID, xERPxPessoaFisica.ERPxGeneroID.ID, xERPxPessoaFisica.Nascimento.ID, xERPxGenero.Genero.ID, xSYSxPessoa.Nome.ID, xSYSxPessoa.SYSxPessoaID.ID, xSYSxPessoaConvenio.Nome.ID };
            StateField = xCRDxConveniado.SYSxEstadoID.ID;
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("A440B3BC-7CF7-495E-9B27-86238D2FA115");
            XSubServiceItem ss54792A13332F422CB0E3093581935D1D = new XSubServiceItem(ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, ConveniadoSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ss54792A13332F422CB0E3093581935D1D.Rights = new Int16[] { 1 }; 
            ss54792A13332F422CB0E3093581935D1D.LateLoad = false;
            SubServices.Add(ss54792A13332F422CB0E3093581935D1D);
            XSubServiceItem ss760D519FD0884BD0BC3AC836EC02D469 = new XSubServiceItem(EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, ConveniadoSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ss760D519FD0884BD0BC3AC836EC02D469.Rights = new Int16[] { 1 }; 
            ss760D519FD0884BD0BC3AC836EC02D469.LateLoad = false;
            SubServices.Add(ss760D519FD0884BD0BC3AC836EC02D469);
            XSubServiceItem ssFAF8DC255D944D8BB9DAEB818AD12DE3 = new XSubServiceItem(CartaoSVC.gCID, CartaoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID, ConveniadoSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ssFAF8DC255D944D8BB9DAEB818AD12DE3.Rights = new Int16[] { 1 }; 
            ssFAF8DC255D944D8BB9DAEB818AD12DE3.LateLoad = false;
            SubServices.Add(ssFAF8DC255D944D8BB9DAEB818AD12DE3);
            XSubServiceItem ss48B20604CFFE4D2D8DAAF2296C6BB302 = new XSubServiceItem(DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, ConveniadoSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ss48B20604CFFE4D2D8DAAF2296C6BB302.Rights = new Int16[] { 1 }; 
            ss48B20604CFFE4D2D8DAAF2296C6BB302.LateLoad = false;
            SubServices.Add(ss48B20604CFFE4D2D8DAAF2296C6BB302);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = false;
            AddTable(CRDxConveniado);
            CRDxConvenioUsuario = new xCRDxConvenioUsuario();
            CRDxConvenioUsuario.IsReadOnly = true;
            AddTable(CRDxConvenioUsuario);
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            ERPxPessoaFisica = new xERPxPessoaFisica();
            ERPxPessoaFisica.IsReadOnly = false;
            AddTable(ERPxPessoaFisica);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = false;
            AddTable(SYSxPessoa);
            SYSxPessoaConvenio = new xSYSxPessoaConvenio();
            SYSxPessoaConvenio.IsReadOnly = true;
            AddTable(SYSxPessoaConvenio);
            MasterTableID = SYSxPessoa.ID;
            ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("087D0CB5-B425-4B98-9F6A-166B31095B77"), "FK_087D0CB5B4254B989F6A166B31095B77", ConveniadoSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxPessoaFisicaID.ID, ConveniadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
            CRDxConvenioUsuario_CRDxConvenioID_CRDxConveniado_CRDxConvenioID = AddReference(new XSVCReference(new Guid("3DDA6191-AC5C-4884-95B0-EF2BEC9660A0"), "FK_3DDA6191AC5C488495B0EF2BEC9660A0", ConveniadoSVC.xCRDxConvenioUsuario.gCID, xCRDxConvenioUsuario.CRDxConvenioID.ID, ConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConvenioID.ID, XJoinType.Inner)); // CRDxConvenioUsuario.CRDxConvenioID --> CRDxConveniado.CRDxConvenioID
            CRDxConveniado_ERPxPessoaFisicaID_ERPxPessoaFisica_ERPxPessoaFisicaID = AddReference(new XSVCReference(new Guid("418B01F2-2FE5-4017-9EA4-D5C3FBF53AD1"), "FK_418B01F22FE540179EA4D5C3FBF53AD1", ConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, ConveniadoSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxPessoaFisicaID.ID, XJoinType.Inner)); // CRDxConveniado.ERPxPessoaFisicaID --> ERPxPessoaFisica.ERPxPessoaFisicaID
            ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID = AddReference(new XSVCReference(new Guid("47540E8A-6306-4007-915B-B063F726B649"), "FK_47540E8A63064007915BB063F726B649", ConveniadoSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, ConveniadoSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID
            SYSxPessoaConvenio_SYSxPessoaID_CRDxConveniado_CRDxConvenioID = AddReference(new XSVCReference(new Guid("BCF83C3E-52B4-4B5F-9F28-0F9F56A7ED46"), "FK_BCF83C3E52B44B5F9F280F9F56A7ED46", ConveniadoSVC.xSYSxPessoaConvenio.gCID, xSYSxPessoaConvenio.SYSxPessoaID.ID, ConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConvenioID.ID, XJoinType.Inner)); // SYSxPessoaConvenio.SYSxPessoaID --> CRDxConveniado.CRDxConvenioID
            XSVCReference FK_163016C84DDE42C3BF706AD77989FDA2 = new XSVCReference(new Guid("163016C8-4DDE-42C3-BF70-6AD77989FDA2"), "FK_163016C84DDE42C3BF706AD77989FDA2", ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, SYSxPessoa.ID, ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // ContatoSVC.SYSxPessoaID --> Conveniado.SYSxPessoaID
            FK_163016C84DDE42C3BF706AD77989FDA2.IsLowRelevance = false;
            AddReference(FK_163016C84DDE42C3BF706AD77989FDA2);
            XSVCReference FK_31E71F66EB934974866A1FCAD98608E2 = new XSVCReference(new Guid("31E71F66-EB93-4974-866A-1FCAD98608E2"), "FK_31E71F66EB934974866A1FCAD98608E2", EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, SYSxPessoa.ID, ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // EnderecoSVC.SYSxPessoaID --> Conveniado.SYSxPessoaID
            FK_31E71F66EB934974866A1FCAD98608E2.IsLowRelevance = false;
            AddReference(FK_31E71F66EB934974866A1FCAD98608E2);
            XSVCReference FK_5F3E4DB7CE4842D79642FB6497AF2FD0 = new XSVCReference(new Guid("5F3E4DB7-CE48-42D7-9642-FB6497AF2FD0"), "FK_5F3E4DB7CE4842D79642FB6497AF2FD0", CartaoSVC.gCID, CartaoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID, SYSxPessoa.ID, ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // CartaoSVC.ERPxPessoaFisicaID --> Conveniado.SYSxPessoaID
            FK_5F3E4DB7CE4842D79642FB6497AF2FD0.IsLowRelevance = false;
            AddReference(FK_5F3E4DB7CE4842D79642FB6497AF2FD0);
            XSVCReference FK_B149F3C079124CD88953EEA2FC4BA192 = new XSVCReference(new Guid("B149F3C0-7912-4CD8-8953-EEA2FC4BA192"), "FK_B149F3C079124CD88953EEA2FC4BA192", DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, SYSxPessoa.ID, ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // DocumentoSVC.SYSxPessoaID --> Conveniado.SYSxPessoaID
            FK_B149F3C079124CD88953EEA2FC4BA192.IsLowRelevance = false;
            AddReference(FK_B149F3C079124CD88953EEA2FC4BA192);
            AddField(CPF);
            CPF.IsParam = true;
            xSYSxPessoaConvenio.Nome.IsReadOnly = true;
            xSYSxPessoaConvenio.Nome.Length = 256;
            xSYSxPessoaConvenio.Nome.IsDataField = true;
            xSYSxPessoaConvenio.Nome.AllowEmpty = true;
            CPF.IsReadOnly = false;
            CPF.Length = 0;
            CPF.Scale = 0;
            CPF.IsDataField = true;
            CPF.AllowEmpty = true;
            xCRDxConveniado.CRDxConveniadoID.GeneratePK = true;
            xCRDxConveniado.CRDxConveniadoID.IsDataField = true;
            xCRDxConveniado.CRDxConveniadoID.AllowEmpty = true;
            xCRDxConveniado.CRDxConvenioID.IsDataField = true;
            xCRDxConveniado.CRDxConvenioID.AllowEmpty = true;
            xERPxPessoaFisica.ERPxGeneroID.IsDataField = true;
            xERPxPessoaFisica.ERPxGeneroID.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xCRDxConveniado.Inicio.IsDataField = true;
            xCRDxConveniado.Inicio.AllowEmpty = true;
            xCRDxConveniado.Limite.Length = 25;
            xCRDxConveniado.Limite.Scale = 2;
            xCRDxConveniado.Limite.IsDataField = true;
            xCRDxConveniado.Limite.AllowEmpty = true;
            xCRDxConveniado.Matricula.Length = 12;
            xCRDxConveniado.Matricula.IsDataField = true;
            xCRDxConveniado.Matricula.AllowEmpty = true;
            xERPxPessoaFisica.Nascimento.IsDataField = true;
            xERPxPessoaFisica.Nascimento.AllowEmpty = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxConveniado.SYSxEstadoID.IsDataField = true;
            xCRDxConveniado.SYSxEstadoID.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.GeneratePK = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
            xCRDxConveniado.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField ConvenioNome => xSYSxPessoaConvenio.Nome;
        public XORMField CPF => ConveniadoSVC.CPF;
        public XORMField CRDxConveniadoID => xCRDxConveniado.CRDxConveniadoID;
        public XORMField CRDxConvenioID => xCRDxConveniado.CRDxConvenioID;
        public XORMField ERPxGeneroID => xERPxPessoaFisica.ERPxGeneroID;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField Inicio => xCRDxConveniado.Inicio;
        public XORMField Limite => xCRDxConveniado.Limite;
        public XORMField Matricula => xCRDxConveniado.Matricula;
        public XORMField Nascimento => xERPxPessoaFisica.Nascimento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField SYSxEstadoID => xCRDxConveniado.SYSxEstadoID;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        }
        #endregion XFields
        #region ConveniadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String ConvenioNome
        {
            get
            {
                return (String)Value[ConveniadoSVC.xSYSxPessoaConvenio.Nome.ID];
            }
            set
            {
                Value[ConveniadoSVC.xSYSxPessoaConvenio.Nome.ID] = value;
            }
        }
        public String? oConvenioNome
        {
            get
            {
                GetOldValue(ConveniadoSVC.xSYSxPessoaConvenio.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String CPF
        {
            get
            {
                return (String)Value[ConveniadoSVC.CPF.ID];
            }
            set
            {
                Value[ConveniadoSVC.CPF.ID] = value;
            }
        }
        public String? oCPF
        {
            get
            {
                GetOldValue(ConveniadoSVC.CPF, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 CRDxConveniadoID
        {
            get
            {
                return (Int32)Value[ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID] = value;
            }
        }
        public Int32? oCRDxConveniadoID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[ConveniadoSVC.xERPxPessoaFisica.ERPxGeneroID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xERPxPessoaFisica.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xERPxPessoaFisica.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[ConveniadoSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[ConveniadoSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(ConveniadoSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Inicio
        {
            get
            {
                return (DateTime)Value[ConveniadoSVC.xCRDxConveniado.Inicio.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.Inicio.ID] = value;
            }
        }
        public DateTime? oInicio
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.Inicio, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Decimal Limite
        {
            get
            {
                return (Decimal)Value[ConveniadoSVC.xCRDxConveniado.Limite.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.Limite.ID] = value;
            }
        }
        public Decimal? oLimite
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.Limite, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public String Matricula
        {
            get
            {
                return (String)Value[ConveniadoSVC.xCRDxConveniado.Matricula.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.Matricula.ID] = value;
            }
        }
        public String? oMatricula
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.Matricula, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[ConveniadoSVC.xERPxPessoaFisica.Nascimento.ID];
            }
            set
            {
                Value[ConveniadoSVC.xERPxPessoaFisica.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(ConveniadoSVC.xERPxPessoaFisica.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConveniadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConveniadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConveniadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConveniadoSVC.xCRDxConveniado.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConveniadoSVC.XTuple

        #region ConveniadoSVC.XRule
        public abstract class XRule : XServiceRule<ConveniadoSVC.XDataSet, ConveniadoSVC, ConveniadoSVC.XTuple>
        {
        }
        #endregion ConveniadoSVC.XRule

        #region ConveniadoSVC.XDataSet

        public class XDataSet : XDataSet<ConveniadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConveniadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConveniadoSVC.XTuple> where T : XDataTuple
        {

            public Guid ConvenioNome => ConveniadoSVC.xSYSxPessoaConvenio.Nome.ID;
            public Guid CPF => ConveniadoSVC.CPF.ID;
            public Guid CRDxConveniadoID => ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID;
            public Guid CRDxConvenioID => ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID;
            public Guid ERPxGeneroID => ConveniadoSVC.xERPxPessoaFisica.ERPxGeneroID.ID;
            public Guid Genero => ConveniadoSVC.xERPxGenero.Genero.ID;
            public Guid Inicio => ConveniadoSVC.xCRDxConveniado.Inicio.ID;
            public Guid Limite => ConveniadoSVC.xCRDxConveniado.Limite.ID;
            public Guid Matricula => ConveniadoSVC.xCRDxConveniado.Matricula.ID;
            public Guid Nascimento => ConveniadoSVC.xERPxPessoaFisica.Nascimento.ID;
            public Guid Nome => ConveniadoSVC.xSYSxPessoa.Nome.ID;
            public Guid SYSxEstadoID => ConveniadoSVC.xCRDxConveniado.SYSxEstadoID.ID;
            public Guid SYSxPessoaID => ConveniadoSVC.xSYSxPessoa.SYSxPessoaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConveniadoSVC.XDataSet);
            }

            private Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet _DocumentoDataSet;

            public Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet DocumentoDataSet
            {
                get
                {
                    if (_DocumentoDataSet == null)
                    {
                        _DocumentoDataSet = (Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.DocumentoSVC.gCID);
                        _DocumentoDataSet.IsReadOnly = true;
                    }
                    return  _DocumentoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet _ContatoDataSet;

            public Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet ContatoDataSet
            {
                get
                {
                    if (_ContatoDataSet == null)
                    {
                        _ContatoDataSet = (Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.ContatoSVC.gCID);
                        _ContatoDataSet.IsReadOnly = true;
                    }
                    return  _ContatoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet _EnderecoDataSet;

            public Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet EnderecoDataSet
            {
                get
                {
                    if (_EnderecoDataSet == null)
                    {
                        _EnderecoDataSet = (Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.EnderecoSVC.gCID);
                        _EnderecoDataSet.IsReadOnly = true;
                    }
                    return  _EnderecoDataSet;
                }
            }

            private Projecao.Core.CRD.ReadOnly.CartaoSVC.XDataSet _CartaoDataSet;

            public Projecao.Core.CRD.ReadOnly.CartaoSVC.XDataSet CartaoDataSet
            {
                get
                {
                    if (_CartaoDataSet == null)
                    {
                        _CartaoDataSet = (Projecao.Core.CRD.ReadOnly.CartaoSVC.XDataSet)Children.Get(Projecao.Core.CRD.ReadOnly.CartaoSVC.gCID);
                        _CartaoDataSet.IsReadOnly = true;
                    }
                    return  _CartaoDataSet;
                }
            }

        }
        #endregion ConveniadoSVC.XDataSet

        [Guid(ConveniadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConveniadoSVC))]
        protected class _Service : Service<ConveniadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "FE79E893-8186-416F-9732-6D6729EBBAA4";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConveniadoSVC, XDataSet, XTuple>, XService
             where TModel : ConveniadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}