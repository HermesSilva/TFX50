//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.ConsultaAutorizacao
{
    [XRegister(typeof(ConsultaAutorizacaoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\ConsultaAutorizacao\ConsultaAutorizacao.dssvc")]
    public class ConsultaAutorizacaoSVC : XSVCModel
    {
        #region ConsultaAutorizacaoFilterFRM

        [XRegister(typeof(ConsultaAutorizacaoFilterFRM), sCID)]
        public class ConsultaAutorizacaoFilterFRM : XFRMModel
        {
            public const String sCID = "38D7F763-2D75-40A6-BC07-F7690FBF5360";
            static ConsultaAutorizacaoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConsultaAutorizacaoFilterFRM()
            {
                ID = gCID;
                Name = "ConsultaAutorizacaoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 858, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(CRDxCartaoLogTipoID);
                CRDxCartaoLogTipoID.ForceRW = true;
                CRDxCartaoLogTipoID.CanInsert = true;
                CRDxCartaoLogTipoID.CanUpdate = true;
                CRDxCartaoLogTipoID.RowCount = 1;
                CRDxCartaoLogTipoID.ColCount = 7;
                CRDxCartaoLogTipoID.RowCountSmall = 1;
                CRDxCartaoLogTipoID.ColCountSmall = 7;
                CRDxCartaoLogTipoID.IsHidden = false;
                CRDxCartaoLogTipoID.IsHiddenSmall = false;
                CRDxCartaoLogTipoID.AdditionalTitle = "";
                CRDxCartaoLogTipoID.DataSourceID = global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.gCID;
                CRDxCartaoLogTipoID.Location = 1;
                CRDxCartaoLogTipoID.EditorCID = new Guid("AC111493-AD7B-4F74-A0E8-DF0E0BB6B74A");
                CRDxCartaoLogTipoID.FormImplace = true;
                CRDxCartaoLogTipoID.Operator = XOperator.EqualTo;
                CRDxCartaoLogTipoID.JustifyHeight = false;
                CRDxCartaoLogTipoID.AllowEmpty = true;
                CRDxCartaoLogTipoID.FontColor = "#000000";
                CRDxCartaoLogTipoID.FontStyle = XFontStyle.Normal;
                CRDxCartaoLogTipoID.ShowFooter = false;
                CRDxCartaoLogTipoID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                CRDxCartaoLogTipoID.Scale = 0;
                CRDxCartaoLogTipoID.Length = 0;
                CRDxCartaoLogTipoID.SearchAction = XSearchAction.Default;
                CRDxCartaoLogTipoID.TypeID = XInt16.CID;
                CRDxCartaoLogTipoID.AdditionalFieldsID = new Guid[] {  };
                CRDxCartaoLogTipoID.AdditionalDataFieldsID = new Guid[] {  };
                CRDxCartaoLogTipoID.TargetFilterFieldID = new Guid[] {  };
                CRDxCartaoLogTipoID.SourceFilterFieldID = new Guid[] {  };
                CRDxCartaoLogTipoID.TargetDisplayFieldID = new Guid[] { new Guid("555D7661-CEF8-4299-9D73-BE242F2B7966") };
                CRDxCartaoLogTipoID.SourceDisplayFieldID = new Guid[] { new Guid("49E8F3F9-D585-4316-9A3D-90701EB8DF0B") };
                CRDxCartaoLogTipoID.DataSourceID = global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.gCID;
                CRDxCartaoLogTipoID.AutoLoad = false;
                CRDxCartaoLogTipoID.FilterInative = true;
                CRDxCartaoLogTipoID.IsAnswer = false;
                CRDxCartaoLogTipoID.AllowMultiSelect = false;
                AddItem(DataInicio);
                DataInicio.ForceRW = true;
                DataInicio.CanInsert = true;
                DataInicio.CanUpdate = true;
                DataInicio.RowCount = 1;
                DataInicio.ColCount = 6;
                DataInicio.RowCountSmall = 1;
                DataInicio.ColCountSmall = 6;
                DataInicio.IsHidden = false;
                DataInicio.IsHiddenSmall = false;
                DataInicio.AdditionalTitle = "";
                DataInicio.Location = 2;
                DataInicio.EditorCID = new Guid("D56E8E17-9D09-4FE9-9A30-A6AA5865ABC6");
                DataInicio.FormImplace = true;
                DataInicio.Operator = XOperator.GreaterThan;
                DataInicio.JustifyHeight = false;
                DataInicio.AllowEmpty = true;
                DataInicio.FontColor = "#000000";
                DataInicio.FontStyle = XFontStyle.Normal;
                DataInicio.ShowFooter = false;
                DataInicio.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataInicio.Scale = 0;
                DataInicio.Length = 0;
                DataInicio.SearchAction = XSearchAction.Default;
                DataInicio.TypeID = XDateTime.CID;
                DataInicio.AdditionalFieldsID = new Guid[] {  };
                DataInicio.AdditionalDataFieldsID = new Guid[] {  };
                DataInicio.TargetFilterFieldID = new Guid[] {  };
                DataInicio.SourceFilterFieldID = new Guid[] {  };
                DataInicio.TargetDisplayFieldID = new Guid[] {  };
                DataInicio.SourceDisplayFieldID = new Guid[] {  };
                DataInicio.AutoLoad = false;
                DataInicio.FilterInative = true;
                DataInicio.IsAnswer = false;
                DataInicio.AllowMultiSelect = false;
                AddItem(DataFim);
                DataFim.ForceRW = true;
                DataFim.CanInsert = true;
                DataFim.CanUpdate = true;
                DataFim.RowCount = 1;
                DataFim.ColCount = 6;
                DataFim.RowCountSmall = 1;
                DataFim.ColCountSmall = 6;
                DataFim.IsHidden = false;
                DataFim.IsHiddenSmall = false;
                DataFim.AdditionalTitle = "";
                DataFim.Location = 3;
                DataFim.EditorCID = new Guid("D56E8E17-9D09-4FE9-9A30-A6AA5865ABC6");
                DataFim.FormImplace = true;
                DataFim.Operator = XOperator.LessThan;
                DataFim.JustifyHeight = false;
                DataFim.AllowEmpty = true;
                DataFim.FontColor = "#000000";
                DataFim.FontStyle = XFontStyle.Normal;
                DataFim.ShowFooter = false;
                DataFim.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataFim.Scale = 0;
                DataFim.Length = 0;
                DataFim.SearchAction = XSearchAction.Default;
                DataFim.TypeID = XDateTime.CID;
                DataFim.AdditionalFieldsID = new Guid[] {  };
                DataFim.AdditionalDataFieldsID = new Guid[] {  };
                DataFim.TargetFilterFieldID = new Guid[] {  };
                DataFim.SourceFilterFieldID = new Guid[] {  };
                DataFim.TargetDisplayFieldID = new Guid[] {  };
                DataFim.SourceDisplayFieldID = new Guid[] {  };
                DataFim.AutoLoad = false;
                DataFim.FilterInative = true;
                DataFim.IsAnswer = false;
                DataFim.AllowMultiSelect = false;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 13;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 13;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 4;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField CRDxCartaoLogTipoID = new XFRMField(new Guid("AD08AB34-5FB8-4A43-98AF-2CD05EFF17FC"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão", XInt16.CID, 1, 7, false, gCID, null, new Guid("BCFD49BD-B8A4-41EA-AD12-B62D49629E03")); // Int16;
            public XFRMField DataInicio = new XFRMField(new Guid("3756CA51-BE9F-4E31-B32E-16A266691D7E"), "DataInicio", "Data de Início", XDateTime.CID, 1, 6, false, gCID, null, new Guid("21AFD3E0-B176-47C4-AC54-0253AAE2F2FE")); // DateTime;
            public XFRMField DataFim = new XFRMField(new Guid("75A6CDEF-8F5B-463F-8BE8-866FDBC43FA4"), "DataFim", "Data Fim", XDateTime.CID, 1, 6, false, gCID, null, new Guid("21AFD3E0-B176-47C4-AC54-0253AAE2F2FE")); // DateTime;
            public XFRMField Nome = new XFRMField(new Guid("4E5E6913-D858-465F-A663-D4538C26DB44"), "Nome", "Nome do Cliente/Conveniado", XString.CID, 1, 13, false, gCID, null, new Guid("3B7792B0-CACA-4D5F-B555-88979650B8EB")); // String;
            public static class Fields
            {
                public static XFieldInfo CRDxCartaoLogTipoID = new XFieldInfo(new Guid("AD08AB34-5FB8-4A43-98AF-2CD05EFF17FC"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão", typeof(Int16));
                public static XFieldInfo DataInicio = new XFieldInfo(new Guid("3756CA51-BE9F-4E31-B32E-16A266691D7E"), "DataInicio", "Data de Início", typeof(DateTime));
                public static XFieldInfo DataFim = new XFieldInfo(new Guid("75A6CDEF-8F5B-463F-8BE8-866FDBC43FA4"), "DataFim", "Data Fim", typeof(DateTime));
                public static XFieldInfo Nome = new XFieldInfo(new Guid("4E5E6913-D858-465F-A663-D4538C26DB44"), "Nome", "Nome do Cliente/Conveniado", typeof(String));
            }
        }

        #endregion ConsultaAutorizacaoFilterFRM

        public const String sCID = "72DBEFD6-89C5-4593-B1AB-0076A6CC3A23";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxCartaoLogTipo_CRDxCartaoLogTipoID_CRDxCartaoLog_CRDxCartaoLogTipoID; // CRDxCartaoLogTipo.CRDxCartaoLogTipoID --> CRDxCartaoLog.CRDxCartaoLogTipoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID; // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID
        public static XSVCReference CRDxCartaoLog_CRDxCartaoID_CRDxCartao_CRDxCartaoID; // CRDxCartaoLog.CRDxCartaoID --> CRDxCartao.CRDxCartaoID
        public static XSVCReference CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID; // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
        public static XSVCReference CRDxConveniado_CRDxConveniadoID_CRDxCartao_CRDxConveniadoID; // CRDxConveniado.CRDxConveniadoID --> CRDxCartao.CRDxConveniadoID

        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("0D88971D-51E4-46CF-921C-2F9F9CCFABCC");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("16005103-D7D4-41E0-AC6D-922A884862A0"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("598E97F0-B32B-47F2-8C2F-657EC3297EEE"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("282BFDFB-2666-42B9-BC34-97EA1266AD33"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("4797147E-BD6B-445C-8B6D-5F8B84B3449B"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("731EDD00-25A0-4B4F-BBC5-280A22B2A966"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("2535E253-EB2A-48AD-A4AB-D2249CB4D9D8"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("BA0D8B8E-975E-41F9-BAC0-98EB850210A3"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("23A773A3-AF6F-45E4-8963-38708BC06D2D");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("3B7792B0-CACA-4D5F-B555-88979650B8EB"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("7EBD5F29-0297-46C0-928E-958E3877668F"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxCartaoLogTipo 
        public class xCRDxCartaoLogTipo : XSVCTable
        {

            public static Guid gCID => new Guid("2A33FC06-9044-4A70-B9D3-F9FC07FB312B");

            public xCRDxCartaoLogTipo()
            {
                Name = "CRDxCartaoLogTipo";
                Alias = "CRDxCartaoLogTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.gCID;

                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "Tipo";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
            }

            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.Tipo, new Guid("555D7661-CEF8-4299-9D73-BE242F2B7966"), "Tipo", "Tipo");
            public static XORMPKField CRDxCartaoLogTipoID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLogTipo.CRDxCartaoLogTipoID, new Guid("97C13725-CF74-45A7-8A98-7EBFDF083771"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
        }
        #endregion xCRDxCartaoLogTipo 


        #region xCRDxCartao 
        public class xCRDxCartao : XSVCTable
        {

            public static Guid gCID => new Guid("790CDBCE-37A4-4082-91CA-000EA4DBCB2D");

            public xCRDxCartao()
            {
                Name = "CRDxCartao";
                Alias = "CRDxCartao";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(Vencimento, Vencimento.ID);
                Vencimento.Owner = this;
                Vencimento.OwnerID = ID;
                Vencimento.TableName = Name;
                Items.Add(Emissao, Emissao.ID);
                Emissao.Owner = this;
                Emissao.OwnerID = ID;
                Emissao.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFKField CRDxConveniadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxConveniadoID, new Guid("296723A2-5899-431C-8CB6-088BB55C1F9D"), "CRDxConveniadoID", "Conveniado");
            public static XORMFaceField CRDxCartaoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoID, new Guid("D825B10F-CD6E-4C73-B53C-7A00FE45BE04"), "CRDxCartaoID", "Cartão");
            public static XORMDateField Vencimento = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Vencimento, new Guid("B51D8E3E-D4B6-4884-917F-8E0B7B37C5FF"), "Vencimento", "Vencimento");
            public static XORMDateField Emissao = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Emissao, new Guid("B0FA90E3-7686-4DC0-852B-FB0B9E0C4BA7"), "Emissao", "Emissão");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Numero, new Guid("15D14449-4EDE-4A5B-A32C-ED5B8BDF02FD"), "Numero", "Número");
            public static XORMFKField CRDxCartaoEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoEstadoID, new Guid("DD9D39FE-E387-4266-8CEF-DCDD206FAB8F"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartao 


        #region xCRDxCartaoVenda 
        public class xCRDxCartaoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("7BB1700B-F45B-4598-85C9-77470F1A78C5");

            public xCRDxCartaoVenda()
            {
                Name = "CRDxCartaoVenda";
                Alias = "CRDxCartaoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.gCID;

                Items.Add(CRDxCartaoVendaID, CRDxCartaoVendaID.ID);
                CRDxCartaoVendaID.Owner = this;
                CRDxCartaoVendaID.OwnerID = ID;
                CRDxCartaoVendaID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(DadosVenda, DadosVenda.ID);
                DadosVenda.Owner = this;
                DadosVenda.OwnerID = ID;
                DadosVenda.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(FaturadoFranqueado, FaturadoFranqueado.ID);
                FaturadoFranqueado.Owner = this;
                FaturadoFranqueado.OwnerID = ID;
                FaturadoFranqueado.TableName = Name;
                Items.Add(FaturadoCartao, FaturadoCartao.ID);
                FaturadoCartao.Owner = this;
                FaturadoCartao.OwnerID = ID;
                FaturadoCartao.TableName = Name;
            }

            public static XORMPKField CRDxCartaoVendaID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoVendaID, new Guid("1ADEF64C-96CF-4CC5-AC0B-D71302616361"), "CRDxCartaoVendaID", "Venda por cartão");
            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoID, new Guid("DBC22814-2338-4CE0-9CE0-58B22D38C351"), "CRDxCartaoID", "Cartão");
            public static XORMField DadosVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.DadosVenda, new Guid("45486A8E-6651-4F78-B248-4B4B1939BBC1"), "DadosVenda", "Dado da venda");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.SYSxEstadoID, new Guid("EB7E7C3E-AC07-4354-9C95-E9C8B0BD5EF7"), "SYSxEstadoID", "Estado");
            public static XORMField FaturadoFranqueado = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoFranqueado, new Guid("079B7130-C529-4982-86F9-606E003D4AFC"), "FaturadoFranqueado", "Faturado para Franqueado");
            public static XORMField FaturadoCartao = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoCartao, new Guid("D8BD6790-242F-4D48-8AD4-9AB48F4EAAA4"), "FaturadoCartao", "Faturado para Cartão");
        }
        #endregion xCRDxCartaoVenda 


        #region xCRDxCartaoLog 
        public class xCRDxCartaoLog : XSVCTable
        {

            public static Guid gCID => new Guid("EC5A3E8E-51C6-445F-96CB-AF2B271952E5");

            public xCRDxCartaoLog()
            {
                Name = "CRDxCartaoLog";
                Alias = "CRDxCartaoLog";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.gCID;

                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                CRDxCartaoID.Alias = "CRDxCartaoID";
                Items.Add(CRDxCartaoLogID, CRDxCartaoLogID.ID);
                CRDxCartaoLogID.Owner = this;
                CRDxCartaoLogID.OwnerID = ID;
                CRDxCartaoLogID.TableName = Name;
                CRDxCartaoLogID.Alias = "CRDxCartaoLogID";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Mensagem.Alias = "Mensagem";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
                Items.Add(NumeroVenda, NumeroVenda.ID);
                NumeroVenda.Owner = this;
                NumeroVenda.OwnerID = ID;
                NumeroVenda.TableName = Name;
                NumeroVenda.Alias = "NumeroVenda";
                Items.Add(CRDxCartaoLogOrigemID, CRDxCartaoLogOrigemID.ID);
                CRDxCartaoLogOrigemID.Owner = this;
                CRDxCartaoLogOrigemID.OwnerID = ID;
                CRDxCartaoLogOrigemID.TableName = Name;
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Origem.Alias = "Origem";
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
            }

            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoID, new Guid("8765DE18-3107-4AFE-8AB0-BEC270ABB66D"), "CRDxCartaoID", "Cartão");
            public static XORMFaceField CRDxCartaoLogID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogID, new Guid("80C2E498-5A35-43BF-9E66-8BCF6EEDEB2D"), "CRDxCartaoLogID", "Número Transação");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxPontoVendaID, new Guid("BDF82210-40F4-43F6-BD41-74AE1EBBA56D"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Mensagem, new Guid("7E214099-F3D2-407F-B977-FA8129204D70"), "Mensagem", "Mensagem");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Data, new Guid("21AFD3E0-B176-47C4-AC54-0253AAE2F2FE"), "Data", "Data Ocorrência");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Valor, new Guid("D9D26A22-4B0D-4967-BB49-C6C010233691"), "Valor", "Valor");
            public static XORMFKField CRDxCartaoLogTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogTipoID, new Guid("BCFD49BD-B8A4-41EA-AD12-B62D49629E03"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
            public static XORMField NumeroVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.NumeroVenda, new Guid("86A7F292-EA4F-48B7-A2E3-11C8A2F15384"), "NumeroVenda", "Número da Venda");
            public static XORMFKField CRDxCartaoLogOrigemID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogOrigemID, new Guid("C0B5F7ED-9451-4E3C-B7F2-232BCF44E743"), "CRDxCartaoLogOrigemID", "Log de Atividades");
            public static XORMField Origem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Origem, new Guid("02C986EB-AB2D-423B-AA6D-73CE5062ECF5"), "Origem", "Origem");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Desconto, new Guid("9C766478-7CA5-42E9-A0A9-7C6DF4D035F2"), "Desconto", "Desconto");
        }
        #endregion xCRDxCartaoLog 


        public xCRDxCartao CRDxCartao;
        public xCRDxCartaoLog CRDxCartaoLog;
        public xCRDxCartaoLogTipo CRDxCartaoLogTipo;
        public xCRDxCartaoVenda CRDxCartaoVenda;
        public xCRDxConveniado CRDxConveniado;
        public xSYSxPessoa SYSxPessoa;

        public ConsultaAutorizacaoSVC()
        {
            TupleType = typeof(ConsultaAutorizacaoSVC.XTuple);
            DataSetType = typeof(ConsultaAutorizacaoSVC.XDataSet);
            ServiceRuleCID = new Guid("C57A1BBB-3FF0-4195-9FB3-098466374919");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("72DBEFD6-89C5-4593-B1AB-0076A6CC3A23");
            Name = "ConsultaAutorizacao";
            Title = "Autorização";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("38D7F763-2D75-40A6-BC07-F7690FBF5360");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLogTipo.Tipo.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.Valor.ID, xCRDxCartaoLog.Origem.ID, xSYSxPessoa.Nome.ID, xCRDxCartaoVenda.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.CRDxCartaoLogID.ID };
            DataSetFields = new Guid[] { xCRDxCartaoLog.CRDxCartaoID.ID, xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLog.CRDxPontoVendaID.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.Mensagem.ID, xCRDxCartaoLog.NumeroVenda.ID, xCRDxCartaoLog.Origem.ID, xCRDxCartaoLog.Valor.ID, xCRDxCartaoLogTipo.Tipo.ID, xCRDxCartaoVenda.SYSxEstadoID.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxCartaoLog.CRDxCartaoLogID.ID;
            ConfigTableID = new Guid("F49233DE-4561-4573-895B-9C2421492A52");
            StateField = xCRDxCartaoVenda.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("C57A1BBB-3FF0-4195-9FB3-098466374919");
            CRDxCartao = new xCRDxCartao();
            CRDxCartao.IsReadOnly = true;
            AddTable(CRDxCartao);
            CRDxCartaoLog = new xCRDxCartaoLog();
            CRDxCartaoLog.IsReadOnly = true;
            AddTable(CRDxCartaoLog);
            CRDxCartaoLogTipo = new xCRDxCartaoLogTipo();
            CRDxCartaoLogTipo.IsReadOnly = true;
            AddTable(CRDxCartaoLogTipo);
            CRDxCartaoVenda = new xCRDxCartaoVenda();
            CRDxCartaoVenda.IsReadOnly = true;
            AddTable(CRDxCartaoVenda);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxCartaoLog.ID;
            CRDxCartaoLogTipo_CRDxCartaoLogTipoID_CRDxCartaoLog_CRDxCartaoLogTipoID = AddReference(new XSVCReference(new Guid("2A508F8C-4418-4232-8898-203A3963700C"), "FK_2A508F8C441842328898203A3963700C", ConsultaAutorizacaoSVC.xCRDxCartaoLogTipo.gCID, xCRDxCartaoLogTipo.CRDxCartaoLogTipoID.ID, ConsultaAutorizacaoSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogTipoID.ID, XJoinType.Inner)); // CRDxCartaoLogTipo.CRDxCartaoLogTipoID --> CRDxCartaoLog.CRDxCartaoLogTipoID
            SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID = AddReference(new XSVCReference(new Guid("80D2D504-3AF1-4F51-A2AE-24DABA6E7BBD"), "FK_80D2D5043AF14F51A2AE24DABA6E7BBD", ConsultaAutorizacaoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, ConsultaAutorizacaoSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID
            CRDxCartaoLog_CRDxCartaoID_CRDxCartao_CRDxCartaoID = AddReference(new XSVCReference(new Guid("AD1F6325-4F5D-4E21-A887-B7AB24E0BE82"), "FK_AD1F63254F5D4E21A887B7AB24E0BE82", ConsultaAutorizacaoSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoID.ID, ConsultaAutorizacaoSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxCartaoID.ID, XJoinType.Inner)); // CRDxCartaoLog.CRDxCartaoID --> CRDxCartao.CRDxCartaoID
            CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID = AddReference(new XSVCReference(new Guid("CD55A1D6-083D-49C8-A33A-9E605DD2803B"), "FK_CD55A1D6083D49C8A33A9E605DD2803B", ConsultaAutorizacaoSVC.xCRDxCartaoVenda.gCID, xCRDxCartaoVenda.CRDxCartaoVendaID.ID, ConsultaAutorizacaoSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogID.ID, XJoinType.Left)); // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
            CRDxConveniado_CRDxConveniadoID_CRDxCartao_CRDxConveniadoID = AddReference(new XSVCReference(new Guid("D2EDF587-08A5-4AD2-84DD-10E3B05B9592"), "FK_D2EDF58708A54AD284DD10E3B05B9592", ConsultaAutorizacaoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConveniadoID.ID, ConsultaAutorizacaoSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxConveniadoID.ID, XJoinType.Inner)); // CRDxConveniado.CRDxConveniadoID --> CRDxCartao.CRDxConveniadoID
            xCRDxCartaoLog.CRDxCartaoID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoID.AllowEmpty = true;
            xCRDxCartaoLog.CRDxCartaoLogID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoLogID.OrderType = XOrderType.Asc;
            xCRDxCartaoLog.CRDxCartaoLogID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoLogID.AllowEmpty = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsDataField = true;
            xCRDxCartaoLog.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxCartaoLog.Data.IsReadOnly = true;
            xCRDxCartaoLog.Data.OrderType = XOrderType.Asc;
            xCRDxCartaoLog.Data.IsDataField = true;
            xCRDxCartaoLog.Data.AllowEmpty = true;
            xCRDxCartaoLog.Mensagem.IsReadOnly = true;
            xCRDxCartaoLog.Mensagem.IsDataField = true;
            xCRDxCartaoLog.Mensagem.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxCartaoLog.NumeroVenda.IsReadOnly = true;
            xCRDxCartaoLog.NumeroVenda.Length = 50;
            xCRDxCartaoLog.NumeroVenda.IsDataField = true;
            xCRDxCartaoLog.NumeroVenda.AllowEmpty = true;
            xCRDxCartaoLog.Origem.IsReadOnly = true;
            xCRDxCartaoLog.Origem.Length = 15;
            xCRDxCartaoLog.Origem.IsDataField = true;
            xCRDxCartaoLog.Origem.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsReadOnly = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxCartaoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxCartaoLogTipo.Tipo.IsReadOnly = true;
            xCRDxCartaoLogTipo.Tipo.Length = 54;
            xCRDxCartaoLogTipo.Tipo.IsDataField = true;
            xCRDxCartaoLogTipo.Tipo.AllowEmpty = true;
            xCRDxCartaoLog.Valor.IsReadOnly = true;
            xCRDxCartaoLog.Valor.Length = 20;
            xCRDxCartaoLog.Valor.Scale = 2;
            xCRDxCartaoLog.Valor.IsDataField = true;
            xCRDxCartaoLog.Valor.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxCartaoID => xCRDxCartaoLog.CRDxCartaoID;
        public XORMField CRDxCartaoLogID => xCRDxCartaoLog.CRDxCartaoLogID;
        public XORMField CRDxPontoVendaID => xCRDxCartaoLog.CRDxPontoVendaID;
        public XORMField Data => xCRDxCartaoLog.Data;
        public XORMField Mensagem => xCRDxCartaoLog.Mensagem;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NumeroVenda => xCRDxCartaoLog.NumeroVenda;
        public XORMField Origem => xCRDxCartaoLog.Origem;
        public XORMField SYSxEstadoID => xCRDxCartaoVenda.SYSxEstadoID;
        public XORMField Tipo => xCRDxCartaoLogTipo.Tipo;
        public XORMField Valor => xCRDxCartaoLog.Valor;
        }
        #endregion XFields
        #region ConsultaAutorizacaoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxCartaoID
        {
            get
            {
                return (Int32)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoID.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoID
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 CRDxCartaoLogID
        {
            get
            {
                return (Int32)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoLogID
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoLogID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Data.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Mensagem
        {
            get
            {
                return (String)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Mensagem.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Mensagem.ID] = value;
            }
        }
        public String? oMensagem
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.Mensagem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConsultaAutorizacaoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroVenda
        {
            get
            {
                return (String)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.NumeroVenda.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.NumeroVenda.ID] = value;
            }
        }
        public String? oNumeroVenda
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.NumeroVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Origem
        {
            get
            {
                return (String)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Origem.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Origem.ID] = value;
            }
        }
        public String? oOrigem
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.Origem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConsultaAutorizacaoSVC.xCRDxCartaoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Tipo
        {
            get
            {
                return (String)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLogTipo.Tipo.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLogTipo.Tipo.ID] = value;
            }
        }
        public String? oTipo
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLogTipo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Valor.ID];
            }
            set
            {
                Value[ConsultaAutorizacaoSVC.xCRDxCartaoLog.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(ConsultaAutorizacaoSVC.xCRDxCartaoLog.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConsultaAutorizacaoSVC.XTuple

        #region ConsultaAutorizacaoSVC.XRule
        public abstract class XRule : XServiceRule<ConsultaAutorizacaoSVC.XDataSet, ConsultaAutorizacaoSVC, ConsultaAutorizacaoSVC.XTuple>
        {
        }
        #endregion ConsultaAutorizacaoSVC.XRule

        #region ConsultaAutorizacaoSVC.XDataSet

        public class XDataSet : XDataSet<ConsultaAutorizacaoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConsultaAutorizacaoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConsultaAutorizacaoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxCartaoID => ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoID.ID;
            public Guid CRDxCartaoLogID => ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID;
            public Guid CRDxPontoVendaID => ConsultaAutorizacaoSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID;
            public Guid Data => ConsultaAutorizacaoSVC.xCRDxCartaoLog.Data.ID;
            public Guid Mensagem => ConsultaAutorizacaoSVC.xCRDxCartaoLog.Mensagem.ID;
            public Guid Nome => ConsultaAutorizacaoSVC.xSYSxPessoa.Nome.ID;
            public Guid NumeroVenda => ConsultaAutorizacaoSVC.xCRDxCartaoLog.NumeroVenda.ID;
            public Guid Origem => ConsultaAutorizacaoSVC.xCRDxCartaoLog.Origem.ID;
            public Guid SYSxEstadoID => ConsultaAutorizacaoSVC.xCRDxCartaoVenda.SYSxEstadoID.ID;
            public Guid Tipo => ConsultaAutorizacaoSVC.xCRDxCartaoLogTipo.Tipo.ID;
            public Guid Valor => ConsultaAutorizacaoSVC.xCRDxCartaoLog.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConsultaAutorizacaoSVC.XDataSet);
            }

        }
        #endregion ConsultaAutorizacaoSVC.XDataSet

        [Guid(ConsultaAutorizacaoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConsultaAutorizacaoSVC))]
        protected class _Service : Service<ConsultaAutorizacaoSVC, XDataSet, XTuple>
        {
            public const String sCID = "43540469-DC48-4CA5-8F8B-2A787C858D39";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConsultaAutorizacaoSVC, XDataSet, XTuple>, XService
             where TModel : ConsultaAutorizacaoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}