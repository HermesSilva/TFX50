//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.FechaFaturaConvenio
{
    [XRegister(typeof(BuscaConvenioSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\FechaFaturaConvenio\BuscaConvenio.dssvc")]
    public class BuscaConvenioSVC : XSVCModel
    {
        #region BuscaConvenioFilterFRM

        [XRegister(typeof(BuscaConvenioFilterFRM), sCID)]
        public class BuscaConvenioFilterFRM : XFRMModel
        {
            public const String sCID = "0E58A323-D1CA-495A-A7A1-93F3C3635B50";
            static BuscaConvenioFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public BuscaConvenioFilterFRM()
            {
                ID = gCID;
                Name = "BuscaConvenioFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion BuscaConvenioFilterFRM

        public const String sCID = "281065E1-C81D-4284-B3C2-9855517EFD33";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConvenio_CRDxConvenioID; // SYSxPessoa.SYSxPessoaID --> CRDxConvenio.CRDxConvenioID

        #region xCRDxConvenio 
        public class xCRDxConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("262D1BF6-0D7D-4462-94A3-FFB21B0FF8DD");

            public xCRDxConvenio()
            {
                Name = "CRDxConvenio";
                Alias = "CRDxConvenio";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.gCID;

                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(CRDxConvenioTipoID, CRDxConvenioTipoID.ID);
                CRDxConvenioTipoID.Owner = this;
                CRDxConvenioTipoID.OwnerID = ID;
                CRDxConvenioTipoID.TableName = Name;
            }

            public static XORMFaceField CRDxConvenioID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioID, new Guid("3329A7D4-77C9-4DDF-A442-FB160FFF6E19"), "CRDxConvenioID", "Convênio");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Inicio, new Guid("FB15F833-0B9F-4836-B50A-2283B366BFF5"), "Inicio", "Início");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Pagamento, new Guid("9F77497E-A0B6-46E6-AE82-CA357C73D336"), "Pagamento", "Dia de Pagamento");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Fechamento, new Guid("2EFA191C-44F1-43C2-9C62-E51C870A6DDE"), "Fechamento", "Dia de Fechamento");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.SYSxEstadoID, new Guid("5B9FC4DF-2049-495C-BB45-C1FC28ACD2E0"), "SYSxEstadoID", "Estado");
            public static XORMFKField CRDxConvenioTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioTipoID, new Guid("62D6A83A-EB21-4777-973A-92B51E71792C"), "CRDxConvenioTipoID", "Tipo de Convênio");
        }
        #endregion xCRDxConvenio 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("D8613216-EC66-444D-B404-E80F9244CEC6");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("7632A9B3-1454-434A-9EE3-87E8CFC08E3E"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("F276BBBE-135F-42FB-882E-8428B1FC2AB8"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        public xCRDxConvenio CRDxConvenio;
        public xSYSxPessoa SYSxPessoa;

        public BuscaConvenioSVC()
        {
            TupleType = typeof(BuscaConvenioSVC.XTuple);
            DataSetType = typeof(BuscaConvenioSVC.XDataSet);
            ServiceRuleCID = new Guid("BD596452-E035-43E1-B3DB-4029635B708B");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("281065E1-C81D-4284-B3C2-9855517EFD33");
            Name = "BuscaConvenio";
            Title = "Busca Convênio";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xCRDxConvenio.Fechamento.ID, xCRDxConvenio.CRDxConvenioID.ID };
            DataSetFields = new Guid[] { xCRDxConvenio.Fechamento.ID, xCRDxConvenio.CRDxConvenioID.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxConvenio.CRDxConvenioID.ID;
            ConfigTableID = new Guid("8CCD762D-565E-47F0-B57A-05C1A22D5627");
            MasterRuleCID = new Guid("BD596452-E035-43E1-B3DB-4029635B708B");
            CRDxConvenio = new xCRDxConvenio();
            CRDxConvenio.IsReadOnly = true;
            AddTable(CRDxConvenio);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxConvenio.ID;
            SYSxPessoa_SYSxPessoaID_CRDxConvenio_CRDxConvenioID = AddReference(new XSVCReference(new Guid("C4B13DD9-2CCE-4C15-B603-7D63BD2ED99A"), "FK_C4B13DD92CCE4C15B6037D63BD2ED99A", BuscaConvenioSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, BuscaConvenioSVC.xCRDxConvenio.gCID, xCRDxConvenio.CRDxConvenioID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConvenio.CRDxConvenioID
            xCRDxConvenio.CRDxConvenioID.IsReadOnly = true;
            xCRDxConvenio.CRDxConvenioID.IsDataField = true;
            xCRDxConvenio.CRDxConvenioID.AllowEmpty = true;
            xCRDxConvenio.Fechamento.IsReadOnly = true;
            xCRDxConvenio.Fechamento.IsDataField = true;
            xCRDxConvenio.Fechamento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConvenioID => xCRDxConvenio.CRDxConvenioID;
        public XORMField Fechamento => xCRDxConvenio.Fechamento;
        public XORMField Nome => xSYSxPessoa.Nome;
        }
        #endregion XFields
        #region BuscaConvenioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[BuscaConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID];
            }
            set
            {
                Value[BuscaConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(BuscaConvenioSVC.xCRDxConvenio.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[BuscaConvenioSVC.xCRDxConvenio.Fechamento.ID];
            }
            set
            {
                Value[BuscaConvenioSVC.xCRDxConvenio.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(BuscaConvenioSVC.xCRDxConvenio.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[BuscaConvenioSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[BuscaConvenioSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(BuscaConvenioSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion BuscaConvenioSVC.XTuple

        #region BuscaConvenioSVC.XRule
        public abstract class XRule : XServiceRule<BuscaConvenioSVC.XDataSet, BuscaConvenioSVC, BuscaConvenioSVC.XTuple>
        {
        }
        #endregion BuscaConvenioSVC.XRule

        #region BuscaConvenioSVC.XDataSet

        public class XDataSet : XDataSet<BuscaConvenioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(BuscaConvenioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<BuscaConvenioSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConvenioID => BuscaConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID;
            public Guid Fechamento => BuscaConvenioSVC.xCRDxConvenio.Fechamento.ID;
            public Guid Nome => BuscaConvenioSVC.xSYSxPessoa.Nome.ID;

            public XDataSet()
            {
                DataSetType = typeof(BuscaConvenioSVC.XDataSet);
            }

        }
        #endregion BuscaConvenioSVC.XDataSet

        [Guid(BuscaConvenioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(BuscaConvenioSVC))]
        protected class _Service : Service<BuscaConvenioSVC, XDataSet, XTuple>
        {
            public const String sCID = "62BC7B2D-FBD6-44DD-8951-40755CC1E289";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<BuscaConvenioSVC, XDataSet, XTuple>, XService
             where TModel : BuscaConvenioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}