//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado;

namespace Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado
{
    [XRegister(typeof(FranqueadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Relatorios\AutorizacaoFranqueado\Franqueado.dssvc")]
    public class FranqueadoSVC : XSVCModel
    {
        #region FranqueadoFilterFRM

        [XRegister(typeof(FranqueadoFilterFRM), sCID)]
        public class FranqueadoFilterFRM : XFRMModel
        {
            public const String sCID = "2249DC27-902D-4747-B69D-8F3AD5C04B4D";
            static FranqueadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public FranqueadoFilterFRM()
            {
                ID = gCID;
                Name = "FranqueadoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion FranqueadoFilterFRM

        public const String sCID = "2E5A5209-8E30-4132-9503-06796AE75A9C";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxPontoVenda_CRDxPontoVendaID_SYSxPessoa_SYSxPessoaID; // CRDxPontoVenda.CRDxPontoVendaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference SYSxEstado_SYSxEstadoID_CRDxPontoVenda_SYSxEstadoID; // SYSxEstado.SYSxEstadoID --> CRDxPontoVenda.SYSxEstadoID

        #region xCRDxPontoVenda 
        public class xCRDxPontoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("3628AB92-7EDD-4D77-862F-278459A627B7");

            public xCRDxPontoVenda()
            {
                Name = "CRDxPontoVenda";
                Alias = "CRDxPontoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.gCID;

                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Pagamento.Alias = "Pagamento";
                Items.Add(TaxaAdministracao, TaxaAdministracao.ID);
                TaxaAdministracao.Owner = this;
                TaxaAdministracao.OwnerID = ID;
                TaxaAdministracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(Inclusao, Inclusao.ID);
                Inclusao.Owner = this;
                Inclusao.OwnerID = ID;
                Inclusao.TableName = Name;
                Items.Add(SYSxFranqueadorID, SYSxFranqueadorID.ID);
                SYSxFranqueadorID.Owner = this;
                SYSxFranqueadorID.OwnerID = ID;
                SYSxFranqueadorID.TableName = Name;
                SYSxFranqueadorID.Alias = "SYSxFranqueadorID";
                Items.Add(DataChave, DataChave.ID);
                DataChave.Owner = this;
                DataChave.OwnerID = ID;
                DataChave.TableName = Name;
                Items.Add(ChaveSeguranca, ChaveSeguranca.ID);
                ChaveSeguranca.Owner = this;
                ChaveSeguranca.OwnerID = ID;
                ChaveSeguranca.TableName = Name;
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
            }

            public static XORMFaceField CRDxPontoVendaID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.CRDxPontoVendaID, new Guid("FAD84733-8F24-42B0-85C2-70A696C9CDF7"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Fechamento, new Guid("655C8A49-F9BC-41E9-9E49-053A7C742DC2"), "Fechamento", "Dia de Fechamento");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Pagamento, new Guid("DCE000F1-087A-4F25-98C3-46F9D0DD0D9D"), "Pagamento", "Dia de Pagamento");
            public static XORMDecimalField TaxaAdministracao = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.TaxaAdministracao, new Guid("D83D6ED4-BE44-41B6-BCD5-F96CEF1CE305"), "TaxaAdministracao", "Taxa de Administração");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxEstadoID, new Guid("9BDF02CB-DB27-4F73-8DB0-2A8D70B4FC80"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inclusao = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Inclusao, new Guid("B620C019-8F97-4EA8-8B03-8FA7886EF57E"), "Inclusao", "Inclusão");
            public static XORMFKField SYSxFranqueadorID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxFranqueadorID, new Guid("F78D96D4-5043-4C60-AB9D-A9BE47401259"), "SYSxFranqueadorID", "Franqueador");
            public static XORMDateTimeField DataChave = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.DataChave, new Guid("FB9340AA-212C-43DC-9A9E-387791E8523B"), "DataChave", "Data da Chave");
            public static XORMField ChaveSeguranca = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.ChaveSeguranca, new Guid("B2958D53-B4F2-4909-861E-84C39238A38D"), "ChaveSeguranca", "Change de Segurança");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Sigla, new Guid("941CC56A-F070-4A9A-9FFB-7BFFF6594B91"), "Sigla", "Sigla");
        }
        #endregion xCRDxPontoVenda 


        #region xSYSxEstado 
        public class xSYSxEstado : XSVCTable
        {

            public static Guid gCID => new Guid("4E2E783F-9A8F-442E-8ACE-49C35C59E23F");

            public xSYSxEstado()
            {
                Name = "SYSxEstado";
                Alias = "SYSxEstado";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID;

                Items.Add(Estado, Estado.ID);
                Estado.Owner = this;
                Estado.OwnerID = ID;
                Estado.TableName = Name;
                Estado.Alias = "Estado";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField Estado = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEstado.Estado, new Guid("51A52BB9-8866-433B-9D1D-AA41F6613247"), "Estado", "Estado");
            public static XORMPKField SYSxEstadoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID, new Guid("312023DB-0603-4CE4-9767-110898ED27AF"), "SYSxEstadoID", "Estado do Componente");
        }
        #endregion xSYSxEstado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("53262722-2A8E-4A9A-8D03-204FA4A17DF7");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("B5BABC4D-AC5A-42EC-A62C-4D0272DCB4F4"), "Nome", "Nome do Franqueado");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("A8651163-7F9E-43F9-A199-C1E2060CEF29"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        public xCRDxPontoVenda CRDxPontoVenda;
        public xSYSxEstado SYSxEstado;
        public xSYSxPessoa SYSxPessoa;

        public FranqueadoSVC()
        {
            TupleType = typeof(FranqueadoSVC.XTuple);
            DataSetType = typeof(FranqueadoSVC.XDataSet);
            ServiceRuleCID = new Guid("230F6E68-DDDF-464C-ACA5-6740CCE4F038");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("2E5A5209-8E30-4132-9503-06796AE75A9C");
            Name = "Franqueado";
            Title = "Franqueado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxPontoVenda.CRDxPontoVendaID.ID, xSYSxEstado.Estado.ID, xSYSxPessoa.Nome.ID, xCRDxPontoVenda.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xCRDxPontoVenda.CRDxPontoVendaID.ID, xCRDxPontoVenda.Fechamento.ID, xCRDxPontoVenda.Pagamento.ID, xCRDxPontoVenda.SYSxEstadoID.ID, xSYSxEstado.Estado.ID, xSYSxPessoa.Nome.ID, xCRDxPontoVenda.SYSxFranqueadorID.ID };
            PKField = xCRDxPontoVenda.CRDxPontoVendaID.ID;
            ConfigTableID = new Guid("71F309BB-69A1-41B9-A07C-B3A63A4295D3");
            StateField = xCRDxPontoVenda.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("230F6E68-DDDF-464C-ACA5-6740CCE4F038");
            XSubServiceItem ss2E2096F0FF2945FA8AD64FC820FDA9C7 = new XSubServiceItem(VendasSVC.gCID, VendasSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID, FranqueadoSVC.gCID, xCRDxPontoVenda.SYSxFranqueadorID.ID, true, XSubSeviceType.Default);
            ss2E2096F0FF2945FA8AD64FC820FDA9C7.Rights = new Int16[] { 1 }; 
            ss2E2096F0FF2945FA8AD64FC820FDA9C7.LateLoad = false;
            SubServices.Add(ss2E2096F0FF2945FA8AD64FC820FDA9C7);
            CRDxPontoVenda = new xCRDxPontoVenda();
            CRDxPontoVenda.IsReadOnly = true;
            AddTable(CRDxPontoVenda);
            SYSxEstado = new xSYSxEstado();
            SYSxEstado.IsReadOnly = true;
            AddTable(SYSxEstado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxPontoVenda.ID;
            CRDxPontoVenda_CRDxPontoVendaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("0261169B-77EC-40FD-8E81-D6B18584BB3F"), "FK_0261169B77EC40FD8E81D6B18584BB3F", FranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, FranqueadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxPontoVenda.CRDxPontoVendaID --> SYSxPessoa.SYSxPessoaID
            SYSxEstado_SYSxEstadoID_CRDxPontoVenda_SYSxEstadoID = AddReference(new XSVCReference(new Guid("6BD7EB4A-8892-4E4D-9099-7BF8715C8827"), "FK_6BD7EB4A88924E4D90997BF8715C8827", FranqueadoSVC.xSYSxEstado.gCID, xSYSxEstado.SYSxEstadoID.ID, FranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.SYSxEstadoID.ID, XJoinType.Inner)); // SYSxEstado.SYSxEstadoID --> CRDxPontoVenda.SYSxEstadoID
            XSVCReference FK_9F927BCE78FB4FA1BBEB34C19E93181B = new XSVCReference(new Guid("9F927BCE-78FB-4FA1-BBEB-34C19E93181B"), "FK_9F927BCE78FB4FA1BBEB34C19E93181B", VendasSVC.gCID, VendasSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID, CRDxPontoVenda.ID, FranqueadoSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID, XJoinType.SubService); // VendasSVC.CRDxPontoVendaID --> Franqueado.SYSxFranqueadorID
            FK_9F927BCE78FB4FA1BBEB34C19E93181B.IsLowRelevance = false;
            AddReference(FK_9F927BCE78FB4FA1BBEB34C19E93181B);
            xCRDxPontoVenda.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxPontoVenda.CRDxPontoVendaID.IsDataField = true;
            xCRDxPontoVenda.CRDxPontoVendaID.AllowEmpty = true;
            xSYSxEstado.Estado.IsReadOnly = true;
            xSYSxEstado.Estado.Length = 64;
            xSYSxEstado.Estado.IsDataField = true;
            xSYSxEstado.Estado.AllowEmpty = true;
            xCRDxPontoVenda.Fechamento.IsReadOnly = true;
            xCRDxPontoVenda.Fechamento.IsDataField = true;
            xCRDxPontoVenda.Fechamento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxPontoVenda.Pagamento.IsReadOnly = true;
            xCRDxPontoVenda.Pagamento.IsDataField = true;
            xCRDxPontoVenda.Pagamento.AllowEmpty = true;
            xCRDxPontoVenda.SYSxEstadoID.IsReadOnly = true;
            xCRDxPontoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxPontoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxPontoVenda.SYSxFranqueadorID.IsReadOnly = true;
            xCRDxPontoVenda.SYSxFranqueadorID.IsDataField = true;
            xCRDxPontoVenda.SYSxFranqueadorID.AllowEmpty = true;
            xCRDxPontoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxPontoVendaID => xCRDxPontoVenda.CRDxPontoVendaID;
        public XORMField Estado => xSYSxEstado.Estado;
        public XORMField Fechamento => xCRDxPontoVenda.Fechamento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Pagamento => xCRDxPontoVenda.Pagamento;
        public XORMField SYSxEstadoID => xCRDxPontoVenda.SYSxEstadoID;
        public XORMField SYSxFranqueadorID => xCRDxPontoVenda.SYSxFranqueadorID;
        }
        #endregion XFields
        #region FranqueadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Estado
        {
            get
            {
                return (String)Value[FranqueadoSVC.xSYSxEstado.Estado.ID];
            }
            set
            {
                Value[FranqueadoSVC.xSYSxEstado.Estado.ID] = value;
            }
        }
        public String? oEstado
        {
            get
            {
                GetOldValue(FranqueadoSVC.xSYSxEstado.Estado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[FranqueadoSVC.xCRDxPontoVenda.Fechamento.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[FranqueadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[FranqueadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(FranqueadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Pagamento
        {
            get
            {
                return (Int16)Value[FranqueadoSVC.xCRDxPontoVenda.Pagamento.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.Pagamento.ID] = value;
            }
        }
        public Int16? oPagamento
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.Pagamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxFranqueadorID
        {
            get
            {
                return (Guid)Value[FranqueadoSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID] = value;
            }
        }
        public Guid? oSYSxFranqueadorID
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.SYSxFranqueadorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FranqueadoSVC.XTuple

        #region FranqueadoSVC.XRule
        public abstract class XRule : XServiceRule<FranqueadoSVC.XDataSet, FranqueadoSVC, FranqueadoSVC.XTuple>
        {
        }
        #endregion FranqueadoSVC.XRule

        #region FranqueadoSVC.XDataSet

        public class XDataSet : XDataSet<FranqueadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FranqueadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FranqueadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxPontoVendaID => FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID;
            public Guid Estado => FranqueadoSVC.xSYSxEstado.Estado.ID;
            public Guid Fechamento => FranqueadoSVC.xCRDxPontoVenda.Fechamento.ID;
            public Guid Nome => FranqueadoSVC.xSYSxPessoa.Nome.ID;
            public Guid Pagamento => FranqueadoSVC.xCRDxPontoVenda.Pagamento.ID;
            public Guid SYSxEstadoID => FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID.ID;
            public Guid SYSxFranqueadorID => FranqueadoSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID;

            public XDataSet()
            {
                DataSetType = typeof(FranqueadoSVC.XDataSet);
            }

            private Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado.VendasSVC.XDataSet _VendasDataSet;

            public Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado.VendasSVC.XDataSet VendasDataSet
            {
                get
                {
                    if (_VendasDataSet == null)
                    {
                        _VendasDataSet = (Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado.VendasSVC.XDataSet)Children.Get(Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado.VendasSVC.gCID);
                        _VendasDataSet.IsReadOnly = true;
                    }
                    return  _VendasDataSet;
                }
            }

        }
        #endregion FranqueadoSVC.XDataSet

        [Guid(FranqueadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FranqueadoSVC))]
        protected class _Service : Service<FranqueadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "7B6269E9-A49C-4B71-B789-44179899E05D";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FranqueadoSVC, XDataSet, XTuple>, XService
             where TModel : FranqueadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}