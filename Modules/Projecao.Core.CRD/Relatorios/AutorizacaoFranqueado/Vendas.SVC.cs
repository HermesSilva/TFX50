//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.Relatorios.AutorizacaoFranqueado
{
    [XRegister(typeof(VendasSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Relatorios\AutorizacaoFranqueado\Vendas.dssvc")]
    public class VendasSVC : XSVCModel
    {
        #region VendasFilterFRM

        [XRegister(typeof(VendasFilterFRM), sCID)]
        public class VendasFilterFRM : XFRMModel
        {
            public const String sCID = "4BD9D941-01AB-4F87-BF37-878CF6DD9DBA";
            static VendasFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public VendasFilterFRM()
            {
                ID = gCID;
                Name = "VendasFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion VendasFilterFRM

        public const String sCID = "F52F50C5-D741-4BED-BE2B-B47D10F977DF";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID; // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID
        public static XSVCReference CRDxConveniado_CRDxConvenioID_SYSxPessoaConvenio_SYSxPessoaID; // CRDxConveniado.CRDxConvenioID --> SYSxPessoaConvenio.SYSxPessoaID
        public static XSVCReference CRDxConveniado_CRDxConveniadoID_CRDxCartao_CRDxConveniadoID; // CRDxConveniado.CRDxConveniadoID --> CRDxCartao.CRDxConveniadoID
        public static XSVCReference CRDxCartaoLog_CRDxCartaoID_CRDxCartao_CRDxCartaoID; // CRDxCartaoLog.CRDxCartaoID --> CRDxCartao.CRDxCartaoID
        public static XSVCReference CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID; // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID

        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("026E9521-A3AF-4B98-87F0-581FDBFC3072");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("46EAC02D-1DAB-4477-B908-0290247E6976"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("58E8228C-44FC-4DA5-92CF-2E55DF9E5ECE"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("5B3D5614-B8DD-45BC-AF39-819C0EAC77E3"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("CD92822A-1A60-4B83-8379-AA235704DA68"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("C9BF0CB7-33E9-4661-BD2A-09004CF9C300"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("27D079CB-C00F-44C6-9329-415B569BF5C7"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("E1DB86CB-C3BC-4357-9667-0B70E3687767"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("80B593A0-616F-4DD1-9287-316B4BB99A14");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("84A5DA71-049D-4AC5-B8FE-4FFC35D08B6A"), "Nome", "Nome do Conveniado");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("CC8CF482-63AC-44E5-BF88-F2FD30159526"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xSYSxPessoaConvenio 
        public class xSYSxPessoaConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("89205878-6B83-4B92-96A6-40F0401255A1");

            public xSYSxPessoaConvenio()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoaConvenio";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeConvenio";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("2C9188FF-393B-43BD-81F9-1BA2FA548888"), "Nome", "Nome do Convênio");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("8EB03F31-6D21-4FC9-9518-F97F285FE132"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoaConvenio 


        #region xCRDxCartao 
        public class xCRDxCartao : XSVCTable
        {

            public static Guid gCID => new Guid("996FC1E1-DEC2-4310-ABC5-4ECB99BA6A38");

            public xCRDxCartao()
            {
                Name = "CRDxCartao";
                Alias = "CRDxCartao";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(Vencimento, Vencimento.ID);
                Vencimento.Owner = this;
                Vencimento.OwnerID = ID;
                Vencimento.TableName = Name;
                Items.Add(Emissao, Emissao.ID);
                Emissao.Owner = this;
                Emissao.OwnerID = ID;
                Emissao.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFKField CRDxConveniadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxConveniadoID, new Guid("E535194D-0F03-43B9-B6B5-C3F7AC162954"), "CRDxConveniadoID", "Conveniado");
            public static XORMFaceField CRDxCartaoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoID, new Guid("8A03465E-56E2-4D46-962B-B190E817D1E0"), "CRDxCartaoID", "Cartão");
            public static XORMDateField Vencimento = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Vencimento, new Guid("A8B00F94-AAF9-4D74-AE74-3EDC057214AB"), "Vencimento", "Vencimento");
            public static XORMDateField Emissao = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Emissao, new Guid("350835CF-A595-4FCF-8E14-5EC09380225B"), "Emissao", "Emissão");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Numero, new Guid("3A5E2257-36DD-487A-9A16-59DD8C41A8E2"), "Numero", "Número");
            public static XORMFKField CRDxCartaoEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoEstadoID, new Guid("98A4BA7B-7577-4811-913B-383F013CD03F"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartao 


        #region xCRDxCartaoLog 
        public class xCRDxCartaoLog : XSVCTable
        {

            public static Guid gCID => new Guid("A57D8B2D-532C-4741-86CF-D2508F8FCA19");

            public xCRDxCartaoLog()
            {
                Name = "CRDxCartaoLog";
                Alias = "CRDxCartaoLog";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.gCID;

                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(CRDxCartaoLogID, CRDxCartaoLogID.ID);
                CRDxCartaoLogID.Owner = this;
                CRDxCartaoLogID.OwnerID = ID;
                CRDxCartaoLogID.TableName = Name;
                CRDxCartaoLogID.Alias = "CRDxCartaoLogID";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
                Items.Add(NumeroVenda, NumeroVenda.ID);
                NumeroVenda.Owner = this;
                NumeroVenda.OwnerID = ID;
                NumeroVenda.TableName = Name;
                NumeroVenda.Alias = "NumeroVenda";
                Items.Add(CRDxCartaoLogOrigemID, CRDxCartaoLogOrigemID.ID);
                CRDxCartaoLogOrigemID.Owner = this;
                CRDxCartaoLogOrigemID.OwnerID = ID;
                CRDxCartaoLogOrigemID.TableName = Name;
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
            }

            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoID, new Guid("390822BD-93AD-4021-98F2-655706BF950D"), "CRDxCartaoID", "Cartão");
            public static XORMFaceField CRDxCartaoLogID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogID, new Guid("6355EC15-A1A0-4477-ABA0-9386603AF0F4"), "CRDxCartaoLogID", "Log de Atividades");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxPontoVendaID, new Guid("777099EB-A258-4563-B00A-89C9005FE993"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Mensagem, new Guid("A3EE24BC-5EE0-4A3D-B16B-375D885E09D8"), "Mensagem", "Mensagem");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Data, new Guid("D6B8ECC9-1008-42FB-A671-E898069F3F5F"), "Data", "Data Ocorrência");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Valor, new Guid("75DB78CD-526E-4214-AC15-FAB6C9D5F2B1"), "Valor", "Valor");
            public static XORMFKField CRDxCartaoLogTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogTipoID, new Guid("9D0B064F-3F6F-443A-B525-C6615554F02B"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
            public static XORMField NumeroVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.NumeroVenda, new Guid("424298E1-B807-4DAB-BB8E-5EB0869E0E3F"), "NumeroVenda", "Número da Venda");
            public static XORMFKField CRDxCartaoLogOrigemID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogOrigemID, new Guid("0274F30C-1FC2-4EF8-BEEC-68E49B66F93E"), "CRDxCartaoLogOrigemID", "Log de Atividades");
            public static XORMField Origem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Origem, new Guid("D52C3D60-D1E9-4BE9-B076-28DDF723E1DD"), "Origem", "Origem");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Desconto, new Guid("61D2A4C8-9536-4874-BAAB-F1FFAE1BB923"), "Desconto", "Desconto");
        }
        #endregion xCRDxCartaoLog 


        #region xCRDxCartaoVenda 
        public class xCRDxCartaoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("C0CD4B3F-4B2D-4736-BC56-DF7AC4ED7859");

            public xCRDxCartaoVenda()
            {
                Name = "CRDxCartaoVenda";
                Alias = "CRDxCartaoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.gCID;

                Items.Add(CRDxCartaoVendaID, CRDxCartaoVendaID.ID);
                CRDxCartaoVendaID.Owner = this;
                CRDxCartaoVendaID.OwnerID = ID;
                CRDxCartaoVendaID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(DadosVenda, DadosVenda.ID);
                DadosVenda.Owner = this;
                DadosVenda.OwnerID = ID;
                DadosVenda.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(FaturadoFranqueado, FaturadoFranqueado.ID);
                FaturadoFranqueado.Owner = this;
                FaturadoFranqueado.OwnerID = ID;
                FaturadoFranqueado.TableName = Name;
                Items.Add(FaturadoCartao, FaturadoCartao.ID);
                FaturadoCartao.Owner = this;
                FaturadoCartao.OwnerID = ID;
                FaturadoCartao.TableName = Name;
            }

            public static XORMPKField CRDxCartaoVendaID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoVendaID, new Guid("6C6C1744-5CA6-456A-A38C-CEA48DEFF4A4"), "CRDxCartaoVendaID", "Venda por cartão");
            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoID, new Guid("6F787518-31A9-440F-9322-EF7C440D35A1"), "CRDxCartaoID", "Cartão");
            public static XORMField DadosVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.DadosVenda, new Guid("F9387159-1005-4CA6-B001-F1E9D6BB8A33"), "DadosVenda", "Dado da venda");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.SYSxEstadoID, new Guid("26B88BC6-8C4C-4B41-9B4E-530BB905BD2F"), "SYSxEstadoID", "Estado");
            public static XORMField FaturadoFranqueado = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoFranqueado, new Guid("8DB31584-69A3-4FA5-82E8-9321D312E7A5"), "FaturadoFranqueado", "Faturado para Franqueado");
            public static XORMField FaturadoCartao = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoCartao, new Guid("8BC28AEC-EC5D-43F6-B6AC-57A5509D873E"), "FaturadoCartao", "Faturado para Cartão");
        }
        #endregion xCRDxCartaoVenda 


        public xCRDxCartao CRDxCartao;
        public xCRDxCartaoLog CRDxCartaoLog;
        public xCRDxCartaoVenda CRDxCartaoVenda;
        public xCRDxConveniado CRDxConveniado;
        public xSYSxPessoa SYSxPessoa;
        public xSYSxPessoaConvenio SYSxPessoaConvenio;

        public VendasSVC()
        {
            TupleType = typeof(VendasSVC.XTuple);
            DataSetType = typeof(VendasSVC.XDataSet);
            ServiceRuleCID = new Guid("B740FBB2-A35A-421A-96FB-43630CBAFBAB");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F52F50C5-D741-4BED-BE2B-B47D10F977DF");
            Name = "Vendas";
            Title = "Vendas";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            OrderByFields = new Guid[] { xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.CRDxCartaoLogID.ID };
            DataSetFields = new Guid[] { xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLog.CRDxPontoVendaID.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.NumeroVenda.ID, xCRDxCartaoLog.Valor.ID, xCRDxCartaoVenda.SYSxEstadoID.ID, xSYSxPessoa.Nome.ID, xSYSxPessoaConvenio.Nome.ID };
            PKField = xCRDxCartaoLog.CRDxCartaoLogID.ID;
            ConfigTableID = new Guid("F49233DE-4561-4573-895B-9C2421492A52");
            StateField = xCRDxCartaoVenda.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("B740FBB2-A35A-421A-96FB-43630CBAFBAB");
            CRDxCartao = new xCRDxCartao();
            CRDxCartao.IsReadOnly = true;
            AddTable(CRDxCartao);
            CRDxCartaoLog = new xCRDxCartaoLog();
            CRDxCartaoLog.IsReadOnly = true;
            AddTable(CRDxCartaoLog);
            CRDxCartaoVenda = new xCRDxCartaoVenda();
            CRDxCartaoVenda.IsReadOnly = true;
            AddTable(CRDxCartaoVenda);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            SYSxPessoaConvenio = new xSYSxPessoaConvenio();
            SYSxPessoaConvenio.IsReadOnly = true;
            AddTable(SYSxPessoaConvenio);
            MasterTableID = CRDxCartaoLog.ID;
            SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID = AddReference(new XSVCReference(new Guid("26B756C4-E3CF-4CA8-BCF4-F1A07AC459B1"), "FK_26B756C4E3CF4CA8BCF4F1A07AC459B1", VendasSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, VendasSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID
            CRDxConveniado_CRDxConvenioID_SYSxPessoaConvenio_SYSxPessoaID = AddReference(new XSVCReference(new Guid("4315832B-A7F5-4CC8-AFED-3512B3A3C560"), "FK_4315832BA7F54CC8AFED3512B3A3C560", VendasSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConvenioID.ID, VendasSVC.xSYSxPessoaConvenio.gCID, xSYSxPessoaConvenio.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxConveniado.CRDxConvenioID --> SYSxPessoaConvenio.SYSxPessoaID
            CRDxConveniado_CRDxConveniadoID_CRDxCartao_CRDxConveniadoID = AddReference(new XSVCReference(new Guid("54A92B8E-A896-438C-B26C-698B7D818487"), "FK_54A92B8EA896438CB26C698B7D818487", VendasSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConveniadoID.ID, VendasSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxConveniadoID.ID, XJoinType.Inner)); // CRDxConveniado.CRDxConveniadoID --> CRDxCartao.CRDxConveniadoID
            CRDxCartaoLog_CRDxCartaoID_CRDxCartao_CRDxCartaoID = AddReference(new XSVCReference(new Guid("8FAF551D-278A-4E72-82EB-EC65052F7856"), "FK_8FAF551D278A4E7282EBEC65052F7856", VendasSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoID.ID, VendasSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxCartaoID.ID, XJoinType.Inner)); // CRDxCartaoLog.CRDxCartaoID --> CRDxCartao.CRDxCartaoID
            CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID = AddReference(new XSVCReference(new Guid("D2EF6C41-311F-4408-A0F9-88BF946CC31C"), "FK_D2EF6C41311F4408A0F988BF946CC31C", VendasSVC.xCRDxCartaoVenda.gCID, xCRDxCartaoVenda.CRDxCartaoVendaID.ID, VendasSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogID.ID, XJoinType.Inner)); // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
            xCRDxCartaoLog.CRDxCartaoLogID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoLogID.OrderType = XOrderType.Asc;
            xCRDxCartaoLog.CRDxCartaoLogID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoLogID.AllowEmpty = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxPontoVendaID.IsDataField = true;
            xCRDxCartaoLog.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxCartaoLog.Data.IsReadOnly = true;
            xCRDxCartaoLog.Data.OrderType = XOrderType.Asc;
            xCRDxCartaoLog.Data.IsDataField = true;
            xCRDxCartaoLog.Data.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xSYSxPessoaConvenio.Nome.IsReadOnly = true;
            xSYSxPessoaConvenio.Nome.Length = 256;
            xSYSxPessoaConvenio.Nome.IsDataField = true;
            xSYSxPessoaConvenio.Nome.AllowEmpty = true;
            xCRDxCartaoLog.NumeroVenda.IsReadOnly = true;
            xCRDxCartaoLog.NumeroVenda.Length = 50;
            xCRDxCartaoLog.NumeroVenda.IsDataField = true;
            xCRDxCartaoLog.NumeroVenda.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsReadOnly = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxCartaoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxCartaoLog.Valor.IsReadOnly = true;
            xCRDxCartaoLog.Valor.Length = 20;
            xCRDxCartaoLog.Valor.Scale = 2;
            xCRDxCartaoLog.Valor.IsDataField = true;
            xCRDxCartaoLog.Valor.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxCartaoLogID => xCRDxCartaoLog.CRDxCartaoLogID;
        public XORMField CRDxPontoVendaID => xCRDxCartaoLog.CRDxPontoVendaID;
        public XORMField Data => xCRDxCartaoLog.Data;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NomeConvenio => xSYSxPessoaConvenio.Nome;
        public XORMField NumeroVenda => xCRDxCartaoLog.NumeroVenda;
        public XORMField SYSxEstadoID => xCRDxCartaoVenda.SYSxEstadoID;
        public XORMField Valor => xCRDxCartaoLog.Valor;
        }
        #endregion XFields
        #region VendasSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxCartaoLogID
        {
            get
            {
                return (Int32)Value[VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoLogID
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[VendasSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[VendasSVC.xCRDxCartaoLog.Data.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VendasSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[VendasSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VendasSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeConvenio
        {
            get
            {
                return (String)Value[VendasSVC.xSYSxPessoaConvenio.Nome.ID];
            }
            set
            {
                Value[VendasSVC.xSYSxPessoaConvenio.Nome.ID] = value;
            }
        }
        public String? oNomeConvenio
        {
            get
            {
                GetOldValue(VendasSVC.xSYSxPessoaConvenio.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroVenda
        {
            get
            {
                return (String)Value[VendasSVC.xCRDxCartaoLog.NumeroVenda.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.NumeroVenda.ID] = value;
            }
        }
        public String? oNumeroVenda
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.NumeroVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[VendasSVC.xCRDxCartaoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[VendasSVC.xCRDxCartaoLog.Valor.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VendasSVC.XTuple

        #region VendasSVC.XRule
        public abstract class XRule : XServiceRule<VendasSVC.XDataSet, VendasSVC, VendasSVC.XTuple>
        {
        }
        #endregion VendasSVC.XRule

        #region VendasSVC.XDataSet

        public class XDataSet : XDataSet<VendasSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VendasSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VendasSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxCartaoLogID => VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID;
            public Guid CRDxPontoVendaID => VendasSVC.xCRDxCartaoLog.CRDxPontoVendaID.ID;
            public Guid Data => VendasSVC.xCRDxCartaoLog.Data.ID;
            public Guid Nome => VendasSVC.xSYSxPessoa.Nome.ID;
            public Guid NomeConvenio => VendasSVC.xSYSxPessoaConvenio.Nome.ID;
            public Guid NumeroVenda => VendasSVC.xCRDxCartaoLog.NumeroVenda.ID;
            public Guid SYSxEstadoID => VendasSVC.xCRDxCartaoVenda.SYSxEstadoID.ID;
            public Guid Valor => VendasSVC.xCRDxCartaoLog.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(VendasSVC.XDataSet);
            }

        }
        #endregion VendasSVC.XDataSet

        [Guid(VendasSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VendasSVC))]
        protected class _Service : Service<VendasSVC, XDataSet, XTuple>
        {
            public const String sCID = "8F0250DE-ACC6-4B42-B883-B5DDE7A0785C";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VendasSVC, XDataSet, XTuple>, XService
             where TModel : VendasSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}