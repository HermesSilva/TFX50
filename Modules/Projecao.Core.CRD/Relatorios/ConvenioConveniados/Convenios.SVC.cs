//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Projecao.Core.CRD.Relatorios.ConvenioConveniados;

namespace Projecao.Core.CRD.Relatorios.ConvenioConveniados
{
    [XRegister(typeof(ConveniosSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Relatorios\ConvenioConveniados\Convenios.dssvc")]
    public class ConveniosSVC : XSVCModel
    {
        #region ConveniosFilterFRM

        [XRegister(typeof(ConveniosFilterFRM), sCID)]
        public class ConveniosFilterFRM : XFRMModel
        {
            public const String sCID = "FFFB9649-3B03-43AB-98C6-D3843BCA77F9";
            static ConveniosFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConveniosFilterFRM()
            {
                ID = gCID;
                Name = "ConveniosFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion ConveniosFilterFRM

        public const String sCID = "EE3C1FE9-A1D8-4037-AA60-123A503BADBF";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxConvenio_SYSxEstadoID_SYSxEstado_SYSxEstadoID; // CRDxConvenio.SYSxEstadoID --> SYSxEstado.SYSxEstadoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConvenio_CRDxConvenioID; // SYSxPessoa.SYSxPessoaID --> CRDxConvenio.CRDxConvenioID

        #region xCRDxConvenio 
        public class xCRDxConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("54BAA6D6-9333-4BC1-8A8A-5F3ABF390ABF");

            public xCRDxConvenio()
            {
                Name = "CRDxConvenio";
                Alias = "CRDxConvenio";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.gCID;

                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Pagamento.Alias = "Pagamento";
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(CRDxConvenioTipoID, CRDxConvenioTipoID.ID);
                CRDxConvenioTipoID.Owner = this;
                CRDxConvenioTipoID.OwnerID = ID;
                CRDxConvenioTipoID.TableName = Name;
            }

            public static XORMFaceField CRDxConvenioID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioID, new Guid("BBA6C147-1240-4375-8CFE-857438C27CDA"), "CRDxConvenioID", "Convênio");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Inicio, new Guid("BB00D753-44A7-4086-9D7C-4D07DC227461"), "Inicio", "Início");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Pagamento, new Guid("F697E871-6D92-4628-A955-D384C2BEEA59"), "Pagamento", "Dia de Pagamento");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Fechamento, new Guid("99A96B1A-7051-452E-BA29-FEBE44BA544C"), "Fechamento", "Dia de Fechamento");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.SYSxEstadoID, new Guid("46696840-3D0B-43FE-9B88-4011DD9CD769"), "SYSxEstadoID", "Estado");
            public static XORMFKField CRDxConvenioTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioTipoID, new Guid("9B210A1D-5828-4AE5-8E38-3FCC1FAB9917"), "CRDxConvenioTipoID", "Tipo de Convênio");
        }
        #endregion xCRDxConvenio 


        #region xSYSxEstado 
        public class xSYSxEstado : XSVCTable
        {

            public static Guid gCID => new Guid("AB02791B-F44C-42CE-BDB1-FCFC7045E96F");

            public xSYSxEstado()
            {
                Name = "SYSxEstado";
                Alias = "SYSxEstado";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID;

                Items.Add(Estado, Estado.ID);
                Estado.Owner = this;
                Estado.OwnerID = ID;
                Estado.TableName = Name;
                Estado.Alias = "Estado";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField Estado = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEstado.Estado, new Guid("3DE7A32E-6384-4573-9E17-C00D0D2C84AD"), "Estado", "Estado");
            public static XORMPKField SYSxEstadoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID, new Guid("881A6E95-9BD3-4DCE-ACAA-99767860DEFA"), "SYSxEstadoID", "Estado do Componente");
        }
        #endregion xSYSxEstado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("BC3921CF-7666-40E5-BBB2-20741138ADCD");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("296A38D9-A2E0-4985-B7C4-2417E983BBD4"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("C62C69AF-6239-4AB2-BB29-04E11559BBED"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        public xCRDxConvenio CRDxConvenio;
        public xSYSxEstado SYSxEstado;
        public xSYSxPessoa SYSxPessoa;

        public ConveniosSVC()
        {
            TupleType = typeof(ConveniosSVC.XTuple);
            DataSetType = typeof(ConveniosSVC.XDataSet);
            ServiceRuleCID = new Guid("96BE6E34-F225-4832-811C-55F6AF59EB4D");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("EE3C1FE9-A1D8-4037-AA60-123A503BADBF");
            Name = "Convenios";
            Title = "Convênios";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xCRDxConvenio.Fechamento.ID, xCRDxConvenio.Pagamento.ID, xCRDxConvenio.SYSxEstadoID.ID, xCRDxConvenio.CRDxConvenioID.ID, xSYSxEstado.Estado.ID, xSYSxPessoa.Nome.ID };
            StateField = xCRDxConvenio.SYSxEstadoID.ID;
            PKField = xCRDxConvenio.CRDxConvenioID.ID;
            ConfigTableID = new Guid("8CCD762D-565E-47F0-B57A-05C1A22D5627");
            MasterRuleCID = new Guid("96BE6E34-F225-4832-811C-55F6AF59EB4D");
            XSubServiceItem ssA3831DE335004660B6FFD144B4DD3A94 = new XSubServiceItem(ConveniadosSVC.gCID, ConveniadosSVC.xCRDxConveniado.CRDxConvenioID.ID, ConveniosSVC.gCID, xCRDxConvenio.CRDxConvenioID.ID, true, XSubSeviceType.Default);
            ssA3831DE335004660B6FFD144B4DD3A94.Rights = new Int16[] { 1 }; 
            ssA3831DE335004660B6FFD144B4DD3A94.LateLoad = false;
            SubServices.Add(ssA3831DE335004660B6FFD144B4DD3A94);
            CRDxConvenio = new xCRDxConvenio();
            CRDxConvenio.IsReadOnly = true;
            AddTable(CRDxConvenio);
            SYSxEstado = new xSYSxEstado();
            SYSxEstado.IsReadOnly = true;
            AddTable(SYSxEstado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxConvenio.ID;
            CRDxConvenio_SYSxEstadoID_SYSxEstado_SYSxEstadoID = AddReference(new XSVCReference(new Guid("4C0F290D-D175-4FAF-B408-6FAA83141CF3"), "FK_4C0F290DD1754FAFB4086FAA83141CF3", ConveniosSVC.xCRDxConvenio.gCID, xCRDxConvenio.SYSxEstadoID.ID, ConveniosSVC.xSYSxEstado.gCID, xSYSxEstado.SYSxEstadoID.ID, XJoinType.Inner)); // CRDxConvenio.SYSxEstadoID --> SYSxEstado.SYSxEstadoID
            SYSxPessoa_SYSxPessoaID_CRDxConvenio_CRDxConvenioID = AddReference(new XSVCReference(new Guid("DE7196C2-C681-466A-B1B4-28448572AE54"), "FK_DE7196C2C681466AB1B428448572AE54", ConveniosSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, ConveniosSVC.xCRDxConvenio.gCID, xCRDxConvenio.CRDxConvenioID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConvenio.CRDxConvenioID
            XSVCReference FK_EF2C395C492B42319938BD32EDDF14D4 = new XSVCReference(new Guid("EF2C395C-492B-4231-9938-BD32EDDF14D4"), "FK_EF2C395C492B42319938BD32EDDF14D4", ConveniadosSVC.gCID, ConveniadosSVC.xCRDxConveniado.CRDxConvenioID.ID, CRDxConvenio.ID, ConveniosSVC.xCRDxConvenio.CRDxConvenioID.ID, XJoinType.SubService); // ConveniadosSVC.CRDxConvenioID --> Convenios.CRDxConvenioID
            FK_EF2C395C492B42319938BD32EDDF14D4.IsLowRelevance = false;
            AddReference(FK_EF2C395C492B42319938BD32EDDF14D4);
            xCRDxConvenio.CRDxConvenioID.IsReadOnly = true;
            xCRDxConvenio.CRDxConvenioID.IsDataField = true;
            xCRDxConvenio.CRDxConvenioID.AllowEmpty = true;
            xSYSxEstado.Estado.IsReadOnly = true;
            xSYSxEstado.Estado.Length = 64;
            xSYSxEstado.Estado.IsDataField = true;
            xSYSxEstado.Estado.AllowEmpty = true;
            xCRDxConvenio.Fechamento.IsReadOnly = true;
            xCRDxConvenio.Fechamento.IsDataField = true;
            xCRDxConvenio.Fechamento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxConvenio.Pagamento.IsReadOnly = true;
            xCRDxConvenio.Pagamento.IsDataField = true;
            xCRDxConvenio.Pagamento.AllowEmpty = true;
            xCRDxConvenio.SYSxEstadoID.IsReadOnly = true;
            xCRDxConvenio.SYSxEstadoID.IsDataField = true;
            xCRDxConvenio.SYSxEstadoID.AllowEmpty = true;
            xCRDxConvenio.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConvenioID => xCRDxConvenio.CRDxConvenioID;
        public XORMField Estado => xSYSxEstado.Estado;
        public XORMField Fechamento => xCRDxConvenio.Fechamento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Pagamento => xCRDxConvenio.Pagamento;
        public XORMField SYSxEstadoID => xCRDxConvenio.SYSxEstadoID;
        }
        #endregion XFields
        #region ConveniosSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[ConveniosSVC.xCRDxConvenio.CRDxConvenioID.ID];
            }
            set
            {
                Value[ConveniosSVC.xCRDxConvenio.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(ConveniosSVC.xCRDxConvenio.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Estado
        {
            get
            {
                return (String)Value[ConveniosSVC.xSYSxEstado.Estado.ID];
            }
            set
            {
                Value[ConveniosSVC.xSYSxEstado.Estado.ID] = value;
            }
        }
        public String? oEstado
        {
            get
            {
                GetOldValue(ConveniosSVC.xSYSxEstado.Estado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[ConveniosSVC.xCRDxConvenio.Fechamento.ID];
            }
            set
            {
                Value[ConveniosSVC.xCRDxConvenio.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(ConveniosSVC.xCRDxConvenio.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConveniosSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConveniosSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConveniosSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Pagamento
        {
            get
            {
                return (Int16)Value[ConveniosSVC.xCRDxConvenio.Pagamento.ID];
            }
            set
            {
                Value[ConveniosSVC.xCRDxConvenio.Pagamento.ID] = value;
            }
        }
        public Int16? oPagamento
        {
            get
            {
                GetOldValue(ConveniosSVC.xCRDxConvenio.Pagamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConveniosSVC.xCRDxConvenio.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConveniosSVC.xCRDxConvenio.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConveniosSVC.xCRDxConvenio.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConveniosSVC.XTuple

        #region ConveniosSVC.XRule
        public abstract class XRule : XServiceRule<ConveniosSVC.XDataSet, ConveniosSVC, ConveniosSVC.XTuple>
        {
        }
        #endregion ConveniosSVC.XRule

        #region ConveniosSVC.XDataSet

        public class XDataSet : XDataSet<ConveniosSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConveniosSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConveniosSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConvenioID => ConveniosSVC.xCRDxConvenio.CRDxConvenioID.ID;
            public Guid Estado => ConveniosSVC.xSYSxEstado.Estado.ID;
            public Guid Fechamento => ConveniosSVC.xCRDxConvenio.Fechamento.ID;
            public Guid Nome => ConveniosSVC.xSYSxPessoa.Nome.ID;
            public Guid Pagamento => ConveniosSVC.xCRDxConvenio.Pagamento.ID;
            public Guid SYSxEstadoID => ConveniosSVC.xCRDxConvenio.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConveniosSVC.XDataSet);
            }

            private Projecao.Core.CRD.Relatorios.ConvenioConveniados.ConveniadosSVC.XDataSet _ConveniadosDataSet;

            public Projecao.Core.CRD.Relatorios.ConvenioConveniados.ConveniadosSVC.XDataSet ConveniadosDataSet
            {
                get
                {
                    if (_ConveniadosDataSet == null)
                    {
                        _ConveniadosDataSet = (Projecao.Core.CRD.Relatorios.ConvenioConveniados.ConveniadosSVC.XDataSet)Children.Get(Projecao.Core.CRD.Relatorios.ConvenioConveniados.ConveniadosSVC.gCID);
                        _ConveniadosDataSet.IsReadOnly = true;
                    }
                    return  _ConveniadosDataSet;
                }
            }

        }
        #endregion ConveniosSVC.XDataSet

        [Guid(ConveniosSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConveniosSVC))]
        protected class _Service : Service<ConveniosSVC, XDataSet, XTuple>
        {
            public const String sCID = "E54FF1CA-371E-4F25-A284-387FC08083A4";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConveniosSVC, XDataSet, XTuple>, XService
             where TModel : ConveniosSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}