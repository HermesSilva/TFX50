//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Projecao.Core.CRD.Relatorios.AutorizacaoConvenio;

namespace Projecao.Core.CRD.Relatorios.AutorizacaoConvenio
{
    [XRegister(typeof(ConvenioSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Relatorios\AutorizacaoConvenio\Convenio.dssvc")]
    public class ConvenioSVC : XSVCModel
    {
        #region ConvenioFilterFRM

        [XRegister(typeof(ConvenioFilterFRM), sCID)]
        public class ConvenioFilterFRM : XFRMModel
        {
            public const String sCID = "C5FBD38D-13B8-46FC-B6D6-094FFBB89492";
            static ConvenioFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConvenioFilterFRM()
            {
                ID = gCID;
                Name = "ConvenioFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 960, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion ConvenioFilterFRM

        public const String sCID = "71E90311-6D13-4AC7-A2D2-7C781CE4C318";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxConvenio_SYSxEstadoID_SYSxEstado_SYSxEstadoID; // CRDxConvenio.SYSxEstadoID --> SYSxEstado.SYSxEstadoID
        public static XSVCReference CRDxConvenio_CRDxConvenioID_SYSxPessoa_SYSxPessoaID; // CRDxConvenio.CRDxConvenioID --> SYSxPessoa.SYSxPessoaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("1D41FF6C-8C84-4D48-90B5-6681D7C90E12");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("17D37254-2D81-439E-BB5F-B2467F0A0D59"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("AD799287-126B-4C94-A367-659E6313B153"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxConvenio 
        public class xCRDxConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("3738A3CB-F859-467A-9375-84A09423C93A");

            public xCRDxConvenio()
            {
                Name = "CRDxConvenio";
                Alias = "CRDxConvenio";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.gCID;

                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Pagamento.Alias = "Pagamento";
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(CRDxConvenioTipoID, CRDxConvenioTipoID.ID);
                CRDxConvenioTipoID.Owner = this;
                CRDxConvenioTipoID.OwnerID = ID;
                CRDxConvenioTipoID.TableName = Name;
            }

            public static XORMFaceField CRDxConvenioID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioID, new Guid("87951201-9E91-431D-A14B-FB0C0B9F0C37"), "CRDxConvenioID", "Convênio");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Inicio, new Guid("C0360AF7-985C-4D4F-869E-9C278859048B"), "Inicio", "Início");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Pagamento, new Guid("FFE1E175-55BB-4AAB-91EE-CB0D0AF8ACAC"), "Pagamento", "Dia de Pagamento");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Fechamento, new Guid("E25AE1CF-8B7B-4E73-86F7-3E7F67AA554B"), "Fechamento", "Dia de Fechamento");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.SYSxEstadoID, new Guid("85FAD753-878D-4FB9-B79F-C870A0516904"), "SYSxEstadoID", "Estado");
            public static XORMFKField CRDxConvenioTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioTipoID, new Guid("271CA062-0376-468F-85C6-4C753DCB4FF6"), "CRDxConvenioTipoID", "Tipo de Convênio");
        }
        #endregion xCRDxConvenio 


        #region xSYSxEstado 
        public class xSYSxEstado : XSVCTable
        {

            public static Guid gCID => new Guid("44B333D2-F991-422C-9576-1696CD6AE1CA");

            public xSYSxEstado()
            {
                Name = "SYSxEstado";
                Alias = "SYSxEstado";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID;

                Items.Add(Estado, Estado.ID);
                Estado.Owner = this;
                Estado.OwnerID = ID;
                Estado.TableName = Name;
                Estado.Alias = "Estado";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField Estado = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEstado.Estado, new Guid("C6B2F25D-72B8-48F5-AC64-917C2AC45F6E"), "Estado", "Estado");
            public static XORMPKField SYSxEstadoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID, new Guid("0BE459AA-D5D6-481C-8312-D34DDACBA693"), "SYSxEstadoID", "Estado do Componente");
        }
        #endregion xSYSxEstado 


        public xCRDxConvenio CRDxConvenio;
        public xSYSxEstado SYSxEstado;
        public xSYSxPessoa SYSxPessoa;

        public ConvenioSVC()
        {
            TupleType = typeof(ConvenioSVC.XTuple);
            DataSetType = typeof(ConvenioSVC.XDataSet);
            ServiceRuleCID = new Guid("A2CD6037-FCC1-4D7D-80A7-F5BDF7BD342E");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("71E90311-6D13-4AC7-A2D2-7C781CE4C318");
            Name = "Convenio";
            Title = "Convênio";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xCRDxConvenio.CRDxConvenioID.ID, xCRDxConvenio.Fechamento.ID, xCRDxConvenio.Pagamento.ID, xSYSxEstado.Estado.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxConvenio.CRDxConvenioID.ID;
            ConfigTableID = new Guid("8CCD762D-565E-47F0-B57A-05C1A22D5627");
            MasterRuleCID = new Guid("A2CD6037-FCC1-4D7D-80A7-F5BDF7BD342E");
            XSubServiceItem ssD7B45C5353B2406E8A66A1BE03EF1DD7 = new XSubServiceItem(ConveniadoSVC.gCID, ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID, ConvenioSVC.gCID, xCRDxConvenio.CRDxConvenioID.ID, true, XSubSeviceType.Default);
            ssD7B45C5353B2406E8A66A1BE03EF1DD7.Rights = new Int16[] { 1 }; 
            ssD7B45C5353B2406E8A66A1BE03EF1DD7.LateLoad = false;
            SubServices.Add(ssD7B45C5353B2406E8A66A1BE03EF1DD7);
            CRDxConvenio = new xCRDxConvenio();
            CRDxConvenio.IsReadOnly = true;
            AddTable(CRDxConvenio);
            SYSxEstado = new xSYSxEstado();
            SYSxEstado.IsReadOnly = true;
            AddTable(SYSxEstado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxConvenio.ID;
            CRDxConvenio_SYSxEstadoID_SYSxEstado_SYSxEstadoID = AddReference(new XSVCReference(new Guid("284862D1-E5C8-41EE-8FD2-D80021F4DC72"), "FK_284862D1E5C841EE8FD2D80021F4DC72", ConvenioSVC.xCRDxConvenio.gCID, xCRDxConvenio.SYSxEstadoID.ID, ConvenioSVC.xSYSxEstado.gCID, xSYSxEstado.SYSxEstadoID.ID, XJoinType.Inner)); // CRDxConvenio.SYSxEstadoID --> SYSxEstado.SYSxEstadoID
            CRDxConvenio_CRDxConvenioID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("8CF44974-775B-43D9-95CA-A3AF4BF9FDDA"), "FK_8CF44974775B43D995CAA3AF4BF9FDDA", ConvenioSVC.xCRDxConvenio.gCID, xCRDxConvenio.CRDxConvenioID.ID, ConvenioSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxConvenio.CRDxConvenioID --> SYSxPessoa.SYSxPessoaID
            XSVCReference FK_021EE188C07B41AC948A330154C3A7E2 = new XSVCReference(new Guid("021EE188-C07B-41AC-948A-330154C3A7E2"), "FK_021EE188C07B41AC948A330154C3A7E2", ConveniadoSVC.gCID, ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID, CRDxConvenio.ID, ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID, XJoinType.SubService); // ConveniadoSVC.CRDxConvenioID --> Convenio.CRDxConvenioID
            FK_021EE188C07B41AC948A330154C3A7E2.IsLowRelevance = false;
            AddReference(FK_021EE188C07B41AC948A330154C3A7E2);
            xCRDxConvenio.CRDxConvenioID.IsReadOnly = true;
            xCRDxConvenio.CRDxConvenioID.IsDataField = true;
            xCRDxConvenio.CRDxConvenioID.AllowEmpty = true;
            xSYSxEstado.Estado.IsReadOnly = true;
            xSYSxEstado.Estado.Length = 64;
            xSYSxEstado.Estado.IsDataField = true;
            xSYSxEstado.Estado.AllowEmpty = true;
            xCRDxConvenio.Fechamento.IsReadOnly = true;
            xCRDxConvenio.Fechamento.IsDataField = true;
            xCRDxConvenio.Fechamento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxConvenio.Pagamento.IsReadOnly = true;
            xCRDxConvenio.Pagamento.IsDataField = true;
            xCRDxConvenio.Pagamento.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConvenioID => xCRDxConvenio.CRDxConvenioID;
        public XORMField Estado => xSYSxEstado.Estado;
        public XORMField Fechamento => xCRDxConvenio.Fechamento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Pagamento => xCRDxConvenio.Pagamento;
        }
        #endregion XFields
        #region ConvenioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID];
            }
            set
            {
                Value[ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(ConvenioSVC.xCRDxConvenio.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Estado
        {
            get
            {
                return (String)Value[ConvenioSVC.xSYSxEstado.Estado.ID];
            }
            set
            {
                Value[ConvenioSVC.xSYSxEstado.Estado.ID] = value;
            }
        }
        public String? oEstado
        {
            get
            {
                GetOldValue(ConvenioSVC.xSYSxEstado.Estado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[ConvenioSVC.xCRDxConvenio.Fechamento.ID];
            }
            set
            {
                Value[ConvenioSVC.xCRDxConvenio.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(ConvenioSVC.xCRDxConvenio.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConvenioSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConvenioSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConvenioSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Pagamento
        {
            get
            {
                return (Int16)Value[ConvenioSVC.xCRDxConvenio.Pagamento.ID];
            }
            set
            {
                Value[ConvenioSVC.xCRDxConvenio.Pagamento.ID] = value;
            }
        }
        public Int16? oPagamento
        {
            get
            {
                GetOldValue(ConvenioSVC.xCRDxConvenio.Pagamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConvenioSVC.XTuple

        #region ConvenioSVC.XRule
        public abstract class XRule : XServiceRule<ConvenioSVC.XDataSet, ConvenioSVC, ConvenioSVC.XTuple>
        {
        }
        #endregion ConvenioSVC.XRule

        #region ConvenioSVC.XDataSet

        public class XDataSet : XDataSet<ConvenioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConvenioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConvenioSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConvenioID => ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID;
            public Guid Estado => ConvenioSVC.xSYSxEstado.Estado.ID;
            public Guid Fechamento => ConvenioSVC.xCRDxConvenio.Fechamento.ID;
            public Guid Nome => ConvenioSVC.xSYSxPessoa.Nome.ID;
            public Guid Pagamento => ConvenioSVC.xCRDxConvenio.Pagamento.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConvenioSVC.XDataSet);
            }

            private Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.ConveniadoSVC.XDataSet _ConveniadoDataSet;

            public Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.ConveniadoSVC.XDataSet ConveniadoDataSet
            {
                get
                {
                    if (_ConveniadoDataSet == null)
                    {
                        _ConveniadoDataSet = (Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.ConveniadoSVC.XDataSet)Children.Get(Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.ConveniadoSVC.gCID);
                        _ConveniadoDataSet.IsReadOnly = true;
                    }
                    return  _ConveniadoDataSet;
                }
            }

        }
        #endregion ConvenioSVC.XDataSet

        [Guid(ConvenioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConvenioSVC))]
        protected class _Service : Service<ConvenioSVC, XDataSet, XTuple>
        {
            public const String sCID = "41C071BC-4A72-42F9-8B83-C34990095E1A";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConvenioSVC, XDataSet, XTuple>, XService
             where TModel : ConvenioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}