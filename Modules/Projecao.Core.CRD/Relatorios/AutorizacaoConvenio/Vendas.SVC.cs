//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.Relatorios.AutorizacaoConvenio
{
    [XRegister(typeof(VendasSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Relatorios\AutorizacaoConvenio\Vendas.dssvc")]
    public class VendasSVC : XSVCModel
    {
        #region VendasFilterFRM

        [XRegister(typeof(VendasFilterFRM), sCID)]
        public class VendasFilterFRM : XFRMModel
        {
            public const String sCID = "0BE5ED06-6F92-463A-A81F-9AF6D0A3F6F5";
            static VendasFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public VendasFilterFRM()
            {
                ID = gCID;
                Name = "VendasFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion VendasFilterFRM

        public const String sCID = "8A33E4E1-FBEA-4A30-AB9B-4EC58A370DBB";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxCartaoLog_CRDxPontoVendaID_SYSxPessoa_SYSxPessoaID; // CRDxCartaoLog.CRDxPontoVendaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID; // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
        public static XSVCReference CRDxCartao_CRDxCartaoID_CRDxCartaoLog_CRDxCartaoID; // CRDxCartao.CRDxCartaoID --> CRDxCartaoLog.CRDxCartaoID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("773FAC33-E3A8-4821-A99E-F7BD9B363345");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("25FAEEA7-7915-4DBB-B060-BC31C4B0F601"), "Nome", "Franqueado");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("069ED3E5-BD07-4081-9357-11C9F255EE3F"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxCartaoLog 
        public class xCRDxCartaoLog : XSVCTable
        {

            public static Guid gCID => new Guid("77A69F84-9AE6-4D4C-AF81-A1BE89C9DE81");

            public xCRDxCartaoLog()
            {
                Name = "CRDxCartaoLog";
                Alias = "CRDxCartaoLog";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.gCID;

                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(CRDxCartaoLogID, CRDxCartaoLogID.ID);
                CRDxCartaoLogID.Owner = this;
                CRDxCartaoLogID.OwnerID = ID;
                CRDxCartaoLogID.TableName = Name;
                CRDxCartaoLogID.Alias = "CRDxCartaoLogID";
                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Mensagem.Alias = "Mensagem";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(CRDxCartaoLogTipoID, CRDxCartaoLogTipoID.ID);
                CRDxCartaoLogTipoID.Owner = this;
                CRDxCartaoLogTipoID.OwnerID = ID;
                CRDxCartaoLogTipoID.TableName = Name;
                Items.Add(NumeroVenda, NumeroVenda.ID);
                NumeroVenda.Owner = this;
                NumeroVenda.OwnerID = ID;
                NumeroVenda.TableName = Name;
                NumeroVenda.Alias = "NumeroVenda";
                Items.Add(CRDxCartaoLogOrigemID, CRDxCartaoLogOrigemID.ID);
                CRDxCartaoLogOrigemID.Owner = this;
                CRDxCartaoLogOrigemID.OwnerID = ID;
                CRDxCartaoLogOrigemID.TableName = Name;
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
            }

            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoID, new Guid("F6C1A53D-BC61-4CEF-BA5E-B986D48F7A7F"), "CRDxCartaoID", "Cartão");
            public static XORMFaceField CRDxCartaoLogID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogID, new Guid("84574C72-37E1-4CB3-A32A-45CCA4503A38"), "CRDxCartaoLogID", "Log de Atividades");
            public static XORMFKField CRDxPontoVendaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxPontoVendaID, new Guid("6573225F-EFF0-44B8-B634-3D6219F104AE"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Mensagem, new Guid("911DF9E4-37AA-4921-BCAA-8B03CB113759"), "Mensagem", "Mensagem");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Data, new Guid("237EDFDC-AD42-4661-8CEF-E2A8CF21BF97"), "Data", "Data Ocorrência");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Valor, new Guid("D1982482-598F-4F7D-9589-025A3FA2E2F8"), "Valor", "Valor");
            public static XORMFKField CRDxCartaoLogTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogTipoID, new Guid("E45A0A89-9E4B-4064-BFDD-3D34ADF7467E"), "CRDxCartaoLogTipoID", "Tipo de Log de Cartão");
            public static XORMField NumeroVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.NumeroVenda, new Guid("DFD96C7D-6FB5-44A3-A373-8507512E5EEC"), "NumeroVenda", "Número da Venda");
            public static XORMFKField CRDxCartaoLogOrigemID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.CRDxCartaoLogOrigemID, new Guid("612DDD10-DA8B-4E7D-B7AB-5524AB70E5C2"), "CRDxCartaoLogOrigemID", "Log de Atividades");
            public static XORMField Origem = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Origem, new Guid("C9F20964-6824-47F0-89B5-0772331D1843"), "Origem", "Origem");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoLog.Desconto, new Guid("AD1C3227-5DFE-47C9-9F34-49DD48417BC3"), "Desconto", "Desconto");
        }
        #endregion xCRDxCartaoLog 


        #region xCRDxCartaoVenda 
        public class xCRDxCartaoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("D23D914B-53A1-42A6-AE6A-38AF9B6040B0");

            public xCRDxCartaoVenda()
            {
                Name = "CRDxCartaoVenda";
                Alias = "CRDxCartaoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.gCID;

                Items.Add(CRDxCartaoVendaID, CRDxCartaoVendaID.ID);
                CRDxCartaoVendaID.Owner = this;
                CRDxCartaoVendaID.OwnerID = ID;
                CRDxCartaoVendaID.TableName = Name;
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(DadosVenda, DadosVenda.ID);
                DadosVenda.Owner = this;
                DadosVenda.OwnerID = ID;
                DadosVenda.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(FaturadoFranqueado, FaturadoFranqueado.ID);
                FaturadoFranqueado.Owner = this;
                FaturadoFranqueado.OwnerID = ID;
                FaturadoFranqueado.TableName = Name;
                Items.Add(FaturadoCartao, FaturadoCartao.ID);
                FaturadoCartao.Owner = this;
                FaturadoCartao.OwnerID = ID;
                FaturadoCartao.TableName = Name;
            }

            public static XORMPKField CRDxCartaoVendaID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoVendaID, new Guid("E2EEFB3C-1856-4227-AE26-AC5106735861"), "CRDxCartaoVendaID", "Venda por cartão");
            public static XORMFKField CRDxCartaoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.CRDxCartaoID, new Guid("8BB413C2-8971-4C8A-87D3-979026CAFD04"), "CRDxCartaoID", "Cartão");
            public static XORMField DadosVenda = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.DadosVenda, new Guid("B5B27AA0-77B2-4D90-8F2A-D566FF6DBD3C"), "DadosVenda", "Dado da venda");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.SYSxEstadoID, new Guid("8DB0201A-C5E1-4F2D-ABA7-E21E1961C99E"), "SYSxEstadoID", "Estado");
            public static XORMField FaturadoFranqueado = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoFranqueado, new Guid("E8D2542B-92F4-4A41-9977-4C419CE0DF74"), "FaturadoFranqueado", "Faturado para Franqueado");
            public static XORMField FaturadoCartao = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoVenda.FaturadoCartao, new Guid("CBCB2B19-2D17-42A6-8B47-B334E0E0E2A7"), "FaturadoCartao", "Faturado para Cartão");
        }
        #endregion xCRDxCartaoVenda 


        #region xCRDxCartao 
        public class xCRDxCartao : XSVCTable
        {

            public static Guid gCID => new Guid("ECD68C0F-E1B0-41C4-B8C9-EFA9CCD59DB3");

            public xCRDxCartao()
            {
                Name = "CRDxCartao";
                Alias = "CRDxCartao";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                CRDxConveniadoID.Alias = "CRDxConveniadoID";
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(Vencimento, Vencimento.ID);
                Vencimento.Owner = this;
                Vencimento.OwnerID = ID;
                Vencimento.TableName = Name;
                Items.Add(Emissao, Emissao.ID);
                Emissao.Owner = this;
                Emissao.OwnerID = ID;
                Emissao.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFKField CRDxConveniadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxConveniadoID, new Guid("931C0965-97EB-4C15-8329-796C08E468F3"), "CRDxConveniadoID", "Conveniado");
            public static XORMFaceField CRDxCartaoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoID, new Guid("0B7791DF-772D-44B7-9D1E-35CA3C5714B8"), "CRDxCartaoID", "Cartão");
            public static XORMDateField Vencimento = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Vencimento, new Guid("F9BB6360-E0E2-43FE-B9E6-D0C27C439893"), "Vencimento", "Vencimento");
            public static XORMDateField Emissao = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Emissao, new Guid("D6E55D1A-FEEE-456A-A9A7-C9D84FD1CAD5"), "Emissao", "Emissão");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Numero, new Guid("F28E1178-6226-4824-8F87-FFBD8CAEBEBF"), "Numero", "Número");
            public static XORMFKField CRDxCartaoEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoEstadoID, new Guid("9175914C-2ADA-450E-B306-55C338D494EE"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartao 


        public xCRDxCartao CRDxCartao;
        public xCRDxCartaoLog CRDxCartaoLog;
        public xCRDxCartaoVenda CRDxCartaoVenda;
        public xSYSxPessoa SYSxPessoa;

        public VendasSVC()
        {
            TupleType = typeof(VendasSVC.XTuple);
            DataSetType = typeof(VendasSVC.XDataSet);
            ServiceRuleCID = new Guid("5101215A-BE3B-449E-AB41-5430AC9A8372");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("8A33E4E1-FBEA-4A30-AB9B-4EC58A370DBB");
            Name = "Vendas";
            Title = "Vendas";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            OrderByFields = new Guid[] { xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.CRDxCartaoLogID.ID };
            DataSetFields = new Guid[] { xCRDxCartao.CRDxConveniadoID.ID, xCRDxCartaoLog.CRDxCartaoLogID.ID, xCRDxCartaoLog.Data.ID, xCRDxCartaoLog.Mensagem.ID, xCRDxCartaoLog.NumeroVenda.ID, xCRDxCartaoVenda.SYSxEstadoID.ID, xCRDxCartaoLog.Valor.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxCartaoLog.CRDxCartaoLogID.ID;
            ConfigTableID = new Guid("F49233DE-4561-4573-895B-9C2421492A52");
            StateField = xCRDxCartaoVenda.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("5101215A-BE3B-449E-AB41-5430AC9A8372");
            CRDxCartao = new xCRDxCartao();
            CRDxCartao.IsReadOnly = true;
            AddTable(CRDxCartao);
            CRDxCartaoLog = new xCRDxCartaoLog();
            CRDxCartaoLog.IsReadOnly = true;
            AddTable(CRDxCartaoLog);
            CRDxCartaoVenda = new xCRDxCartaoVenda();
            CRDxCartaoVenda.IsReadOnly = true;
            AddTable(CRDxCartaoVenda);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxCartaoLog.ID;
            CRDxCartaoLog_CRDxPontoVendaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("875AA722-EC31-47EE-8140-1FEF19BFE2F0"), "FK_875AA722EC3147EE81401FEF19BFE2F0", VendasSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxPontoVendaID.ID, VendasSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxCartaoLog.CRDxPontoVendaID --> SYSxPessoa.SYSxPessoaID
            CRDxCartaoVenda_CRDxCartaoVendaID_CRDxCartaoLog_CRDxCartaoLogID = AddReference(new XSVCReference(new Guid("B549A25D-E6EB-4568-8F8B-E45E0083C3B1"), "FK_B549A25DE6EB45688F8BE45E0083C3B1", VendasSVC.xCRDxCartaoVenda.gCID, xCRDxCartaoVenda.CRDxCartaoVendaID.ID, VendasSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoLogID.ID, XJoinType.Inner)); // CRDxCartaoVenda.CRDxCartaoVendaID --> CRDxCartaoLog.CRDxCartaoLogID
            CRDxCartao_CRDxCartaoID_CRDxCartaoLog_CRDxCartaoID = AddReference(new XSVCReference(new Guid("F5B86287-F69F-4944-B975-6F2E64023557"), "FK_F5B86287F69F4944B9756F2E64023557", VendasSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxCartaoID.ID, VendasSVC.xCRDxCartaoLog.gCID, xCRDxCartaoLog.CRDxCartaoID.ID, XJoinType.Inner)); // CRDxCartao.CRDxCartaoID --> CRDxCartaoLog.CRDxCartaoID
            xCRDxCartaoLog.CRDxCartaoLogID.IsReadOnly = true;
            xCRDxCartaoLog.CRDxCartaoLogID.OrderType = XOrderType.Asc;
            xCRDxCartaoLog.CRDxCartaoLogID.IsDataField = true;
            xCRDxCartaoLog.CRDxCartaoLogID.AllowEmpty = true;
            xCRDxCartao.CRDxConveniadoID.IsReadOnly = true;
            xCRDxCartao.CRDxConveniadoID.IsDataField = true;
            xCRDxCartao.CRDxConveniadoID.AllowEmpty = true;
            xCRDxCartaoLog.Data.IsReadOnly = true;
            xCRDxCartaoLog.Data.OrderType = XOrderType.Asc;
            xCRDxCartaoLog.Data.IsDataField = true;
            xCRDxCartaoLog.Data.AllowEmpty = true;
            xCRDxCartaoLog.Mensagem.IsReadOnly = true;
            xCRDxCartaoLog.Mensagem.IsDataField = true;
            xCRDxCartaoLog.Mensagem.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxCartaoLog.NumeroVenda.IsReadOnly = true;
            xCRDxCartaoLog.NumeroVenda.Length = 50;
            xCRDxCartaoLog.NumeroVenda.IsDataField = true;
            xCRDxCartaoLog.NumeroVenda.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsReadOnly = true;
            xCRDxCartaoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxCartaoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxCartaoLog.Valor.IsReadOnly = true;
            xCRDxCartaoLog.Valor.Length = 20;
            xCRDxCartaoLog.Valor.Scale = 2;
            xCRDxCartaoLog.Valor.IsDataField = true;
            xCRDxCartaoLog.Valor.AllowEmpty = true;
            xCRDxCartaoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxCartaoLogID => xCRDxCartaoLog.CRDxCartaoLogID;
        public XORMField CRDxConveniadoID => xCRDxCartao.CRDxConveniadoID;
        public XORMField Data => xCRDxCartaoLog.Data;
        public XORMField Mensagem => xCRDxCartaoLog.Mensagem;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NumeroVenda => xCRDxCartaoLog.NumeroVenda;
        public XORMField SYSxEstadoID => xCRDxCartaoVenda.SYSxEstadoID;
        public XORMField Valor => xCRDxCartaoLog.Valor;
        }
        #endregion XFields
        #region VendasSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxCartaoLogID
        {
            get
            {
                return (Int32)Value[VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoLogID
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 CRDxConveniadoID
        {
            get
            {
                return (Int32)Value[VendasSVC.xCRDxCartao.CRDxConveniadoID.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartao.CRDxConveniadoID.ID] = value;
            }
        }
        public Int32? oCRDxConveniadoID
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartao.CRDxConveniadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[VendasSVC.xCRDxCartaoLog.Data.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Mensagem
        {
            get
            {
                return (String)Value[VendasSVC.xCRDxCartaoLog.Mensagem.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.Mensagem.ID] = value;
            }
        }
        public String? oMensagem
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.Mensagem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VendasSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[VendasSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VendasSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroVenda
        {
            get
            {
                return (String)Value[VendasSVC.xCRDxCartaoLog.NumeroVenda.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.NumeroVenda.ID] = value;
            }
        }
        public String? oNumeroVenda
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.NumeroVenda, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[VendasSVC.xCRDxCartaoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[VendasSVC.xCRDxCartaoLog.Valor.ID];
            }
            set
            {
                Value[VendasSVC.xCRDxCartaoLog.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(VendasSVC.xCRDxCartaoLog.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VendasSVC.XTuple

        #region VendasSVC.XRule
        public abstract class XRule : XServiceRule<VendasSVC.XDataSet, VendasSVC, VendasSVC.XTuple>
        {
        }
        #endregion VendasSVC.XRule

        #region VendasSVC.XDataSet

        public class XDataSet : XDataSet<VendasSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VendasSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VendasSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxCartaoLogID => VendasSVC.xCRDxCartaoLog.CRDxCartaoLogID.ID;
            public Guid CRDxConveniadoID => VendasSVC.xCRDxCartao.CRDxConveniadoID.ID;
            public Guid Data => VendasSVC.xCRDxCartaoLog.Data.ID;
            public Guid Mensagem => VendasSVC.xCRDxCartaoLog.Mensagem.ID;
            public Guid Nome => VendasSVC.xSYSxPessoa.Nome.ID;
            public Guid NumeroVenda => VendasSVC.xCRDxCartaoLog.NumeroVenda.ID;
            public Guid SYSxEstadoID => VendasSVC.xCRDxCartaoVenda.SYSxEstadoID.ID;
            public Guid Valor => VendasSVC.xCRDxCartaoLog.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(VendasSVC.XDataSet);
            }

        }
        #endregion VendasSVC.XDataSet

        [Guid(VendasSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VendasSVC))]
        protected class _Service : Service<VendasSVC, XDataSet, XTuple>
        {
            public const String sCID = "1DE06159-9BA4-4BF7-835F-01F5235D86FA";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VendasSVC, XDataSet, XTuple>, XService
             where TModel : VendasSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}