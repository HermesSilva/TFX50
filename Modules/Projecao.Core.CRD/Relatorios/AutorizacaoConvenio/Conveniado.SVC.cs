//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Projecao.Core.CRD.Relatorios.AutorizacaoConvenio;

namespace Projecao.Core.CRD.Relatorios.AutorizacaoConvenio
{
    [XRegister(typeof(ConveniadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Relatorios\AutorizacaoConvenio\Conveniado.dssvc")]
    public class ConveniadoSVC : XSVCModel
    {
        #region ConveniadoFilterFRM

        [XRegister(typeof(ConveniadoFilterFRM), sCID)]
        public class ConveniadoFilterFRM : XFRMModel
        {
            public const String sCID = "AA37F2DD-E301-4675-B378-D5B380ED7366";
            static ConveniadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConveniadoFilterFRM()
            {
                ID = gCID;
                Name = "ConveniadoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion ConveniadoFilterFRM

        public const String sCID = "5D490A0F-C1A8-4894-B316-7AB0300A82D2";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID; // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("7E03F3A2-57C0-47E5-9145-577139908C17");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeConveniado";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("B7449B8F-19DB-43CD-82EA-2D7256F5C3D8"), "Nome", "Nome do Conveniado");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("40E08B43-A94E-4213-9407-3D4FADF2FC35"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("8B784AFB-F9AE-4040-A77D-F4044A3AD272");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                CRDxConveniadoID.Alias = "CRDxConveniadoID";
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Matricula.Alias = "Matricula";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("C44B5332-FFAC-4B59-820E-93F700A8BA38"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("8F5E277E-2D45-4C6B-A69F-343AA5EA11E8"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("B994A769-283A-42A9-913F-AFA58DF2D325"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("449A8E89-68BE-4838-ABC0-0FCD4E58A9A5"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("8FAD3238-CCB5-4354-91D2-569F10F47503"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("CA51232F-8DBF-429F-9828-73758969A7B2"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("DABBCDBA-8332-41A0-8249-21D8D9772A9F"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        public xCRDxConveniado CRDxConveniado;
        public xSYSxPessoa SYSxPessoa;

        public ConveniadoSVC()
        {
            TupleType = typeof(ConveniadoSVC.XTuple);
            DataSetType = typeof(ConveniadoSVC.XDataSet);
            ServiceRuleCID = new Guid("390ABB5B-F9F0-4810-83B2-FDE52C3210E9");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("5D490A0F-C1A8-4894-B316-7AB0300A82D2");
            Name = "Conveniado";
            Title = "Conveniado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xCRDxConveniado.CRDxConveniadoID.ID, xCRDxConveniado.CRDxConvenioID.ID, xCRDxConveniado.Matricula.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxConveniado.CRDxConveniadoID.ID;
            ConfigTableID = new Guid("5657F33F-5FB7-432D-84DD-6C4146B08751");
            MasterRuleCID = new Guid("390ABB5B-F9F0-4810-83B2-FDE52C3210E9");
            XSubServiceItem ss2E308FEF8FE74AB389D11F847B68D11C = new XSubServiceItem(VendasSVC.gCID, VendasSVC.xCRDxCartao.CRDxConveniadoID.ID, ConveniadoSVC.gCID, xCRDxConveniado.CRDxConveniadoID.ID, true, XSubSeviceType.Default);
            ss2E308FEF8FE74AB389D11F847B68D11C.Rights = new Int16[] { 1 }; 
            ss2E308FEF8FE74AB389D11F847B68D11C.LateLoad = false;
            SubServices.Add(ss2E308FEF8FE74AB389D11F847B68D11C);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxConveniado.ID;
            SYSxPessoa_SYSxPessoaID_CRDxConveniado_ERPxPessoaFisicaID = AddReference(new XSVCReference(new Guid("6FD1148A-C4D6-49EC-B1C0-FAAED2856742"), "FK_6FD1148AC4D649ECB1C0FAAED2856742", ConveniadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, ConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxConveniado.ERPxPessoaFisicaID
            XSVCReference FK_0923B49B8D454950A9D5B85109E801BC = new XSVCReference(new Guid("0923B49B-8D45-4950-A9D5-B85109E801BC"), "FK_0923B49B8D454950A9D5B85109E801BC", VendasSVC.gCID, VendasSVC.xCRDxCartao.CRDxConveniadoID.ID, CRDxConveniado.ID, ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID, XJoinType.SubService); // VendasSVC.CRDxConveniadoID --> Conveniado.CRDxConveniadoID
            FK_0923B49B8D454950A9D5B85109E801BC.IsLowRelevance = false;
            AddReference(FK_0923B49B8D454950A9D5B85109E801BC);
            xCRDxConveniado.CRDxConveniadoID.IsReadOnly = true;
            xCRDxConveniado.CRDxConveniadoID.IsDataField = true;
            xCRDxConveniado.CRDxConveniadoID.AllowEmpty = true;
            xCRDxConveniado.CRDxConvenioID.IsReadOnly = true;
            xCRDxConveniado.CRDxConvenioID.IsDataField = true;
            xCRDxConveniado.CRDxConvenioID.AllowEmpty = true;
            xCRDxConveniado.Matricula.IsReadOnly = true;
            xCRDxConveniado.Matricula.Length = 12;
            xCRDxConveniado.Matricula.IsDataField = true;
            xCRDxConveniado.Matricula.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConveniadoID => xCRDxConveniado.CRDxConveniadoID;
        public XORMField CRDxConvenioID => xCRDxConveniado.CRDxConvenioID;
        public XORMField Matricula => xCRDxConveniado.Matricula;
        public XORMField NomeConveniado => xSYSxPessoa.Nome;
        }
        #endregion XFields
        #region ConveniadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxConveniadoID
        {
            get
            {
                return (Int32)Value[ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID] = value;
            }
        }
        public Int32? oCRDxConveniadoID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Matricula
        {
            get
            {
                return (String)Value[ConveniadoSVC.xCRDxConveniado.Matricula.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.Matricula.ID] = value;
            }
        }
        public String? oMatricula
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.Matricula, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeConveniado
        {
            get
            {
                return (String)Value[ConveniadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConveniadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNomeConveniado
        {
            get
            {
                GetOldValue(ConveniadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConveniadoSVC.XTuple

        #region ConveniadoSVC.XRule
        public abstract class XRule : XServiceRule<ConveniadoSVC.XDataSet, ConveniadoSVC, ConveniadoSVC.XTuple>
        {
        }
        #endregion ConveniadoSVC.XRule

        #region ConveniadoSVC.XDataSet

        public class XDataSet : XDataSet<ConveniadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConveniadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConveniadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConveniadoID => ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID;
            public Guid CRDxConvenioID => ConveniadoSVC.xCRDxConveniado.CRDxConvenioID.ID;
            public Guid Matricula => ConveniadoSVC.xCRDxConveniado.Matricula.ID;
            public Guid NomeConveniado => ConveniadoSVC.xSYSxPessoa.Nome.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConveniadoSVC.XDataSet);
            }

            private Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.VendasSVC.XDataSet _VendasDataSet;

            public Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.VendasSVC.XDataSet VendasDataSet
            {
                get
                {
                    if (_VendasDataSet == null)
                    {
                        _VendasDataSet = (Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.VendasSVC.XDataSet)Children.Get(Projecao.Core.CRD.Relatorios.AutorizacaoConvenio.VendasSVC.gCID);
                        _VendasDataSet.IsReadOnly = true;
                    }
                    return  _VendasDataSet;
                }
            }

        }
        #endregion ConveniadoSVC.XDataSet

        [Guid(ConveniadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConveniadoSVC))]
        protected class _Service : Service<ConveniadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "3C6CABCA-D828-46B7-85C6-BFA282F2ABFF";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConveniadoSVC, XDataSet, XTuple>, XService
             where TModel : ConveniadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}