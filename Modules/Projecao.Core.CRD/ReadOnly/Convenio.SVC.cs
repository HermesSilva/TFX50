//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using Projecao.Core.ERP.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.ReadOnly
{
    [XRegister(typeof(ConvenioSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\ReadOnly\Convenio.dssvc")]
    public class ConvenioSVC : XSVCModel
    {
        #region ConvenioFilterFRM

        [XRegister(typeof(ConvenioFilterFRM), sCID)]
        public class ConvenioFilterFRM : XFRMModel
        {
            public const String sCID = "70E4D6DC-B33C-4F98-A088-E27E2498ABF6";
            static ConvenioFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConvenioFilterFRM()
            {
                ID = gCID;
                Name = "ConvenioFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 834, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] { new Guid("3EF72D40-4115-422E-B159-17C8A4592288") };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("26780EBA-EE83-4A00-BA3E-AAE4BD168D76"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("C972E047-4809-488B-9F2A-F2EA8ED46235")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("26780EBA-EE83-4A00-BA3E-AAE4BD168D76"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion ConvenioFilterFRM

        public const String sCID = "7AD9AF59-78BD-44A6-A86F-0B9221DA3385";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxPessoaJuridica_ERPxPessoaJuridicaID_CRDxConvenio_CRDxConvenioID; // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> CRDxConvenio.CRDxConvenioID
        public static XSVCReference ERPxPessoaJuridica_ERPxPessoaJuridicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference CRDxConvenioUsuario_CRDxConvenioID_CRDxConvenio_CRDxConvenioID; // CRDxConvenioUsuario.CRDxConvenioID --> CRDxConvenio.CRDxConvenioID

        #region xCRDxConvenio 
        public class xCRDxConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("2AB18923-CAA4-4265-8DEB-19B046A04538");

            public xCRDxConvenio()
            {
                Name = "CRDxConvenio";
                Alias = "CRDxConvenio";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.gCID;

                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                CRDxConvenioID.Alias = "CRDxConvenioID";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(CRDxConvenioTipoID, CRDxConvenioTipoID.ID);
                CRDxConvenioTipoID.Owner = this;
                CRDxConvenioTipoID.OwnerID = ID;
                CRDxConvenioTipoID.TableName = Name;
            }

            public static XORMFaceField CRDxConvenioID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioID, new Guid("2E6E843D-091F-42D4-B888-B5505585009B"), "CRDxConvenioID", "Convênio");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Inicio, new Guid("E76C4374-B2BB-477C-AD34-F743D05B6C9B"), "Inicio", "Início");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Pagamento, new Guid("CFE81DC1-FDEF-460E-BFDD-0E22446C5FBC"), "Pagamento", "Dia de Pagamento");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.Fechamento, new Guid("2BBC564D-48D2-4C5B-B888-2495E4261FA1"), "Fechamento", "Dia de Fechamento");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.SYSxEstadoID, new Guid("9E655103-6F69-4E02-9BE2-1F34F2F756AF"), "SYSxEstadoID", "Estado");
            public static XORMFKField CRDxConvenioTipoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenio.CRDxConvenioTipoID, new Guid("600A9048-6646-42B8-BD2D-E585F9DA0995"), "CRDxConvenioTipoID", "Tipo de Convênio");
        }
        #endregion xCRDxConvenio 


        #region xERPxPessoaJuridica 
        public class xERPxPessoaJuridica : XSVCTable
        {

            public static Guid gCID => new Guid("A7BA8826-B79C-4D6D-91B2-6199C3F94CD4");

            public xERPxPessoaJuridica()
            {
                Name = "ERPxPessoaJuridica";
                Alias = "ERPxPessoaJuridica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.gCID;

                Items.Add(ERPxPessoaJuridicaID, ERPxPessoaJuridicaID.ID);
                ERPxPessoaJuridicaID.Owner = this;
                ERPxPessoaJuridicaID.OwnerID = ID;
                ERPxPessoaJuridicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(RazaoSocial, RazaoSocial.ID);
                RazaoSocial.Owner = this;
                RazaoSocial.OwnerID = ID;
                RazaoSocial.TableName = Name;
                RazaoSocial.Alias = "RazaoSocial";
            }

            public static XORMFaceField ERPxPessoaJuridicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.ERPxPessoaJuridicaID, new Guid("57196AEA-5B9F-482D-9DD0-3284C51F0DAA"), "ERPxPessoaJuridicaID", "Pessoa Jurídica");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.SYSxEstadoID, new Guid("D3D9963C-E79C-4B49-A932-D647F0F77E8A"), "SYSxEstadoID", "Estado");
            public static XORMField RazaoSocial = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.RazaoSocial, new Guid("A3C8C659-08F2-40FF-A093-837E9421B2E3"), "RazaoSocial", "Razão Social");
        }
        #endregion xERPxPessoaJuridica 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("C6CAF523-6CB7-47F8-9D83-13B8DAB32DFA");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("C972E047-4809-488B-9F2A-F2EA8ED46235"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("ED68B206-31B1-45BA-B429-331152773EB5"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxConvenioUsuario 
        public class xCRDxConvenioUsuario : XSVCTable
        {

            public static Guid gCID => new Guid("FAE40363-FA97-4FD6-8AFD-FF7A8A88BC71");

            public xCRDxConvenioUsuario()
            {
                Name = "CRDxConvenioUsuario";
                Alias = "CRDxConvenioUsuario";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.gCID;

                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(CRDxConvenioUsuarioID, CRDxConvenioUsuarioID.ID);
                CRDxConvenioUsuarioID.Owner = this;
                CRDxConvenioUsuarioID.OwnerID = ID;
                CRDxConvenioUsuarioID.TableName = Name;
            }

            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.CRDxConvenioID, new Guid("123EB4CA-0C4B-4496-B896-8E211D43E22B"), "CRDxConvenioID", "Convênio");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.CTLxUsuarioID, new Guid("D1BC7A29-F81B-4ED8-B85A-0632411C05AD"), "CTLxUsuarioID", "Usuário");
            public static XORMPKField CRDxConvenioUsuarioID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConvenioUsuario.CRDxConvenioUsuarioID, new Guid("1D524472-FBD1-4FCE-A738-9C40F48AA242"), "CRDxConvenioUsuarioID", "Convênio por Usuário");
        }
        #endregion xCRDxConvenioUsuario 


        public xCRDxConvenio CRDxConvenio;
        public xCRDxConvenioUsuario CRDxConvenioUsuario;
        public xERPxPessoaJuridica ERPxPessoaJuridica;
        public xSYSxPessoa SYSxPessoa;

        public ConvenioSVC()
        {
            TupleType = typeof(ConvenioSVC.XTuple);
            DataSetType = typeof(ConvenioSVC.XDataSet);
            ServiceRuleCID = new Guid("E361B725-B636-49B1-9602-F455F7C71471");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("7AD9AF59-78BD-44A6-A86F-0B9221DA3385");
            Name = "Convenio";
            Title = "Convênio";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("70E4D6DC-B33C-4F98-A088-E27E2498ABF6");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xERPxPessoaJuridica.RazaoSocial.ID, xSYSxPessoa.Nome.ID, xCRDxConvenio.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xCRDxConvenio.CRDxConvenioID.ID, xCRDxConvenio.Fechamento.ID, xCRDxConvenio.SYSxEstadoID.ID, xERPxPessoaJuridica.RazaoSocial.ID, xSYSxPessoa.Nome.ID };
            PKField = xCRDxConvenio.CRDxConvenioID.ID;
            ConfigTableID = new Guid("8CCD762D-565E-47F0-B57A-05C1A22D5627");
            StateField = xCRDxConvenio.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("E361B725-B636-49B1-9602-F455F7C71471");
            CRDxConvenio = new xCRDxConvenio();
            CRDxConvenio.IsReadOnly = true;
            AddTable(CRDxConvenio);
            CRDxConvenioUsuario = new xCRDxConvenioUsuario();
            CRDxConvenioUsuario.IsReadOnly = true;
            AddTable(CRDxConvenioUsuario);
            ERPxPessoaJuridica = new xERPxPessoaJuridica();
            ERPxPessoaJuridica.IsReadOnly = true;
            AddTable(ERPxPessoaJuridica);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxConvenio.ID;
            ERPxPessoaJuridica_ERPxPessoaJuridicaID_CRDxConvenio_CRDxConvenioID = AddReference(new XSVCReference(new Guid("308D96C6-BA35-410F-8026-ABFDEB63546D"), "FK_308D96C6BA35410F8026ABFDEB63546D", ConvenioSVC.xERPxPessoaJuridica.gCID, xERPxPessoaJuridica.ERPxPessoaJuridicaID.ID, ConvenioSVC.xCRDxConvenio.gCID, xCRDxConvenio.CRDxConvenioID.ID, XJoinType.Inner)); // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> CRDxConvenio.CRDxConvenioID
            ERPxPessoaJuridica_ERPxPessoaJuridicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("AC0FCF99-179D-4629-9F4D-F952D0733CEC"), "FK_AC0FCF99179D46299F4DF952D0733CEC", ConvenioSVC.xERPxPessoaJuridica.gCID, xERPxPessoaJuridica.ERPxPessoaJuridicaID.ID, ConvenioSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> SYSxPessoa.SYSxPessoaID
            CRDxConvenioUsuario_CRDxConvenioID_CRDxConvenio_CRDxConvenioID = AddReference(new XSVCReference(new Guid("D2D37E50-4EBF-45B4-BDFC-A0A680D77F67"), "FK_D2D37E504EBF45B4BDFCA0A680D77F67", ConvenioSVC.xCRDxConvenioUsuario.gCID, xCRDxConvenioUsuario.CRDxConvenioID.ID, ConvenioSVC.xCRDxConvenio.gCID, xCRDxConvenio.CRDxConvenioID.ID, XJoinType.Inner)); // CRDxConvenioUsuario.CRDxConvenioID --> CRDxConvenio.CRDxConvenioID
            xCRDxConvenio.CRDxConvenioID.IsReadOnly = true;
            xCRDxConvenio.CRDxConvenioID.IsDataField = true;
            xCRDxConvenio.CRDxConvenioID.AllowEmpty = true;
            xCRDxConvenio.Fechamento.IsReadOnly = true;
            xCRDxConvenio.Fechamento.IsDataField = true;
            xCRDxConvenio.Fechamento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xERPxPessoaJuridica.RazaoSocial.IsReadOnly = true;
            xERPxPessoaJuridica.RazaoSocial.Length = 160;
            xERPxPessoaJuridica.RazaoSocial.IsDataField = true;
            xERPxPessoaJuridica.RazaoSocial.AllowEmpty = true;
            xCRDxConvenio.SYSxEstadoID.IsReadOnly = true;
            xCRDxConvenio.SYSxEstadoID.IsDataField = true;
            xCRDxConvenio.SYSxEstadoID.AllowEmpty = true;
            xERPxPessoaJuridica.RazaoSocial.DefaultValue = @"NI";
            xCRDxConvenio.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConvenioID => xCRDxConvenio.CRDxConvenioID;
        public XORMField Fechamento => xCRDxConvenio.Fechamento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField RazaoSocial => xERPxPessoaJuridica.RazaoSocial;
        public XORMField SYSxEstadoID => xCRDxConvenio.SYSxEstadoID;
        }
        #endregion XFields
        #region ConvenioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxConvenioID
        {
            get
            {
                return (Guid)Value[ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID];
            }
            set
            {
                Value[ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID] = value;
            }
        }
        public Guid? oCRDxConvenioID
        {
            get
            {
                GetOldValue(ConvenioSVC.xCRDxConvenio.CRDxConvenioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[ConvenioSVC.xCRDxConvenio.Fechamento.ID];
            }
            set
            {
                Value[ConvenioSVC.xCRDxConvenio.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(ConvenioSVC.xCRDxConvenio.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConvenioSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConvenioSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConvenioSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String RazaoSocial
        {
            get
            {
                return (String)Value[ConvenioSVC.xERPxPessoaJuridica.RazaoSocial.ID];
            }
            set
            {
                Value[ConvenioSVC.xERPxPessoaJuridica.RazaoSocial.ID] = value;
            }
        }
        public String? oRazaoSocial
        {
            get
            {
                GetOldValue(ConvenioSVC.xERPxPessoaJuridica.RazaoSocial, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConvenioSVC.xCRDxConvenio.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConvenioSVC.xCRDxConvenio.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConvenioSVC.xCRDxConvenio.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConvenioSVC.XTuple

        #region ConvenioSVC.XRule
        public abstract class XRule : XServiceRule<ConvenioSVC.XDataSet, ConvenioSVC, ConvenioSVC.XTuple>
        {
        }
        #endregion ConvenioSVC.XRule

        #region ConvenioSVC.XDataSet

        public class XDataSet : XDataSet<ConvenioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConvenioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConvenioSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConvenioID => ConvenioSVC.xCRDxConvenio.CRDxConvenioID.ID;
            public Guid Fechamento => ConvenioSVC.xCRDxConvenio.Fechamento.ID;
            public Guid Nome => ConvenioSVC.xSYSxPessoa.Nome.ID;
            public Guid RazaoSocial => ConvenioSVC.xERPxPessoaJuridica.RazaoSocial.ID;
            public Guid SYSxEstadoID => ConvenioSVC.xCRDxConvenio.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConvenioSVC.XDataSet);
            }

        }
        #endregion ConvenioSVC.XDataSet

        [Guid(ConvenioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConvenioSVC))]
        protected class _Service : Service<ConvenioSVC, XDataSet, XTuple>
        {
            public const String sCID = "95FEB3DD-B3FA-4547-BDA1-10673958D634";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConvenioSVC, XDataSet, XTuple>, XService
             where TModel : ConvenioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}