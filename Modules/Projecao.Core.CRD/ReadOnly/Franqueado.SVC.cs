//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.ReadOnly
{
    [XRegister(typeof(FranqueadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\ReadOnly\Franqueado.dssvc")]
    public class FranqueadoSVC : XSVCModel
    {
        #region FranqueadoFilterFRM

        [XRegister(typeof(FranqueadoFilterFRM), sCID)]
        public class FranqueadoFilterFRM : XFRMModel
        {
            public const String sCID = "769455DE-2845-4E04-8F07-9442607CB838";
            static FranqueadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public FranqueadoFilterFRM()
            {
                ID = gCID;
                Name = "FranqueadoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 830, 50);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("D9E5E6FE-0F68-40B4-B4E0-D362BDA8C96D"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("CA91AAEC-4C75-40E5-8FFC-C326828E9CC1")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("D9E5E6FE-0F68-40B4-B4E0-D362BDA8C96D"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion FranqueadoFilterFRM

        public const String sCID = "95F4DDBE-0F60-4ADA-B565-F506EF9D9D79";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_CRDxPontoVenda_CRDxPontoVendaID; // SYSxPessoa.SYSxPessoaID --> CRDxPontoVenda.CRDxPontoVendaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("576511EB-29FC-4148-B076-C97020F8EB3A");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("CA91AAEC-4C75-40E5-8FFC-C326828E9CC1"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("D25F7EBA-BB7D-4D3C-8F6E-3BE01DDBAFA5"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCRDxPontoVenda 
        public class xCRDxPontoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("E334ABEF-6015-4735-8634-F4A7B03E6218");

            public xCRDxPontoVenda()
            {
                Name = "CRDxPontoVenda";
                Alias = "CRDxPontoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.gCID;

                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                CRDxPontoVendaID.Alias = "CRDxPontoVendaID";
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Items.Add(TaxaAdministracao, TaxaAdministracao.ID);
                TaxaAdministracao.Owner = this;
                TaxaAdministracao.OwnerID = ID;
                TaxaAdministracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(Inclusao, Inclusao.ID);
                Inclusao.Owner = this;
                Inclusao.OwnerID = ID;
                Inclusao.TableName = Name;
                Inclusao.Alias = "Inclusao";
                Items.Add(SYSxFranqueadorID, SYSxFranqueadorID.ID);
                SYSxFranqueadorID.Owner = this;
                SYSxFranqueadorID.OwnerID = ID;
                SYSxFranqueadorID.TableName = Name;
                Items.Add(DataChave, DataChave.ID);
                DataChave.Owner = this;
                DataChave.OwnerID = ID;
                DataChave.TableName = Name;
                Items.Add(ChaveSeguranca, ChaveSeguranca.ID);
                ChaveSeguranca.Owner = this;
                ChaveSeguranca.OwnerID = ID;
                ChaveSeguranca.TableName = Name;
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
            }

            public static XORMFaceField CRDxPontoVendaID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.CRDxPontoVendaID, new Guid("A768F470-FEE1-4668-A4A0-BF9B4AF0F19B"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Fechamento, new Guid("610A5E07-0729-44C2-B11C-674D171F99CF"), "Fechamento", "Dia de Fechamento");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Pagamento, new Guid("5F5C20F1-AACC-4244-AC18-E8DF6B83AD91"), "Pagamento", "Dia de Pagamento");
            public static XORMDecimalField TaxaAdministracao = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.TaxaAdministracao, new Guid("6307D34D-2ECC-4DEC-9CA3-44DCDB5B1A02"), "TaxaAdministracao", "Taxa de Administração");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxEstadoID, new Guid("FD69320B-F24A-4786-ABFC-D6C6492F32E6"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inclusao = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Inclusao, new Guid("ACD14AD5-1823-4565-8E74-843B1582B100"), "Inclusao", "Inclusão");
            public static XORMFKField SYSxFranqueadorID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxFranqueadorID, new Guid("D2037023-7837-4F2B-9963-AB4849261BAC"), "SYSxFranqueadorID", "Franqueador");
            public static XORMDateTimeField DataChave = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.DataChave, new Guid("B095015E-0FEA-4EEA-9DAF-08364AE226BC"), "DataChave", "Data da Chave");
            public static XORMField ChaveSeguranca = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.ChaveSeguranca, new Guid("4E54FE49-878B-46A0-A2D0-68A09561C2A2"), "ChaveSeguranca", "Change de Segurança");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Sigla, new Guid("F32333B6-4F5B-4105-8CD4-BD0A5D3EB8C4"), "Sigla", "Sigla");
        }
        #endregion xCRDxPontoVenda 


        public xCRDxPontoVenda CRDxPontoVenda;
        public xSYSxPessoa SYSxPessoa;

        public FranqueadoSVC()
        {
            TupleType = typeof(FranqueadoSVC.XTuple);
            DataSetType = typeof(FranqueadoSVC.XDataSet);
            ServiceRuleCID = new Guid("D812A088-42A8-4DB5-B6B7-3FE10F50F8C6");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("95F4DDBE-0F60-4ADA-B565-F506EF9D9D79");
            Name = "Franqueado";
            Title = "Franqueado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("769455DE-2845-4E04-8F07-9442607CB838");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xCRDxPontoVenda.Inclusao.ID };
            DataSetFields = new Guid[] { xSYSxPessoa.Nome.ID, xCRDxPontoVenda.Fechamento.ID, xCRDxPontoVenda.Inclusao.ID, xCRDxPontoVenda.SYSxEstadoID.ID, xCRDxPontoVenda.CRDxPontoVendaID.ID };
            StateField = xCRDxPontoVenda.SYSxEstadoID.ID;
            PKField = xCRDxPontoVenda.CRDxPontoVendaID.ID;
            ConfigTableID = new Guid("71F309BB-69A1-41B9-A07C-B3A63A4295D3");
            MasterRuleCID = new Guid("D812A088-42A8-4DB5-B6B7-3FE10F50F8C6");
            CRDxPontoVenda = new xCRDxPontoVenda();
            CRDxPontoVenda.IsReadOnly = true;
            AddTable(CRDxPontoVenda);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = CRDxPontoVenda.ID;
            SYSxPessoa_SYSxPessoaID_CRDxPontoVenda_CRDxPontoVendaID = AddReference(new XSVCReference(new Guid("E1FAEDC8-D5B9-440A-90CD-800DDAB0EAA8"), "FK_E1FAEDC8D5B9440A90CD800DDAB0EAA8", FranqueadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, FranqueadoSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> CRDxPontoVenda.CRDxPontoVendaID
            xCRDxPontoVenda.CRDxPontoVendaID.IsReadOnly = true;
            xCRDxPontoVenda.CRDxPontoVendaID.IsDataField = true;
            xCRDxPontoVenda.CRDxPontoVendaID.AllowEmpty = true;
            xCRDxPontoVenda.Fechamento.IsReadOnly = true;
            xCRDxPontoVenda.Fechamento.IsDataField = true;
            xCRDxPontoVenda.Fechamento.AllowEmpty = true;
            xCRDxPontoVenda.Inclusao.IsReadOnly = true;
            xCRDxPontoVenda.Inclusao.IsDataField = true;
            xCRDxPontoVenda.Inclusao.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxPontoVenda.SYSxEstadoID.IsReadOnly = true;
            xCRDxPontoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxPontoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxPontoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxPontoVendaID => xCRDxPontoVenda.CRDxPontoVendaID;
        public XORMField Fechamento => xCRDxPontoVenda.Fechamento;
        public XORMField Inclusao => xCRDxPontoVenda.Inclusao;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField SYSxEstadoID => xCRDxPontoVenda.SYSxEstadoID;
        }
        #endregion XFields
        #region FranqueadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CRDxPontoVendaID
        {
            get
            {
                return (Guid)Value[FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID] = value;
            }
        }
        public Guid? oCRDxPontoVendaID
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[FranqueadoSVC.xCRDxPontoVenda.Fechamento.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public DateTime Inclusao
        {
            get
            {
                return (DateTime)Value[FranqueadoSVC.xCRDxPontoVenda.Inclusao.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.Inclusao.ID] = value;
            }
        }
        public DateTime? oInclusao
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.Inclusao, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[FranqueadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[FranqueadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(FranqueadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FranqueadoSVC.XTuple

        #region FranqueadoSVC.XRule
        public abstract class XRule : XServiceRule<FranqueadoSVC.XDataSet, FranqueadoSVC, FranqueadoSVC.XTuple>
        {
        }
        #endregion FranqueadoSVC.XRule

        #region FranqueadoSVC.XDataSet

        public class XDataSet : XDataSet<FranqueadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FranqueadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FranqueadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxPontoVendaID => FranqueadoSVC.xCRDxPontoVenda.CRDxPontoVendaID.ID;
            public Guid Fechamento => FranqueadoSVC.xCRDxPontoVenda.Fechamento.ID;
            public Guid Inclusao => FranqueadoSVC.xCRDxPontoVenda.Inclusao.ID;
            public Guid Nome => FranqueadoSVC.xSYSxPessoa.Nome.ID;
            public Guid SYSxEstadoID => FranqueadoSVC.xCRDxPontoVenda.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(FranqueadoSVC.XDataSet);
            }

        }
        #endregion FranqueadoSVC.XDataSet

        [Guid(FranqueadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FranqueadoSVC))]
        protected class _Service : Service<FranqueadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "0F00E19E-795E-46FF-B0E6-E6C5C868A030";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FranqueadoSVC, XDataSet, XTuple>, XService
             where TModel : FranqueadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}