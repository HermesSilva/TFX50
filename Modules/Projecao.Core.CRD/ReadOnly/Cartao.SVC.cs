//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.ReadOnly
{
    [XRegister(typeof(CartaoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\ReadOnly\Cartao.dssvc")]
    public class CartaoSVC : XSVCModel
    {
        #region CartaoFilterFRM

        [XRegister(typeof(CartaoFilterFRM), sCID)]
        public class CartaoFilterFRM : XFRMModel
        {
            public const String sCID = "C4A3C792-8D16-4EFB-8EB2-50B2BC49ABB2";
            static CartaoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public CartaoFilterFRM()
            {
                ID = gCID;
                Name = "CartaoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 929, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion CartaoFilterFRM

        public const String sCID = "620FD7F1-60BD-419D-939E-1854A9DBCEB2";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxCartao_CRDxConveniadoID_CRDxConveniado_CRDxConveniadoID; // CRDxCartao.CRDxConveniadoID --> CRDxConveniado.CRDxConveniadoID
        public static XSVCReference CRDxCartaoEstado_CRDxCartaoEstadoID_CRDxCartao_CRDxCartaoEstadoID; // CRDxCartaoEstado.CRDxCartaoEstadoID --> CRDxCartao.CRDxCartaoEstadoID

        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("0156E634-D1EE-4595-B3BE-3F5344D6E5EB");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                ERPxPessoaFisicaID.Alias = "ERPxPessoaFisicaID";
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("01B3C661-70D8-45B5-AF35-7A173297CA7D"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("0BECEB16-4282-446D-B19D-25AAFFDC401A"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("346FFFF6-EFF9-4EAE-AC79-F91A7DF49060"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("39AC1D09-C18E-4AD7-A928-E7E11330B787"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("ECF37824-6A06-46B2-B0D0-4480F8FF5ADA"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("1904D6A3-FAEB-4C80-9DE4-D42963AD8248"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("2AAD832B-2A05-4AFA-84A0-AE481494B72C"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        #region xCRDxCartaoEstado 
        public class xCRDxCartaoEstado : XSVCTable
        {

            public static Guid gCID => new Guid("BF68957A-B750-46B7-A3EC-915BB1B3142D");

            public xCRDxCartaoEstado()
            {
                Name = "CRDxCartaoEstado";
                Alias = "CRDxCartaoEstado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoEstado.gCID;

                Items.Add(Estado, Estado.ID);
                Estado.Owner = this;
                Estado.OwnerID = ID;
                Estado.TableName = Name;
                Estado.Alias = "Estado";
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFaceField Estado = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoEstado.Estado, new Guid("EC25527E-8458-4B0F-B1BE-BF03042B1BF0"), "Estado", "Estado");
            public static XORMPKField CRDxCartaoEstadoID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoEstado.CRDxCartaoEstadoID, new Guid("E59012D4-E40D-4A6E-AE11-F233BD647B8C"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartaoEstado 


        #region xCRDxCartao 
        public class xCRDxCartao : XSVCTable
        {

            public static Guid gCID => new Guid("F6FFE6C0-D89B-4372-B222-9EC80AFE9ECF");

            public xCRDxCartao()
            {
                Name = "CRDxCartao";
                Alias = "CRDxCartao";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                CRDxConveniadoID.Alias = "CRDxConveniadoID";
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                CRDxCartaoID.Alias = "CRDxCartaoID";
                Items.Add(Vencimento, Vencimento.ID);
                Vencimento.Owner = this;
                Vencimento.OwnerID = ID;
                Vencimento.TableName = Name;
                Vencimento.Alias = "Vencimento";
                Items.Add(Emissao, Emissao.ID);
                Emissao.Owner = this;
                Emissao.OwnerID = ID;
                Emissao.TableName = Name;
                Emissao.Alias = "Emissao";
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFKField CRDxConveniadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxConveniadoID, new Guid("52FC074F-7550-4176-AD8C-E20EC1FD4BCE"), "CRDxConveniadoID", "Conveniado");
            public static XORMFaceField CRDxCartaoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoID, new Guid("C41FF1C8-6C2E-4C53-AFED-B2FFAFB28E02"), "CRDxCartaoID", "Cartão");
            public static XORMDateField Vencimento = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Vencimento, new Guid("5A05CEDB-A483-4BCF-9C34-D82D9A5C83D6"), "Vencimento", "Vencimento");
            public static XORMDateField Emissao = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Emissao, new Guid("D4FDE885-DA6E-4F6B-9FB0-7F28D0FD9AC6"), "Emissao", "Emissão");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Numero, new Guid("1082FA90-2780-4DD9-9D81-B2F22760190C"), "Numero", "Número");
            public static XORMFKField CRDxCartaoEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoEstadoID, new Guid("0324F3C7-B107-4442-A0B0-DAC8EB97EE20"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartao 


        public xCRDxCartao CRDxCartao;
        public xCRDxCartaoEstado CRDxCartaoEstado;
        public xCRDxConveniado CRDxConveniado;

        public CartaoSVC()
        {
            TupleType = typeof(CartaoSVC.XTuple);
            DataSetType = typeof(CartaoSVC.XDataSet);
            ServiceRuleCID = new Guid("0DA7151F-DCA5-49C5-BA23-EFEAFC3D91E8");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("620FD7F1-60BD-419D-939E-1854A9DBCEB2");
            Name = "Cartao";
            Title = "Cartão";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxCartaoEstado.Estado.ID, xCRDxCartao.Numero.ID, xCRDxCartao.Emissao.ID, xCRDxCartao.Vencimento.ID };
            DataSetFields = new Guid[] { xCRDxCartao.CRDxCartaoID.ID, xCRDxCartao.CRDxConveniadoID.ID, xCRDxConveniado.ERPxPessoaFisicaID.ID, xCRDxCartao.Emissao.ID, xCRDxCartao.Numero.ID, xCRDxCartao.Vencimento.ID, xCRDxCartaoEstado.Estado.ID };
            PKField = xCRDxCartao.CRDxCartaoID.ID;
            ConfigTableID = new Guid("12853B5C-BA3A-461D-A3CC-7D42FFEF7018");
            MasterRuleCID = new Guid("0DA7151F-DCA5-49C5-BA23-EFEAFC3D91E8");
            CRDxCartao = new xCRDxCartao();
            CRDxCartao.IsReadOnly = true;
            AddTable(CRDxCartao);
            CRDxCartaoEstado = new xCRDxCartaoEstado();
            CRDxCartaoEstado.IsReadOnly = true;
            AddTable(CRDxCartaoEstado);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            MasterTableID = CRDxCartao.ID;
            CRDxCartao_CRDxConveniadoID_CRDxConveniado_CRDxConveniadoID = AddReference(new XSVCReference(new Guid("897DF089-2C97-4A88-827E-5C7B80294971"), "FK_897DF0892C974A88827E5C7B80294971", CartaoSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxConveniadoID.ID, CartaoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConveniadoID.ID, XJoinType.Inner)); // CRDxCartao.CRDxConveniadoID --> CRDxConveniado.CRDxConveniadoID
            CRDxCartaoEstado_CRDxCartaoEstadoID_CRDxCartao_CRDxCartaoEstadoID = AddReference(new XSVCReference(new Guid("CA5E6136-9486-4452-B322-FC7A890D2AB0"), "FK_CA5E613694864452B322FC7A890D2AB0", CartaoSVC.xCRDxCartaoEstado.gCID, xCRDxCartaoEstado.CRDxCartaoEstadoID.ID, CartaoSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxCartaoEstadoID.ID, XJoinType.Inner)); // CRDxCartaoEstado.CRDxCartaoEstadoID --> CRDxCartao.CRDxCartaoEstadoID
            xCRDxCartao.CRDxCartaoID.IsReadOnly = true;
            xCRDxCartao.CRDxCartaoID.IsDataField = true;
            xCRDxCartao.CRDxCartaoID.AllowEmpty = true;
            xCRDxCartao.CRDxConveniadoID.IsReadOnly = true;
            xCRDxCartao.CRDxConveniadoID.IsDataField = true;
            xCRDxCartao.CRDxConveniadoID.AllowEmpty = true;
            xCRDxCartao.Emissao.IsReadOnly = true;
            xCRDxCartao.Emissao.IsDataField = true;
            xCRDxCartao.Emissao.AllowEmpty = true;
            xCRDxConveniado.ERPxPessoaFisicaID.IsReadOnly = true;
            xCRDxConveniado.ERPxPessoaFisicaID.IsDataField = true;
            xCRDxConveniado.ERPxPessoaFisicaID.AllowEmpty = true;
            xCRDxCartaoEstado.Estado.IsReadOnly = true;
            xCRDxCartaoEstado.Estado.Length = 20;
            xCRDxCartaoEstado.Estado.IsDataField = true;
            xCRDxCartaoEstado.Estado.AllowEmpty = true;
            xCRDxCartao.Numero.IsReadOnly = true;
            xCRDxCartao.Numero.Length = 16;
            xCRDxCartao.Numero.IsDataField = true;
            xCRDxCartao.Numero.AllowEmpty = true;
            xCRDxCartao.Vencimento.IsReadOnly = true;
            xCRDxCartao.Vencimento.IsDataField = true;
            xCRDxCartao.Vencimento.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxCartaoID => xCRDxCartao.CRDxCartaoID;
        public XORMField CRDxConveniadoID => xCRDxCartao.CRDxConveniadoID;
        public XORMField Emissao => xCRDxCartao.Emissao;
        public XORMField ERPxPessoaFisicaID => xCRDxConveniado.ERPxPessoaFisicaID;
        public XORMField Estado => xCRDxCartaoEstado.Estado;
        public XORMField Numero => xCRDxCartao.Numero;
        public XORMField Vencimento => xCRDxCartao.Vencimento;
        }
        #endregion XFields
        #region CartaoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxCartaoID
        {
            get
            {
                return (Int32)Value[CartaoSVC.xCRDxCartao.CRDxCartaoID.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxCartao.CRDxCartaoID.ID] = value;
            }
        }
        public Int32? oCRDxCartaoID
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxCartao.CRDxCartaoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 CRDxConveniadoID
        {
            get
            {
                return (Int32)Value[CartaoSVC.xCRDxCartao.CRDxConveniadoID.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxCartao.CRDxConveniadoID.ID] = value;
            }
        }
        public Int32? oCRDxConveniadoID
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxCartao.CRDxConveniadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public DateTime Emissao
        {
            get
            {
                return (DateTime)Value[CartaoSVC.xCRDxCartao.Emissao.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxCartao.Emissao.ID] = value;
            }
        }
        public DateTime? oEmissao
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxCartao.Emissao, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Guid ERPxPessoaFisicaID
        {
            get
            {
                return (Guid)Value[CartaoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID] = value;
            }
        }
        public Guid? oERPxPessoaFisicaID
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxConveniado.ERPxPessoaFisicaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Estado
        {
            get
            {
                return (String)Value[CartaoSVC.xCRDxCartaoEstado.Estado.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxCartaoEstado.Estado.ID] = value;
            }
        }
        public String? oEstado
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxCartaoEstado.Estado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[CartaoSVC.xCRDxCartao.Numero.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxCartao.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxCartao.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Vencimento
        {
            get
            {
                return (DateTime)Value[CartaoSVC.xCRDxCartao.Vencimento.ID];
            }
            set
            {
                Value[CartaoSVC.xCRDxCartao.Vencimento.ID] = value;
            }
        }
        public DateTime? oVencimento
        {
            get
            {
                GetOldValue(CartaoSVC.xCRDxCartao.Vencimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion CartaoSVC.XTuple

        #region CartaoSVC.XRule
        public abstract class XRule : XServiceRule<CartaoSVC.XDataSet, CartaoSVC, CartaoSVC.XTuple>
        {
        }
        #endregion CartaoSVC.XRule

        #region CartaoSVC.XDataSet

        public class XDataSet : XDataSet<CartaoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(CartaoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<CartaoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxCartaoID => CartaoSVC.xCRDxCartao.CRDxCartaoID.ID;
            public Guid CRDxConveniadoID => CartaoSVC.xCRDxCartao.CRDxConveniadoID.ID;
            public Guid Emissao => CartaoSVC.xCRDxCartao.Emissao.ID;
            public Guid ERPxPessoaFisicaID => CartaoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID;
            public Guid Estado => CartaoSVC.xCRDxCartaoEstado.Estado.ID;
            public Guid Numero => CartaoSVC.xCRDxCartao.Numero.ID;
            public Guid Vencimento => CartaoSVC.xCRDxCartao.Vencimento.ID;

            public XDataSet()
            {
                DataSetType = typeof(CartaoSVC.XDataSet);
            }

        }
        #endregion CartaoSVC.XDataSet

        [Guid(CartaoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(CartaoSVC))]
        protected class _Service : Service<CartaoSVC, XDataSet, XTuple>
        {
            public const String sCID = "6344A54F-985A-4C64-87BE-DDFBCD3696F0";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<CartaoSVC, XDataSet, XTuple>, XService
             where TModel : CartaoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}