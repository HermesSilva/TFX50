//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.ReadOnly
{
    [XRegister(typeof(ConveniadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\ReadOnly\Conveniado.dssvc")]
    public class ConveniadoSVC : XSVCModel
    {
        #region ConveniadoFilterFRM

        [XRegister(typeof(ConveniadoFilterFRM), sCID)]
        public class ConveniadoFilterFRM : XFRMModel
        {
            public const String sCID = "9370F875-83BF-49F1-A814-E1FE99E05C1A";
            static ConveniadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConveniadoFilterFRM()
            {
                ID = gCID;
                Name = "ConveniadoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 929, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] { new Guid("F08FE609-6332-44C8-A569-CA9D51765F56") };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("399DC547-01F9-4047-9088-B53E91672805"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("C9D4AFD5-327C-4F6E-9E99-944A23135F55")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("399DC547-01F9-4047-9088-B53E91672805"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion ConveniadoFilterFRM

        public const String sCID = "B33C002D-6420-47DC-8A6B-94AFE2846073";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxConveniado_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID; // CRDxConveniado.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference CRDxConveniado_CRDxConvenioID_SYSxPessoaConvenio_SYSxPessoaID; // CRDxConveniado.CRDxConvenioID --> SYSxPessoaConvenio.SYSxPessoaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("07EDF8C0-0795-43B8-A6CE-5A18CFFE858E");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("C9D4AFD5-327C-4F6E-9E99-944A23135F55"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("C21844A2-DFC7-4F33-A4C7-058A97178832"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xSYSxPessoaConvenio 
        public class xSYSxPessoaConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("150729CE-88AF-443B-8565-CC6ECABCD551");

            public xSYSxPessoaConvenio()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoaConvenio";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeConvenio";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("DC18E7E4-0CFD-41F4-BE9B-59623642D1C0"), "Nome", "Nome do Convênio");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("7C8878DA-C7A5-41FA-973B-39372F83B0C5"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoaConvenio 


        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("EC0B126D-5A76-484A-B7FE-57CEA9423192");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                CRDxConveniadoID.Alias = "CRDxConveniadoID";
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Matricula.Alias = "Matricula";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                ERPxPessoaFisicaID.Alias = "ERPxPessoaFisicaID";
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("7C9F0CB4-570D-40A6-8DCD-8B57F4F28D7F"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("FF910050-01DD-4600-A259-C8C7B71F0AA2"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("F64E12D7-03EC-4802-8261-C839C0AA3CAC"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("EC0625CB-8502-4A24-9DE3-06C11A4F381D"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("3C5FF17A-DA4B-4F26-879E-0AF66365E43E"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("2DAF687A-A575-4C17-A717-A97F08C51EE2"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("EEEE9F35-E1C0-4824-9BA2-4D321545F107"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        public xCRDxConveniado CRDxConveniado;
        public xSYSxPessoa SYSxPessoa;
        public xSYSxPessoaConvenio SYSxPessoaConvenio;

        public ConveniadoSVC()
        {
            TupleType = typeof(ConveniadoSVC.XTuple);
            DataSetType = typeof(ConveniadoSVC.XDataSet);
            ServiceRuleCID = new Guid("8A2605DF-2B1E-4862-9226-5E5701808EE9");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("B33C002D-6420-47DC-8A6B-94AFE2846073");
            Name = "Conveniado";
            Title = "Conveniado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("9370F875-83BF-49F1-A814-E1FE99E05C1A");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxConveniado.Matricula.ID, xSYSxPessoa.Nome.ID, xSYSxPessoaConvenio.Nome.ID };
            DataSetFields = new Guid[] { xCRDxConveniado.CRDxConveniadoID.ID, xCRDxConveniado.Matricula.ID, xCRDxConveniado.ERPxPessoaFisicaID.ID, xSYSxPessoa.Nome.ID, xSYSxPessoaConvenio.Nome.ID };
            PKField = xCRDxConveniado.CRDxConveniadoID.ID;
            ConfigTableID = new Guid("5657F33F-5FB7-432D-84DD-6C4146B08751");
            MasterRuleCID = new Guid("8A2605DF-2B1E-4862-9226-5E5701808EE9");
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            SYSxPessoaConvenio = new xSYSxPessoaConvenio();
            SYSxPessoaConvenio.IsReadOnly = true;
            AddTable(SYSxPessoaConvenio);
            MasterTableID = CRDxConveniado.ID;
            CRDxConveniado_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("09F4B539-D798-4E7D-8D65-C8A14EA94B08"), "FK_09F4B539D7984E7D8D65C8A14EA94B08", ConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, ConveniadoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxConveniado.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
            CRDxConveniado_CRDxConvenioID_SYSxPessoaConvenio_SYSxPessoaID = AddReference(new XSVCReference(new Guid("B9E07112-8E14-4FD9-A077-D62B70A15506"), "FK_B9E071128E144FD9A077D62B70A15506", ConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConvenioID.ID, ConveniadoSVC.xSYSxPessoaConvenio.gCID, xSYSxPessoaConvenio.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxConveniado.CRDxConvenioID --> SYSxPessoaConvenio.SYSxPessoaID
            xCRDxConveniado.CRDxConveniadoID.IsReadOnly = true;
            xCRDxConveniado.CRDxConveniadoID.IsDataField = true;
            xCRDxConveniado.CRDxConveniadoID.AllowEmpty = true;
            xCRDxConveniado.ERPxPessoaFisicaID.IsReadOnly = true;
            xCRDxConveniado.ERPxPessoaFisicaID.IsDataField = true;
            xCRDxConveniado.ERPxPessoaFisicaID.AllowEmpty = true;
            xCRDxConveniado.Matricula.IsReadOnly = true;
            xCRDxConveniado.Matricula.Length = 12;
            xCRDxConveniado.Matricula.IsDataField = true;
            xCRDxConveniado.Matricula.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xSYSxPessoaConvenio.Nome.IsReadOnly = true;
            xSYSxPessoaConvenio.Nome.Length = 256;
            xSYSxPessoaConvenio.Nome.IsDataField = true;
            xSYSxPessoaConvenio.Nome.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConveniadoID => xCRDxConveniado.CRDxConveniadoID;
        public XORMField ERPxPessoaFisicaID => xCRDxConveniado.ERPxPessoaFisicaID;
        public XORMField Matricula => xCRDxConveniado.Matricula;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NomeConvenio => xSYSxPessoaConvenio.Nome;
        }
        #endregion XFields
        #region ConveniadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxConveniadoID
        {
            get
            {
                return (Int32)Value[ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID] = value;
            }
        }
        public Int32? oCRDxConveniadoID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid ERPxPessoaFisicaID
        {
            get
            {
                return (Guid)Value[ConveniadoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID] = value;
            }
        }
        public Guid? oERPxPessoaFisicaID
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.ERPxPessoaFisicaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Matricula
        {
            get
            {
                return (String)Value[ConveniadoSVC.xCRDxConveniado.Matricula.ID];
            }
            set
            {
                Value[ConveniadoSVC.xCRDxConveniado.Matricula.ID] = value;
            }
        }
        public String? oMatricula
        {
            get
            {
                GetOldValue(ConveniadoSVC.xCRDxConveniado.Matricula, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConveniadoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ConveniadoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConveniadoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeConvenio
        {
            get
            {
                return (String)Value[ConveniadoSVC.xSYSxPessoaConvenio.Nome.ID];
            }
            set
            {
                Value[ConveniadoSVC.xSYSxPessoaConvenio.Nome.ID] = value;
            }
        }
        public String? oNomeConvenio
        {
            get
            {
                GetOldValue(ConveniadoSVC.xSYSxPessoaConvenio.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConveniadoSVC.XTuple

        #region ConveniadoSVC.XRule
        public abstract class XRule : XServiceRule<ConveniadoSVC.XDataSet, ConveniadoSVC, ConveniadoSVC.XTuple>
        {
        }
        #endregion ConveniadoSVC.XRule

        #region ConveniadoSVC.XDataSet

        public class XDataSet : XDataSet<ConveniadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConveniadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConveniadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConveniadoID => ConveniadoSVC.xCRDxConveniado.CRDxConveniadoID.ID;
            public Guid ERPxPessoaFisicaID => ConveniadoSVC.xCRDxConveniado.ERPxPessoaFisicaID.ID;
            public Guid Matricula => ConveniadoSVC.xCRDxConveniado.Matricula.ID;
            public Guid Nome => ConveniadoSVC.xSYSxPessoa.Nome.ID;
            public Guid NomeConvenio => ConveniadoSVC.xSYSxPessoaConvenio.Nome.ID;

            public XDataSet()
            {
                DataSetType = typeof(ConveniadoSVC.XDataSet);
            }

        }
        #endregion ConveniadoSVC.XDataSet

        [Guid(ConveniadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConveniadoSVC))]
        protected class _Service : Service<ConveniadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "B94CDA73-C3F5-4967-9175-7864DE69842B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConveniadoSVC, XDataSet, XTuple>, XService
             where TModel : ConveniadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}