//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.LocalizaConveniado
{
    [XRegister(typeof(LocalizaConveniadoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\LocalizaConveniado\LocalizaConveniado.dssvc")]
    public class LocalizaConveniadoSVC : XSVCModel
    {
        #region LocalizaConveniadoFilterFRM

        [XRegister(typeof(LocalizaConveniadoFilterFRM), sCID)]
        public class LocalizaConveniadoFilterFRM : XFRMModel
        {
            public const String sCID = "6FA39B2E-0BFB-4C9C-9759-7ACB2BC637C6";
            static LocalizaConveniadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public LocalizaConveniadoFilterFRM()
            {
                ID = gCID;
                Name = "LocalizaConveniadoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 838, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] { new Guid("F08FE609-6332-44C8-A569-CA9D51765F56") };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("DE59BDE1-5BDB-42C1-821C-A22FAD927E0D"), "Nome", "Nome do Conveniado/Convênio", XString.CID, 1, 32, false, gCID, null, new Guid("916C039E-8339-497E-A37A-02E1355052D1")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("DE59BDE1-5BDB-42C1-821C-A22FAD927E0D"), "Nome", "Nome do Conveniado/Convênio", typeof(String));
            }
        }

        #endregion LocalizaConveniadoFilterFRM

        public const String sCID = "75AEA859-82CA-4795-B3CE-8479B010CA56";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference CRDxCartaoEstado_CRDxCartaoEstadoID_CRDxCartao_CRDxCartaoEstadoID; // CRDxCartaoEstado.CRDxCartaoEstadoID --> CRDxCartao.CRDxCartaoEstadoID
        public static XSVCReference CRDxCartao_CRDxConveniadoID_CRDxConveniado_CRDxConveniadoID; // CRDxCartao.CRDxConveniadoID --> CRDxConveniado.CRDxConveniadoID
        public static XSVCReference CRDxConveniado_ERPxPessoaFisicaID_SYSxPessoaConveniado_SYSxPessoaID; // CRDxConveniado.ERPxPessoaFisicaID --> SYSxPessoaConveniado.SYSxPessoaID
        public static XSVCReference CRDxConveniado_CRDxConvenioID_SYSxPessoaConvenio_SYSxPessoaID; // CRDxConveniado.CRDxConvenioID --> SYSxPessoaConvenio.SYSxPessoaID

        #region xSYSxPessoaConvenio 
        public class xSYSxPessoaConvenio : XSVCTable
        {

            public static Guid gCID => new Guid("0D225533-D4BF-43B8-A2AB-28FDD09FD097");

            public xSYSxPessoaConvenio()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoaConvenio";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeConvenio";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("EB4B7DD7-8528-4CFD-B7EF-F878A8A62B34"), "Nome", "Nome do Convênio");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("2467A49C-0C72-4C64-9A23-6FD56E538F43"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoaConvenio 


        #region xCRDxCartao 
        public class xCRDxCartao : XSVCTable
        {

            public static Guid gCID => new Guid("1D398E92-C483-4C36-951A-7D2E68A675AE");

            public xCRDxCartao()
            {
                Name = "CRDxCartao";
                Alias = "CRDxCartao";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                CRDxConveniadoID.Alias = "CRDxConveniadoID";
                Items.Add(CRDxCartaoID, CRDxCartaoID.ID);
                CRDxCartaoID.Owner = this;
                CRDxCartaoID.OwnerID = ID;
                CRDxCartaoID.TableName = Name;
                Items.Add(Vencimento, Vencimento.ID);
                Vencimento.Owner = this;
                Vencimento.OwnerID = ID;
                Vencimento.TableName = Name;
                Vencimento.Alias = "Vencimento";
                Items.Add(Emissao, Emissao.ID);
                Emissao.Owner = this;
                Emissao.OwnerID = ID;
                Emissao.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFKField CRDxConveniadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxConveniadoID, new Guid("97050172-DAB9-40BE-9911-866D922FBF49"), "CRDxConveniadoID", "Conveniado");
            public static XORMFaceField CRDxCartaoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoID, new Guid("CC10075D-D9A9-4C07-80F4-8699553AB802"), "CRDxCartaoID", "Cartão");
            public static XORMDateField Vencimento = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Vencimento, new Guid("A8A1C439-3E10-4139-A93E-4D046692DEAE"), "Vencimento", "Vencimento");
            public static XORMDateField Emissao = new XORMDateField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Emissao, new Guid("0D278511-10FC-418E-819C-12DE4DD3383F"), "Emissao", "Emissão");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.Numero, new Guid("B60E43A9-4D1C-4E1C-BE65-2A52E33B5951"), "Numero", "Número");
            public static XORMFKField CRDxCartaoEstadoID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartao.CRDxCartaoEstadoID, new Guid("ACD65FA0-265A-4D14-8BF7-0669A15438E5"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartao 


        #region xCRDxCartaoEstado 
        public class xCRDxCartaoEstado : XSVCTable
        {

            public static Guid gCID => new Guid("413816DF-6C42-4378-94FD-046750486A59");

            public xCRDxCartaoEstado()
            {
                Name = "CRDxCartaoEstado";
                Alias = "CRDxCartaoEstado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoEstado.gCID;

                Items.Add(Estado, Estado.ID);
                Estado.Owner = this;
                Estado.OwnerID = ID;
                Estado.TableName = Name;
                Estado.Alias = "Estado";
                Items.Add(CRDxCartaoEstadoID, CRDxCartaoEstadoID.ID);
                CRDxCartaoEstadoID.Owner = this;
                CRDxCartaoEstadoID.OwnerID = ID;
                CRDxCartaoEstadoID.TableName = Name;
            }

            public static XORMFaceField Estado = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoEstado.Estado, new Guid("5B9E8100-0E29-4290-8968-B6115792E887"), "Estado", "Estado");
            public static XORMPKField CRDxCartaoEstadoID = new XORMPKField(global::Projecao.Core.CRD.DB.CRDx.CRDxCartaoEstado.CRDxCartaoEstadoID, new Guid("790B4D53-B2F5-44EE-9E83-6BCB20DA0115"), "CRDxCartaoEstadoID", "Estado do cartão");
        }
        #endregion xCRDxCartaoEstado 


        #region xSYSxPessoaConveniado 
        public class xSYSxPessoaConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("9CA9D538-653D-48F1-8961-9BECC1BB8386");

            public xSYSxPessoaConveniado()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoaConveniado";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeConveniado";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("916C039E-8339-497E-A37A-02E1355052D1"), "Nome", "Nome do Conveniado");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("D9DDAC05-BBF4-4344-8BDD-4F0BE6A464F6"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoaConveniado 


        #region xCRDxConveniado 
        public class xCRDxConveniado : XSVCTable
        {

            public static Guid gCID => new Guid("EF561A0C-C33D-4CF9-BEDF-F2E6FBE62675");

            public xCRDxConveniado()
            {
                Name = "CRDxConveniado";
                Alias = "CRDxConveniado";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.gCID;

                Items.Add(CRDxConveniadoID, CRDxConveniadoID.ID);
                CRDxConveniadoID.Owner = this;
                CRDxConveniadoID.OwnerID = ID;
                CRDxConveniadoID.TableName = Name;
                Items.Add(Limite, Limite.ID);
                Limite.Owner = this;
                Limite.OwnerID = ID;
                Limite.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(CRDxConvenioID, CRDxConvenioID.ID);
                CRDxConvenioID.Owner = this;
                CRDxConvenioID.OwnerID = ID;
                CRDxConvenioID.TableName = Name;
                Items.Add(Matricula, Matricula.ID);
                Matricula.Owner = this;
                Matricula.OwnerID = ID;
                Matricula.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
            }

            public static XORMFaceField CRDxConveniadoID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConveniadoID, new Guid("925D95C9-D9DA-4C55-AE60-EE7DC70EDFB4"), "CRDxConveniadoID", "Conveniado");
            public static XORMDecimalField Limite = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Limite, new Guid("8BC5ADB8-2DC1-4449-BB45-690BF862220F"), "Limite", "Limite");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Inicio, new Guid("5C7E6C56-80A8-45C8-A281-BCCB330719C7"), "Inicio", "Início");
            public static XORMFKField CRDxConvenioID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.CRDxConvenioID, new Guid("5926C81F-7FFA-45F9-B272-42AD6864067E"), "CRDxConvenioID", "Convênio");
            public static XORMField Matricula = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.Matricula, new Guid("3410CD9D-167C-4C14-9AF6-7411B9004F06"), "Matricula", "Matrícula no RH");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.SYSxEstadoID, new Guid("CDB4D3AA-633B-42F3-9117-275BA753664A"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxConveniado.ERPxPessoaFisicaID, new Guid("87EC21CD-9CB8-4533-BB96-2E4A3FC00B86"), "ERPxPessoaFisicaID", "Pessoa Física");
        }
        #endregion xCRDxConveniado 


        public xCRDxCartao CRDxCartao;
        public xCRDxCartaoEstado CRDxCartaoEstado;
        public xCRDxConveniado CRDxConveniado;
        public xSYSxPessoaConveniado SYSxPessoaConveniado;
        public xSYSxPessoaConvenio SYSxPessoaConvenio;

        public LocalizaConveniadoSVC()
        {
            TupleType = typeof(LocalizaConveniadoSVC.XTuple);
            DataSetType = typeof(LocalizaConveniadoSVC.XDataSet);
            ServiceRuleCID = new Guid("5CD65555-0963-4F65-9729-B51B4C469B62");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("75AEA859-82CA-4795-B3CE-8479B010CA56");
            Name = "LocalizaConveniado";
            Title = "Localiza Conveniado";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("6FA39B2E-0BFB-4C9C-9759-7ACB2BC637C6");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xCRDxCartaoEstado.Estado.ID, xSYSxPessoaConveniado.Nome.ID, xCRDxCartao.Numero.ID, xCRDxCartao.Vencimento.ID, xSYSxPessoaConvenio.Nome.ID, xCRDxConveniado.SYSxEstadoID.ID };
            DataSetFields = new Guid[] { xCRDxCartao.CRDxConveniadoID.ID, xCRDxCartao.Numero.ID, xCRDxCartao.Vencimento.ID, xCRDxCartaoEstado.Estado.ID, xCRDxConveniado.SYSxEstadoID.ID, xSYSxPessoaConveniado.Nome.ID, xSYSxPessoaConvenio.Nome.ID };
            PKField = xCRDxCartao.CRDxConveniadoID.ID;
            ConfigTableID = new Guid("12853B5C-BA3A-461D-A3CC-7D42FFEF7018");
            StateField = xCRDxConveniado.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("5CD65555-0963-4F65-9729-B51B4C469B62");
            CRDxCartao = new xCRDxCartao();
            CRDxCartao.IsReadOnly = true;
            AddTable(CRDxCartao);
            CRDxCartaoEstado = new xCRDxCartaoEstado();
            CRDxCartaoEstado.IsReadOnly = true;
            AddTable(CRDxCartaoEstado);
            CRDxConveniado = new xCRDxConveniado();
            CRDxConveniado.IsReadOnly = true;
            AddTable(CRDxConveniado);
            SYSxPessoaConveniado = new xSYSxPessoaConveniado();
            SYSxPessoaConveniado.IsReadOnly = true;
            AddTable(SYSxPessoaConveniado);
            SYSxPessoaConvenio = new xSYSxPessoaConvenio();
            SYSxPessoaConvenio.IsReadOnly = true;
            AddTable(SYSxPessoaConvenio);
            MasterTableID = CRDxConveniado.ID;
            CRDxCartaoEstado_CRDxCartaoEstadoID_CRDxCartao_CRDxCartaoEstadoID = AddReference(new XSVCReference(new Guid("08656EF0-88E3-4FF8-AE9F-5B16ED984D87"), "FK_08656EF088E34FF8AE9F5B16ED984D87", LocalizaConveniadoSVC.xCRDxCartaoEstado.gCID, xCRDxCartaoEstado.CRDxCartaoEstadoID.ID, LocalizaConveniadoSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxCartaoEstadoID.ID, XJoinType.Inner)); // CRDxCartaoEstado.CRDxCartaoEstadoID --> CRDxCartao.CRDxCartaoEstadoID
            CRDxCartao_CRDxConveniadoID_CRDxConveniado_CRDxConveniadoID = AddReference(new XSVCReference(new Guid("80EA88D4-CC7E-40E2-878B-BB866362FC04"), "FK_80EA88D4CC7E40E2878BBB866362FC04", LocalizaConveniadoSVC.xCRDxCartao.gCID, xCRDxCartao.CRDxConveniadoID.ID, LocalizaConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConveniadoID.ID, XJoinType.Inner)); // CRDxCartao.CRDxConveniadoID --> CRDxConveniado.CRDxConveniadoID
            CRDxConveniado_ERPxPessoaFisicaID_SYSxPessoaConveniado_SYSxPessoaID = AddReference(new XSVCReference(new Guid("A6505772-2EEB-43C1-AC56-034C26524884"), "FK_A65057722EEB43C1AC56034C26524884", LocalizaConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.ERPxPessoaFisicaID.ID, LocalizaConveniadoSVC.xSYSxPessoaConveniado.gCID, xSYSxPessoaConveniado.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxConveniado.ERPxPessoaFisicaID --> SYSxPessoaConveniado.SYSxPessoaID
            CRDxConveniado_CRDxConvenioID_SYSxPessoaConvenio_SYSxPessoaID = AddReference(new XSVCReference(new Guid("B9CED25E-FBA7-476A-A590-84F6FB0F53C6"), "FK_B9CED25EFBA7476AA59084F6FB0F53C6", LocalizaConveniadoSVC.xCRDxConveniado.gCID, xCRDxConveniado.CRDxConvenioID.ID, LocalizaConveniadoSVC.xSYSxPessoaConvenio.gCID, xSYSxPessoaConvenio.SYSxPessoaID.ID, XJoinType.Inner)); // CRDxConveniado.CRDxConvenioID --> SYSxPessoaConvenio.SYSxPessoaID
            xCRDxCartao.CRDxConveniadoID.IsReadOnly = true;
            xCRDxCartao.CRDxConveniadoID.IsDataField = true;
            xCRDxCartao.CRDxConveniadoID.AllowEmpty = true;
            xCRDxCartaoEstado.Estado.IsReadOnly = true;
            xCRDxCartaoEstado.Estado.Length = 20;
            xCRDxCartaoEstado.Estado.IsDataField = true;
            xCRDxCartaoEstado.Estado.AllowEmpty = true;
            xSYSxPessoaConveniado.Nome.IsReadOnly = true;
            xSYSxPessoaConveniado.Nome.Length = 256;
            xSYSxPessoaConveniado.Nome.IsDataField = true;
            xSYSxPessoaConveniado.Nome.AllowEmpty = true;
            xSYSxPessoaConvenio.Nome.IsReadOnly = true;
            xSYSxPessoaConvenio.Nome.Length = 256;
            xSYSxPessoaConvenio.Nome.IsDataField = true;
            xSYSxPessoaConvenio.Nome.AllowEmpty = true;
            xCRDxCartao.Numero.IsReadOnly = true;
            xCRDxCartao.Numero.Length = 16;
            xCRDxCartao.Numero.IsDataField = true;
            xCRDxCartao.Numero.AllowEmpty = true;
            xCRDxConveniado.SYSxEstadoID.IsReadOnly = true;
            xCRDxConveniado.SYSxEstadoID.IsDataField = true;
            xCRDxConveniado.SYSxEstadoID.AllowEmpty = true;
            xCRDxCartao.Vencimento.IsReadOnly = true;
            xCRDxCartao.Vencimento.IsDataField = true;
            xCRDxCartao.Vencimento.AllowEmpty = true;
            xCRDxConveniado.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRDxConveniadoID => xCRDxCartao.CRDxConveniadoID;
        public XORMField Estado => xCRDxCartaoEstado.Estado;
        public XORMField NomeConveniado => xSYSxPessoaConveniado.Nome;
        public XORMField NomeConvenio => xSYSxPessoaConvenio.Nome;
        public XORMField Numero => xCRDxCartao.Numero;
        public XORMField SYSxEstadoID => xCRDxConveniado.SYSxEstadoID;
        public XORMField Vencimento => xCRDxCartao.Vencimento;
        }
        #endregion XFields
        #region LocalizaConveniadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CRDxConveniadoID
        {
            get
            {
                return (Int32)Value[LocalizaConveniadoSVC.xCRDxCartao.CRDxConveniadoID.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xCRDxCartao.CRDxConveniadoID.ID] = value;
            }
        }
        public Int32? oCRDxConveniadoID
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xCRDxCartao.CRDxConveniadoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Estado
        {
            get
            {
                return (String)Value[LocalizaConveniadoSVC.xCRDxCartaoEstado.Estado.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xCRDxCartaoEstado.Estado.ID] = value;
            }
        }
        public String? oEstado
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xCRDxCartaoEstado.Estado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeConveniado
        {
            get
            {
                return (String)Value[LocalizaConveniadoSVC.xSYSxPessoaConveniado.Nome.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xSYSxPessoaConveniado.Nome.ID] = value;
            }
        }
        public String? oNomeConveniado
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xSYSxPessoaConveniado.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeConvenio
        {
            get
            {
                return (String)Value[LocalizaConveniadoSVC.xSYSxPessoaConvenio.Nome.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xSYSxPessoaConvenio.Nome.ID] = value;
            }
        }
        public String? oNomeConvenio
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xSYSxPessoaConvenio.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[LocalizaConveniadoSVC.xCRDxCartao.Numero.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xCRDxCartao.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xCRDxCartao.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[LocalizaConveniadoSVC.xCRDxConveniado.SYSxEstadoID.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xCRDxConveniado.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xCRDxConveniado.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public DateTime Vencimento
        {
            get
            {
                return (DateTime)Value[LocalizaConveniadoSVC.xCRDxCartao.Vencimento.ID];
            }
            set
            {
                Value[LocalizaConveniadoSVC.xCRDxCartao.Vencimento.ID] = value;
            }
        }
        public DateTime? oVencimento
        {
            get
            {
                GetOldValue(LocalizaConveniadoSVC.xCRDxCartao.Vencimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion LocalizaConveniadoSVC.XTuple

        #region LocalizaConveniadoSVC.XRule
        public abstract class XRule : XServiceRule<LocalizaConveniadoSVC.XDataSet, LocalizaConveniadoSVC, LocalizaConveniadoSVC.XTuple>
        {
        }
        #endregion LocalizaConveniadoSVC.XRule

        #region LocalizaConveniadoSVC.XDataSet

        public class XDataSet : XDataSet<LocalizaConveniadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(LocalizaConveniadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<LocalizaConveniadoSVC.XTuple> where T : XDataTuple
        {

            public Guid CRDxConveniadoID => LocalizaConveniadoSVC.xCRDxCartao.CRDxConveniadoID.ID;
            public Guid Estado => LocalizaConveniadoSVC.xCRDxCartaoEstado.Estado.ID;
            public Guid NomeConveniado => LocalizaConveniadoSVC.xSYSxPessoaConveniado.Nome.ID;
            public Guid NomeConvenio => LocalizaConveniadoSVC.xSYSxPessoaConvenio.Nome.ID;
            public Guid Numero => LocalizaConveniadoSVC.xCRDxCartao.Numero.ID;
            public Guid SYSxEstadoID => LocalizaConveniadoSVC.xCRDxConveniado.SYSxEstadoID.ID;
            public Guid Vencimento => LocalizaConveniadoSVC.xCRDxCartao.Vencimento.ID;

            public XDataSet()
            {
                DataSetType = typeof(LocalizaConveniadoSVC.XDataSet);
            }

        }
        #endregion LocalizaConveniadoSVC.XDataSet

        [Guid(LocalizaConveniadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(LocalizaConveniadoSVC))]
        protected class _Service : Service<LocalizaConveniadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "DC78C9CE-22D4-4C20-92D2-124B6D60DCAB";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<LocalizaConveniadoSVC, XDataSet, XTuple>, XService
             where TModel : LocalizaConveniadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}