//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CRD.DB;
using Projecao.Core.ERP.DB;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using Projecao.Core.ERP.Pessoa;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using Projecao.Core.CRD.PontoVenda;
using System.Runtime.InteropServices;

namespace Projecao.Core.CRD.PontoVenda
{
    [XRegister(typeof(PontoVendaSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\Projecao.Core.CRD.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.CRD\PontoVenda\PontoVenda.dssvc")]
    public class PontoVendaSVC : XSVCModel
    {
        #region PontoVendaFilterFRM

        [XRegister(typeof(PontoVendaFilterFRM), sCID)]
        public class PontoVendaFilterFRM : XFRMModel
        {
            public const String sCID = "5D881AA3-C5C7-4FC9-A2A3-5219EA41AE12";
            static PontoVendaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public PontoVendaFilterFRM()
            {
                ID = gCID;
                Name = "PontoVendaFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(0, 0, 906, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(RazaoSocial);
                RazaoSocial.ForceRW = true;
                RazaoSocial.CanInsert = true;
                RazaoSocial.CanUpdate = true;
                RazaoSocial.RowCount = 1;
                RazaoSocial.ColCount = 32;
                RazaoSocial.RowCountSmall = 1;
                RazaoSocial.ColCountSmall = 32;
                RazaoSocial.IsHidden = false;
                RazaoSocial.IsHiddenSmall = false;
                RazaoSocial.AdditionalTitle = "";
                RazaoSocial.Location = 1;
                RazaoSocial.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                RazaoSocial.FormImplace = true;
                RazaoSocial.Operator = XOperator.Like;
                RazaoSocial.JustifyHeight = false;
                RazaoSocial.AllowEmpty = true;
                RazaoSocial.FontColor = "#000000";
                RazaoSocial.FontStyle = XFontStyle.Normal;
                RazaoSocial.ShowFooter = false;
                RazaoSocial.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                RazaoSocial.Scale = 0;
                RazaoSocial.Length = 160;
                RazaoSocial.SearchAction = XSearchAction.Default;
                RazaoSocial.TypeID = XString.CID;
                RazaoSocial.AdditionalFieldsID = new Guid[] { new Guid("F08FE609-6332-44C8-A569-CA9D51765F56") };
                RazaoSocial.AdditionalDataFieldsID = new Guid[] {  };
                RazaoSocial.TargetFilterFieldID = new Guid[] {  };
                RazaoSocial.SourceFilterFieldID = new Guid[] {  };
                RazaoSocial.TargetDisplayFieldID = new Guid[] {  };
                RazaoSocial.SourceDisplayFieldID = new Guid[] {  };
                RazaoSocial.AutoLoad = false;
                RazaoSocial.FilterInative = true;
                RazaoSocial.IsAnswer = false;
                RazaoSocial.AllowMultiSelect = false;
            }
            public XFRMField RazaoSocial = new XFRMField(new Guid("57BF29D7-ED89-495D-8FF2-4A5BB68A306C"), "RazaoSocial", "Razão Social", XString.CID, 1, 32, false, gCID, null, new Guid("76EA5EA3-F106-443A-9C73-1E4740065171")); // String;
            public static class Fields
            {
                public static XFieldInfo RazaoSocial = new XFieldInfo(new Guid("57BF29D7-ED89-495D-8FF2-4A5BB68A306C"), "RazaoSocial", "Razão Social", typeof(String));
            }
        }

        #endregion PontoVendaFilterFRM

        public const String sCID = "7B6A1D03-D08C-45A4-B8A2-1C53D2B9945A";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxFranqueador_SYSxPessoaID_CRDxPontoVenda_SYSxFranqueadorID; // SYSxFranqueador.SYSxPessoaID --> CRDxPontoVenda.SYSxFranqueadorID
        public static XSVCReference CRDxPontoVenda_CRDxPontoVendaID_ERPxPessoaJuridica_ERPxPessoaJuridicaID; // CRDxPontoVenda.CRDxPontoVendaID --> ERPxPessoaJuridica.ERPxPessoaJuridicaID
        public static XSVCReference ERPxPessoaJuridica_ERPxPessoaJuridicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> SYSxPessoa.SYSxPessoaID

        #region xCRDxPontoVenda 
        public class xCRDxPontoVenda : XSVCTable
        {

            public static Guid gCID => new Guid("667589C9-4C6C-4DD1-8907-77D05C9A6C98");

            public xCRDxPontoVenda()
            {
                Name = "CRDxPontoVenda";
                Alias = "CRDxPontoVenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.gCID;

                Items.Add(CRDxPontoVendaID, CRDxPontoVendaID.ID);
                CRDxPontoVendaID.Owner = this;
                CRDxPontoVendaID.OwnerID = ID;
                CRDxPontoVendaID.TableName = Name;
                Items.Add(Fechamento, Fechamento.ID);
                Fechamento.Owner = this;
                Fechamento.OwnerID = ID;
                Fechamento.TableName = Name;
                Fechamento.Alias = "Fechamento";
                Items.Add(Pagamento, Pagamento.ID);
                Pagamento.Owner = this;
                Pagamento.OwnerID = ID;
                Pagamento.TableName = Name;
                Pagamento.Alias = "Pagamento";
                Items.Add(TaxaAdministracao, TaxaAdministracao.ID);
                TaxaAdministracao.Owner = this;
                TaxaAdministracao.OwnerID = ID;
                TaxaAdministracao.TableName = Name;
                TaxaAdministracao.Alias = "TaxaAdministracao";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(Inclusao, Inclusao.ID);
                Inclusao.Owner = this;
                Inclusao.OwnerID = ID;
                Inclusao.TableName = Name;
                Inclusao.Alias = "Inclusao";
                Items.Add(SYSxFranqueadorID, SYSxFranqueadorID.ID);
                SYSxFranqueadorID.Owner = this;
                SYSxFranqueadorID.OwnerID = ID;
                SYSxFranqueadorID.TableName = Name;
                SYSxFranqueadorID.Alias = "SYSxFranqueadorID";
                Items.Add(DataChave, DataChave.ID);
                DataChave.Owner = this;
                DataChave.OwnerID = ID;
                DataChave.TableName = Name;
                DataChave.Alias = "DataChave";
                Items.Add(ChaveSeguranca, ChaveSeguranca.ID);
                ChaveSeguranca.Owner = this;
                ChaveSeguranca.OwnerID = ID;
                ChaveSeguranca.TableName = Name;
                ChaveSeguranca.Alias = "ChaveSeguranca";
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "Sigla";
            }

            public static XORMFaceField CRDxPontoVendaID = new XORMFaceField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.CRDxPontoVendaID, new Guid("8777DECE-10BF-45CF-922E-8D7082A72893"), "CRDxPontoVendaID", "Ponto de Venda");
            public static XORMField Fechamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Fechamento, new Guid("63EAF3B5-82BC-4E30-9378-8CF4DE91CD8F"), "Fechamento", "Dia de Fechamento");
            public static XORMField Pagamento = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Pagamento, new Guid("D57D80AC-614F-46C3-A273-65317C17D265"), "Pagamento", "Dia de Pagamento");
            public static XORMDecimalField TaxaAdministracao = new XORMDecimalField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.TaxaAdministracao, new Guid("4CF66922-2BBA-433E-A72A-532B92D38E52"), "TaxaAdministracao", "Taxa de Administração");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxEstadoID, new Guid("E7E7C8D0-1069-406F-9F28-6887A341E474"), "SYSxEstadoID", "Estado");
            public static XORMDateTimeField Inclusao = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Inclusao, new Guid("35D152D7-5C8E-46F6-B028-C8592AA50E33"), "Inclusao", "Inclusão");
            public static XORMFKField SYSxFranqueadorID = new XORMFKField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.SYSxFranqueadorID, new Guid("43B394CE-B3C1-4B74-BE06-9F1746F8B39F"), "SYSxFranqueadorID", "Franqueador");
            public static XORMDateTimeField DataChave = new XORMDateTimeField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.DataChave, new Guid("3DF36A9E-6DD1-4146-B820-44FBF25EB9F2"), "DataChave", "Data da Chave");
            public static XORMField ChaveSeguranca = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.ChaveSeguranca, new Guid("E6222D7F-50C7-4441-939C-99031D8FA8BF"), "ChaveSeguranca", "Change de Segurança");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CRD.DB.CRDx.CRDxPontoVenda.Sigla, new Guid("9D858288-9EF6-45DF-A262-BFCA890CF988"), "Sigla", "Sigla");
        }
        #endregion xCRDxPontoVenda 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("6CC558E0-FF48-490B-A6EC-AFCA90368E0E");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("87A0ACAD-5F04-4D41-A00F-6CBC376B2C6C"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("4AA8FC3A-F5E7-42A6-BBBF-835AABBFD4F6"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xERPxPessoaJuridica 
        public class xERPxPessoaJuridica : XSVCTable
        {

            public static Guid gCID => new Guid("7027317F-5920-4A99-A550-274F032F5880");

            public xERPxPessoaJuridica()
            {
                Name = "ERPxPessoaJuridica";
                Alias = "ERPxPessoaJuridica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.gCID;

                Items.Add(ERPxPessoaJuridicaID, ERPxPessoaJuridicaID.ID);
                ERPxPessoaJuridicaID.Owner = this;
                ERPxPessoaJuridicaID.OwnerID = ID;
                ERPxPessoaJuridicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxPJEstadoID";
                Items.Add(RazaoSocial, RazaoSocial.ID);
                RazaoSocial.Owner = this;
                RazaoSocial.OwnerID = ID;
                RazaoSocial.TableName = Name;
                RazaoSocial.Alias = "RazaoSocial";
            }

            public static XORMFaceField ERPxPessoaJuridicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.ERPxPessoaJuridicaID, new Guid("7A9BB343-1AB2-4875-83A9-F60877E2BCC0"), "ERPxPessoaJuridicaID", "Pessoa Jurídica");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.SYSxEstadoID, new Guid("D8B566A0-0464-4752-8EEB-0A17B29AC805"), "SYSxEstadoID", "Estado");
            public static XORMField RazaoSocial = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.RazaoSocial, new Guid("76EA5EA3-F106-443A-9C73-1E4740065171"), "RazaoSocial", "Razão Social");
        }
        #endregion xERPxPessoaJuridica 


        #region xSYSxFranqueador 
        public class xSYSxFranqueador : XSVCTable
        {

            public static Guid gCID => new Guid("AE79736E-B9B3-4AF2-A4B0-097AAF9F5A41");

            public xSYSxFranqueador()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxFranqueador";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "FranqueadorNome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("445039FF-3085-422B-B3C4-321A89D19B8B"), "Nome", "Franqueador");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("91F6B890-0663-47C5-991E-B424D912EBC9"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxFranqueador 


        public xCRDxPontoVenda CRDxPontoVenda;
        public xERPxPessoaJuridica ERPxPessoaJuridica;
        public xSYSxFranqueador SYSxFranqueador;
        public xSYSxPessoa SYSxPessoa;
        public static readonly XORMParameterField SYSxEmpresaGrupoID = new XORMParameterField(new Guid("27D0EAB9-BE83-4C12-B18D-E92B9090AAC1"), "SYSxEmpresaGrupoID", "SYSxEmpresaGrupoID", XInt32.CID, 0, 0, false, gCID, null);

        public PontoVendaSVC()
        {
            TupleType = typeof(PontoVendaSVC.XTuple);
            DataSetType = typeof(PontoVendaSVC.XDataSet);
            ServiceRuleCID = new Guid("41DBA6F2-6B2D-49C1-8834-20358E0B1884");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("7B6A1D03-D08C-45A4-B8A2-1C53D2B9945A");
            Name = "PontoVenda";
            Title = "Ponto de Venda";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("EBB5930C-9A21-4AB6-993E-B86F40039784");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("5D881AA3-C5C7-4FC9-A2A3-5219EA41AE12");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.CRD.js";
            GridFields = new Guid[] { xSYSxPessoa.SYSxPessoaID.ID, xCRDxPontoVenda.Sigla.ID, xERPxPessoaJuridica.RazaoSocial.ID, xSYSxPessoa.Nome.ID, xSYSxFranqueador.Nome.ID };
            OrderByFields = new Guid[] { xERPxPessoaJuridica.RazaoSocial.ID };
            DataSetFields = new Guid[] { SYSxEmpresaGrupoID.ID, xCRDxPontoVenda.ChaveSeguranca.ID, xCRDxPontoVenda.DataChave.ID, xCRDxPontoVenda.Fechamento.ID, xCRDxPontoVenda.Inclusao.ID, xCRDxPontoVenda.Pagamento.ID, xCRDxPontoVenda.Sigla.ID, xCRDxPontoVenda.SYSxEstadoID.ID, xCRDxPontoVenda.SYSxFranqueadorID.ID, xCRDxPontoVenda.TaxaAdministracao.ID, xERPxPessoaJuridica.RazaoSocial.ID, xERPxPessoaJuridica.SYSxEstadoID.ID, xSYSxFranqueador.Nome.ID, xSYSxPessoa.Nome.ID, xSYSxPessoa.SYSxPessoaID.ID };
            StateField = xCRDxPontoVenda.SYSxEstadoID.ID;
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("41DBA6F2-6B2D-49C1-8834-20358E0B1884");
            XSubServiceItem ssF8A0109673134E8CB6B15C1B95025A50 = new XSubServiceItem(DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, PontoVendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ssF8A0109673134E8CB6B15C1B95025A50.Rights = new Int16[] { 1 }; 
            ssF8A0109673134E8CB6B15C1B95025A50.LateLoad = false;
            SubServices.Add(ssF8A0109673134E8CB6B15C1B95025A50);
            XSubServiceItem ss6415F4E4475043F0B5696BB32734939E = new XSubServiceItem(ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, PontoVendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ss6415F4E4475043F0B5696BB32734939E.Rights = new Int16[] { 1 }; 
            ss6415F4E4475043F0B5696BB32734939E.LateLoad = false;
            SubServices.Add(ss6415F4E4475043F0B5696BB32734939E);
            XSubServiceItem ss98433113A495409D9DCA68C0BED2618F = new XSubServiceItem(EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, PontoVendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ss98433113A495409D9DCA68C0BED2618F.Rights = new Int16[] { 1 }; 
            ss98433113A495409D9DCA68C0BED2618F.LateLoad = false;
            SubServices.Add(ss98433113A495409D9DCA68C0BED2618F);
            CRDxPontoVenda = new xCRDxPontoVenda();
            CRDxPontoVenda.IsReadOnly = false;
            AddTable(CRDxPontoVenda);
            ERPxPessoaJuridica = new xERPxPessoaJuridica();
            ERPxPessoaJuridica.IsReadOnly = false;
            AddTable(ERPxPessoaJuridica);
            SYSxFranqueador = new xSYSxFranqueador();
            SYSxFranqueador.IsReadOnly = true;
            AddTable(SYSxFranqueador);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = false;
            AddTable(SYSxPessoa);
            MasterTableID = SYSxPessoa.ID;
            SYSxFranqueador_SYSxPessoaID_CRDxPontoVenda_SYSxFranqueadorID = AddReference(new XSVCReference(new Guid("22935FA3-1456-4147-A51A-BF9B7804C696"), "FK_22935FA314564147A51ABF9B7804C696", PontoVendaSVC.xSYSxFranqueador.gCID, xSYSxFranqueador.SYSxPessoaID.ID, PontoVendaSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.SYSxFranqueadorID.ID, XJoinType.Inner)); // SYSxFranqueador.SYSxPessoaID --> CRDxPontoVenda.SYSxFranqueadorID
            CRDxPontoVenda_CRDxPontoVendaID_ERPxPessoaJuridica_ERPxPessoaJuridicaID = AddReference(new XSVCReference(new Guid("92BE578F-9C93-45E7-82AA-AA419F8D4B8E"), "FK_92BE578F9C9345E782AAAA419F8D4B8E", PontoVendaSVC.xCRDxPontoVenda.gCID, xCRDxPontoVenda.CRDxPontoVendaID.ID, PontoVendaSVC.xERPxPessoaJuridica.gCID, xERPxPessoaJuridica.ERPxPessoaJuridicaID.ID, XJoinType.Inner)); // CRDxPontoVenda.CRDxPontoVendaID --> ERPxPessoaJuridica.ERPxPessoaJuridicaID
            ERPxPessoaJuridica_ERPxPessoaJuridicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("E6FB9A6A-25A8-48C5-9DC4-C02954CD71C2"), "FK_E6FB9A6A25A848C59DC4C02954CD71C2", PontoVendaSVC.xERPxPessoaJuridica.gCID, xERPxPessoaJuridica.ERPxPessoaJuridicaID.ID, PontoVendaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> SYSxPessoa.SYSxPessoaID
            XSVCReference FK_3A804B8A10524066BE9A43F4B0AE3C58 = new XSVCReference(new Guid("3A804B8A-1052-4066-BE9A-43F4B0AE3C58"), "FK_3A804B8A10524066BE9A43F4B0AE3C58", DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, SYSxPessoa.ID, PontoVendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // DocumentoSVC.SYSxPessoaID --> PontoVenda.SYSxPessoaID
            FK_3A804B8A10524066BE9A43F4B0AE3C58.IsLowRelevance = false;
            AddReference(FK_3A804B8A10524066BE9A43F4B0AE3C58);
            XSVCReference FK_9CAEE29C067F4911A43174C9D9A025CE = new XSVCReference(new Guid("9CAEE29C-067F-4911-A431-74C9D9A025CE"), "FK_9CAEE29C067F4911A43174C9D9A025CE", ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, SYSxPessoa.ID, PontoVendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // ContatoSVC.SYSxPessoaID --> PontoVenda.SYSxPessoaID
            FK_9CAEE29C067F4911A43174C9D9A025CE.IsLowRelevance = false;
            AddReference(FK_9CAEE29C067F4911A43174C9D9A025CE);
            XSVCReference FK_E66B047FFB164A7D937D998DBA03D778 = new XSVCReference(new Guid("E66B047F-FB16-4A7D-937D-998DBA03D778"), "FK_E66B047FFB164A7D937D998DBA03D778", EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, SYSxPessoa.ID, PontoVendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // EnderecoSVC.SYSxPessoaID --> PontoVenda.SYSxPessoaID
            FK_E66B047FFB164A7D937D998DBA03D778.IsLowRelevance = false;
            AddReference(FK_E66B047FFB164A7D937D998DBA03D778);
            AddField(SYSxEmpresaGrupoID);
            SYSxEmpresaGrupoID.IsParam = true;
            xCRDxPontoVenda.ChaveSeguranca.Length = 50;
            xCRDxPontoVenda.ChaveSeguranca.IsDataField = true;
            xCRDxPontoVenda.ChaveSeguranca.AllowEmpty = true;
            xCRDxPontoVenda.DataChave.IsDataField = true;
            xCRDxPontoVenda.DataChave.AllowEmpty = true;
            xCRDxPontoVenda.Fechamento.IsDataField = true;
            xCRDxPontoVenda.Fechamento.AllowEmpty = true;
            xSYSxFranqueador.Nome.IsReadOnly = true;
            xSYSxFranqueador.Nome.Length = 256;
            xSYSxFranqueador.Nome.IsDataField = true;
            xSYSxFranqueador.Nome.AllowEmpty = true;
            xCRDxPontoVenda.Inclusao.IsDataField = true;
            xCRDxPontoVenda.Inclusao.AllowEmpty = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xCRDxPontoVenda.Pagamento.IsDataField = true;
            xCRDxPontoVenda.Pagamento.AllowEmpty = true;
            xERPxPessoaJuridica.RazaoSocial.OrderType = XOrderType.Asc;
            xERPxPessoaJuridica.RazaoSocial.Length = 160;
            xERPxPessoaJuridica.RazaoSocial.IsDataField = true;
            xERPxPessoaJuridica.RazaoSocial.AllowEmpty = true;
            xCRDxPontoVenda.Sigla.Length = 25;
            xCRDxPontoVenda.Sigla.IsDataField = true;
            xCRDxPontoVenda.Sigla.AllowEmpty = true;
            SYSxEmpresaGrupoID.IsReadOnly = false;
            SYSxEmpresaGrupoID.Length = 0;
            SYSxEmpresaGrupoID.Scale = 0;
            SYSxEmpresaGrupoID.IsDataField = true;
            SYSxEmpresaGrupoID.AllowEmpty = true;
            xCRDxPontoVenda.SYSxEstadoID.IsDataField = true;
            xCRDxPontoVenda.SYSxEstadoID.AllowEmpty = true;
            xCRDxPontoVenda.SYSxFranqueadorID.IsDataField = true;
            xCRDxPontoVenda.SYSxFranqueadorID.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.GeneratePK = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
            xERPxPessoaJuridica.SYSxEstadoID.IsDataField = true;
            xERPxPessoaJuridica.SYSxEstadoID.AllowEmpty = true;
            xCRDxPontoVenda.TaxaAdministracao.Length = 25;
            xCRDxPontoVenda.TaxaAdministracao.Scale = 2;
            xCRDxPontoVenda.TaxaAdministracao.IsDataField = true;
            xCRDxPontoVenda.TaxaAdministracao.AllowEmpty = true;
            xERPxPessoaJuridica.RazaoSocial.DefaultValue = @"NI";
            xCRDxPontoVenda.SYSxEstadoID.DefaultValue = (Int16)1;
            xERPxPessoaJuridica.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField ChaveSeguranca => xCRDxPontoVenda.ChaveSeguranca;
        public XORMField DataChave => xCRDxPontoVenda.DataChave;
        public XORMField Fechamento => xCRDxPontoVenda.Fechamento;
        public XORMField FranqueadorNome => xSYSxFranqueador.Nome;
        public XORMField Inclusao => xCRDxPontoVenda.Inclusao;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Pagamento => xCRDxPontoVenda.Pagamento;
        public XORMField RazaoSocial => xERPxPessoaJuridica.RazaoSocial;
        public XORMField Sigla => xCRDxPontoVenda.Sigla;
        public XORMField SYSxEmpresaGrupoID => PontoVendaSVC.SYSxEmpresaGrupoID;
        public XORMField SYSxEstadoID => xCRDxPontoVenda.SYSxEstadoID;
        public XORMField SYSxFranqueadorID => xCRDxPontoVenda.SYSxFranqueadorID;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        public XORMField SYSxPJEstadoID => xERPxPessoaJuridica.SYSxEstadoID;
        public XORMField TaxaAdministracao => xCRDxPontoVenda.TaxaAdministracao;
        }
        #endregion XFields
        #region PontoVendaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String ChaveSeguranca
        {
            get
            {
                return (String)Value[PontoVendaSVC.xCRDxPontoVenda.ChaveSeguranca.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.ChaveSeguranca.ID] = value;
            }
        }
        public String? oChaveSeguranca
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.ChaveSeguranca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime DataChave
        {
            get
            {
                return (DateTime)Value[PontoVendaSVC.xCRDxPontoVenda.DataChave.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.DataChave.ID] = value;
            }
        }
        public DateTime? oDataChave
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.DataChave, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Int16 Fechamento
        {
            get
            {
                return (Int16)Value[PontoVendaSVC.xCRDxPontoVenda.Fechamento.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.Fechamento.ID] = value;
            }
        }
        public Int16? oFechamento
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.Fechamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String FranqueadorNome
        {
            get
            {
                return (String)Value[PontoVendaSVC.xSYSxFranqueador.Nome.ID];
            }
            set
            {
                Value[PontoVendaSVC.xSYSxFranqueador.Nome.ID] = value;
            }
        }
        public String? oFranqueadorNome
        {
            get
            {
                GetOldValue(PontoVendaSVC.xSYSxFranqueador.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Inclusao
        {
            get
            {
                return (DateTime)Value[PontoVendaSVC.xCRDxPontoVenda.Inclusao.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.Inclusao.ID] = value;
            }
        }
        public DateTime? oInclusao
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.Inclusao, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[PontoVendaSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[PontoVendaSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(PontoVendaSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 Pagamento
        {
            get
            {
                return (Int16)Value[PontoVendaSVC.xCRDxPontoVenda.Pagamento.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.Pagamento.ID] = value;
            }
        }
        public Int16? oPagamento
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.Pagamento, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String RazaoSocial
        {
            get
            {
                return (String)Value[PontoVendaSVC.xERPxPessoaJuridica.RazaoSocial.ID];
            }
            set
            {
                Value[PontoVendaSVC.xERPxPessoaJuridica.RazaoSocial.ID] = value;
            }
        }
        public String? oRazaoSocial
        {
            get
            {
                GetOldValue(PontoVendaSVC.xERPxPessoaJuridica.RazaoSocial, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Sigla
        {
            get
            {
                return (String)Value[PontoVendaSVC.xCRDxPontoVenda.Sigla.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.Sigla.ID] = value;
            }
        }
        public String? oSigla
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 SYSxEmpresaGrupoID
        {
            get
            {
                return (Int32)Value[PontoVendaSVC.SYSxEmpresaGrupoID.ID];
            }
            set
            {
                Value[PontoVendaSVC.SYSxEmpresaGrupoID.ID] = value;
            }
        }
        public Int32? oSYSxEmpresaGrupoID
        {
            get
            {
                GetOldValue(PontoVendaSVC.SYSxEmpresaGrupoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[PontoVendaSVC.xCRDxPontoVenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxFranqueadorID
        {
            get
            {
                return (Guid)Value[PontoVendaSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID] = value;
            }
        }
        public Guid? oSYSxFranqueadorID
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.SYSxFranqueadorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[PontoVendaSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[PontoVendaSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(PontoVendaSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxPJEstadoID
        {
            get
            {
                return (Int16)Value[PontoVendaSVC.xERPxPessoaJuridica.SYSxEstadoID.ID];
            }
            set
            {
                Value[PontoVendaSVC.xERPxPessoaJuridica.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxPJEstadoID
        {
            get
            {
                GetOldValue(PontoVendaSVC.xERPxPessoaJuridica.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal TaxaAdministracao
        {
            get
            {
                return (Decimal)Value[PontoVendaSVC.xCRDxPontoVenda.TaxaAdministracao.ID];
            }
            set
            {
                Value[PontoVendaSVC.xCRDxPontoVenda.TaxaAdministracao.ID] = value;
            }
        }
        public Decimal? oTaxaAdministracao
        {
            get
            {
                GetOldValue(PontoVendaSVC.xCRDxPontoVenda.TaxaAdministracao, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion PontoVendaSVC.XTuple

        #region PontoVendaSVC.XRule
        public abstract class XRule : XServiceRule<PontoVendaSVC.XDataSet, PontoVendaSVC, PontoVendaSVC.XTuple>
        {
        }
        #endregion PontoVendaSVC.XRule

        #region PontoVendaSVC.XDataSet

        public class XDataSet : XDataSet<PontoVendaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(PontoVendaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<PontoVendaSVC.XTuple> where T : XDataTuple
        {

            public Guid ChaveSeguranca => PontoVendaSVC.xCRDxPontoVenda.ChaveSeguranca.ID;
            public Guid DataChave => PontoVendaSVC.xCRDxPontoVenda.DataChave.ID;
            public Guid Fechamento => PontoVendaSVC.xCRDxPontoVenda.Fechamento.ID;
            public Guid FranqueadorNome => PontoVendaSVC.xSYSxFranqueador.Nome.ID;
            public Guid Inclusao => PontoVendaSVC.xCRDxPontoVenda.Inclusao.ID;
            public Guid Nome => PontoVendaSVC.xSYSxPessoa.Nome.ID;
            public Guid Pagamento => PontoVendaSVC.xCRDxPontoVenda.Pagamento.ID;
            public Guid RazaoSocial => PontoVendaSVC.xERPxPessoaJuridica.RazaoSocial.ID;
            public Guid Sigla => PontoVendaSVC.xCRDxPontoVenda.Sigla.ID;
            public Guid SYSxEmpresaGrupoID => PontoVendaSVC.SYSxEmpresaGrupoID.ID;
            public Guid SYSxEstadoID => PontoVendaSVC.xCRDxPontoVenda.SYSxEstadoID.ID;
            public Guid SYSxFranqueadorID => PontoVendaSVC.xCRDxPontoVenda.SYSxFranqueadorID.ID;
            public Guid SYSxPessoaID => PontoVendaSVC.xSYSxPessoa.SYSxPessoaID.ID;
            public Guid SYSxPJEstadoID => PontoVendaSVC.xERPxPessoaJuridica.SYSxEstadoID.ID;
            public Guid TaxaAdministracao => PontoVendaSVC.xCRDxPontoVenda.TaxaAdministracao.ID;

            public XDataSet()
            {
                DataSetType = typeof(PontoVendaSVC.XDataSet);
            }

            private Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet _ContatoDataSet;

            public Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet ContatoDataSet
            {
                get
                {
                    if (_ContatoDataSet == null)
                    {
                        _ContatoDataSet = (Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.ContatoSVC.gCID);
                        _ContatoDataSet.IsReadOnly = true;
                    }
                    return  _ContatoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet _EnderecoDataSet;

            public Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet EnderecoDataSet
            {
                get
                {
                    if (_EnderecoDataSet == null)
                    {
                        _EnderecoDataSet = (Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.EnderecoSVC.gCID);
                        _EnderecoDataSet.IsReadOnly = true;
                    }
                    return  _EnderecoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet _DocumentoDataSet;

            public Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet DocumentoDataSet
            {
                get
                {
                    if (_DocumentoDataSet == null)
                    {
                        _DocumentoDataSet = (Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.DocumentoSVC.gCID);
                        _DocumentoDataSet.IsReadOnly = true;
                    }
                    return  _DocumentoDataSet;
                }
            }

        }
        #endregion PontoVendaSVC.XDataSet

        [Guid(PontoVendaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(PontoVendaSVC))]
        protected class _Service : Service<PontoVendaSVC, XDataSet, XTuple>
        {
            public const String sCID = "5DA08083-4FBF-4476-8031-4431877FCA27";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<PontoVendaSVC, XDataSet, XTuple>, XService
             where TModel : PontoVendaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}