//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.NTR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.NTR.Evento
{
    [XRegister(typeof(EventoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.NTR\Projecao.Core.NTR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.NTR\Evento\Evento.dssvc")]
    public class EventoSVC : XSVCModel
    {
        #region EventoFilterFRM

        [XRegister(typeof(EventoFilterFRM), sCID)]
        public class EventoFilterFRM : XFRMModel
        {
            public const String sCID = "94884105-AA51-4A20-A84D-6D83BAAA0243";
            static EventoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public EventoFilterFRM()
            {
                ID = gCID;
                Name = "EventoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(MomentoIni);
                MomentoIni.ForceRW = true;
                MomentoIni.CanInsert = true;
                MomentoIni.CanUpdate = true;
                MomentoIni.RowCount = 1;
                MomentoIni.ColCount = 6;
                MomentoIni.RowCountSmall = 1;
                MomentoIni.ColCountSmall = 6;
                MomentoIni.IsHidden = false;
                MomentoIni.IsHiddenSmall = false;
                MomentoIni.AdditionalTitle = "";
                MomentoIni.Location = 1;
                MomentoIni.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                MomentoIni.FormImplace = true;
                MomentoIni.Operator = XOperator.GreaterThanOrEqualTo;
                MomentoIni.JustifyHeight = false;
                MomentoIni.AllowEmpty = true;
                MomentoIni.FontColor = "#000000";
                MomentoIni.FontStyle = XFontStyle.Normal;
                MomentoIni.ShowFooter = false;
                MomentoIni.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                MomentoIni.Scale = 0;
                MomentoIni.Length = 0;
                MomentoIni.SearchAction = XSearchAction.Default;
                MomentoIni.TypeID = XDateTime.CID;
                MomentoIni.AdditionalFieldsID = new Guid[] {  };
                MomentoIni.AdditionalDataFieldsID = new Guid[] {  };
                MomentoIni.TargetFilterFieldID = new Guid[] {  };
                MomentoIni.SourceFilterFieldID = new Guid[] {  };
                MomentoIni.TargetDisplayFieldID = new Guid[] {  };
                MomentoIni.SourceDisplayFieldID = new Guid[] {  };
                MomentoIni.AutoLoad = false;
                MomentoIni.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                MomentoIni.FilterInative = true;
                MomentoIni.IsAnswer = false;
                MomentoIni.AllowMultiSelect = false;
                AddItem(MomentoFin);
                MomentoFin.ForceRW = true;
                MomentoFin.CanInsert = true;
                MomentoFin.CanUpdate = true;
                MomentoFin.RowCount = 1;
                MomentoFin.ColCount = 6;
                MomentoFin.RowCountSmall = 1;
                MomentoFin.ColCountSmall = 6;
                MomentoFin.IsHidden = false;
                MomentoFin.IsHiddenSmall = false;
                MomentoFin.AdditionalTitle = "";
                MomentoFin.Location = 2;
                MomentoFin.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                MomentoFin.FormImplace = true;
                MomentoFin.Operator = XOperator.LessThanOrEqualTo;
                MomentoFin.JustifyHeight = false;
                MomentoFin.AllowEmpty = true;
                MomentoFin.FontColor = "#000000";
                MomentoFin.FontStyle = XFontStyle.Normal;
                MomentoFin.ShowFooter = false;
                MomentoFin.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                MomentoFin.Scale = 0;
                MomentoFin.Length = 0;
                MomentoFin.SearchAction = XSearchAction.Default;
                MomentoFin.TypeID = XDateTime.CID;
                MomentoFin.AdditionalFieldsID = new Guid[] {  };
                MomentoFin.AdditionalDataFieldsID = new Guid[] {  };
                MomentoFin.TargetFilterFieldID = new Guid[] {  };
                MomentoFin.SourceFilterFieldID = new Guid[] {  };
                MomentoFin.TargetDisplayFieldID = new Guid[] {  };
                MomentoFin.SourceDisplayFieldID = new Guid[] {  };
                MomentoFin.AutoLoad = false;
                MomentoFin.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                MomentoFin.FilterInative = true;
                MomentoFin.IsAnswer = false;
                MomentoFin.AllowMultiSelect = false;
                AddItem(Erro);
                Erro.ForceRW = true;
                Erro.CanInsert = true;
                Erro.CanUpdate = true;
                Erro.RowCount = 1;
                Erro.ColCount = 20;
                Erro.RowCountSmall = 1;
                Erro.ColCountSmall = 20;
                Erro.IsHidden = false;
                Erro.IsHiddenSmall = false;
                Erro.AdditionalTitle = "";
                Erro.Location = 3;
                Erro.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Erro.FormImplace = true;
                Erro.Operator = XOperator.EqualTo;
                Erro.JustifyHeight = false;
                Erro.AllowEmpty = true;
                Erro.FontColor = "#000000";
                Erro.FontStyle = XFontStyle.Normal;
                Erro.ShowFooter = false;
                Erro.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Erro.Scale = 0;
                Erro.Length = 0;
                Erro.SearchAction = XSearchAction.Default;
                Erro.TypeID = XString.CID;
                Erro.AdditionalFieldsID = new Guid[] {  };
                Erro.AdditionalDataFieldsID = new Guid[] {  };
                Erro.TargetFilterFieldID = new Guid[] {  };
                Erro.SourceFilterFieldID = new Guid[] {  };
                Erro.TargetDisplayFieldID = new Guid[] {  };
                Erro.SourceDisplayFieldID = new Guid[] {  };
                Erro.AutoLoad = false;
                Erro.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Erro.FilterInative = true;
                Erro.IsAnswer = false;
                Erro.AllowMultiSelect = false;
            }
            public XFRMField MomentoIni = new XFRMField(new Guid("F081B46A-F6EC-4819-82FF-A4183E482D96"), "MomentoIni", "Momento (Ini)", XDateTime.CID, 1, 6, false, gCID, null, new Guid("63DEC357-CB9E-4084-A38F-0653EAF42054")); // DateTime;
            public XFRMField MomentoFin = new XFRMField(new Guid("4844A665-66FE-4894-A1DE-A4D77F203FA2"), "MomentoFin", "Momento (Fin)", XDateTime.CID, 1, 6, false, gCID, null, new Guid("63DEC357-CB9E-4084-A38F-0653EAF42054")); // DateTime;
            public XFRMField Erro = new XFRMField(new Guid("FAADC446-D167-42FB-AE88-28F71453DAD0"), "Erro", "Erro", XString.CID, 1, 20, false, gCID, null, new Guid("069F9F3B-DD66-4B8F-A333-13C9E8E5C0F1")); // String;
            public static class Fields
            {
                public static XFieldInfo MomentoIni = new XFieldInfo(new Guid("F081B46A-F6EC-4819-82FF-A4183E482D96"), "MomentoIni", "Momento (Ini)", typeof(DateTime));
                public static XFieldInfo MomentoFin = new XFieldInfo(new Guid("4844A665-66FE-4894-A1DE-A4D77F203FA2"), "MomentoFin", "Momento (Fin)", typeof(DateTime));
                public static XFieldInfo Erro = new XFieldInfo(new Guid("FAADC446-D167-42FB-AE88-28F71453DAD0"), "Erro", "Erro", typeof(String));
            }
        }

        #endregion EventoFilterFRM

        public const String sCID = "7773D497-2C8E-4146-81F7-7F3EB7965CDC";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference NTRxLogTipo_NTRxLogTipoID_NTRxLogErro_NTRxLogTipoID; // NTRxLogTipo.NTRxLogTipoID --> NTRxLogErro.NTRxLogTipoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_NTRxEvento_CTLxUsuarioID; // SYSxPessoa.SYSxPessoaID --> NTRxEvento.CTLxUsuarioID
        public static XSVCReference NTRxEventoTipo_NTRxLogTipoID_NTRxEvento_NTRxLogTipoID; // NTRxEventoTipo.NTRxLogTipoID --> NTRxEvento.NTRxLogTipoID
        public static XSVCReference NTRxLogErro_NTRxEventoID_NTRxEvento_NTRxEventoID; // NTRxLogErro.NTRxEventoID --> NTRxEvento.NTRxEventoID

        #region xNTRxLogTipo 
        public class xNTRxLogTipo : XSVCTable
        {

            public static Guid gCID => new Guid("0053D504-F11D-4EA4-93FE-22BE49230883");

            public xNTRxLogTipo()
            {
                Name = "NTRxLogTipo";
                Alias = "NTRxLogTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.NTR.DB.NTRx.NTRxLogTipo.gCID;

                Items.Add(NTRxLogTipoID, NTRxLogTipoID.ID);
                NTRxLogTipoID.Owner = this;
                NTRxLogTipoID.OwnerID = ID;
                NTRxLogTipoID.TableName = Name;
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "ErroTipo";
            }

            public static XORMPKField NTRxLogTipoID = new XORMPKField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogTipo.NTRxLogTipoID, new Guid("777C0038-4062-4989-8B91-7420AD16CFEE"), "NTRxLogTipoID", "Tipo de Log");
            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogTipo.Tipo, new Guid("9DDC8358-F082-4D76-9788-4F9EF63F68D9"), "Tipo", "Tipo de Erro");
        }
        #endregion xNTRxLogTipo 


        #region xNTRxEventoTipo 
        public class xNTRxEventoTipo : XSVCTable
        {

            public static Guid gCID => new Guid("0D1BDC6E-DFEC-401B-A14F-907CEA719966");

            public xNTRxEventoTipo()
            {
                Name = "NTRxLogTipo";
                Alias = "NTRxEventoTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.NTR.DB.NTRx.NTRxLogTipo.gCID;

                Items.Add(NTRxLogTipoID, NTRxLogTipoID.ID);
                NTRxLogTipoID.Owner = this;
                NTRxLogTipoID.OwnerID = ID;
                NTRxLogTipoID.TableName = Name;
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "EventoTipo";
            }

            public static XORMPKField NTRxLogTipoID = new XORMPKField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogTipo.NTRxLogTipoID, new Guid("166D3FFF-273D-4612-BEF5-0A4A4D0695E9"), "NTRxLogTipoID", "Tipo de Log");
            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogTipo.Tipo, new Guid("B00988E6-BD3F-4FD1-9B34-22E96CACEEA2"), "Tipo", "Tipo de Evento");
        }
        #endregion xNTRxEventoTipo 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("54CCDE87-F46B-4A06-88AB-7470CE0A629C");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("3BA83539-0480-4785-B817-0D3C1DB90788"), "Nome", "Usuário");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("F1D01331-32EB-430C-A273-4E4F3CA3B9D3"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xNTRxEvento 
        public class xNTRxEvento : XSVCTable
        {

            public static Guid gCID => new Guid("C0881177-C0B8-420C-A8F5-9F132CA428C6");

            public xNTRxEvento()
            {
                Name = "NTRxEvento";
                Alias = "NTRxEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.gCID;

                Items.Add(NTRxEventoID, NTRxEventoID.ID);
                NTRxEventoID.Owner = this;
                NTRxEventoID.OwnerID = ID;
                NTRxEventoID.TableName = Name;
                NTRxEventoID.Alias = "NTRxEventoID";
                Items.Add(Momento, Momento.ID);
                Momento.Owner = this;
                Momento.OwnerID = ID;
                Momento.TableName = Name;
                Momento.Alias = "Momento";
                Items.Add(Tamanho, Tamanho.ID);
                Tamanho.Owner = this;
                Tamanho.OwnerID = ID;
                Tamanho.TableName = Name;
                Tamanho.Alias = "Tamanho";
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(Classe, Classe.ID);
                Classe.Owner = this;
                Classe.OwnerID = ID;
                Classe.TableName = Name;
                Classe.Alias = "Classe";
                Items.Add(NTRxLogTipoID, NTRxLogTipoID.ID);
                NTRxLogTipoID.Owner = this;
                NTRxLogTipoID.OwnerID = ID;
                NTRxLogTipoID.TableName = Name;
            }

            public static XORMPKField NTRxEventoID = new XORMPKField(global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.NTRxEventoID, new Guid("BD02C880-5C06-443E-BC9C-6F25403EADF7"), "NTRxEventoID", "Eventos");
            public static XORMDateTimeField Momento = new XORMDateTimeField(global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.Momento, new Guid("63DEC357-CB9E-4084-A38F-0653EAF42054"), "Momento", "Momento");
            public static XORMField Tamanho = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.Tamanho, new Guid("F9012262-9570-44B7-9253-22FBBBE2AB1B"), "Tamanho", "Tamanho (Bytes)");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.CTLxUsuarioID, new Guid("BDCCF6FE-0206-4021-85E9-93CA0B37F7C7"), "CTLxUsuarioID", "Usuário");
            public static XORMField Classe = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.Classe, new Guid("2F211BF6-8C36-4D96-B1D6-1CE3A3707B68"), "Classe", "Classe");
            public static XORMFKField NTRxLogTipoID = new XORMFKField(global::Projecao.Core.NTR.DB.NTRx.NTRxEvento.NTRxLogTipoID, new Guid("3F43577C-6F3E-46DE-B9E8-48CD9677B41D"), "NTRxLogTipoID", "Tipo de Log");
        }
        #endregion xNTRxEvento 


        #region xNTRxLogErro 
        public class xNTRxLogErro : XSVCTable
        {

            public static Guid gCID => new Guid("FEB6C89F-080E-4C20-A54B-6C20DCFA5F35");

            public xNTRxLogErro()
            {
                Name = "NTRxLogErro";
                Alias = "NTRxLogErro";
                ID = gCID;
                ParentID =  global::Projecao.Core.NTR.DB.NTRx.NTRxLogErro.gCID;

                Items.Add(NTRxLogErroID, NTRxLogErroID.ID);
                NTRxLogErroID.Owner = this;
                NTRxLogErroID.OwnerID = ID;
                NTRxLogErroID.TableName = Name;
                Items.Add(NTRxEventoID, NTRxEventoID.ID);
                NTRxEventoID.Owner = this;
                NTRxEventoID.OwnerID = ID;
                NTRxEventoID.TableName = Name;
                Items.Add(NTRxLogTipoID, NTRxLogTipoID.ID);
                NTRxLogTipoID.Owner = this;
                NTRxLogTipoID.OwnerID = ID;
                NTRxLogTipoID.TableName = Name;
                Items.Add(Erro, Erro.ID);
                Erro.Owner = this;
                Erro.OwnerID = ID;
                Erro.TableName = Name;
                Erro.Alias = "Erro";
                Items.Add(Detalhe, Detalhe.ID);
                Detalhe.Owner = this;
                Detalhe.OwnerID = ID;
                Detalhe.TableName = Name;
                Detalhe.Alias = "Detalhe";
            }

            public static XORMPKField NTRxLogErroID = new XORMPKField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogErro.NTRxLogErroID, new Guid("2C453EBC-A3CD-4918-A767-A187946D83D1"), "NTRxLogErroID", "Log");
            public static XORMFKField NTRxEventoID = new XORMFKField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogErro.NTRxEventoID, new Guid("EC55836F-604F-4961-84AD-BA9407DC01B1"), "NTRxEventoID", "Eventos");
            public static XORMFKField NTRxLogTipoID = new XORMFKField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogErro.NTRxLogTipoID, new Guid("281F50CD-1503-4520-B5DD-85FC196ACF3F"), "NTRxLogTipoID", "Tipo de Log");
            public static XORMField Erro = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogErro.Erro, new Guid("069F9F3B-DD66-4B8F-A333-13C9E8E5C0F1"), "Erro", "Erro");
            public static XORMField Detalhe = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxLogErro.Detalhe, new Guid("F62C089F-2E00-488D-8B98-F51C30DE6000"), "Detalhe", "Detalhe");
        }
        #endregion xNTRxLogErro 


        public xNTRxEvento NTRxEvento;
        public xNTRxEventoTipo NTRxEventoTipo;
        public xNTRxLogErro NTRxLogErro;
        public xNTRxLogTipo NTRxLogTipo;
        public xSYSxPessoa SYSxPessoa;

        public EventoSVC()
        {
            TupleType = typeof(EventoSVC.XTuple);
            DataSetType = typeof(EventoSVC.XDataSet);
            ServiceRuleCID = new Guid("1A6FEDB7-02F5-402C-AEFD-D0B3D630F547");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("7773D497-2C8E-4146-81F7-7F3EB7965CDC");
            Name = "Evento";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("94884105-AA51-4A20-A84D-6D83BAAA0243");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.NTR.js";
            GridFields = new Guid[] { xNTRxEventoTipo.Tipo.ID, xNTRxEvento.Momento.ID, xNTRxEvento.Tamanho.ID, xSYSxPessoa.Nome.ID, xNTRxEvento.Classe.ID, xNTRxLogTipo.Tipo.ID, xNTRxLogErro.Erro.ID };
            OrderByFields = new Guid[] { xNTRxEvento.Momento.ID };
            DataSetFields = new Guid[] { xNTRxEvento.Momento.ID, xNTRxEvento.NTRxEventoID.ID, xNTRxEvento.Tamanho.ID, xNTRxEvento.Classe.ID, xNTRxEventoTipo.Tipo.ID, xSYSxPessoa.Nome.ID, xNTRxLogTipo.Tipo.ID, xNTRxLogErro.Erro.ID, xNTRxLogErro.Detalhe.ID };
            PKField = xNTRxEvento.NTRxEventoID.ID;
            ConfigTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
            MasterRuleCID = new Guid("1A6FEDB7-02F5-402C-AEFD-D0B3D630F547");
            NTRxEvento = new xNTRxEvento();
            NTRxEvento.IsReadOnly = true;
            AddTable(NTRxEvento);
            NTRxEventoTipo = new xNTRxEventoTipo();
            NTRxEventoTipo.IsReadOnly = true;
            AddTable(NTRxEventoTipo);
            NTRxLogErro = new xNTRxLogErro();
            NTRxLogErro.IsReadOnly = true;
            AddTable(NTRxLogErro);
            NTRxLogTipo = new xNTRxLogTipo();
            NTRxLogTipo.IsReadOnly = true;
            AddTable(NTRxLogTipo);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = NTRxEvento.ID;
            NTRxLogTipo_NTRxLogTipoID_NTRxLogErro_NTRxLogTipoID = AddReference(new XSVCReference(new Guid("1BCE9C9C-1624-4B11-8EFD-6128708B5F99"), "FK_1BCE9C9C16244B118EFD6128708B5F99", EventoSVC.xNTRxLogTipo.gCID, xNTRxLogTipo.NTRxLogTipoID.ID, EventoSVC.xNTRxLogErro.gCID, xNTRxLogErro.NTRxLogTipoID.ID, XJoinType.Left)); // NTRxLogTipo.NTRxLogTipoID --> NTRxLogErro.NTRxLogTipoID
            SYSxPessoa_SYSxPessoaID_NTRxEvento_CTLxUsuarioID = AddReference(new XSVCReference(new Guid("48BDEF08-B942-46C8-9A64-CF4E32FE1C7D"), "FK_48BDEF08B94246C89A64CF4E32FE1C7D", EventoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, EventoSVC.xNTRxEvento.gCID, xNTRxEvento.CTLxUsuarioID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> NTRxEvento.CTLxUsuarioID
            NTRxEventoTipo_NTRxLogTipoID_NTRxEvento_NTRxLogTipoID = AddReference(new XSVCReference(new Guid("DBE7B46B-77DB-4298-A067-6D6EA304EAF7"), "FK_DBE7B46B77DB4298A0676D6EA304EAF7", EventoSVC.xNTRxEventoTipo.gCID, xNTRxEventoTipo.NTRxLogTipoID.ID, EventoSVC.xNTRxEvento.gCID, xNTRxEvento.NTRxLogTipoID.ID, XJoinType.Inner)); // NTRxEventoTipo.NTRxLogTipoID --> NTRxEvento.NTRxLogTipoID
            NTRxLogErro_NTRxEventoID_NTRxEvento_NTRxEventoID = AddReference(new XSVCReference(new Guid("FB395EE1-8E15-4A68-A0F6-82383BC56B03"), "FK_FB395EE18E154A68A0F682383BC56B03", EventoSVC.xNTRxLogErro.gCID, xNTRxLogErro.NTRxEventoID.ID, EventoSVC.xNTRxEvento.gCID, xNTRxEvento.NTRxEventoID.ID, XJoinType.Left)); // NTRxLogErro.NTRxEventoID --> NTRxEvento.NTRxEventoID
            xNTRxEvento.Classe.IsReadOnly = true;
            xNTRxEvento.Classe.Length = 50;
            xNTRxEvento.Classe.IsDataField = true;
            xNTRxEvento.Classe.AllowEmpty = true;
            xNTRxLogErro.Detalhe.IsReadOnly = true;
            xNTRxLogErro.Detalhe.IsDataField = true;
            xNTRxLogErro.Detalhe.AllowEmpty = true;
            xNTRxLogErro.Erro.IsReadOnly = true;
            xNTRxLogErro.Erro.IsDataField = true;
            xNTRxLogErro.Erro.FilterUse = true;
            xNTRxLogErro.Erro.AllowEmpty = true;
            xNTRxLogTipo.Tipo.IsReadOnly = true;
            xNTRxLogTipo.Tipo.Length = 20;
            xNTRxLogTipo.Tipo.IsDataField = true;
            xNTRxLogTipo.Tipo.AllowEmpty = true;
            xNTRxEventoTipo.Tipo.IsReadOnly = true;
            xNTRxEventoTipo.Tipo.Length = 20;
            xNTRxEventoTipo.Tipo.IsDataField = true;
            xNTRxEventoTipo.Tipo.AllowEmpty = true;
            xNTRxEvento.Momento.IsReadOnly = true;
            xNTRxEvento.Momento.OrderType = XOrderType.Asc;
            xNTRxEvento.Momento.IsDataField = true;
            xNTRxEvento.Momento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xNTRxEvento.NTRxEventoID.IsReadOnly = true;
            xNTRxEvento.NTRxEventoID.IsDataField = true;
            xNTRxEvento.NTRxEventoID.AllowEmpty = true;
            xNTRxEvento.Tamanho.IsReadOnly = true;
            xNTRxEvento.Tamanho.IsDataField = true;
            xNTRxEvento.Tamanho.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Classe => xNTRxEvento.Classe;
        public XORMField Detalhe => xNTRxLogErro.Detalhe;
        public XORMField Erro => xNTRxLogErro.Erro;
        public XORMField ErroTipo => xNTRxLogTipo.Tipo;
        public XORMField EventoTipo => xNTRxEventoTipo.Tipo;
        public XORMField Momento => xNTRxEvento.Momento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NTRxEventoID => xNTRxEvento.NTRxEventoID;
        public XORMField Tamanho => xNTRxEvento.Tamanho;
        }
        #endregion XFields
        #region EventoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Classe
        {
            get
            {
                return (String)Value[EventoSVC.xNTRxEvento.Classe.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxEvento.Classe.ID] = value;
            }
        }
        public String? oClasse
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxEvento.Classe, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Detalhe
        {
            get
            {
                return (String)Value[EventoSVC.xNTRxLogErro.Detalhe.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxLogErro.Detalhe.ID] = value;
            }
        }
        public String? oDetalhe
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxLogErro.Detalhe, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Erro
        {
            get
            {
                return (String)Value[EventoSVC.xNTRxLogErro.Erro.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxLogErro.Erro.ID] = value;
            }
        }
        public String? oErro
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxLogErro.Erro, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String ErroTipo
        {
            get
            {
                return (String)Value[EventoSVC.xNTRxLogTipo.Tipo.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxLogTipo.Tipo.ID] = value;
            }
        }
        public String? oErroTipo
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxLogTipo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String EventoTipo
        {
            get
            {
                return (String)Value[EventoSVC.xNTRxEventoTipo.Tipo.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxEventoTipo.Tipo.ID] = value;
            }
        }
        public String? oEventoTipo
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxEventoTipo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Momento
        {
            get
            {
                return (DateTime)Value[EventoSVC.xNTRxEvento.Momento.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxEvento.Momento.ID] = value;
            }
        }
        public DateTime? oMomento
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxEvento.Momento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[EventoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[EventoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(EventoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 NTRxEventoID
        {
            get
            {
                return (Int32)Value[EventoSVC.xNTRxEvento.NTRxEventoID.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxEvento.NTRxEventoID.ID] = value;
            }
        }
        public Int32? oNTRxEventoID
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxEvento.NTRxEventoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 Tamanho
        {
            get
            {
                return (Int32)Value[EventoSVC.xNTRxEvento.Tamanho.ID];
            }
            set
            {
                Value[EventoSVC.xNTRxEvento.Tamanho.ID] = value;
            }
        }
        public Int32? oTamanho
        {
            get
            {
                GetOldValue(EventoSVC.xNTRxEvento.Tamanho, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion EventoSVC.XTuple

        #region EventoSVC.XRule
        public abstract class XRule : XServiceRule<EventoSVC.XDataSet, EventoSVC, EventoSVC.XTuple>
        {
        }
        #endregion EventoSVC.XRule

        #region EventoSVC.XDataSet

        public class XDataSet : XDataSet<EventoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(EventoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<EventoSVC.XTuple> where T : XDataTuple
        {

            public Guid Classe => EventoSVC.xNTRxEvento.Classe.ID;
            public Guid Detalhe => EventoSVC.xNTRxLogErro.Detalhe.ID;
            public Guid Erro => EventoSVC.xNTRxLogErro.Erro.ID;
            public Guid ErroTipo => EventoSVC.xNTRxLogTipo.Tipo.ID;
            public Guid EventoTipo => EventoSVC.xNTRxEventoTipo.Tipo.ID;
            public Guid Momento => EventoSVC.xNTRxEvento.Momento.ID;
            public Guid Nome => EventoSVC.xSYSxPessoa.Nome.ID;
            public Guid NTRxEventoID => EventoSVC.xNTRxEvento.NTRxEventoID.ID;
            public Guid Tamanho => EventoSVC.xNTRxEvento.Tamanho.ID;

            public XDataSet()
            {
                DataSetType = typeof(EventoSVC.XDataSet);
            }

        }
        #endregion EventoSVC.XDataSet

        [Guid(EventoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(EventoSVC))]
        protected class _Service : Service<EventoSVC, XDataSet, XTuple>
        {
            public const String sCID = "60514E02-9195-4043-BE69-7E3E839AB6E4";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<EventoSVC, XDataSet, XTuple>, XService
             where TModel : EventoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}