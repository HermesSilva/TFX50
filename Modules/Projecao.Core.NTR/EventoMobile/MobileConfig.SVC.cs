//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.NTR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Projecao.Core.NTR.EventoMobile;

namespace Projecao.Core.NTR.EventoMobile
{
    [XRegister(typeof(MobileConfigSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.NTR\Projecao.Core.NTR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.NTR\EventoMobile\MobileConfig.dssvc")]
    public class MobileConfigSVC : XSVCModel
    {
        #region MobileConfigFilterFRM

        [XRegister(typeof(MobileConfigFilterFRM), sCID)]
        public class MobileConfigFilterFRM : XFRMModel
        {
            public const String sCID = "CE9F97E9-4CF6-449F-AEBF-E26E6FC74286";
            static MobileConfigFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public MobileConfigFilterFRM()
            {
                ID = gCID;
                Name = "MobileConfigFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("D13ED1CD-A914-41DB-8A51-1A78CC42067A"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("AE41FE22-B4DB-49FA-A2C5-17BB12946A42")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("D13ED1CD-A914-41DB-8A51-1A78CC42067A"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion MobileConfigFilterFRM

        public const String sCID = "DF2AE8BD-9282-4AC4-912F-B93529DCE037";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference NTRxMobileConfig_NTRxMobileConfigID_SYSxPessoa_SYSxPessoaID; // NTRxMobileConfig.NTRxMobileConfigID --> SYSxPessoa.SYSxPessoaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("31D58338-41FD-4CBF-9F57-945DF59DD6E8");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("AE41FE22-B4DB-49FA-A2C5-17BB12946A42"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("8DF07A82-0925-45E3-91CE-45E586C80C95"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xNTRxMobileConfig 
        public class xNTRxMobileConfig : XSVCTable
        {

            public static Guid gCID => new Guid("8DE66751-275F-4499-86A5-AF8FFD7E3210");

            public xNTRxMobileConfig()
            {
                Name = "NTRxMobileConfig";
                Alias = "NTRxMobileConfig";
                ID = gCID;
                ParentID =  global::Projecao.Core.NTR.DB.NTRx.NTRxMobileConfig.gCID;

                Items.Add(NTRxMobileConfigID, NTRxMobileConfigID.ID);
                NTRxMobileConfigID.Owner = this;
                NTRxMobileConfigID.OwnerID = ID;
                NTRxMobileConfigID.TableName = Name;
                NTRxMobileConfigID.Alias = "NTRxMobileConfigID";
                Items.Add(Dispositivo, Dispositivo.ID);
                Dispositivo.Owner = this;
                Dispositivo.OwnerID = ID;
                Dispositivo.TableName = Name;
                Dispositivo.Alias = "Dispositivo";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "UltimoEnvio";
                Items.Add(Chamadas, Chamadas.ID);
                Chamadas.Owner = this;
                Chamadas.OwnerID = ID;
                Chamadas.TableName = Name;
                Chamadas.Alias = "Chamadas";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField NTRxMobileConfigID = new XORMFaceField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobileConfig.NTRxMobileConfigID, new Guid("962E0AC9-F204-40C4-B39B-05B0BDE55795"), "NTRxMobileConfigID", "Configurações de Dispositivo Móvel");
            public static XORMField Dispositivo = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobileConfig.Dispositivo, new Guid("3A7CFA5D-307D-43F4-A85A-E8C59DB34DF7"), "Dispositivo", "Dispositivo");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobileConfig.Data, new Guid("B38E0F08-3925-45F2-A7AB-319CD7EC68F1"), "Data", "Última Chamada");
            public static XORMField Chamadas = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobileConfig.Chamadas, new Guid("AFC3E5EA-CB87-4786-B280-86A5A7BD46EA"), "Chamadas", "Chamadas");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobileConfig.SYSxEstadoID, new Guid("6FBD7F2D-CE7B-4E2F-8C36-14DA07E0B7C0"), "SYSxEstadoID", "Estado");
        }
        #endregion xNTRxMobileConfig 


        public xNTRxMobileConfig NTRxMobileConfig;
        public xSYSxPessoa SYSxPessoa;

        public MobileConfigSVC()
        {
            TupleType = typeof(MobileConfigSVC.XTuple);
            DataSetType = typeof(MobileConfigSVC.XDataSet);
            ServiceRuleCID = new Guid("6E99F6E9-3348-4D2B-A274-D6E50910913B");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("DF2AE8BD-9282-4AC4-912F-B93529DCE037");
            Name = "MobileConfig";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("CE9F97E9-4CF6-449F-AEBF-E26E6FC74286");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.NTR.js";
            GridFields = new Guid[] { xNTRxMobileConfig.Data.ID, xNTRxMobileConfig.Chamadas.ID, xNTRxMobileConfig.Dispositivo.ID, xSYSxPessoa.Nome.ID };
            OrderByFields = new Guid[] { xNTRxMobileConfig.Dispositivo.ID };
            DataSetFields = new Guid[] { xSYSxPessoa.Nome.ID, xNTRxMobileConfig.Chamadas.ID, xNTRxMobileConfig.Data.ID, xNTRxMobileConfig.Dispositivo.ID, xNTRxMobileConfig.NTRxMobileConfigID.ID };
            PKField = xNTRxMobileConfig.NTRxMobileConfigID.ID;
            ConfigTableID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
            MasterRuleCID = new Guid("6E99F6E9-3348-4D2B-A274-D6E50910913B");
            XSubServiceItem ss9E724890DED04C5D94E1DFCF12D1BD30 = new XSubServiceItem(MobileConfigLogSVC.gCID, MobileConfigLogSVC.xNTRxMobileLogErro.NTRxMobileConfigID.ID, MobileConfigSVC.gCID, xNTRxMobileConfig.NTRxMobileConfigID.ID, true, XSubSeviceType.Default);
            ss9E724890DED04C5D94E1DFCF12D1BD30.Rights = new Int16[] { 1 }; 
            ss9E724890DED04C5D94E1DFCF12D1BD30.LateLoad = false;
            SubServices.Add(ss9E724890DED04C5D94E1DFCF12D1BD30);
            NTRxMobileConfig = new xNTRxMobileConfig();
            NTRxMobileConfig.IsReadOnly = false;
            AddTable(NTRxMobileConfig);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = NTRxMobileConfig.ID;
            NTRxMobileConfig_NTRxMobileConfigID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("ADF2104B-DEE0-4C8B-A442-05323660CC98"), "FK_ADF2104BDEE04C8BA44205323660CC98", MobileConfigSVC.xNTRxMobileConfig.gCID, xNTRxMobileConfig.NTRxMobileConfigID.ID, MobileConfigSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // NTRxMobileConfig.NTRxMobileConfigID --> SYSxPessoa.SYSxPessoaID
            XSVCReference FK_CB0B6B22589740FE92B997DF0A0D575D = new XSVCReference(new Guid("CB0B6B22-5897-40FE-92B9-97DF0A0D575D"), "FK_CB0B6B22589740FE92B997DF0A0D575D", MobileConfigLogSVC.gCID, MobileConfigLogSVC.xNTRxMobileLogErro.NTRxMobileConfigID.ID, NTRxMobileConfig.ID, MobileConfigSVC.xNTRxMobileConfig.NTRxMobileConfigID.ID, XJoinType.SubService); // MobileConfigLogSVC.NTRxMobileConfigID --> MobileConfig.NTRxMobileConfigID
            FK_CB0B6B22589740FE92B997DF0A0D575D.IsLowRelevance = false;
            AddReference(FK_CB0B6B22589740FE92B997DF0A0D575D);
            xNTRxMobileConfig.Chamadas.IsDataField = true;
            xNTRxMobileConfig.Chamadas.AllowEmpty = true;
            xNTRxMobileConfig.Dispositivo.OrderType = XOrderType.Asc;
            xNTRxMobileConfig.Dispositivo.Length = 50;
            xNTRxMobileConfig.Dispositivo.IsDataField = true;
            xNTRxMobileConfig.Dispositivo.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xNTRxMobileConfig.NTRxMobileConfigID.GeneratePK = true;
            xNTRxMobileConfig.NTRxMobileConfigID.IsDataField = true;
            xNTRxMobileConfig.NTRxMobileConfigID.AllowEmpty = true;
            xNTRxMobileConfig.Data.IsDataField = true;
            xNTRxMobileConfig.Data.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Chamadas => xNTRxMobileConfig.Chamadas;
        public XORMField Dispositivo => xNTRxMobileConfig.Dispositivo;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField NTRxMobileConfigID => xNTRxMobileConfig.NTRxMobileConfigID;
        public XORMField UltimoEnvio => xNTRxMobileConfig.Data;
        }
        #endregion XFields
        #region MobileConfigSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 Chamadas
        {
            get
            {
                return (Int32)Value[MobileConfigSVC.xNTRxMobileConfig.Chamadas.ID];
            }
            set
            {
                Value[MobileConfigSVC.xNTRxMobileConfig.Chamadas.ID] = value;
            }
        }
        public Int32? oChamadas
        {
            get
            {
                GetOldValue(MobileConfigSVC.xNTRxMobileConfig.Chamadas, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Dispositivo
        {
            get
            {
                return (String)Value[MobileConfigSVC.xNTRxMobileConfig.Dispositivo.ID];
            }
            set
            {
                Value[MobileConfigSVC.xNTRxMobileConfig.Dispositivo.ID] = value;
            }
        }
        public String? oDispositivo
        {
            get
            {
                GetOldValue(MobileConfigSVC.xNTRxMobileConfig.Dispositivo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[MobileConfigSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[MobileConfigSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(MobileConfigSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid NTRxMobileConfigID
        {
            get
            {
                return (Guid)Value[MobileConfigSVC.xNTRxMobileConfig.NTRxMobileConfigID.ID];
            }
            set
            {
                Value[MobileConfigSVC.xNTRxMobileConfig.NTRxMobileConfigID.ID] = value;
            }
        }
        public Guid? oNTRxMobileConfigID
        {
            get
            {
                GetOldValue(MobileConfigSVC.xNTRxMobileConfig.NTRxMobileConfigID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime UltimoEnvio
        {
            get
            {
                return (DateTime)Value[MobileConfigSVC.xNTRxMobileConfig.Data.ID];
            }
            set
            {
                Value[MobileConfigSVC.xNTRxMobileConfig.Data.ID] = value;
            }
        }
        public DateTime? oUltimoEnvio
        {
            get
            {
                GetOldValue(MobileConfigSVC.xNTRxMobileConfig.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion MobileConfigSVC.XTuple

        #region MobileConfigSVC.XRule
        public abstract class XRule : XServiceRule<MobileConfigSVC.XDataSet, MobileConfigSVC, MobileConfigSVC.XTuple>
        {
        }
        #endregion MobileConfigSVC.XRule

        #region MobileConfigSVC.XDataSet

        public class XDataSet : XDataSet<MobileConfigSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(MobileConfigSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<MobileConfigSVC.XTuple> where T : XDataTuple
        {

            public Guid Chamadas => MobileConfigSVC.xNTRxMobileConfig.Chamadas.ID;
            public Guid Dispositivo => MobileConfigSVC.xNTRxMobileConfig.Dispositivo.ID;
            public Guid Nome => MobileConfigSVC.xSYSxPessoa.Nome.ID;
            public Guid NTRxMobileConfigID => MobileConfigSVC.xNTRxMobileConfig.NTRxMobileConfigID.ID;
            public Guid UltimoEnvio => MobileConfigSVC.xNTRxMobileConfig.Data.ID;

            public XDataSet()
            {
                DataSetType = typeof(MobileConfigSVC.XDataSet);
            }

            private Projecao.Core.NTR.EventoMobile.MobileConfigLogSVC.XDataSet _MobileConfigLogDataSet;

            public Projecao.Core.NTR.EventoMobile.MobileConfigLogSVC.XDataSet MobileConfigLogDataSet
            {
                get
                {
                    if (_MobileConfigLogDataSet == null)
                    {
                        _MobileConfigLogDataSet.IsReadOnly = true;
                        _MobileConfigLogDataSet = (Projecao.Core.NTR.EventoMobile.MobileConfigLogSVC.XDataSet)Children.Get(Projecao.Core.NTR.EventoMobile.MobileConfigLogSVC.gCID);
                    }
                    return  _MobileConfigLogDataSet;
                }
            }

        }
        #endregion MobileConfigSVC.XDataSet

        [Guid(MobileConfigSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(MobileConfigSVC))]
        protected class _Service : Service<MobileConfigSVC, XDataSet, XTuple>
        {
            public const String sCID = "E285DF88-D42B-4D90-8C7A-5FB627725ECB";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<MobileConfigSVC, XDataSet, XTuple>, XService
             where TModel : MobileConfigSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}