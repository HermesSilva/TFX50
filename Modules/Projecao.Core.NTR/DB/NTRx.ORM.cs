//<auto-generated/>
using System;
using System.Linq;
using TFX.Core.Cache;
using TFX.Core.Model.DIC;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Service.Apps;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.NTR.DB
{
    [XRegister(typeof(NTRx), "CB66D4CB-B846-495D-8BC9-BE3AF04452CE")]
    public class NTRx : XModelDictionary
    {
        #region NTRxEvento

        [XRegister(typeof(NTRxEvento), sCID)]
        public class NTRxEvento : XORMTable
        {
            public const String sCID = "4867B519-B3D5-47C2-9EDF-15CF9EA2F722";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Classe
                {
                    get
                    {
                        return (String)Value[NTRxEvento.Classe];
                    }
                    set
                    {
                        this[NTRxEvento.Classe] = value;
                    }
                }
                public String? oClasse
                {
                    get
                    {
                        GetOldValue(NTRxEvento.Classe, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Guid CTLxUsuarioID
                {
                    get
                    {
                        return (Guid)Value[NTRxEvento.CTLxUsuarioID];
                    }
                    set
                    {
                        this[NTRxEvento.CTLxUsuarioID] = value;
                    }
                }
                public Guid? oCTLxUsuarioID
                {
                    get
                    {
                        GetOldValue(NTRxEvento.CTLxUsuarioID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public DateTime Momento
                {
                    get
                    {
                        return (DateTime)Value[NTRxEvento.Momento];
                    }
                    set
                    {
                        this[NTRxEvento.Momento] = value;
                    }
                }
                public DateTime? oMomento
                {
                    get
                    {
                        GetOldValue(NTRxEvento.Momento, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public Int32 NTRxEventoID
                {
                    get
                    {
                        return (Int32)Value[NTRxEvento.NTRxEventoID];
                    }
                    set
                    {
                        this[NTRxEvento.NTRxEventoID] = value;
                    }
                }
                public Int32? oNTRxEventoID
                {
                    get
                    {
                        GetOldValue(NTRxEvento.NTRxEventoID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Int16 NTRxLogTipoID
                {
                    get
                    {
                        return (Int16)Value[NTRxEvento.NTRxLogTipoID];
                    }
                    set
                    {
                        this[NTRxEvento.NTRxLogTipoID] = value;
                    }
                }
                public Int16? oNTRxLogTipoID
                {
                    get
                    {
                        GetOldValue(NTRxEvento.NTRxLogTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Int32 Tamanho
                {
                    get
                    {
                        return (Int32)Value[NTRxEvento.Tamanho];
                    }
                    set
                    {
                        this[NTRxEvento.Tamanho] = value;
                    }
                }
                public Int32? oTamanho
                {
                    get
                    {
                        GetOldValue(NTRxEvento.Tamanho, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxEvento _Instance;
            public static NTRxEvento Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxEvento>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Classe = new XORMField(new Guid("2E906844-84BF-42EA-97EE-F3062C9965E6"), "Classe", "Classe", XString.CID, 50, 0, false, gCID, null);
            public static XORMFKField CTLxUsuarioID = new XORMFKField(new Guid("A12A48B5-AF87-448B-8D7B-0D6075FA53D7"), "CTLxUsuarioID", "Usu√°rio", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMDateTimeField Momento = new XORMDateTimeField(new Guid("D96D0A75-17FF-436E-A1BF-62575F7E5C2C"), "Momento", "Momento", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMPKField NTRxEventoID = new XORMPKField(new Guid("22B0AD06-348F-4D93-B460-D9F2F8B0EEE9"), "NTRxEventoID", "Eventos", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField NTRxLogTipoID = new XORMFKField(new Guid("9776C736-2B1F-4941-95A1-2ECB9FC7FB34"), "NTRxLogTipoID", "Tipo de Log", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMField Tamanho = new XORMField(new Guid("75964EA7-608C-4174-8F55-1EB5EBD408F6"), "Tamanho", "Tamanho (Bytes)", XInt32.CID, 0, 0, false, gCID, 0);
            public static readonly XORMReference FK_0F04878E4377482CAECEC606D7BFD53B = new XORMReference(new Guid("0F04878E-4377-482C-AECE-C606D7BFD53B"), "FK_0F04878E4377482CAECEC606D7BFD53B", gCID, CTLxUsuarioID.ID, global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.gCID, global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.CTLxUsuarioID.ID);
            public static readonly XORMReference FK_8E8C2AE26697456FB6E861AF455B07AA = new XORMReference(new Guid("8E8C2AE2-6697-456F-B6E8-61AF455B07AA"), "FK_8E8C2AE26697456FB6E861AF455B07AA", gCID, NTRxLogTipoID.ID, NTRxLogTipo.gCID, NTRxLogTipo.NTRxLogTipoID.ID);
            public static readonly XORMIndex IX_0F04878E4377482CAECEC606D7BFD53B = new XORMIndex();
            public static readonly XORMIndex IX_8E8C2AE26697456FB6E861AF455B07AA = new XORMIndex();
            static NTRxEvento()
            {
                NTRxEventoID.PKID = new Guid("8BD5C4C3D33649C5809B6F661FFBE7BD");
                NTRxEventoID.UpdateStatic = true;
                NTRxEventoID.InsertOnly = false;
                NTRxEventoID.TableName = "NTRxEvento";
                NTRxEventoID.SourceTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                NTRxEventoID.Index = 0;
                CTLxUsuarioID.UpdateStatic = true;
                CTLxUsuarioID.InsertOnly = false;
                CTLxUsuarioID.TableName = "NTRxEvento";
                CTLxUsuarioID.SourceTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                CTLxUsuarioID.Index = 1;
                Momento.UpdateStatic = true;
                Momento.InsertOnly = false;
                Momento.TableName = "NTRxEvento";
                Momento.SourceTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                Momento.Index = 2;
                Classe.UpdateStatic = true;
                Classe.InsertOnly = false;
                Classe.TableName = "NTRxEvento";
                Classe.SourceTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                Classe.Index = 3;
                NTRxLogTipoID.UpdateStatic = true;
                NTRxLogTipoID.InsertOnly = false;
                NTRxLogTipoID.TableName = "NTRxEvento";
                NTRxLogTipoID.SourceTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                NTRxLogTipoID.Index = 4;
                Tamanho.UpdateStatic = true;
                Tamanho.InsertOnly = false;
                Tamanho.TableName = "NTRxEvento";
                Tamanho.SourceTableID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                Tamanho.Min = -2147483648;
                Tamanho.Max = 2147483647;
                Tamanho.Index = 5;
                IX_0F04878E4377482CAECEC606D7BFD53B.Name = "IX_0F04878E4377482CAECEC606D7BFD53B";
                IX_0F04878E4377482CAECEC606D7BFD53B.ID = new Guid("84E337E9-2450-4DC2-A3BC-AB0FAF11F379");
                IX_0F04878E4377482CAECEC606D7BFD53B.IsUnique = false;
                IX_0F04878E4377482CAECEC606D7BFD53B.Description = "";
                IX_0F04878E4377482CAECEC606D7BFD53B.AddItem(CTLxUsuarioID);
                IX_8E8C2AE26697456FB6E861AF455B07AA.Name = "IX_8E8C2AE26697456FB6E861AF455B07AA";
                IX_8E8C2AE26697456FB6E861AF455B07AA.ID = new Guid("2B73CE21-0E6C-4EF4-BAE6-A506847CA601");
                IX_8E8C2AE26697456FB6E861AF455B07AA.IsUnique = false;
                IX_8E8C2AE26697456FB6E861AF455B07AA.Description = "";
                IX_8E8C2AE26697456FB6E861AF455B07AA.AddItem(NTRxLogTipoID);
                CTLxUsuarioID.AllowZero = true;
                FK_0F04878E4377482CAECEC606D7BFD53B.AllowZero = true;
                NTRxLogTipoID.AllowZero = true;
                FK_8E8C2AE26697456FB6E861AF455B07AA.AllowZero = true;
            }
            protected NTRxEvento()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxEvento);
                ID = new Guid("4867B519-B3D5-47C2-9EDF-15CF9EA2F722");
                Name = "NTRxEvento";
                Title = "Eventos";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_22B0AD06348F4D93B460D9F2F8B0EEE9";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion NTRxEvento

        #region NTRxLogErro

        [XRegister(typeof(NTRxLogErro), sCID)]
        public class NTRxLogErro : XORMTable
        {
            public const String sCID = "F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Detalhe
                {
                    get
                    {
                        return (String)Value[NTRxLogErro.Detalhe];
                    }
                    set
                    {
                        this[NTRxLogErro.Detalhe] = value;
                    }
                }
                public String? oDetalhe
                {
                    get
                    {
                        GetOldValue(NTRxLogErro.Detalhe, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public String Erro
                {
                    get
                    {
                        return (String)Value[NTRxLogErro.Erro];
                    }
                    set
                    {
                        this[NTRxLogErro.Erro] = value;
                    }
                }
                public String? oErro
                {
                    get
                    {
                        GetOldValue(NTRxLogErro.Erro, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int32 NTRxEventoID
                {
                    get
                    {
                        return (Int32)Value[NTRxLogErro.NTRxEventoID];
                    }
                    set
                    {
                        this[NTRxLogErro.NTRxEventoID] = value;
                    }
                }
                public Int32? oNTRxEventoID
                {
                    get
                    {
                        GetOldValue(NTRxLogErro.NTRxEventoID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Int32 NTRxLogErroID
                {
                    get
                    {
                        return (Int32)Value[NTRxLogErro.NTRxLogErroID];
                    }
                    set
                    {
                        this[NTRxLogErro.NTRxLogErroID] = value;
                    }
                }
                public Int32? oNTRxLogErroID
                {
                    get
                    {
                        GetOldValue(NTRxLogErro.NTRxLogErroID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Int16 NTRxLogTipoID
                {
                    get
                    {
                        return (Int16)Value[NTRxLogErro.NTRxLogTipoID];
                    }
                    set
                    {
                        this[NTRxLogErro.NTRxLogTipoID] = value;
                    }
                }
                public Int16? oNTRxLogTipoID
                {
                    get
                    {
                        GetOldValue(NTRxLogErro.NTRxLogTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxLogErro _Instance;
            public static NTRxLogErro Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxLogErro>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Detalhe = new XORMField(new Guid("CFDAD7F1-08D0-4CBC-889A-E5C351AA03BD"), "Detalhe", "Detalhe", XString.CID, 0, 0, false, gCID, null);
            public static XORMField Erro = new XORMField(new Guid("50ED28F3-861A-4C73-8C25-5AF2605FFDE6"), "Erro", "Erro", XString.CID, 0, 0, false, gCID, null);
            public static XORMFKField NTRxEventoID = new XORMFKField(new Guid("09B7C52F-7DFE-4F32-A2E6-5FACDD2FCCAE"), "NTRxEventoID", "Eventos", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMPKField NTRxLogErroID = new XORMPKField(new Guid("426ED6B4-5910-4D27-8A73-722B83449752"), "NTRxLogErroID", "Log", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField NTRxLogTipoID = new XORMFKField(new Guid("5391E6A2-5B4B-4049-80C3-B994B72D18A0"), "NTRxLogTipoID", "Tipo de Log", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static readonly XORMReference FK_6EF342A69A044A3FAA5233B5B12528E1 = new XORMReference(new Guid("6EF342A6-9A04-4A3F-AA52-33B5B12528E1"), "FK_6EF342A69A044A3FAA5233B5B12528E1", gCID, NTRxEventoID.ID, NTRxEvento.gCID, NTRxEvento.NTRxEventoID.ID);
            public static readonly XORMReference FK_84921727B4904580953CDE040479A6E6 = new XORMReference(new Guid("84921727-B490-4580-953C-DE040479A6E6"), "FK_84921727B4904580953CDE040479A6E6", gCID, NTRxLogTipoID.ID, NTRxLogTipo.gCID, NTRxLogTipo.NTRxLogTipoID.ID);
            public static readonly XORMIndex IX_6EF342A69A044A3FAA5233B5B12528E1 = new XORMIndex();
            public static readonly XORMIndex IX_84921727B4904580953CDE040479A6E6 = new XORMIndex();
            static NTRxLogErro()
            {
                NTRxLogErroID.PKID = new Guid("0A7D5CC5C1D74238966B257D0B4966C8");
                NTRxLogErroID.UpdateStatic = true;
                NTRxLogErroID.InsertOnly = false;
                NTRxLogErroID.TableName = "NTRxLogErro";
                NTRxLogErroID.SourceTableID = new Guid("F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4");
                NTRxLogErroID.Index = 0;
                NTRxEventoID.UpdateStatic = true;
                NTRxEventoID.InsertOnly = false;
                NTRxEventoID.TableName = "NTRxLogErro";
                NTRxEventoID.SourceTableID = new Guid("F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4");
                NTRxEventoID.Index = 1;
                Erro.UpdateStatic = true;
                Erro.InsertOnly = false;
                Erro.TableName = "NTRxLogErro";
                Erro.SourceTableID = new Guid("F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4");
                Erro.Index = 2;
                Detalhe.UpdateStatic = true;
                Detalhe.InsertOnly = false;
                Detalhe.TableName = "NTRxLogErro";
                Detalhe.SourceTableID = new Guid("F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4");
                Detalhe.Index = 3;
                NTRxLogTipoID.UpdateStatic = true;
                NTRxLogTipoID.InsertOnly = false;
                NTRxLogTipoID.TableName = "NTRxLogErro";
                NTRxLogTipoID.SourceTableID = new Guid("F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4");
                NTRxLogTipoID.Index = 4;
                IX_6EF342A69A044A3FAA5233B5B12528E1.Name = "IX_6EF342A69A044A3FAA5233B5B12528E1";
                IX_6EF342A69A044A3FAA5233B5B12528E1.ID = new Guid("0CFB1A6F-9637-4898-BB95-C680938BA2B7");
                IX_6EF342A69A044A3FAA5233B5B12528E1.IsUnique = false;
                IX_6EF342A69A044A3FAA5233B5B12528E1.Description = "";
                IX_6EF342A69A044A3FAA5233B5B12528E1.AddItem(NTRxEventoID);
                IX_84921727B4904580953CDE040479A6E6.Name = "IX_84921727B4904580953CDE040479A6E6";
                IX_84921727B4904580953CDE040479A6E6.ID = new Guid("644FAEE7-60B9-4545-A613-FDF2B2E7003F");
                IX_84921727B4904580953CDE040479A6E6.IsUnique = false;
                IX_84921727B4904580953CDE040479A6E6.Description = "";
                IX_84921727B4904580953CDE040479A6E6.AddItem(NTRxLogTipoID);
                NTRxEventoID.AllowZero = true;
                FK_6EF342A69A044A3FAA5233B5B12528E1.AllowZero = true;
                NTRxLogTipoID.AllowZero = true;
                FK_84921727B4904580953CDE040479A6E6.AllowZero = true;
            }
            protected NTRxLogErro()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxLogErro);
                ID = new Guid("F6E09F65-2F6F-4EDE-A59B-9CDB4CF2F0B4");
                Name = "NTRxLogErro";
                Title = "Log";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_426ED6B459104D278A73722B83449752";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion NTRxLogErro

        #region NTRxLogTipo

        [XRegister(typeof(NTRxLogTipo), sCID)]
        public class NTRxLogTipo : XORMTable
        {
            public const String sCID = "711FC42C-117C-40C3-B5D8-44AD22DF7DA3";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sMensagem => _Titles[(Int16)5];
                public const Int16 Mensagem = (Int16)5;
                public static String sDebug => _Titles[(Int16)4];
                public const Int16 Debug = (Int16)4;
                public static String sErro => _Titles[(Int16)99];
                public const Int16 Erro = (Int16)99;
                public static String sEnvio_para_Mobile => _Titles[(Int16)1];
                public const Int16 Envio_para_Mobile = (Int16)1;
                public static String sRecepcao_do_Mobile => _Titles[(Int16)2];
                public const Int16 Recepcao_do_Mobile = (Int16)2;
                public static String sAviso => _Titles[(Int16)3];
                public const Int16 Aviso = (Int16)3;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)5] = "Mensagem",
                [(Int16)4] = "Debug",
                [(Int16)99] = "Erro",
                [(Int16)1] = "Envio para Mobile",
                [(Int16)2] = "Recep√ß√£o do Mobile",
                [(Int16)3] = "Aviso"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 NTRxLogTipoID
                {
                    get
                    {
                        return (Int16)Value[NTRxLogTipo.NTRxLogTipoID];
                    }
                    set
                    {
                        this[NTRxLogTipo.NTRxLogTipoID] = value;
                    }
                }
                public Int16? oNTRxLogTipoID
                {
                    get
                    {
                        GetOldValue(NTRxLogTipo.NTRxLogTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Tipo
                {
                    get
                    {
                        return (String)Value[NTRxLogTipo.Tipo];
                    }
                    set
                    {
                        this[NTRxLogTipo.Tipo] = value;
                    }
                }
                public String? oTipo
                {
                    get
                    {
                        GetOldValue(NTRxLogTipo.Tipo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxLogTipo _Instance;
            public static NTRxLogTipo Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxLogTipo>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField NTRxLogTipoID = new XORMPKField(new Guid("72F5BB07-B8A9-401A-B2B6-8C863E30C34B"), "NTRxLogTipoID", "Tipo de Log", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFaceField Tipo = new XORMFaceField(new Guid("86C544DF-5BE9-4ED0-B773-F4BA5C17595B"), "Tipo", "Tipo", XString.CID, 20, 0, false, gCID, null);
            static NTRxLogTipo()
            {
                NTRxLogTipoID.PKID = new Guid("42017A7A3F8D489AB295361B1F555E62");
                NTRxLogTipoID.UpdateStatic = true;
                NTRxLogTipoID.InsertOnly = false;
                NTRxLogTipoID.TableName = "NTRxLogTipo";
                NTRxLogTipoID.SourceTableID = new Guid("711FC42C-117C-40C3-B5D8-44AD22DF7DA3");
                NTRxLogTipoID.Index = 0;
                Tipo.UpdateStatic = true;
                Tipo.InsertOnly = false;
                Tipo.TableName = "NTRxLogTipo";
                Tipo.SourceTableID = new Guid("711FC42C-117C-40C3-B5D8-44AD22DF7DA3");
                Tipo.Index = 1;
                Tipo.IsFaceField = true;
            }
            protected NTRxLogTipo()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxLogTipo);
                ID = new Guid("711FC42C-117C-40C3-B5D8-44AD22DF7DA3");
                Name = "NTRxLogTipo";
                Title = "Tipo de Log";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_72F5BB07B8A9401AB2B68C863E30C34B";
                FaceField = Tipo;
                IsCached = true;
                DisplayField = Tipo;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)5, @"Mensagem"}), (Int16)5);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)4, @"Debug"}), (Int16)4);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)99, @"Erro"}), (Int16)99);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)1, @"Envio para Mobile"}), (Int16)1);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)2, @"Recep√ß√£o do Mobile"}), (Int16)2);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)3, @"Aviso"}), (Int16)3);
            }
        }

        #endregion NTRxLogTipo

        #region NTRxMobileAtividade

        [XRegister(typeof(NTRxMobileAtividade), sCID)]
        public class NTRxMobileAtividade : XORMTable
        {
            public const String sCID = "7C262B22-F4A4-419B-8F88-2123CCF74217";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public DateTime DataFinal
                {
                    get
                    {
                        return (DateTime)Value[NTRxMobileAtividade.DataFinal];
                    }
                    set
                    {
                        this[NTRxMobileAtividade.DataFinal] = value;
                    }
                }
                public DateTime? oDataFinal
                {
                    get
                    {
                        GetOldValue(NTRxMobileAtividade.DataFinal, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public DateTime DataInicial
                {
                    get
                    {
                        return (DateTime)Value[NTRxMobileAtividade.DataInicial];
                    }
                    set
                    {
                        this[NTRxMobileAtividade.DataInicial] = value;
                    }
                }
                public DateTime? oDataInicial
                {
                    get
                    {
                        GetOldValue(NTRxMobileAtividade.DataInicial, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public Int32 Distancia
                {
                    get
                    {
                        return (Int32)Value[NTRxMobileAtividade.Distancia];
                    }
                    set
                    {
                        this[NTRxMobileAtividade.Distancia] = value;
                    }
                }
                public Int32? oDistancia
                {
                    get
                    {
                        GetOldValue(NTRxMobileAtividade.Distancia, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Int32 NTRxMobileAtividadeID
                {
                    get
                    {
                        return (Int32)Value[NTRxMobileAtividade.NTRxMobileAtividadeID];
                    }
                    set
                    {
                        this[NTRxMobileAtividade.NTRxMobileAtividadeID] = value;
                    }
                }
                public Int32? oNTRxMobileAtividadeID
                {
                    get
                    {
                        GetOldValue(NTRxMobileAtividade.NTRxMobileAtividadeID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Guid NTRxMobileConfigID
                {
                    get
                    {
                        return (Guid)Value[NTRxMobileAtividade.NTRxMobileConfigID];
                    }
                    set
                    {
                        this[NTRxMobileAtividade.NTRxMobileConfigID] = value;
                    }
                }
                public Guid? oNTRxMobileConfigID
                {
                    get
                    {
                        GetOldValue(NTRxMobileAtividade.NTRxMobileConfigID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Rota
                {
                    get
                    {
                        return (String)Value[NTRxMobileAtividade.Rota];
                    }
                    set
                    {
                        this[NTRxMobileAtividade.Rota] = value;
                    }
                }
                public String? oRota
                {
                    get
                    {
                        GetOldValue(NTRxMobileAtividade.Rota, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxMobileAtividade _Instance;
            public static NTRxMobileAtividade Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxMobileAtividade>(gCID);
                    return _Instance;
                }
            }
            public static XORMDateField DataFinal = new XORMDateField(new Guid("1A4666B0-2918-4505-8A1C-9D51A9496814"), "DataFinal", "Data Final", XDate.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMDateField DataInicial = new XORMDateField(new Guid("F871E4C9-B10C-4135-AB51-24DEE290F12E"), "DataInicial", "Data Inicial", XDate.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMField Distancia = new XORMField(new Guid("E508B54B-58AF-46CF-B137-4E1EBD5973B8"), "Distancia", "Dist√¢ncia (m)", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMPKField NTRxMobileAtividadeID = new XORMPKField(new Guid("2E731DA7-92A5-447A-A763-B37E07C9DA19"), "NTRxMobileAtividadeID", "Atividade por Mobile", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField NTRxMobileConfigID = new XORMFKField(new Guid("54F974AB-6BF9-47FC-AC93-D9CD8E000FD2"), "NTRxMobileConfigID", "Configura√ß√µes de Dispositivo M√≥vel", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Rota = new XORMField(new Guid("BC3F433C-A1A5-4FFB-8EAA-D13E16018ADD"), "Rota", "Rota", XString.CID, 0, 0, true, gCID, null);
            public static readonly XORMReference FK_F4D9F4B3BB8D43498F4B979D9EA2D308 = new XORMReference(new Guid("F4D9F4B3-BB8D-4349-8F4B-979D9EA2D308"), "FK_F4D9F4B3BB8D43498F4B979D9EA2D308", gCID, NTRxMobileConfigID.ID, NTRxMobileConfig.gCID, NTRxMobileConfig.NTRxMobileConfigID.ID);
            public static readonly XORMIndex IX_21FF46E8D65C4AB98463738804B7D1FB = new XORMIndex();
            public static readonly XORMIndex IX_F4D9F4B3BB8D43498F4B979D9EA2D308 = new XORMIndex();
            static NTRxMobileAtividade()
            {
                NTRxMobileAtividadeID.PKID = new Guid("980D921735E746D586E7F4EFF3DB49E4");
                NTRxMobileAtividadeID.UpdateStatic = true;
                NTRxMobileAtividadeID.InsertOnly = false;
                NTRxMobileAtividadeID.TableName = "NTRxMobileAtividade";
                NTRxMobileAtividadeID.SourceTableID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                NTRxMobileAtividadeID.Index = 0;
                NTRxMobileConfigID.UpdateStatic = true;
                NTRxMobileConfigID.InsertOnly = false;
                NTRxMobileConfigID.TableName = "NTRxMobileAtividade";
                NTRxMobileConfigID.SourceTableID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                NTRxMobileConfigID.Index = 1;
                DataInicial.UpdateStatic = true;
                DataInicial.InsertOnly = false;
                DataInicial.TableName = "NTRxMobileAtividade";
                DataInicial.SourceTableID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                DataInicial.Index = 2;
                DataFinal.UpdateStatic = true;
                DataFinal.InsertOnly = false;
                DataFinal.TableName = "NTRxMobileAtividade";
                DataFinal.SourceTableID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                DataFinal.Index = 3;
                Rota.UpdateStatic = true;
                Rota.InsertOnly = false;
                Rota.TableName = "NTRxMobileAtividade";
                Rota.SourceTableID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                Rota.Index = 4;
                Distancia.UpdateStatic = true;
                Distancia.InsertOnly = false;
                Distancia.TableName = "NTRxMobileAtividade";
                Distancia.SourceTableID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                Distancia.Min = -2147483648;
                Distancia.Max = 2147483647;
                Distancia.Index = 5;
                IX_21FF46E8D65C4AB98463738804B7D1FB.Name = "IX_21FF46E8D65C4AB98463738804B7D1FB";
                IX_21FF46E8D65C4AB98463738804B7D1FB.ID = new Guid("21FF46E8-D65C-4AB9-8463-738804B7D1FB");
                IX_21FF46E8D65C4AB98463738804B7D1FB.IsUnique = false;
                IX_21FF46E8D65C4AB98463738804B7D1FB.Description = "";
                IX_21FF46E8D65C4AB98463738804B7D1FB.AddItem(NTRxMobileConfigID);
                IX_21FF46E8D65C4AB98463738804B7D1FB.AddItem(DataInicial);
                IX_21FF46E8D65C4AB98463738804B7D1FB.AddItem(DataFinal);
                IX_F4D9F4B3BB8D43498F4B979D9EA2D308.Name = "IX_F4D9F4B3BB8D43498F4B979D9EA2D308";
                IX_F4D9F4B3BB8D43498F4B979D9EA2D308.ID = new Guid("9C45E134-3DED-414F-8371-29DE101C9212");
                IX_F4D9F4B3BB8D43498F4B979D9EA2D308.IsUnique = false;
                IX_F4D9F4B3BB8D43498F4B979D9EA2D308.Description = "";
                IX_F4D9F4B3BB8D43498F4B979D9EA2D308.AddItem(NTRxMobileConfigID);
                NTRxMobileConfigID.AllowZero = true;
                FK_F4D9F4B3BB8D43498F4B979D9EA2D308.AllowZero = true;
            }
            protected NTRxMobileAtividade()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxMobileAtividade);
                ID = new Guid("7C262B22-F4A4-419B-8F88-2123CCF74217");
                Name = "NTRxMobileAtividade";
                Title = "Atividade por Mobile";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_2E731DA792A5447AA763B37E07C9DA19";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion NTRxMobileAtividade

        #region NTRxMobileConfig

        [XRegister(typeof(NTRxMobileConfig), sCID)]
        public class NTRxMobileConfig : XORMTable
        {
            public const String sCID = "3F2F767D-6DD5-4715-BA4E-AE7256B89ED9";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault : global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.XDefault
            {
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int32 Chamadas
                {
                    get
                    {
                        return (Int32)Value[NTRxMobileConfig.Chamadas];
                    }
                    set
                    {
                        this[NTRxMobileConfig.Chamadas] = value;
                    }
                }
                public Int32? oChamadas
                {
                    get
                    {
                        GetOldValue(NTRxMobileConfig.Chamadas, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public DateTime Data
                {
                    get
                    {
                        return (DateTime)Value[NTRxMobileConfig.Data];
                    }
                    set
                    {
                        this[NTRxMobileConfig.Data] = value;
                    }
                }
                public DateTime? oData
                {
                    get
                    {
                        GetOldValue(NTRxMobileConfig.Data, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public String Dispositivo
                {
                    get
                    {
                        return (String)Value[NTRxMobileConfig.Dispositivo];
                    }
                    set
                    {
                        this[NTRxMobileConfig.Dispositivo] = value;
                    }
                }
                public String? oDispositivo
                {
                    get
                    {
                        GetOldValue(NTRxMobileConfig.Dispositivo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Guid NTRxMobileConfigID
                {
                    get
                    {
                        return (Guid)Value[NTRxMobileConfig.NTRxMobileConfigID];
                    }
                    set
                    {
                        this[NTRxMobileConfig.NTRxMobileConfigID] = value;
                    }
                }
                public Guid? oNTRxMobileConfigID
                {
                    get
                    {
                        GetOldValue(NTRxMobileConfig.NTRxMobileConfigID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[NTRxMobileConfig.SYSxEstadoID];
                    }
                    set
                    {
                        this[NTRxMobileConfig.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(NTRxMobileConfig.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxMobileConfig _Instance;
            public static NTRxMobileConfig Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxMobileConfig>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Chamadas = new XORMField(new Guid("A72AA5E2-72A5-49D2-8750-E94F390AB63F"), "Chamadas", "Chamadas", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMDateField Data = new XORMDateField(new Guid("A442B5D9-91E3-4898-B2B6-C5E3C32C39C1"), "Data", "√öltima Chamada", XDate.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMField Dispositivo = new XORMField(new Guid("83213FE9-F713-4118-9715-20068F3B6F80"), "Dispositivo", "Dispositivo", XString.CID, 50, 0, false, gCID, null);
            public static XORMPKField NTRxMobileConfigID = new XORMPKField(new Guid("55721305-75D1-4882-B796-95B86DEDB46B"), "NTRxMobileConfigID", "Configura√ß√µes de Dispositivo M√≥vel", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("ECCDC528-E55E-4F59-AE22-FBA190796993"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static readonly XORMReference FK_BFEA3B3216F74ADE93D4D2590A2F8C80 = new XORMReference(new Guid("BFEA3B32-16F7-4ADE-93D4-D2590A2F8C80"), "FK_BFEA3B3216F74ADE93D4D2590A2F8C80", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMReference FK_9508DA4777FC4E73ADFE862EB15FD9D1 = new XORMReference(new Guid("9508DA47-77FC-4E73-ADFE-862EB15FD9D1"), "FK_9508DA4777FC4E73ADFE862EB15FD9D1", gCID, NTRxMobileConfigID.ID, global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.gCID, global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.CTLxUsuarioID.ID);
            public static readonly XORMIndex IX_BFEA3B3216F74ADE93D4D2590A2F8C80 = new XORMIndex();
            static NTRxMobileConfig()
            {
                NTRxMobileConfigID.PKID = new Guid("7D912AFFE5364AF0AE2393FB6BDA65CC");
                NTRxMobileConfigID.UpdateStatic = true;
                NTRxMobileConfigID.InsertOnly = false;
                NTRxMobileConfigID.TableName = "NTRxMobileConfig";
                NTRxMobileConfigID.SourceTableID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
                NTRxMobileConfigID.Index = 0;
                NTRxMobileConfigID.IsFaceField = true;
                Dispositivo.UpdateStatic = true;
                Dispositivo.InsertOnly = false;
                Dispositivo.TableName = "NTRxMobileConfig";
                Dispositivo.SourceTableID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
                Dispositivo.Index = 1;
                Data.UpdateStatic = true;
                Data.InsertOnly = false;
                Data.TableName = "NTRxMobileConfig";
                Data.SourceTableID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
                Data.Index = 2;
                Chamadas.UpdateStatic = true;
                Chamadas.InsertOnly = false;
                Chamadas.TableName = "NTRxMobileConfig";
                Chamadas.SourceTableID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
                Chamadas.Min = -2147483648;
                Chamadas.Max = 2147483647;
                Chamadas.Index = 3;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "NTRxMobileConfig";
                SYSxEstadoID.SourceTableID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
                SYSxEstadoID.Index = 4;
                IX_BFEA3B3216F74ADE93D4D2590A2F8C80.Name = "IX_BFEA3B3216F74ADE93D4D2590A2F8C80";
                IX_BFEA3B3216F74ADE93D4D2590A2F8C80.ID = new Guid("27F61BEA-30DA-46FD-AE7D-613CF9FFC814");
                IX_BFEA3B3216F74ADE93D4D2590A2F8C80.IsUnique = false;
                IX_BFEA3B3216F74ADE93D4D2590A2F8C80.Description = "";
                IX_BFEA3B3216F74ADE93D4D2590A2F8C80.AddItem(SYSxEstadoID);
                SYSxEstadoID.AllowZero = true;
                FK_BFEA3B3216F74ADE93D4D2590A2F8C80.AllowZero = true;
                NTRxMobileConfigID.AllowZero = true;
                FK_9508DA4777FC4E73ADFE862EB15FD9D1.AllowZero = true;
            }
            protected NTRxMobileConfig()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxMobileConfig);
                ID = new Guid("3F2F767D-6DD5-4715-BA4E-AE7256B89ED9");
                Name = "NTRxMobileConfig";
                Title = "Configura√ß√µes de Dispositivo M√≥vel";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_5572130575D14882B79695B86DEDB46B";
                FaceField = NTRxMobileConfigID;
                StateField = SYSxEstadoID;
                DisplayField = NTRxMobileConfigID;
                InheritanceID = new Guid("55FF8D37-D18C-400F-934F-A15FB8EF08E1");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion NTRxMobileConfig

        #region NTRxMobileLogErro

        [XRegister(typeof(NTRxMobileLogErro), sCID)]
        public class NTRxMobileLogErro : XORMTable
        {
            public const String sCID = "F26FB60A-701C-4A91-97DE-47C48CC359FC";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public DateTime Data
                {
                    get
                    {
                        return (DateTime)Value[NTRxMobileLogErro.Data];
                    }
                    set
                    {
                        this[NTRxMobileLogErro.Data] = value;
                    }
                }
                public DateTime? oData
                {
                    get
                    {
                        GetOldValue(NTRxMobileLogErro.Data, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public String Mensagem
                {
                    get
                    {
                        return (String)Value[NTRxMobileLogErro.Mensagem];
                    }
                    set
                    {
                        this[NTRxMobileLogErro.Mensagem] = value;
                    }
                }
                public String? oMensagem
                {
                    get
                    {
                        GetOldValue(NTRxMobileLogErro.Mensagem, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 NTRxLogTipoID
                {
                    get
                    {
                        return (Int16)Value[NTRxMobileLogErro.NTRxLogTipoID];
                    }
                    set
                    {
                        this[NTRxMobileLogErro.NTRxLogTipoID] = value;
                    }
                }
                public Int16? oNTRxLogTipoID
                {
                    get
                    {
                        GetOldValue(NTRxMobileLogErro.NTRxLogTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid NTRxMobileConfigID
                {
                    get
                    {
                        return (Guid)Value[NTRxMobileLogErro.NTRxMobileConfigID];
                    }
                    set
                    {
                        this[NTRxMobileLogErro.NTRxMobileConfigID] = value;
                    }
                }
                public Guid? oNTRxMobileConfigID
                {
                    get
                    {
                        GetOldValue(NTRxMobileLogErro.NTRxMobileConfigID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int32 NTRxMobileLogErroID
                {
                    get
                    {
                        return (Int32)Value[NTRxMobileLogErro.NTRxMobileLogErroID];
                    }
                    set
                    {
                        this[NTRxMobileLogErro.NTRxMobileLogErroID] = value;
                    }
                }
                public Int32? oNTRxMobileLogErroID
                {
                    get
                    {
                        GetOldValue(NTRxMobileLogErro.NTRxMobileLogErroID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public String Pilha
                {
                    get
                    {
                        return (String)Value[NTRxMobileLogErro.Pilha];
                    }
                    set
                    {
                        this[NTRxMobileLogErro.Pilha] = value;
                    }
                }
                public String? oPilha
                {
                    get
                    {
                        GetOldValue(NTRxMobileLogErro.Pilha, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxMobileLogErro _Instance;
            public static NTRxMobileLogErro Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxMobileLogErro>(gCID);
                    return _Instance;
                }
            }
            public static XORMDateTimeField Data = new XORMDateTimeField(new Guid("30A3FDC4-3A6F-4A80-ADC9-96D539EDFA0E"), "Data", "Data", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMField Mensagem = new XORMField(new Guid("3FEDE356-26A7-4A4F-AE32-7DB5EE3533AE"), "Mensagem", "Mensagem", XString.CID, 0, 0, false, gCID, null);
            public static XORMFKField NTRxLogTipoID = new XORMFKField(new Guid("1F5A66C2-96F5-4C8C-919C-71D0922EF4E3"), "NTRxLogTipoID", "Tipo de Log", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFKField NTRxMobileConfigID = new XORMFKField(new Guid("61D3445C-7E16-4705-8CE5-F1A8B7BCCB55"), "NTRxMobileConfigID", "Configura√ß√µes de Dispositivo M√≥vel", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMPKField NTRxMobileLogErroID = new XORMPKField(new Guid("E0AFFD0C-BB5F-40D7-9BE2-3AB4D23CEC82"), "NTRxMobileLogErroID", "Log de Erro Mobile", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMField Pilha = new XORMField(new Guid("147EF3D7-1B80-44BF-AC18-836656E6FE53"), "Pilha", "Pilha", XString.CID, 0, 0, false, gCID, null);
            public static readonly XORMReference FK_B861ED1A77DF47EC8FDEA6C23A1400F3 = new XORMReference(new Guid("B861ED1A-77DF-47EC-8FDE-A6C23A1400F3"), "FK_B861ED1A77DF47EC8FDEA6C23A1400F3", gCID, NTRxLogTipoID.ID, NTRxLogTipo.gCID, NTRxLogTipo.NTRxLogTipoID.ID);
            public static readonly XORMReference FK_713A153EC3B541FD8E212ECD65BC0A1A = new XORMReference(new Guid("713A153E-C3B5-41FD-8E21-2ECD65BC0A1A"), "FK_713A153EC3B541FD8E212ECD65BC0A1A", gCID, NTRxMobileConfigID.ID, NTRxMobileConfig.gCID, NTRxMobileConfig.NTRxMobileConfigID.ID);
            public static readonly XORMIndex IX_B861ED1A77DF47EC8FDEA6C23A1400F3 = new XORMIndex();
            public static readonly XORMIndex IX_713A153EC3B541FD8E212ECD65BC0A1A = new XORMIndex();
            static NTRxMobileLogErro()
            {
                NTRxMobileLogErroID.PKID = new Guid("B0A2C0DEE18240C6A3387974DFAB5787");
                NTRxMobileLogErroID.UpdateStatic = true;
                NTRxMobileLogErroID.InsertOnly = false;
                NTRxMobileLogErroID.TableName = "NTRxMobileLogErro";
                NTRxMobileLogErroID.SourceTableID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                NTRxMobileLogErroID.Index = 0;
                NTRxLogTipoID.UpdateStatic = true;
                NTRxLogTipoID.InsertOnly = false;
                NTRxLogTipoID.TableName = "NTRxMobileLogErro";
                NTRxLogTipoID.SourceTableID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                NTRxLogTipoID.Index = 1;
                Data.UpdateStatic = true;
                Data.InsertOnly = false;
                Data.TableName = "NTRxMobileLogErro";
                Data.SourceTableID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                Data.Index = 2;
                Mensagem.UpdateStatic = true;
                Mensagem.InsertOnly = false;
                Mensagem.TableName = "NTRxMobileLogErro";
                Mensagem.SourceTableID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                Mensagem.Index = 3;
                Pilha.UpdateStatic = true;
                Pilha.InsertOnly = false;
                Pilha.TableName = "NTRxMobileLogErro";
                Pilha.SourceTableID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                Pilha.Index = 4;
                NTRxMobileConfigID.UpdateStatic = true;
                NTRxMobileConfigID.InsertOnly = false;
                NTRxMobileConfigID.TableName = "NTRxMobileLogErro";
                NTRxMobileConfigID.SourceTableID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                NTRxMobileConfigID.Index = 5;
                IX_B861ED1A77DF47EC8FDEA6C23A1400F3.Name = "IX_B861ED1A77DF47EC8FDEA6C23A1400F3";
                IX_B861ED1A77DF47EC8FDEA6C23A1400F3.ID = new Guid("AC12883F-9424-4974-8897-C7A3DF4B2026");
                IX_B861ED1A77DF47EC8FDEA6C23A1400F3.IsUnique = false;
                IX_B861ED1A77DF47EC8FDEA6C23A1400F3.Description = "";
                IX_B861ED1A77DF47EC8FDEA6C23A1400F3.AddItem(NTRxLogTipoID);
                IX_713A153EC3B541FD8E212ECD65BC0A1A.Name = "IX_713A153EC3B541FD8E212ECD65BC0A1A";
                IX_713A153EC3B541FD8E212ECD65BC0A1A.ID = new Guid("378DC6A2-C575-4240-99B2-6959EC5DB1BF");
                IX_713A153EC3B541FD8E212ECD65BC0A1A.IsUnique = false;
                IX_713A153EC3B541FD8E212ECD65BC0A1A.Description = "";
                IX_713A153EC3B541FD8E212ECD65BC0A1A.AddItem(NTRxMobileConfigID);
                NTRxLogTipoID.AllowZero = true;
                FK_B861ED1A77DF47EC8FDEA6C23A1400F3.AllowZero = true;
                NTRxMobileConfigID.AllowZero = true;
                FK_713A153EC3B541FD8E212ECD65BC0A1A.AllowZero = true;
            }
            protected NTRxMobileLogErro()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxMobileLogErro);
                ID = new Guid("F26FB60A-701C-4A91-97DE-47C48CC359FC");
                Name = "NTRxMobileLogErro";
                Title = "Log de Erro Mobile";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_E0AFFD0CBB5F40D79BE23AB4D23CEC82";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion NTRxMobileLogErro

        #region NTRxMobilePontoDestaque

        [XRegister(typeof(NTRxMobilePontoDestaque), sCID)]
        public class NTRxMobilePontoDestaque : XORMTable
        {
            public const String sCID = "4E72CD60-6900-487C-920B-B55D7D6D8A97";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_00000000000000000000000000000000 => _Titles[new Guid("00000000-0000-0000-0000-000000000000")];
                public static Guid _00000000000000000000000000000000 = new Guid("00000000-0000-0000-0000-000000000000");
                private static Dictionary<Guid, String> _Titles = new Dictionary<Guid, String>()
                {
                [new Guid("00000000-0000-0000-0000-000000000000")] = "00000000-0000-0000-0000-000000000000"
                };
                public static String GetTitle(Guid pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public DateTime Data
                {
                    get
                    {
                        return (DateTime)Value[NTRxMobilePontoDestaque.Data];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.Data] = value;
                    }
                }
                public DateTime? oData
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.Data, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public Byte[] Foto
                {
                    get
                    {
                        return (Byte[])Value[NTRxMobilePontoDestaque.Foto];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.Foto] = value;
                    }
                }
                public Byte[]? oFoto
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.Foto, out Object ovlr);
                        return (Byte[]?)ovlr;
                    }
                }
                public Decimal Latitude
                {
                    get
                    {
                        return (Decimal)Value[NTRxMobilePontoDestaque.Latitude];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.Latitude] = value;
                    }
                }
                public Decimal? oLatitude
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.Latitude, out Object ovlr);
                        return (Decimal?)ovlr;
                    }
                }
                public Decimal Longitude
                {
                    get
                    {
                        return (Decimal)Value[NTRxMobilePontoDestaque.Longitude];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.Longitude] = value;
                    }
                }
                public Decimal? oLongitude
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.Longitude, out Object ovlr);
                        return (Decimal?)ovlr;
                    }
                }
                public Guid NTRxMobileConfigID
                {
                    get
                    {
                        return (Guid)Value[NTRxMobilePontoDestaque.NTRxMobileConfigID];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.NTRxMobileConfigID] = value;
                    }
                }
                public Guid? oNTRxMobileConfigID
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.NTRxMobileConfigID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid NTRxMobilePontoDestaqueID
                {
                    get
                    {
                        return (Guid)Value[NTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID] = value;
                    }
                }
                public Guid? oNTRxMobilePontoDestaqueID
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[NTRxMobilePontoDestaque.SYSxEstadoID];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Texto
                {
                    get
                    {
                        return (String)Value[NTRxMobilePontoDestaque.Texto];
                    }
                    set
                    {
                        this[NTRxMobilePontoDestaque.Texto] = value;
                    }
                }
                public String? oTexto
                {
                    get
                    {
                        GetOldValue(NTRxMobilePontoDestaque.Texto, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static NTRxMobilePontoDestaque _Instance;
            public static NTRxMobilePontoDestaque Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<NTRxMobilePontoDestaque>(gCID);
                    return _Instance;
                }
            }
            public static XORMDateField Data = new XORMDateField(new Guid("CCF9E819-F243-4CFE-8E8E-7AD749C17BF7"), "Data", "Data", XDate.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMField Foto = new XORMField(new Guid("B5AB5D26-CC59-4F28-BB1F-F1E14115050C"), "Foto", "Foto", XBinary.CID, 0, 0, false, gCID, null);
            public static XORMDecimalField Latitude = new XORMDecimalField(new Guid("B61D7AE3-4318-4A96-A525-6A5616F86DE4"), "Latitude", "Latitude", XDecimal.CID, 25, 20, false, gCID, 0);
            public static XORMDecimalField Longitude = new XORMDecimalField(new Guid("CA2FE9BB-9FA0-47D9-82F1-B2E112B1D493"), "Longitude", "Longitude", XDecimal.CID, 25, 20, false, gCID, 0);
            public static XORMFKField NTRxMobileConfigID = new XORMFKField(new Guid("673A24D0-4D09-413E-952A-39BFC2F16588"), "NTRxMobileConfigID", "Configura√ß√µes de Dispositivo M√≥vel", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMPKField NTRxMobilePontoDestaqueID = new XORMPKField(new Guid("8BCDEE58-86BF-4D09-BBF1-0ED2CC3BBBA8"), "NTRxMobilePontoDestaqueID", "Ponto de Destaque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("C706218C-C4F2-4DE7-BD8B-41A4D0BDF97D"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMField Texto = new XORMField(new Guid("7347ECC8-A011-4D1F-9530-F1135B70C2AB"), "Texto", "Texto", XString.CID, 0, 0, true, gCID, null);
            public static readonly XORMReference FK_24CC67A75C7C4D0196B5AAC38D0720B1 = new XORMReference(new Guid("24CC67A7-5C7C-4D01-96B5-AAC38D0720B1"), "FK_24CC67A75C7C4D0196B5AAC38D0720B1", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMReference FK_3DD126DEF386410B909F315AAABEA903 = new XORMReference(new Guid("3DD126DE-F386-410B-909F-315AAABEA903"), "FK_3DD126DEF386410B909F315AAABEA903", gCID, NTRxMobileConfigID.ID, global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.gCID, global::TFX.Core.Service.Apps.CTLx.CTLxUsuario.CTLxUsuarioID.ID);
            public static readonly XORMIndex IX_F0F03C53AA5743E0AE043975B1284E78 = new XORMIndex();
            public static readonly XORMIndex IX_24CC67A75C7C4D0196B5AAC38D0720B1 = new XORMIndex();
            public static readonly XORMIndex IX_3DD126DEF386410B909F315AAABEA903 = new XORMIndex();
            static NTRxMobilePontoDestaque()
            {
                NTRxMobilePontoDestaqueID.PKID = new Guid("CBDDC399385741AEB3FCC149D07CE967");
                NTRxMobilePontoDestaqueID.UpdateStatic = true;
                NTRxMobilePontoDestaqueID.InsertOnly = false;
                NTRxMobilePontoDestaqueID.TableName = "NTRxMobilePontoDestaque";
                NTRxMobilePontoDestaqueID.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                NTRxMobilePontoDestaqueID.Index = 0;
                NTRxMobilePontoDestaqueID.IsFaceField = true;
                NTRxMobileConfigID.UpdateStatic = true;
                NTRxMobileConfigID.InsertOnly = false;
                NTRxMobileConfigID.TableName = "NTRxMobilePontoDestaque";
                NTRxMobileConfigID.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                NTRxMobileConfigID.Index = 1;
                Texto.UpdateStatic = true;
                Texto.InsertOnly = false;
                Texto.TableName = "NTRxMobilePontoDestaque";
                Texto.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                Texto.Index = 2;
                Foto.UpdateStatic = true;
                Foto.InsertOnly = false;
                Foto.TableName = "NTRxMobilePontoDestaque";
                Foto.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                Foto.Index = 3;
                Latitude.UpdateStatic = true;
                Latitude.InsertOnly = false;
                Latitude.TableName = "NTRxMobilePontoDestaque";
                Latitude.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                Latitude.Min = -79228162514264337593543950335M;
                Latitude.Max = 79228162514264337593543950335M;
                Latitude.Index = 4;
                Longitude.UpdateStatic = true;
                Longitude.InsertOnly = false;
                Longitude.TableName = "NTRxMobilePontoDestaque";
                Longitude.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                Longitude.Min = -79228162514264337593543950335M;
                Longitude.Max = 79228162514264337593543950335M;
                Longitude.Index = 5;
                Data.UpdateStatic = true;
                Data.InsertOnly = false;
                Data.TableName = "NTRxMobilePontoDestaque";
                Data.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                Data.Index = 6;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "NTRxMobilePontoDestaque";
                SYSxEstadoID.SourceTableID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                SYSxEstadoID.Index = 7;
                IX_F0F03C53AA5743E0AE043975B1284E78.Name = "IX_F0F03C53AA5743E0AE043975B1284E78";
                IX_F0F03C53AA5743E0AE043975B1284E78.ID = new Guid("F0F03C53-AA57-43E0-AE04-3975B1284E78");
                IX_F0F03C53AA5743E0AE043975B1284E78.IsUnique = false;
                IX_F0F03C53AA5743E0AE043975B1284E78.Description = "";
                IX_F0F03C53AA5743E0AE043975B1284E78.AddItem(NTRxMobileConfigID);
                IX_F0F03C53AA5743E0AE043975B1284E78.AddItem(Latitude);
                IX_F0F03C53AA5743E0AE043975B1284E78.AddItem(Longitude);
                IX_24CC67A75C7C4D0196B5AAC38D0720B1.Name = "IX_24CC67A75C7C4D0196B5AAC38D0720B1";
                IX_24CC67A75C7C4D0196B5AAC38D0720B1.ID = new Guid("516CDB35-83B8-4347-B12B-FA48A39A1BA7");
                IX_24CC67A75C7C4D0196B5AAC38D0720B1.IsUnique = false;
                IX_24CC67A75C7C4D0196B5AAC38D0720B1.Description = "";
                IX_24CC67A75C7C4D0196B5AAC38D0720B1.AddItem(SYSxEstadoID);
                IX_3DD126DEF386410B909F315AAABEA903.Name = "IX_3DD126DEF386410B909F315AAABEA903";
                IX_3DD126DEF386410B909F315AAABEA903.ID = new Guid("FA598E9A-6FAB-4BB7-ABC7-22C9017B3C26");
                IX_3DD126DEF386410B909F315AAABEA903.IsUnique = false;
                IX_3DD126DEF386410B909F315AAABEA903.Description = "";
                IX_3DD126DEF386410B909F315AAABEA903.AddItem(NTRxMobileConfigID);
                SYSxEstadoID.AllowZero = true;
                FK_24CC67A75C7C4D0196B5AAC38D0720B1.AllowZero = true;
                NTRxMobileConfigID.AllowZero = true;
                FK_3DD126DEF386410B909F315AAABEA903.AllowZero = true;
            }
            protected NTRxMobilePontoDestaque()
            {
                TupleType = typeof(XTuple);
                PersistenceType = typeof(__NTRxMobilePontoDestaque);
                ID = new Guid("4E72CD60-6900-487C-920B-B55D7D6D8A97");
                Name = "NTRxMobilePontoDestaque";
                Title = "Ponto de Destaque";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
                DeleteOnDeactivate = false;
                PKName = "PK_8BCDEE5886BF4D09BBF10ED2CC3BBBA8";
                FaceField = NTRxMobilePontoDestaqueID;
                StateField = SYSxEstadoID;
                DisplayField = NTRxMobilePontoDestaqueID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {new Guid("00000000-0000-0000-0000-000000000000"), new Guid("00000000-0000-0000-0000-000000000000"), @"NA", null, 0, 0, TFX.Core.XDefault.NullDateTime, (Int16)0}), new Guid("00000000-0000-0000-0000-000000000000"));
            }
        }

        #endregion NTRxMobilePontoDestaque

        #region _NTRxEvento

        [Guid(__NTRxEvento.sCID)]
        public interface _NTRxEvento : XIBasePersistence, IEnumerable<NTRxEvento.XTuple>
        {
            NTRxEvento.XTuple NewTuple();

            new NTRxEvento.XTuple NewTuple(Object pPKValue);

            new NTRxEvento.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxEvento.XTuple FindTupleByPK(Object pPKValue);

            NTRxEvento.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxEvento.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxEvento.XTuple> Tuples
            {
                get;
            }

            NTRxEvento.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxEvento

        #region _NTRxEvento<TModel, TTuple>

        public class _NTRxEvento<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxEvento where TModel : NTRxEvento where TTuple : NTRxEvento.XTuple 
        {
            protected _NTRxEvento()
            {
            }
            NTRxEvento.XTuple _NTRxEvento.this[Int32 pInex] => (NTRxEvento.XTuple)base[pInex];

            IEnumerable<NTRxEvento.XTuple> _NTRxEvento.Tuples => (IEnumerable<NTRxEvento.XTuple>)base.Tuples;

            NTRxEvento.XTuple _NTRxEvento.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxEvento.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxEvento.XTuple _NTRxEvento.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxEvento.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxEvento.XTuple _NTRxEvento.FindTupleByPK(Object pPKValue)
            {
                return (NTRxEvento.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxEvento.XTuple _NTRxEvento.NewTuple()
            {
                return (NTRxEvento.XTuple)NewTuple();
            }

            NTRxEvento.XTuple _NTRxEvento.NewTuple(Object pPKValue)
            {
                return (NTRxEvento.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxEvento.XTuple> IEnumerable<NTRxEvento.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxEvento.XTuple _NTRxEvento.Current => base.Current;
        }

        #endregion _NTRxEvento<TModel, TTuple>

        #region __NTRxEvento

        [XRegister(typeof(__NTRxEvento), sCID, typeof(NTRxEvento))]
        public class __NTRxEvento : _NTRxEvento<NTRxEvento, NTRxEvento.XTuple>
        {
            public const String sCID = "539BB899-40B4-403B-9607-1F8E3D5A7D4B";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxEvento()
            {
                TupleType = typeof(NTRxEvento.XTuple);
            }
        }

        #endregion __NTRxEvento

        #region _NTRxLogErro

        [Guid(__NTRxLogErro.sCID)]
        public interface _NTRxLogErro : XIBasePersistence, IEnumerable<NTRxLogErro.XTuple>
        {
            NTRxLogErro.XTuple NewTuple();

            new NTRxLogErro.XTuple NewTuple(Object pPKValue);

            new NTRxLogErro.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxLogErro.XTuple FindTupleByPK(Object pPKValue);

            NTRxLogErro.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxLogErro.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxLogErro.XTuple> Tuples
            {
                get;
            }

            NTRxLogErro.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxLogErro

        #region _NTRxLogErro<TModel, TTuple>

        public class _NTRxLogErro<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxLogErro where TModel : NTRxLogErro where TTuple : NTRxLogErro.XTuple 
        {
            protected _NTRxLogErro()
            {
            }
            NTRxLogErro.XTuple _NTRxLogErro.this[Int32 pInex] => (NTRxLogErro.XTuple)base[pInex];

            IEnumerable<NTRxLogErro.XTuple> _NTRxLogErro.Tuples => (IEnumerable<NTRxLogErro.XTuple>)base.Tuples;

            NTRxLogErro.XTuple _NTRxLogErro.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxLogErro.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxLogErro.XTuple _NTRxLogErro.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxLogErro.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxLogErro.XTuple _NTRxLogErro.FindTupleByPK(Object pPKValue)
            {
                return (NTRxLogErro.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxLogErro.XTuple _NTRxLogErro.NewTuple()
            {
                return (NTRxLogErro.XTuple)NewTuple();
            }

            NTRxLogErro.XTuple _NTRxLogErro.NewTuple(Object pPKValue)
            {
                return (NTRxLogErro.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxLogErro.XTuple> IEnumerable<NTRxLogErro.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxLogErro.XTuple _NTRxLogErro.Current => base.Current;
        }

        #endregion _NTRxLogErro<TModel, TTuple>

        #region __NTRxLogErro

        [XRegister(typeof(__NTRxLogErro), sCID, typeof(NTRxLogErro))]
        public class __NTRxLogErro : _NTRxLogErro<NTRxLogErro, NTRxLogErro.XTuple>
        {
            public const String sCID = "4FA11E29-A21E-4C42-8F31-002475F00A45";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxLogErro()
            {
                TupleType = typeof(NTRxLogErro.XTuple);
            }
        }

        #endregion __NTRxLogErro

        #region _NTRxLogTipo

        [Guid(__NTRxLogTipo.sCID)]
        public interface _NTRxLogTipo : XIBasePersistence, IEnumerable<NTRxLogTipo.XTuple>
        {
            NTRxLogTipo.XTuple NewTuple();

            new NTRxLogTipo.XTuple NewTuple(Object pPKValue);

            new NTRxLogTipo.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxLogTipo.XTuple FindTupleByPK(Object pPKValue);

            NTRxLogTipo.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxLogTipo.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxLogTipo.XTuple> Tuples
            {
                get;
            }

            NTRxLogTipo.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxLogTipo

        #region _NTRxLogTipo<TModel, TTuple>

        public class _NTRxLogTipo<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxLogTipo where TModel : NTRxLogTipo where TTuple : NTRxLogTipo.XTuple 
        {
            protected _NTRxLogTipo()
            {
            }
            NTRxLogTipo.XTuple _NTRxLogTipo.this[Int32 pInex] => (NTRxLogTipo.XTuple)base[pInex];

            IEnumerable<NTRxLogTipo.XTuple> _NTRxLogTipo.Tuples => (IEnumerable<NTRxLogTipo.XTuple>)base.Tuples;

            NTRxLogTipo.XTuple _NTRxLogTipo.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxLogTipo.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxLogTipo.XTuple _NTRxLogTipo.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxLogTipo.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxLogTipo.XTuple _NTRxLogTipo.FindTupleByPK(Object pPKValue)
            {
                return (NTRxLogTipo.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxLogTipo.XTuple _NTRxLogTipo.NewTuple()
            {
                return (NTRxLogTipo.XTuple)NewTuple();
            }

            NTRxLogTipo.XTuple _NTRxLogTipo.NewTuple(Object pPKValue)
            {
                return (NTRxLogTipo.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxLogTipo.XTuple> IEnumerable<NTRxLogTipo.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxLogTipo.XTuple _NTRxLogTipo.Current => base.Current;
        }

        #endregion _NTRxLogTipo<TModel, TTuple>

        #region __NTRxLogTipo

        [XRegister(typeof(__NTRxLogTipo), sCID, typeof(NTRxLogTipo))]
        public class __NTRxLogTipo : _NTRxLogTipo<NTRxLogTipo, NTRxLogTipo.XTuple>
        {
            public const String sCID = "D7869EEF-9A24-41F4-A96F-41996F3C0BFC";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxLogTipo()
            {
                TupleType = typeof(NTRxLogTipo.XTuple);
            }
        }

        #endregion __NTRxLogTipo

        #region _NTRxMobileAtividade

        [Guid(__NTRxMobileAtividade.sCID)]
        public interface _NTRxMobileAtividade : XIBasePersistence, IEnumerable<NTRxMobileAtividade.XTuple>
        {
            NTRxMobileAtividade.XTuple NewTuple();

            new NTRxMobileAtividade.XTuple NewTuple(Object pPKValue);

            new NTRxMobileAtividade.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxMobileAtividade.XTuple FindTupleByPK(Object pPKValue);

            NTRxMobileAtividade.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxMobileAtividade.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxMobileAtividade.XTuple> Tuples
            {
                get;
            }

            NTRxMobileAtividade.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxMobileAtividade

        #region _NTRxMobileAtividade<TModel, TTuple>

        public class _NTRxMobileAtividade<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxMobileAtividade where TModel : NTRxMobileAtividade where TTuple : NTRxMobileAtividade.XTuple 
        {
            protected _NTRxMobileAtividade()
            {
            }
            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.this[Int32 pInex] => (NTRxMobileAtividade.XTuple)base[pInex];

            IEnumerable<NTRxMobileAtividade.XTuple> _NTRxMobileAtividade.Tuples => (IEnumerable<NTRxMobileAtividade.XTuple>)base.Tuples;

            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxMobileAtividade.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxMobileAtividade.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.FindTupleByPK(Object pPKValue)
            {
                return (NTRxMobileAtividade.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.NewTuple()
            {
                return (NTRxMobileAtividade.XTuple)NewTuple();
            }

            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.NewTuple(Object pPKValue)
            {
                return (NTRxMobileAtividade.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxMobileAtividade.XTuple> IEnumerable<NTRxMobileAtividade.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxMobileAtividade.XTuple _NTRxMobileAtividade.Current => base.Current;
        }

        #endregion _NTRxMobileAtividade<TModel, TTuple>

        #region __NTRxMobileAtividade

        [XRegister(typeof(__NTRxMobileAtividade), sCID, typeof(NTRxMobileAtividade))]
        public class __NTRxMobileAtividade : _NTRxMobileAtividade<NTRxMobileAtividade, NTRxMobileAtividade.XTuple>
        {
            public const String sCID = "83C9B4B8-85EC-49A8-B41F-CF5763E6DC26";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxMobileAtividade()
            {
                TupleType = typeof(NTRxMobileAtividade.XTuple);
            }
        }

        #endregion __NTRxMobileAtividade

        #region _NTRxMobileConfig

        [Guid(__NTRxMobileConfig.sCID)]
        public interface _NTRxMobileConfig : XIBasePersistence, IEnumerable<NTRxMobileConfig.XTuple>
        {
            NTRxMobileConfig.XTuple NewTuple();

            new NTRxMobileConfig.XTuple NewTuple(Object pPKValue);

            new NTRxMobileConfig.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxMobileConfig.XTuple FindTupleByPK(Object pPKValue);

            NTRxMobileConfig.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxMobileConfig.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxMobileConfig.XTuple> Tuples
            {
                get;
            }

            NTRxMobileConfig.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxMobileConfig

        #region _NTRxMobileConfig<TModel, TTuple>

        public class _NTRxMobileConfig<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxMobileConfig where TModel : NTRxMobileConfig where TTuple : NTRxMobileConfig.XTuple 
        {
            protected _NTRxMobileConfig()
            {
            }
            NTRxMobileConfig.XTuple _NTRxMobileConfig.this[Int32 pInex] => (NTRxMobileConfig.XTuple)base[pInex];

            IEnumerable<NTRxMobileConfig.XTuple> _NTRxMobileConfig.Tuples => (IEnumerable<NTRxMobileConfig.XTuple>)base.Tuples;

            NTRxMobileConfig.XTuple _NTRxMobileConfig.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxMobileConfig.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxMobileConfig.XTuple _NTRxMobileConfig.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxMobileConfig.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxMobileConfig.XTuple _NTRxMobileConfig.FindTupleByPK(Object pPKValue)
            {
                return (NTRxMobileConfig.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxMobileConfig.XTuple _NTRxMobileConfig.NewTuple()
            {
                return (NTRxMobileConfig.XTuple)NewTuple();
            }

            NTRxMobileConfig.XTuple _NTRxMobileConfig.NewTuple(Object pPKValue)
            {
                return (NTRxMobileConfig.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxMobileConfig.XTuple> IEnumerable<NTRxMobileConfig.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxMobileConfig.XTuple _NTRxMobileConfig.Current => base.Current;
        }

        #endregion _NTRxMobileConfig<TModel, TTuple>

        #region __NTRxMobileConfig

        [XRegister(typeof(__NTRxMobileConfig), sCID, typeof(NTRxMobileConfig))]
        public class __NTRxMobileConfig : _NTRxMobileConfig<NTRxMobileConfig, NTRxMobileConfig.XTuple>
        {
            public const String sCID = "00984A5D-128D-4C9A-879A-334518F93EDE";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxMobileConfig()
            {
                TupleType = typeof(NTRxMobileConfig.XTuple);
            }
        }

        #endregion __NTRxMobileConfig

        #region _NTRxMobileLogErro

        [Guid(__NTRxMobileLogErro.sCID)]
        public interface _NTRxMobileLogErro : XIBasePersistence, IEnumerable<NTRxMobileLogErro.XTuple>
        {
            NTRxMobileLogErro.XTuple NewTuple();

            new NTRxMobileLogErro.XTuple NewTuple(Object pPKValue);

            new NTRxMobileLogErro.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxMobileLogErro.XTuple FindTupleByPK(Object pPKValue);

            NTRxMobileLogErro.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxMobileLogErro.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxMobileLogErro.XTuple> Tuples
            {
                get;
            }

            NTRxMobileLogErro.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxMobileLogErro

        #region _NTRxMobileLogErro<TModel, TTuple>

        public class _NTRxMobileLogErro<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxMobileLogErro where TModel : NTRxMobileLogErro where TTuple : NTRxMobileLogErro.XTuple 
        {
            protected _NTRxMobileLogErro()
            {
            }
            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.this[Int32 pInex] => (NTRxMobileLogErro.XTuple)base[pInex];

            IEnumerable<NTRxMobileLogErro.XTuple> _NTRxMobileLogErro.Tuples => (IEnumerable<NTRxMobileLogErro.XTuple>)base.Tuples;

            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxMobileLogErro.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxMobileLogErro.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.FindTupleByPK(Object pPKValue)
            {
                return (NTRxMobileLogErro.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.NewTuple()
            {
                return (NTRxMobileLogErro.XTuple)NewTuple();
            }

            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.NewTuple(Object pPKValue)
            {
                return (NTRxMobileLogErro.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxMobileLogErro.XTuple> IEnumerable<NTRxMobileLogErro.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxMobileLogErro.XTuple _NTRxMobileLogErro.Current => base.Current;
        }

        #endregion _NTRxMobileLogErro<TModel, TTuple>

        #region __NTRxMobileLogErro

        [XRegister(typeof(__NTRxMobileLogErro), sCID, typeof(NTRxMobileLogErro))]
        public class __NTRxMobileLogErro : _NTRxMobileLogErro<NTRxMobileLogErro, NTRxMobileLogErro.XTuple>
        {
            public const String sCID = "003A0358-7C28-482C-930A-E15C1CC70C2F";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxMobileLogErro()
            {
                TupleType = typeof(NTRxMobileLogErro.XTuple);
            }
        }

        #endregion __NTRxMobileLogErro

        #region _NTRxMobilePontoDestaque

        [Guid(__NTRxMobilePontoDestaque.sCID)]
        public interface _NTRxMobilePontoDestaque : XIBasePersistence, IEnumerable<NTRxMobilePontoDestaque.XTuple>
        {
            NTRxMobilePontoDestaque.XTuple NewTuple();

            new NTRxMobilePontoDestaque.XTuple NewTuple(Object pPKValue);

            new NTRxMobilePontoDestaque.XTuple FindTuple(params Object[] pFieldValuePar);

            new NTRxMobilePontoDestaque.XTuple FindTupleByPK(Object pPKValue);

            NTRxMobilePontoDestaque.XTuple this[Int32 pInex]
            {
                get;
            }


            new NTRxMobilePontoDestaque.XTuple Current
            {
                get;
            }

            IEnumerable<NTRxMobilePontoDestaque.XTuple> Tuples
            {
                get;
            }

            NTRxMobilePontoDestaque.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }

        #endregion _NTRxMobilePontoDestaque

        #region _NTRxMobilePontoDestaque<TModel, TTuple>

        public class _NTRxMobilePontoDestaque<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _NTRxMobilePontoDestaque where TModel : NTRxMobilePontoDestaque where TTuple : NTRxMobilePontoDestaque.XTuple 
        {
            protected _NTRxMobilePontoDestaque()
            {
            }
            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.this[Int32 pInex] => (NTRxMobilePontoDestaque.XTuple)base[pInex];

            IEnumerable<NTRxMobilePontoDestaque.XTuple> _NTRxMobilePontoDestaque.Tuples => (IEnumerable<NTRxMobilePontoDestaque.XTuple>)base.Tuples;

            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (NTRxMobilePontoDestaque.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.FindTuple(params Object[] pFieldValuePar)
            {
                return (NTRxMobilePontoDestaque.XTuple)base.FindTuple(pFieldValuePar);
            }

            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.FindTupleByPK(Object pPKValue)
            {
                return (NTRxMobilePontoDestaque.XTuple)base.FindTupleByPK(pPKValue);
            }

            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.NewTuple()
            {
                return (NTRxMobilePontoDestaque.XTuple)NewTuple();
            }

            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.NewTuple(Object pPKValue)
            {
                return (NTRxMobilePontoDestaque.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<NTRxMobilePontoDestaque.XTuple> IEnumerable<NTRxMobilePontoDestaque.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            NTRxMobilePontoDestaque.XTuple _NTRxMobilePontoDestaque.Current => base.Current;
        }

        #endregion _NTRxMobilePontoDestaque<TModel, TTuple>

        #region __NTRxMobilePontoDestaque

        [XRegister(typeof(__NTRxMobilePontoDestaque), sCID, typeof(NTRxMobilePontoDestaque))]
        public class __NTRxMobilePontoDestaque : _NTRxMobilePontoDestaque<NTRxMobilePontoDestaque, NTRxMobilePontoDestaque.XTuple>
        {
            public const String sCID = "31B7079E-F532-431D-9434-C67F9A2B5942";
            public static Guid gCID = new Guid(sCID);
            protected __NTRxMobilePontoDestaque()
            {
                TupleType = typeof(NTRxMobilePontoDestaque.XTuple);
            }
        }

        #endregion __NTRxMobilePontoDestaque

        static NTRx()
        {
        }

        public NTRx(XModelCache pInstance)
            :base(pInstance)
        {
            ID = new Guid("CB66D4CB-B846-495D-8BC9-BE3AF04452CE");
            Solution = "Projecao.Core.NTR";
            Project = "Projecao.Core.NTR";
            Name = "NTRx";
            Title = "";
            AddTable(NTRxEvento.Instance);
            AddTable(NTRxLogErro.Instance);
            AddTable(NTRxLogTipo.Instance);
            AddTable(NTRxMobileAtividade.Instance);
            AddTable(NTRxMobileConfig.Instance);
            AddTable(NTRxMobileLogErro.Instance);
            AddTable(NTRxMobilePontoDestaque.Instance);
        }

        public override Int32 SortedBy
        {
            get
            {
                return 0;
            }
        }
    }
}