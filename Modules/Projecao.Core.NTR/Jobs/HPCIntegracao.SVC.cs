//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.NTR.Jobs
{
    [XRegister(typeof(HPCIntegracaoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.NTR\Projecao.Core.NTR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.NTR\Jobs\HPCIntegracao.dssvc")]
    public class HPCIntegracaoSVC : XSVCModel
    {
        #region XCFGTuple

    //<auto-generated/>
        [XRegister(typeof(XCFGTuple), sCID, typeof(HPCIntegracaoSVC))]
        public class XCFGTuple : XCFGDataTuple
        {
            public const String sCID = "0FBDE4A9-00AF-4C24-A750-5E455A589769";
            public static Guid gCID = new Guid(sCID);
            public XCFGTuple()
            {
                FormID = new Guid("BD30EEC8-59DF-4077-BB33-50F8DE767497");
                AutoApply = false;
                CompanyFilter = false;
                ConfigPKFilter = false;
                Title = "";
                Porta = 0;
            }
            public String PastaTemoraria
            {
                get
                {
                    return GetValue<String>("PastaTemoraria");
                }
                set
                {
                    SetValue<String>("PastaTemoraria", value);
                }
            }
            public Int32 Porta
            {
                get
                {
                    return GetValue<Int32>("Porta");
                }
                set
                {
                    SetValue<Int32>("Porta", value);
                }
            }
        }

        #endregion XCFGTuple

        #region HPCIntegracaoConfigFRM

        [XRegister(typeof(HPCIntegracaoConfigFRM), sCID)]
        public class HPCIntegracaoConfigFRM : XFRMModel
        {
            public const String sCID = "BD30EEC8-59DF-4077-BB33-50F8DE767497";
            static HPCIntegracaoConfigFRM()
            {
                gCID = new Guid(sCID);
            }
            public HPCIntegracaoConfigFRM()
            {
                ID = gCID;
                Name = "HPCIntegracaoConfig";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Porta);
                Porta.CanInsert = true;
                Porta.CanUpdate = true;
                Porta.RowCount = 1;
                Porta.ColCount = 6;
                Porta.RowCountSmall = 1;
                Porta.ColCountSmall = 6;
                Porta.IsHidden = false;
                Porta.IsHiddenSmall = false;
                Porta.AdditionalTitle = "";
                Porta.Location = 1;
                Porta.EditorCID = new Guid("B45FBE87-40A0-44EF-B2EC-CD6A3000DA3A");
                Porta.FormImplace = true;
                Porta.Operator = XOperator.EqualTo;
                Porta.JustifyHeight = false;
                Porta.AllowEmpty = true;
                Porta.FontColor = "#000000";
                Porta.FontStyle = XFontStyle.Normal;
                Porta.ShowFooter = false;
                Porta.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Porta.Scale = 0;
                Porta.Length = 0;
                Porta.SearchAction = XSearchAction.Default;
                Porta.TypeID = XInt32.CID;
                Porta.AdditionalFieldsID = new Guid[] {  };
                Porta.AdditionalDataFieldsID = new Guid[] {  };
                Porta.TargetFilterFieldID = new Guid[] {  };
                Porta.SourceFilterFieldID = new Guid[] {  };
                Porta.TargetDisplayFieldID = new Guid[] {  };
                Porta.SourceDisplayFieldID = new Guid[] {  };
                Porta.AutoLoad = false;
                Porta.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Porta.FilterInative = true;
                Porta.IsAnswer = false;
                Porta.AllowMultiSelect = false;
                AddItem(PastaTemoraria);
                PastaTemoraria.CanInsert = true;
                PastaTemoraria.CanUpdate = true;
                PastaTemoraria.RowCount = 1;
                PastaTemoraria.ColCount = 6;
                PastaTemoraria.RowCountSmall = 1;
                PastaTemoraria.ColCountSmall = 6;
                PastaTemoraria.IsHidden = false;
                PastaTemoraria.IsHiddenSmall = false;
                PastaTemoraria.AdditionalTitle = "";
                PastaTemoraria.Location = 2;
                PastaTemoraria.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                PastaTemoraria.FormImplace = true;
                PastaTemoraria.Operator = XOperator.EqualTo;
                PastaTemoraria.JustifyHeight = false;
                PastaTemoraria.AllowEmpty = true;
                PastaTemoraria.FontColor = "#000000";
                PastaTemoraria.FontStyle = XFontStyle.Normal;
                PastaTemoraria.ShowFooter = false;
                PastaTemoraria.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PastaTemoraria.Scale = 0;
                PastaTemoraria.Length = 0;
                PastaTemoraria.SearchAction = XSearchAction.Default;
                PastaTemoraria.TypeID = XString.CID;
                PastaTemoraria.AdditionalFieldsID = new Guid[] {  };
                PastaTemoraria.AdditionalDataFieldsID = new Guid[] {  };
                PastaTemoraria.TargetFilterFieldID = new Guid[] {  };
                PastaTemoraria.SourceFilterFieldID = new Guid[] {  };
                PastaTemoraria.TargetDisplayFieldID = new Guid[] {  };
                PastaTemoraria.SourceDisplayFieldID = new Guid[] {  };
                PastaTemoraria.AutoLoad = false;
                PastaTemoraria.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                PastaTemoraria.FilterInative = true;
                PastaTemoraria.IsAnswer = false;
                PastaTemoraria.AllowMultiSelect = false;
            }
            public XFRMField Porta = new XFRMField(new Guid("00E19A2A-D805-4CBF-96EE-AA6566D06FCF"), "Porta", "Porta", XInt32.CID, 1, 6, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // Int32;
            public XFRMField PastaTemoraria = new XFRMField(new Guid("34BC9550-0E8D-47DE-8663-E1144E315C2A"), "PastaTemoraria", "Pasta Temporário", XString.CID, 1, 6, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public static class Fields
            {
                public static XFieldInfo Porta = new XFieldInfo(new Guid("00E19A2A-D805-4CBF-96EE-AA6566D06FCF"), "Porta", "Porta", typeof(Int32));
                public static XFieldInfo PastaTemoraria = new XFieldInfo(new Guid("34BC9550-0E8D-47DE-8663-E1144E315C2A"), "PastaTemoraria", "Pasta Temporário", typeof(String));
            }
        }

        #endregion HPCIntegracaoConfigFRM

        public const String sCID = "8F0B6576-5A73-4AC7-A8AF-8686D9CF3F82";
        public static Guid gCID = new Guid(sCID);

        #region xSYSxJobLog 
        public class xSYSxJobLog : XSVCTable
        {

            public static Guid gCID => new Guid("E6C05D6C-6105-443A-874B-77C10653560F");

            public xSYSxJobLog()
            {
                Name = "SYSxJobLog";
                Alias = "SYSxJobLog";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.gCID;

                Items.Add(SYSxJobLogTipoID, SYSxJobLogTipoID.ID);
                SYSxJobLogTipoID.Owner = this;
                SYSxJobLogTipoID.OwnerID = ID;
                SYSxJobLogTipoID.TableName = Name;
                SYSxJobLogTipoID.Alias = "SYSxJobLogTipoID";
                Items.Add(SYSxJobLogEstadoID, SYSxJobLogEstadoID.ID);
                SYSxJobLogEstadoID.Owner = this;
                SYSxJobLogEstadoID.OwnerID = ID;
                SYSxJobLogEstadoID.TableName = Name;
                SYSxJobLogEstadoID.Alias = "SYSxJobLogEstadoID";
                Items.Add(SYSxJobID, SYSxJobID.ID);
                SYSxJobID.Owner = this;
                SYSxJobID.OwnerID = ID;
                SYSxJobID.TableName = Name;
                SYSxJobID.Alias = "SYSxJobID";
                Items.Add(SYSxJobLogID, SYSxJobLogID.ID);
                SYSxJobLogID.Owner = this;
                SYSxJobLogID.OwnerID = ID;
                SYSxJobLogID.TableName = Name;
                SYSxJobLogID.Alias = "SYSxJobLogID";
                Items.Add(Relatorio, Relatorio.ID);
                Relatorio.Owner = this;
                Relatorio.OwnerID = ID;
                Relatorio.TableName = Name;
                Relatorio.Alias = "Relatorio";
                Items.Add(Momento, Momento.ID);
                Momento.Owner = this;
                Momento.OwnerID = ID;
                Momento.TableName = Name;
                Momento.Alias = "Momento";
            }

            public static XORMFKField SYSxJobLogTipoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogTipoID, new Guid("038F286D-B945-4523-83D5-E50F60568289"), "SYSxJobLogTipoID", "Tabela");
            public static XORMFKField SYSxJobLogEstadoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogEstadoID, new Guid("3AA6253C-EDC0-4E7B-B752-B9D0C72CEC1F"), "SYSxJobLogEstadoID", "Tabela");
            public static XORMFKField SYSxJobID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobID, new Guid("DE93A8B6-D0B6-4103-A58A-3950CF1E6854"), "SYSxJobID", "Tabela");
            public static XORMPKField SYSxJobLogID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogID, new Guid("5DEACF92-9483-4170-ADAE-21B30E137C87"), "SYSxJobLogID", "Tabela");
            public static XORMField Relatorio = new XORMField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Relatorio, new Guid("0391E65A-4CE7-4A7D-9F00-3414CE89FBDE"), "Relatorio", "Relatório");
            public static XORMDateTimeField Momento = new XORMDateTimeField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Momento, new Guid("98C927A6-7B46-404E-83A5-E48920EB6F1E"), "Momento", "Momento");
        }
        #endregion xSYSxJobLog 


        public xSYSxJobLog SYSxJobLog;

        public HPCIntegracaoSVC()
        {
            TupleType = typeof(HPCIntegracaoSVC.XTuple);
            DataSetType = typeof(HPCIntegracaoSVC.XDataSet);
            ServiceRuleCID = new Guid("C90AF2E5-742D-4054-8600-12800EDB6BE2");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Job;
            ID = new Guid("8F0B6576-5A73-4AC7-A8AF-8686D9CF3F82");
            Name = "HPCIntegracao";
            Title = "Intergração de Dados (HPC)";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = true;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.HPC;
            CanExport = false;
            ModuleID = new Guid("0E753EE6-8CF5-448C-8438-DAC71A5AECB2");
            Rights = new Int16[] { 1 }; 
            ConfigFormID = new Guid("BD30EEC8-59DF-4077-BB33-50F8DE767497");
            ConfigPKFilter = false;
            IsReadOnly = true;
            ClientScript = "Projecao.Core.NTR.js";
            DataSetFields = new Guid[] { xSYSxJobLog.SYSxJobLogTipoID.ID, xSYSxJobLog.SYSxJobLogEstadoID.ID, xSYSxJobLog.SYSxJobID.ID, xSYSxJobLog.SYSxJobLogID.ID, xSYSxJobLog.Relatorio.ID, xSYSxJobLog.Momento.ID };
            PKField = xSYSxJobLog.SYSxJobLogID.ID;
            ConfigTableID = new Guid("88D46CC5-6549-43BB-9076-50A4B84BBA23");
            MasterRuleCID = new Guid("C90AF2E5-742D-4054-8600-12800EDB6BE2");
            SYSxJobLog = new xSYSxJobLog();
            SYSxJobLog.IsReadOnly = true;
            AddTable(SYSxJobLog);
            MasterTableID = SYSxJobLog.ID;
            xSYSxJobLog.Momento.IsReadOnly = true;
            xSYSxJobLog.Momento.IsDataField = true;
            xSYSxJobLog.Momento.AllowEmpty = true;
            xSYSxJobLog.Relatorio.IsReadOnly = true;
            xSYSxJobLog.Relatorio.IsDataField = true;
            xSYSxJobLog.Relatorio.AllowEmpty = true;
            xSYSxJobLog.SYSxJobID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobID.IsDataField = true;
            xSYSxJobLog.SYSxJobID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogEstadoID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobLogEstadoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogEstadoID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobLogID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogTipoID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobLogTipoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogTipoID.AllowEmpty = true;
            xSYSxJobLog.Relatorio.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Momento => xSYSxJobLog.Momento;
        public XORMField Relatorio => xSYSxJobLog.Relatorio;
        public XORMField SYSxJobID => xSYSxJobLog.SYSxJobID;
        public XORMField SYSxJobLogEstadoID => xSYSxJobLog.SYSxJobLogEstadoID;
        public XORMField SYSxJobLogID => xSYSxJobLog.SYSxJobLogID;
        public XORMField SYSxJobLogTipoID => xSYSxJobLog.SYSxJobLogTipoID;
        }
        #endregion XFields
        #region HPCIntegracaoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Momento
        {
            get
            {
                return (DateTime)Value[HPCIntegracaoSVC.xSYSxJobLog.Momento.ID];
            }
            set
            {
                Value[HPCIntegracaoSVC.xSYSxJobLog.Momento.ID] = value;
            }
        }
        public DateTime? oMomento
        {
            get
            {
                GetOldValue(HPCIntegracaoSVC.xSYSxJobLog.Momento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Byte[] Relatorio
        {
            get
            {
                return (Byte[])Value[HPCIntegracaoSVC.xSYSxJobLog.Relatorio.ID];
            }
            set
            {
                Value[HPCIntegracaoSVC.xSYSxJobLog.Relatorio.ID] = value;
            }
        }
        public Byte[]? oRelatorio
        {
            get
            {
                GetOldValue(HPCIntegracaoSVC.xSYSxJobLog.Relatorio, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public Guid SYSxJobID
        {
            get
            {
                return (Guid)Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobID.ID];
            }
            set
            {
                Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobID.ID] = value;
            }
        }
        public Guid? oSYSxJobID
        {
            get
            {
                GetOldValue(HPCIntegracaoSVC.xSYSxJobLog.SYSxJobID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxJobLogEstadoID
        {
            get
            {
                return (Int16)Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID];
            }
            set
            {
                Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogEstadoID
        {
            get
            {
                GetOldValue(HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int64 SYSxJobLogID
        {
            get
            {
                return (Int64)Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogID.ID];
            }
            set
            {
                Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogID.ID] = value;
            }
        }
        public Int64? oSYSxJobLogID
        {
            get
            {
                GetOldValue(HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogID, out Object ovlr);
                return (Int64?)ovlr;
            }
        }

        public Int16 SYSxJobLogTipoID
        {
            get
            {
                return (Int16)Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogTipoID.ID];
            }
            set
            {
                Value[HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogTipoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogTipoID
        {
            get
            {
                GetOldValue(HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion HPCIntegracaoSVC.XTuple

        #region HPCIntegracaoSVC.XRule
        [XRegister(typeof(XInternalRule), "75CCCAF5-506A-4EFF-A865-36B9FEED262E", typeof(HPCIntegracaoSVC))]
        public sealed class XInternalRule : XRule
        {

                protected override Boolean CanStratHost => true;
        }
        public abstract class XRule : XServiceHPCJobRule<HPCIntegracaoSVC.XCFGTuple, HPCIntegracaoSVC.XDataSet, HPCIntegracaoSVC, HPCIntegracaoSVC.XTuple>
        {
        }
        #endregion HPCIntegracaoSVC.XRule

        #region HPCIntegracaoSVC.XDataSet

        public class XDataSet : XDataSet<HPCIntegracaoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(HPCIntegracaoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<HPCIntegracaoSVC.XTuple> where T : XDataTuple
        {

            public Guid Momento => HPCIntegracaoSVC.xSYSxJobLog.Momento.ID;
            public Guid Relatorio => HPCIntegracaoSVC.xSYSxJobLog.Relatorio.ID;
            public Guid SYSxJobID => HPCIntegracaoSVC.xSYSxJobLog.SYSxJobID.ID;
            public Guid SYSxJobLogEstadoID => HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID;
            public Guid SYSxJobLogID => HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogID.ID;
            public Guid SYSxJobLogTipoID => HPCIntegracaoSVC.xSYSxJobLog.SYSxJobLogTipoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(HPCIntegracaoSVC.XDataSet);
            }

        }
        #endregion HPCIntegracaoSVC.XDataSet

        [Guid(HPCIntegracaoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(HPCIntegracaoSVC))]
        protected class _Service : Service<HPCIntegracaoSVC, XDataSet, XTuple>
        {
            public const String sCID = "0901CFD5-ABC1-404B-88C1-82A49261C8ED";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<HPCIntegracaoSVC, XDataSet, XTuple>, XService
             where TModel : HPCIntegracaoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}