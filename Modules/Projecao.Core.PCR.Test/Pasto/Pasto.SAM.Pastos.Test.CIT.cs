//<auto-generated/>
using System;
using TFX.Core;
using TFX.CIT.Core.Model;
using Projecao.Core.PCR.Pasto;
using TFX.Core.Reflections;
using System.Collections.Generic;

namespace Projecao.Core.PCR.Test.Pasto
{
    [XRegister(typeof(PastoSAMPastosTestCIT), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR.Test\Projecao.Core.PCR.Test.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR.Test\Pasto\Pasto.SAM.Pastos.Test.dscit")]
    public class PastoSAMPastosTestCIT : XCITInfo
    {
        public const String sCID = "53D9D400-2364-448D-AA85-0105DFACF6EF";
        public static Guid gCID = new Guid(sCID);
        public class XRule : XCITRule<PastoSAMPastosTestCIT, PastoSVC, PastoSVC.XDataSet, PastoSVC.XTuple>
        {
        }

        public xPasto[] DataPasto = new xPasto[2];
        public record xPasto(Decimal Area, String Nome, String PCRxRetiroID, String vPCRxRetiroID, Int32 pkvPCRxRetiroID, String NomeRetiro, Decimal Animais, Decimal Longitude, Decimal Latitude, String CoordenadasArea);

        public List<xPCRxPastoID>[] DataPCRxPastoID = new List<xPCRxPastoID>[2];
        public record xPCRxPastoID(String Tipo, Decimal Longitude, Decimal Latitude, String PCRxElementoTipoID, String vPCRxElementoTipoID, Int16 pkvPCRxElementoTipoID, Int32 PCRxPastoID, Int32 PCRxElementoID, String Nome);
        public PastoSAMPastosTestCIT()
        {
            ID = gCID;
            Name = "PastoSAMPastosTest";
            ApplicationID = new Guid("089BE7D4-7239-461F-875B-DA05528BC087");
            MenuItemID = new Guid("089BE7D4-7239-461F-875B-DA05528BC087");
            AppModulesID = new [] { (Int16)19 };
            AppGroupsID = new [] { (Int16)2 };
            PlayCount = 2;
            Title = "Cadastro de Pastos";
            ServiceID = new Guid("DE279D40-A909-421A-9A8B-BA77DD13A0CD");
            DataPasto[0] = new xPasto(Area: 450m, Nome: @"Baixada do Rio", PCRxRetiroID: "Rio Torto", vPCRxRetiroID: "Rio Torto", pkvPCRxRetiroID: 2, NomeRetiro: @"Rio Torto", Animais: 0m, Longitude: -49.3046943068m, Latitude: -16.7202237491m, CoordenadasArea: @"-16.720275130331547; -49.30565989659302
-16.719483929061923; -49.30406131529724
-16.720305940156774; -49.303717985406514
-16.720922465346813; -49.30545604751574
-16.720275130455974; -49.30570281165959");
            DataPasto[1] = new xPasto(Area: 250m, Nome: @"Árvore Grande", PCRxRetiroID: "Morro das Almas", vPCRxRetiroID: "Morro das Almas", pkvPCRxRetiroID: 1, NomeRetiro: @"Morro das Almas", Animais: 0m, Longitude: -49.2416063219m, Latitude: -16.7108110298m, CoordenadasArea: @"-16.710316940507905; -49.24186426242284
-16.710302398175575; -49.24053663932436
-16.71135597385228; -49.24046076321739
-16.7113414516204; -49.24187184471679
-16.71029514226618; -49.24183391688303");
            DataPCRxPastoID[0] = new List<xPCRxPastoID>();
            DataPCRxPastoID[1] = new List<xPCRxPastoID>();
            DataPCRxPastoID[0].Add(new xPCRxPastoID(Tipo: @"Bebedouro", Longitude: -49.3042544305m, Latitude: -16.7197716367m, PCRxElementoTipoID: "Bebedouro", vPCRxElementoTipoID: "Bebedouro", pkvPCRxElementoTipoID: (Int16)1, PCRxPastoID: 2, PCRxElementoID: 1, Nome: @"Bebedouro dos Fundos"));
            DataPCRxPastoID[1].Add(new xPCRxPastoID(Tipo: @"Bebedouro", Longitude: -49.2414925241m, Latitude: -16.7110435423m, PCRxElementoTipoID: "Bebedouro", vPCRxElementoTipoID: "Bebedouro", pkvPCRxElementoTipoID: (Int16)1, PCRxPastoID: 3, PCRxElementoID: 3, Nome: @"Bebedouro Pequeno"));
            DataPCRxPastoID[1].Add(new xPCRxPastoID(Tipo: @"Cocheira", Longitude: -49.2416214960m, Latitude: -16.7105712506m, PCRxElementoTipoID: "Cocheira", vPCRxElementoTipoID: "Cocheira", pkvPCRxElementoTipoID: (Int16)3, PCRxPastoID: 3, PCRxElementoID: 4, Nome: @"Sal e Ração"));
            DataPCRxPastoID[0].Add(new xPCRxPastoID(Tipo: @"Reservatório de Água", Longitude: -49.3052843881m, Latitude: -16.7205731088m, PCRxElementoTipoID: "Reservatório de Água", vPCRxElementoTipoID: "Reservatório de Água", pkvPCRxElementoTipoID: (Int16)2, PCRxPastoID: 2, PCRxElementoID: 2, Nome: @"Reservatório Pequeno"));
        }
    }
}