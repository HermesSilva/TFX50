//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.AgendaVacina;
using Projecao.Core.ERP.DB;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.AgendaVacina
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\AgendaVacina\AgendaVacina.dssvc")]
    [XRegister(typeof(AgendaVacinaSVC), sCID)]
    public class AgendaVacinaSVC : XSVCModel
    {
        #region AgendaVacinaFilterFRM

        [XRegister(typeof(AgendaVacinaFilterFRM), sCID)]
        public class AgendaVacinaFilterFRM : XFRMModel
        {
            public const String sCID = "B4CF625C-7A03-417F-B0A6-81272FF1E748";
            public static new readonly Guid gCID = new Guid(sCID);
            static AgendaVacinaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AgendaVacinaFilterFRM()
            {
                ID = gCID;
                Name = "AgendaVacinaFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(PETxFamiliaID);
                PETxFamiliaID.ForceRW = true;
                PETxFamiliaID.CanInsert = true;
                PETxFamiliaID.CanUpdate = true;
                PETxFamiliaID.RowCount = 2;
                PETxFamiliaID.ColCount = 8;
                PETxFamiliaID.RowCountSmall = 2;
                PETxFamiliaID.ColCountSmall = 8;
                PETxFamiliaID.IsHidden = false;
                PETxFamiliaID.IsHiddenSmall = false;
                PETxFamiliaID.AdditionalTitle = "";
                PETxFamiliaID.Icon = "";
                PETxFamiliaID.DataSourceID = global::Projecao.Core.PET.DB.PETx.PETxFamilia.gCID;
                PETxFamiliaID.Location = 1;
                PETxFamiliaID.EditorCID = new Guid("AC111493-AD7B-4F74-A0E8-DF0E0BB6B74A");
                PETxFamiliaID.Operator = XOperator.EqualTo;
                PETxFamiliaID.ShowSpin = false;
                PETxFamiliaID.HotkeyChar = "";
                PETxFamiliaID.JustifyHeight = false;
                PETxFamiliaID.AllowEmpty = true;
                PETxFamiliaID.FontColor = "#000000";
                PETxFamiliaID.FontStyle = XFontStyle.Normal;
                PETxFamiliaID.ShowFooter = false;
                PETxFamiliaID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PETxFamiliaID.Order = 1;
                PETxFamiliaID.Scale = -1;
                PETxFamiliaID.Length = -1;
                PETxFamiliaID.SearchAction = XSearchAction.Default;
                PETxFamiliaID.TypeID = XInt16.CID;
                PETxFamiliaID.AdditionalFieldsID = new Guid[] {  };
                PETxFamiliaID.AdditionalDataFieldsID = new Guid[] {  };
                PETxFamiliaID.TargetFilterFieldID = new Guid[] {  };
                PETxFamiliaID.SourceFilterFieldID = new Guid[] {  };
                PETxFamiliaID.TargetDisplayFieldID = new Guid[] {  };
                PETxFamiliaID.SourceDisplayFieldID = new Guid[] { new Guid("AD8F7502-6E40-46DF-9DCB-DC7AAD18B319") };
                PETxFamiliaID.DataSourceID = global::Projecao.Core.PET.DB.PETx.PETxFamilia.gCID;
                PETxFamiliaID.AutoLoad = false;
                PETxFamiliaID.FilterInative = true;
                PETxFamiliaID.IsAnswer = false;
                PETxFamiliaID.AllowMultiSelect = false;
                AddItem(ERPxGeneroID);
                ERPxGeneroID.ForceRW = true;
                ERPxGeneroID.CanInsert = true;
                ERPxGeneroID.CanUpdate = true;
                ERPxGeneroID.RowCount = 2;
                ERPxGeneroID.ColCount = 7;
                ERPxGeneroID.RowCountSmall = 2;
                ERPxGeneroID.ColCountSmall = 7;
                ERPxGeneroID.IsHidden = false;
                ERPxGeneroID.IsHiddenSmall = false;
                ERPxGeneroID.AdditionalTitle = "";
                ERPxGeneroID.Icon = "";
                ERPxGeneroID.DataSourceID = global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;
                ERPxGeneroID.Location = 2;
                ERPxGeneroID.EditorCID = new Guid("AC111493-AD7B-4F74-A0E8-DF0E0BB6B74A");
                ERPxGeneroID.Operator = XOperator.EqualTo;
                ERPxGeneroID.ShowSpin = false;
                ERPxGeneroID.HotkeyChar = "";
                ERPxGeneroID.JustifyHeight = false;
                ERPxGeneroID.AllowEmpty = true;
                ERPxGeneroID.FontColor = "#000000";
                ERPxGeneroID.FontStyle = XFontStyle.Normal;
                ERPxGeneroID.ShowFooter = false;
                ERPxGeneroID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                ERPxGeneroID.Order = 2;
                ERPxGeneroID.Scale = -1;
                ERPxGeneroID.Length = -1;
                ERPxGeneroID.SearchAction = XSearchAction.Default;
                ERPxGeneroID.TypeID = XInt16.CID;
                ERPxGeneroID.AdditionalFieldsID = new Guid[] {  };
                ERPxGeneroID.AdditionalDataFieldsID = new Guid[] {  };
                ERPxGeneroID.TargetFilterFieldID = new Guid[] {  };
                ERPxGeneroID.SourceFilterFieldID = new Guid[] {  };
                ERPxGeneroID.TargetDisplayFieldID = new Guid[] {  };
                ERPxGeneroID.SourceDisplayFieldID = new Guid[] { new Guid("E1C95896-5736-4247-A911-DA6300C691F9") };
                ERPxGeneroID.DataSourceID = global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;
                ERPxGeneroID.AutoLoad = false;
                ERPxGeneroID.FilterInative = true;
                ERPxGeneroID.IsAnswer = false;
                ERPxGeneroID.AllowMultiSelect = false;
                AddItem(PETxRacaID);
                PETxRacaID.ForceRW = true;
                PETxRacaID.CanInsert = true;
                PETxRacaID.CanUpdate = true;
                PETxRacaID.RowCount = 2;
                PETxRacaID.ColCount = 17;
                PETxRacaID.RowCountSmall = 2;
                PETxRacaID.ColCountSmall = 17;
                PETxRacaID.IsHidden = false;
                PETxRacaID.IsHiddenSmall = false;
                PETxRacaID.AdditionalTitle = "";
                PETxRacaID.Icon = "";
                PETxRacaID.Location = 3;
                PETxRacaID.EditorCID = new Guid("66290387-F0AD-4746-A1F7-B0D8D4C5C2EE");
                PETxRacaID.Operator = XOperator.EqualTo;
                PETxRacaID.ShowSpin = false;
                PETxRacaID.HotkeyChar = "";
                PETxRacaID.JustifyHeight = false;
                PETxRacaID.AllowEmpty = true;
                PETxRacaID.FontColor = "#000000";
                PETxRacaID.FontStyle = XFontStyle.Normal;
                PETxRacaID.ShowFooter = false;
                PETxRacaID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PETxRacaID.Order = 3;
                PETxRacaID.Scale = -1;
                PETxRacaID.Length = -1;
                PETxRacaID.SearchAction = XSearchAction.Default;
                PETxRacaID.TypeID = XInt16.CID;
                PETxRacaID.AdditionalFieldsID = new Guid[] {  };
                PETxRacaID.AdditionalDataFieldsID = new Guid[] {  };
                PETxRacaID.TargetFilterFieldID = new Guid[] {  };
                PETxRacaID.SourceFilterFieldID = new Guid[] {  };
                PETxRacaID.TargetDisplayFieldID = new Guid[] {  };
                PETxRacaID.SourceDisplayFieldID = new Guid[] { new Guid("DAEF8FD8-178B-4ABA-945A-87A90C701C8F") };
                PETxRacaID.DataSourceID = global::Projecao.Core.PET.ReadOnly.RacaSVC.gCID;
                PETxRacaID.AutoLoad = false;
                PETxRacaID.FilterInative = true;
                PETxRacaID.IsAnswer = false;
                PETxRacaID.AllowMultiSelect = false;
            }
            public XFRMField PETxFamiliaID = new XFRMField(new Guid("9B72B272-DAB7-4BAB-85AE-E99D33546A77"), "PETxFamiliaID", "Família", XInt16.CID, 2, 8, false, gCID, null, new Guid("06D86598-1497-4F24-B8DD-421418A03286")); // Int16;
            public XFRMField ERPxGeneroID = new XFRMField(new Guid("392DE06E-77B2-4752-B24B-565756AC4B95"), "ERPxGeneroID", "Sexo", XInt16.CID, 2, 7, false, gCID, null, new Guid("AABC188D-8364-4A4F-BB16-633FB8815A81")); // Int16;
            public XFRMField PETxRacaID = new XFRMField(new Guid("B583F3E5-1EA5-4CEF-9BC1-97DADB205667"), "PETxRacaID", "Raça", XInt16.CID, 2, 17, false, gCID, null, new Guid("EC83313E-17C0-4FD9-962C-564D81792821")); // Int16;
            public static class Fields
            {
                public static XFieldInfo PETxFamiliaID = new XFieldInfo(new Guid("9B72B272-DAB7-4BAB-85AE-E99D33546A77"), "PETxFamiliaID", "Família", typeof(Int16), false, "");
                public static XFieldInfo ERPxGeneroID = new XFieldInfo(new Guid("392DE06E-77B2-4752-B24B-565756AC4B95"), "ERPxGeneroID", "Sexo", typeof(Int16), false, "");
                public static XFieldInfo PETxRacaID = new XFieldInfo(new Guid("B583F3E5-1EA5-4CEF-9BC1-97DADB205667"), "PETxRacaID", "Raça", typeof(Int16), false, "");
            }
        }

        #endregion AgendaVacinaFilterFRM

        public const String sCID = "8B9A112E-6C71-4567-8AA3-1ED5D6C39CDC";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxGenero_ERPxGeneroID_PETxAgendaVacina_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> PETxAgendaVacina.ERPxGeneroID
        public static XSVCReference PETxRaca_PETxRacaID_PETxAgendaVacina_PETxRacaID; // PETxRaca.PETxRacaID --> PETxAgendaVacina.PETxRacaID
        public static XSVCReference PETxFamilia_PETxFamiliaID_PETxRaca_PETxFamiliaID; // PETxFamilia.PETxFamiliaID --> PETxRaca.PETxFamiliaID

        #region xPETxFamilia 
        public class xPETxFamilia : XSVCTable
        {

            public static Guid gCID => new Guid("1B6D69BD-5ADA-4A16-B6E1-D575D5B17BCD");

            public xPETxFamilia()
            {
                Name = "PETxFamilia";
                Alias = "PETxFamilia";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxFamilia.gCID;

                Items.Add(Familia, Familia.ID);
                Familia.Owner = this;
                Familia.OwnerID = ID;
                Familia.TableName = Name;
                Familia.Alias = "Familia";
                Items.Add(PETxFamiliaID, PETxFamiliaID.ID);
                PETxFamiliaID.Owner = this;
                PETxFamiliaID.OwnerID = ID;
                PETxFamiliaID.TableName = Name;
            }

            public static XORMFaceField Familia = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxFamilia.Familia, new Guid("44CB5E91-8138-41BF-AB70-6EFF1CD67287"), "Familia", "Família");
            public static XORMPKField PETxFamiliaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxFamilia.PETxFamiliaID, new Guid("A9F7C499-E33B-47C2-9272-A697364C457E"), "PETxFamiliaID", "Família");
        }
        #endregion xPETxFamilia 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("3FA6A195-7B10-4D93-B262-926C9CE7B8D1");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("8DD2B7D6-BC1F-4FF3-810E-965674A91F0E"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("D8FF92AA-2FB8-47D4-851D-A5AD08E0A264"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("A2BF1FA6-06E4-479F-9CC6-197D79A68250"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("4DF65BE6-66A4-44A0-A141-C972865B2579"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xPETxAgendaVacina 
        public class xPETxAgendaVacina : XSVCTable
        {

            public static Guid gCID => new Guid("A5E6B755-BE23-4EBD-9E7A-D1F997354B58");

            public xPETxAgendaVacina()
            {
                Name = "PETxAgendaVacina";
                Alias = "PETxAgendaVacina";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAgendaVacina.gCID;

                Items.Add(PETxAgendaVacinaID, PETxAgendaVacinaID.ID);
                PETxAgendaVacinaID.Owner = this;
                PETxAgendaVacinaID.OwnerID = ID;
                PETxAgendaVacinaID.TableName = Name;
                PETxAgendaVacinaID.Alias = "PETxAgendaVacinaID";
                Items.Add(PETxRacaID, PETxRacaID.ID);
                PETxRacaID.Owner = this;
                PETxRacaID.OwnerID = ID;
                PETxRacaID.TableName = Name;
                PETxRacaID.Alias = "PETxRacaID";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
            }

            public static XORMPKField PETxAgendaVacinaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAgendaVacina.PETxAgendaVacinaID, new Guid("82918CB1-CA9E-4017-A237-033FC0AD8D83"), "PETxAgendaVacinaID", "Agenda de Vacina");
            public static XORMFKField PETxRacaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAgendaVacina.PETxRacaID, new Guid("EC83313E-17C0-4FD9-962C-564D81792821"), "PETxRacaID", "Raça");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAgendaVacina.ERPxGeneroID, new Guid("AABC188D-8364-4A4F-BB16-633FB8815A81"), "ERPxGeneroID", "Sexo");
        }
        #endregion xPETxAgendaVacina 


        #region xPETxRaca 
        public class xPETxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("B6233924-5E47-4B1B-852B-B0341D05DECD");

            public xPETxRaca()
            {
                Name = "PETxRaca";
                Alias = "PETxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxRaca.gCID;

                Items.Add(PETxRacaID, PETxRacaID.ID);
                PETxRacaID.Owner = this;
                PETxRacaID.OwnerID = ID;
                PETxRacaID.TableName = Name;
                Items.Add(PETxFamiliaID, PETxFamiliaID.ID);
                PETxFamiliaID.Owner = this;
                PETxFamiliaID.OwnerID = ID;
                PETxFamiliaID.TableName = Name;
                PETxFamiliaID.Alias = "PETxFamiliaID";
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PETxRacaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxRaca.PETxRacaID, new Guid("C5E4D5DD-013E-409C-A8AD-8B4BA74CA1C9"), "PETxRacaID", "Raça");
            public static XORMFKField PETxFamiliaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxRaca.PETxFamiliaID, new Guid("06D86598-1497-4F24-B8DD-421418A03286"), "PETxFamiliaID", "Família");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxRaca.Raca, new Guid("3C3CB4A3-AE8F-4401-805A-11CFABE96B3D"), "Raca", "Raça");
        }
        #endregion xPETxRaca 


        public xERPxGenero ERPxGenero;
        public xPETxAgendaVacina PETxAgendaVacina;
        public xPETxFamilia PETxFamilia;
        public xPETxRaca PETxRaca;

        public AgendaVacinaSVC()
        {
            TupleType = typeof(AgendaVacinaSVC.XTuple);
            DataSetType = typeof(AgendaVacinaSVC.XDataSet);
            ServiceRuleCID = new Guid("C3431024-5446-4070-BDA2-12002FBC1058");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("8B9A112E-6C71-4567-8AA3-1ED5D6C39CDC");
            Name = "AgendaVacina";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("B4CF625C-7A03-417F-B0A6-81272FF1E748");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxFamilia.Familia.ID, xERPxGenero.Genero.ID, xPETxRaca.Raca.ID };
            OrderByFields = new Guid[] { xPETxFamilia.Familia.ID, xPETxRaca.Raca.ID };
            DataSetFields = new Guid[] { xERPxGenero.Genero.ID, xPETxRaca.Raca.ID, xPETxFamilia.Familia.ID, xPETxAgendaVacina.PETxAgendaVacinaID.ID, xPETxAgendaVacina.PETxRacaID.ID, xPETxAgendaVacina.ERPxGeneroID.ID, xPETxRaca.PETxFamiliaID.ID };
            PKField = xPETxAgendaVacina.PETxAgendaVacinaID.ID;
            ConfigTableID = new Guid("FFA7C616-BAD8-48E2-9ECB-8E2D8963601E");
            MasterRuleCID = new Guid("C3431024-5446-4070-BDA2-12002FBC1058");
            XSubServiceItem ss3664117DAE334ACABF5B859ED0897611 = new XSubServiceItem(AgendaVacinaItensSVC.gCID, AgendaVacinaItensSVC.xPETxAgendaVacinaItem.PETxAgendaVacinaID.ID, AgendaVacinaSVC.gCID, xPETxAgendaVacina.PETxAgendaVacinaID.ID, false, XSubSeviceType.Default);
            ss3664117DAE334ACABF5B859ED0897611.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ss3664117DAE334ACABF5B859ED0897611.LateLoad = false;
            SubServices.Add(ss3664117DAE334ACABF5B859ED0897611);
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            PETxAgendaVacina = new xPETxAgendaVacina();
            PETxAgendaVacina.IsReadOnly = false;
            AddTable(PETxAgendaVacina);
            PETxFamilia = new xPETxFamilia();
            PETxFamilia.IsReadOnly = true;
            AddTable(PETxFamilia);
            PETxRaca = new xPETxRaca();
            PETxRaca.IsReadOnly = true;
            AddTable(PETxRaca);
            MasterTableID = PETxAgendaVacina.ID;
            ERPxGenero_ERPxGeneroID_PETxAgendaVacina_ERPxGeneroID = AddReference(new XSVCReference(new Guid("6630ED1A-E9CD-4CA2-A45A-B0CE5A570119"), "FK_6630ED1AE9CD4CA2A45AB0CE5A570119", AgendaVacinaSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, AgendaVacinaSVC.xPETxAgendaVacina.gCID, xPETxAgendaVacina.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> PETxAgendaVacina.ERPxGeneroID
            PETxRaca_PETxRacaID_PETxAgendaVacina_PETxRacaID = AddReference(new XSVCReference(new Guid("BC116B4D-186D-48EA-9816-83A651AFA03A"), "FK_BC116B4D186D48EA981683A651AFA03A", AgendaVacinaSVC.xPETxRaca.gCID, xPETxRaca.PETxRacaID.ID, AgendaVacinaSVC.xPETxAgendaVacina.gCID, xPETxAgendaVacina.PETxRacaID.ID, XJoinType.Inner)); // PETxRaca.PETxRacaID --> PETxAgendaVacina.PETxRacaID
            PETxFamilia_PETxFamiliaID_PETxRaca_PETxFamiliaID = AddReference(new XSVCReference(new Guid("E9495910-ED05-4C95-93B0-C6C940A2A3D6"), "FK_E9495910ED054C9593B0C6C940A2A3D6", AgendaVacinaSVC.xPETxFamilia.gCID, xPETxFamilia.PETxFamiliaID.ID, AgendaVacinaSVC.xPETxRaca.gCID, xPETxRaca.PETxFamiliaID.ID, XJoinType.Inner)); // PETxFamilia.PETxFamiliaID --> PETxRaca.PETxFamiliaID
            XSVCReference FK_AABB980CECBD46C7B1DE9D3A78FCF69E = new XSVCReference(new Guid("AABB980C-ECBD-46C7-B1DE-9D3A78FCF69E"), "FK_AABB980CECBD46C7B1DE9D3A78FCF69E", AgendaVacinaItensSVC.gCID, AgendaVacinaItensSVC.xPETxAgendaVacinaItem.PETxAgendaVacinaID.ID, PETxAgendaVacina.ID, AgendaVacinaSVC.xPETxAgendaVacina.PETxAgendaVacinaID.ID, XJoinType.SubService); // AgendaVacinaItensSVC.PETxAgendaVacinaID --> AgendaVacina.PETxAgendaVacinaID
            FK_AABB980CECBD46C7B1DE9D3A78FCF69E.IsLowRelevance = false;
            AddReference(FK_AABB980CECBD46C7B1DE9D3A78FCF69E);
            xPETxAgendaVacina.ERPxGeneroID.IsDataField = true;
            xPETxAgendaVacina.ERPxGeneroID.AllowEmpty = true;
            xPETxFamilia.Familia.IsReadOnly = true;
            xPETxFamilia.Familia.OrderType = XOrderType.Asc;
            xPETxFamilia.Familia.Length = 25;
            xPETxFamilia.Familia.IsDataField = true;
            xPETxFamilia.Familia.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xPETxAgendaVacina.PETxAgendaVacinaID.GeneratePK = true;
            xPETxAgendaVacina.PETxAgendaVacinaID.IsDataField = true;
            xPETxAgendaVacina.PETxAgendaVacinaID.AllowEmpty = true;
            xPETxRaca.PETxFamiliaID.IsReadOnly = true;
            xPETxRaca.PETxFamiliaID.IsDataField = true;
            xPETxRaca.PETxFamiliaID.AllowEmpty = true;
            xPETxAgendaVacina.PETxRacaID.IsDataField = true;
            xPETxAgendaVacina.PETxRacaID.AllowEmpty = true;
            xPETxRaca.Raca.IsReadOnly = true;
            xPETxRaca.Raca.OrderType = XOrderType.Asc;
            xPETxRaca.Raca.Length = 48;
            xPETxRaca.Raca.IsDataField = true;
            xPETxRaca.Raca.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField ERPxGeneroID => xPETxAgendaVacina.ERPxGeneroID;
        public XORMField Familia => xPETxFamilia.Familia;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField PETxAgendaVacinaID => xPETxAgendaVacina.PETxAgendaVacinaID;
        public XORMField PETxFamiliaID => xPETxRaca.PETxFamiliaID;
        public XORMField PETxRacaID => xPETxAgendaVacina.PETxRacaID;
        public XORMField Raca => xPETxRaca.Raca;
        }
        #endregion XFields
        #region AgendaVacinaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[AgendaVacinaSVC.xPETxAgendaVacina.ERPxGeneroID.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xPETxAgendaVacina.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xPETxAgendaVacina.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Familia
        {
            get
            {
                return (String)Value[AgendaVacinaSVC.xPETxFamilia.Familia.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xPETxFamilia.Familia.ID] = value;
            }
        }
        public String? oFamilia
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xPETxFamilia.Familia, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[AgendaVacinaSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAgendaVacinaID
        {
            get
            {
                return (Guid)Value[AgendaVacinaSVC.xPETxAgendaVacina.PETxAgendaVacinaID.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xPETxAgendaVacina.PETxAgendaVacinaID.ID] = value;
            }
        }
        public Guid? oPETxAgendaVacinaID
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xPETxAgendaVacina.PETxAgendaVacinaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PETxFamiliaID
        {
            get
            {
                return (Int16)Value[AgendaVacinaSVC.xPETxRaca.PETxFamiliaID.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xPETxRaca.PETxFamiliaID.ID] = value;
            }
        }
        public Int16? oPETxFamiliaID
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xPETxRaca.PETxFamiliaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 PETxRacaID
        {
            get
            {
                return (Int16)Value[AgendaVacinaSVC.xPETxAgendaVacina.PETxRacaID.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xPETxAgendaVacina.PETxRacaID.ID] = value;
            }
        }
        public Int16? oPETxRacaID
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xPETxAgendaVacina.PETxRacaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[AgendaVacinaSVC.xPETxRaca.Raca.ID];
            }
            set
            {
                Value[AgendaVacinaSVC.xPETxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(AgendaVacinaSVC.xPETxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AgendaVacinaSVC.XTuple

        #region AgendaVacinaSVC.XDataSet

        public class XDataSet : XDataSet<AgendaVacinaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AgendaVacinaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AgendaVacinaSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid ERPxGeneroID => AgendaVacinaSVC.xPETxAgendaVacina.ERPxGeneroID.ID;
                public Guid Familia => AgendaVacinaSVC.xPETxFamilia.Familia.ID;
                public Guid Genero => AgendaVacinaSVC.xERPxGenero.Genero.ID;
                public Guid PETxAgendaVacinaID => AgendaVacinaSVC.xPETxAgendaVacina.PETxAgendaVacinaID.ID;
                public Guid PETxFamiliaID => AgendaVacinaSVC.xPETxRaca.PETxFamiliaID.ID;
                public Guid PETxRacaID => AgendaVacinaSVC.xPETxAgendaVacina.PETxRacaID.ID;
                public Guid Raca => AgendaVacinaSVC.xPETxRaca.Raca.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AgendaVacinaSVC.XDataSet);
            }

            private Projecao.Core.PET.AgendaVacina.AgendaVacinaItensSVC.XDataSet _AgendaVacinaItensDataSet;

            public Projecao.Core.PET.AgendaVacina.AgendaVacinaItensSVC.XDataSet AgendaVacinaItensDataSet
            {
                get
                {
                    if (_AgendaVacinaItensDataSet == null)
                    {
                        _AgendaVacinaItensDataSet = (Projecao.Core.PET.AgendaVacina.AgendaVacinaItensSVC.XDataSet)Children.Get(Projecao.Core.PET.AgendaVacina.AgendaVacinaItensSVC.gCID);
                    }
                    return  _AgendaVacinaItensDataSet;
                }
            }

        }
        #endregion AgendaVacinaSVC.XDataSet
        #if !OnlyDef
        #region AgendaVacinaSVC.XRule
        public abstract class XRule : XServiceRule<AgendaVacinaSVC.XDataSet, AgendaVacinaSVC, AgendaVacinaSVC.XTuple>
        {
        }
        #endregion AgendaVacinaSVC.XRule

        [Guid(AgendaVacinaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AgendaVacinaSVC))]
        protected class _Service : Service<AgendaVacinaSVC, XDataSet, XTuple>
        {
            public const String sCID = "EED20811-C6B1-40D1-ADED-FB294BC54C84";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AgendaVacinaSVC, XDataSet, XTuple>, XService
             where TModel : AgendaVacinaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}