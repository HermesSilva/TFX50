//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.Tutor;
using Projecao.Core.ERP.DB;
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;
using Projecao.Core.ERP.Pessoa;

namespace Projecao.Core.PET.Tutor
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Tutor\Tutor.dssvc")]
    [XRegister(typeof(TutorSVC), sCID)]
    public class TutorSVC : XSVCModel
    {
        #region TutorFilterFRM

        [XRegister(typeof(TutorFilterFRM), sCID)]
        public class TutorFilterFRM : XFRMModel
        {
            public const String sCID = "A5A82C52-0EE7-4740-A063-F19859CA067B";
            public static new readonly Guid gCID = new Guid(sCID);
            static TutorFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public TutorFilterFRM()
            {
                ID = gCID;
                Name = "TutorFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.Like;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] { new Guid("240B60D5-4109-4689-B527-2762818C4F9D") };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("AE3408BA-9AE3-49F3-A9B4-8B0C0A2AC728"), "Nome", "Nome", XString.CID, 2, 32, false, gCID, null, new Guid("C6CAFF78-D747-4805-A654-A05461EC1592")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("AE3408BA-9AE3-49F3-A9B4-8B0C0A2AC728"), "Nome", "Nome", typeof(String), false, "");
            }
        }

        #endregion TutorFilterFRM

        public const String sCID = "937CDD48-E146-4022-9188-F7103BEB0D0D";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference SYSxPessoaEmpresaGrupo_SYSxPessoaID_SYSxPessoa_SYSxPessoaID; // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference PETxTutor_PETxTutorID_SYSxPessoa_SYSxPessoaID; // PETxTutor.PETxTutorID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID

        #region xERPxPessoaFisica 
        public class xERPxPessoaFisica : XSVCTable
        {

            public static Guid gCID => new Guid("24682D46-9E85-4B84-A1E1-23E198600415");

            public xERPxPessoaFisica()
            {
                Name = "ERPxPessoaFisica";
                Alias = "ERPxPessoaFisica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.gCID;

                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
            }

            public static XORMFaceField ERPxPessoaFisicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxPessoaFisicaID, new Guid("294B15CC-BF98-4CCE-A3B6-4C13562DF2B4"), "ERPxPessoaFisicaID", "Pessoa Física");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.SYSxEstadoID, new Guid("20AC54EA-413C-4EE0-9411-62AED52A9662"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxGeneroID, new Guid("3C599889-53B6-48BD-8207-111B4714EABA"), "ERPxGeneroID", "Gênero");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.Nascimento, new Guid("09F8EEAE-24C4-46AE-B562-4CF58F18CA8B"), "Nascimento", "Data de Nascimento");
        }
        #endregion xERPxPessoaFisica 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("A84AAA77-000B-4D33-ABAC-3D05325A4B64");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("C6CAFF78-D747-4805-A654-A05461EC1592"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("03EEE93E-8DB4-417A-BC7B-17A95E8FED68"), "SYSxPessoaID", "Código");
        }
        #endregion xSYSxPessoa 


        #region xPETxTutor 
        public class xPETxTutor : XSVCTable
        {

            public static Guid gCID => new Guid("AA25A353-0321-491F-8CB9-50F672E2C035");

            public xPETxTutor()
            {
                Name = "PETxTutor";
                Alias = "PETxTutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxTutor.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Observacao.Alias = "Observacao";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFaceField PETxTutorID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxTutor.PETxTutorID, new Guid("78FAE6AD-AC36-4BBE-B55E-5D84DA664142"), "PETxTutorID", "Tutor");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxTutor.Observacao, new Guid("2D968B0E-5EE2-4EC1-A2D2-AAED4D2BEA69"), "Observacao", "Observação");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxTutor.SYSxEstadoID, new Guid("D232CF73-9647-4B40-A842-96B1CD564209"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxTutor 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("BBF834CE-C5A7-4A47-907D-F61E518FF83B");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("5C2903D9-83AF-4115-84DE-42BB623C2BCB"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("F0EDA18B-BE36-40C7-917B-CE280CA0079B"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("A08B7091-7D49-4111-968B-DBE26488AD87"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("C61909B5-F47C-4AD8-A566-24FC4CA44E17"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xSYSxPessoaEmpresaGrupo 
        public class xSYSxPessoaEmpresaGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("DEFC1F8B-8F9C-4358-A043-F7CAC200BB23");

            public xSYSxPessoaEmpresaGrupo()
            {
                Name = "SYSxPessoaEmpresaGrupo";
                Alias = "SYSxPessoaEmpresaGrupo";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.gCID;

                Items.Add(SYSxEmpresaGrupoID, SYSxEmpresaGrupoID.ID);
                SYSxEmpresaGrupoID.Owner = this;
                SYSxEmpresaGrupoID.OwnerID = ID;
                SYSxEmpresaGrupoID.TableName = Name;
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(SYSxPessoaEmpresaGrupoID, SYSxPessoaEmpresaGrupoID.ID);
                SYSxPessoaEmpresaGrupoID.Owner = this;
                SYSxPessoaEmpresaGrupoID.OwnerID = ID;
                SYSxPessoaEmpresaGrupoID.TableName = Name;
            }

            public static XORMFKField SYSxEmpresaGrupoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxEmpresaGrupoID, new Guid("BA9BC0A6-B80A-4DD1-BBB2-7F8CDE31443E"), "SYSxEmpresaGrupoID", "Grupo de Empresas");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaID, new Guid("3DCA5398-FA13-4262-9623-C786D6652DAD"), "SYSxPessoaID", "Pessoas");
            public static XORMPKField SYSxPessoaEmpresaGrupoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaEmpresaGrupoID, new Guid("7D2ADF33-313D-4B87-BA82-04E74163DD1E"), "SYSxPessoaEmpresaGrupoID", "Pessoa por Grupo de Empresa");
        }
        #endregion xSYSxPessoaEmpresaGrupo 


        public xERPxGenero ERPxGenero;
        public xERPxPessoaFisica ERPxPessoaFisica;
        public xPETxTutor PETxTutor;
        public xSYSxPessoa SYSxPessoa;
        public xSYSxPessoaEmpresaGrupo SYSxPessoaEmpresaGrupo;
        public static readonly XORMParameterField Animais = new XORMParameterField(new Guid("79D8E6FA-D568-4A65-9369-8A15B962F08C"), "Animais", "PETs", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField CPF = new XORMParameterField(new Guid("B5FB98DA-7886-4B1A-8A37-B2C6E0B0E777"), "CPF", "CPF", XString.CID, 0, 0, false, gCID, null);

        public TutorSVC()
        {
            TupleType = typeof(TutorSVC.XTuple);
            DataSetType = typeof(TutorSVC.XDataSet);
            ServiceRuleCID = new Guid("ACB4D559-50A6-4925-9AD0-F62FD666F107");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("937CDD48-E146-4022-9188-F7103BEB0D0D");
            Name = "Tutor";
            Title = "Tutor";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("A5A82C52-0EE7-4740-A063-F19859CA067B");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxTutor.SYSxEstadoID.ID, xSYSxPessoa.Nome.ID, Animais.ID, xERPxGenero.Genero.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID, xERPxGenero.Genero.ID };
            DataSetFields = new Guid[] { CPF.ID, Animais.ID, xPETxTutor.SYSxEstadoID.ID, xERPxPessoaFisica.ERPxGeneroID.ID, xERPxPessoaFisica.Nascimento.ID, xERPxGenero.Genero.ID, xPETxTutor.Observacao.ID, xSYSxPessoa.Nome.ID, xSYSxPessoa.SYSxPessoaID.ID };
            StateField = xPETxTutor.SYSxEstadoID.ID;
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("ACB4D559-50A6-4925-9AD0-F62FD666F107");
            XSubServiceItem ss1BFE91BA634F4E0EA346DA4F35468ACA = new XSubServiceItem(DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, TutorSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ss1BFE91BA634F4E0EA346DA4F35468ACA.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ss1BFE91BA634F4E0EA346DA4F35468ACA.LateLoad = false;
            SubServices.Add(ss1BFE91BA634F4E0EA346DA4F35468ACA);
            XSubServiceItem ss587C0335B4FB460088EE5D988C23E2CE = new XSubServiceItem(AnimalSVC.gCID, AnimalSVC.xPETxAnimalTutor.PETxTutorID.ID, TutorSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ss587C0335B4FB460088EE5D988C23E2CE.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ss587C0335B4FB460088EE5D988C23E2CE.LateLoad = false;
            SubServices.Add(ss587C0335B4FB460088EE5D988C23E2CE);
            XSubServiceItem ss0BD148F9D0BC40FBAF88D6CEE71EE2F9 = new XSubServiceItem(EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, TutorSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ss0BD148F9D0BC40FBAF88D6CEE71EE2F9.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ss0BD148F9D0BC40FBAF88D6CEE71EE2F9.LateLoad = false;
            SubServices.Add(ss0BD148F9D0BC40FBAF88D6CEE71EE2F9);
            XSubServiceItem ssCB16A04E439C4DB9B08F320485637D48 = new XSubServiceItem(ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, TutorSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ssCB16A04E439C4DB9B08F320485637D48.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ssCB16A04E439C4DB9B08F320485637D48.LateLoad = false;
            SubServices.Add(ssCB16A04E439C4DB9B08F320485637D48);
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            ERPxPessoaFisica = new xERPxPessoaFisica();
            ERPxPessoaFisica.IsReadOnly = false;
            AddTable(ERPxPessoaFisica);
            PETxTutor = new xPETxTutor();
            PETxTutor.IsReadOnly = false;
            AddTable(PETxTutor);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = false;
            AddTable(SYSxPessoa);
            SYSxPessoaEmpresaGrupo = new xSYSxPessoaEmpresaGrupo();
            SYSxPessoaEmpresaGrupo.IsReadOnly = true;
            AddTable(SYSxPessoaEmpresaGrupo);
            MasterTableID = SYSxPessoa.ID;
            ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("187F9251-B51F-43B8-A770-38E2DFC6507D"), "FK_187F9251B51F43B8A77038E2DFC6507D", TutorSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxPessoaFisicaID.ID, TutorSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
            SYSxPessoaEmpresaGrupo_SYSxPessoaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("22221780-E654-47CD-B560-2720A7F1ED44"), "FK_22221780E65447CDB5602720A7F1ED44", TutorSVC.xSYSxPessoaEmpresaGrupo.gCID, xSYSxPessoaEmpresaGrupo.SYSxPessoaID.ID, TutorSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
            PETxTutor_PETxTutorID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("904E9065-D427-4710-B904-2A82582EA60E"), "FK_904E9065D4274710B9042A82582EA60E", TutorSVC.xPETxTutor.gCID, xPETxTutor.PETxTutorID.ID, TutorSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // PETxTutor.PETxTutorID --> SYSxPessoa.SYSxPessoaID
            ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID = AddReference(new XSVCReference(new Guid("EB150578-BAD4-4952-8AC6-54F3D544F30F"), "FK_EB150578BAD449528AC654F3D544F30F", TutorSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, TutorSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID
            XSVCReference FK_15E65960E7414D76B1B870D24D5A247A = new XSVCReference(new Guid("15E65960-E741-4D76-B1B8-70D24D5A247A"), "FK_15E65960E7414D76B1B870D24D5A247A", DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, SYSxPessoa.ID, TutorSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // DocumentoSVC.SYSxPessoaID --> Tutor.SYSxPessoaID
            FK_15E65960E7414D76B1B870D24D5A247A.IsLowRelevance = false;
            AddReference(FK_15E65960E7414D76B1B870D24D5A247A);
            XSVCReference FK_38FAE51AB03141549EB1715B10F29CDE = new XSVCReference(new Guid("38FAE51A-B031-4154-9EB1-715B10F29CDE"), "FK_38FAE51AB03141549EB1715B10F29CDE", AnimalSVC.gCID, AnimalSVC.xPETxAnimalTutor.PETxTutorID.ID, SYSxPessoa.ID, TutorSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // AnimalSVC.PETxTutorID --> Tutor.SYSxPessoaID
            FK_38FAE51AB03141549EB1715B10F29CDE.IsLowRelevance = false;
            AddReference(FK_38FAE51AB03141549EB1715B10F29CDE);
            XSVCReference FK_987BA7ABC8804EC2ADA13E273729B9F2 = new XSVCReference(new Guid("987BA7AB-C880-4EC2-ADA1-3E273729B9F2"), "FK_987BA7ABC8804EC2ADA13E273729B9F2", EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, SYSxPessoa.ID, TutorSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // EnderecoSVC.SYSxPessoaID --> Tutor.SYSxPessoaID
            FK_987BA7ABC8804EC2ADA13E273729B9F2.IsLowRelevance = false;
            AddReference(FK_987BA7ABC8804EC2ADA13E273729B9F2);
            XSVCReference FK_FC9D2FE894C74B35A68081E290D3960B = new XSVCReference(new Guid("FC9D2FE8-94C7-4B35-A680-81E290D3960B"), "FK_FC9D2FE894C74B35A68081E290D3960B", ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, SYSxPessoa.ID, TutorSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // ContatoSVC.SYSxPessoaID --> Tutor.SYSxPessoaID
            FK_FC9D2FE894C74B35A68081E290D3960B.IsLowRelevance = false;
            AddReference(FK_FC9D2FE894C74B35A68081E290D3960B);
            AddField(CPF);
            CPF.IsParam = true;
            AddField(Animais);
            Animais.IsParam = true;
            Animais.IsReadOnly = false;
            Animais.Length = 0;
            Animais.Scale = 0;
            Animais.IsDataField = true;
            Animais.AllowEmpty = true;
            CPF.Mask = "000.000.000-00";
            CPF.IsReadOnly = false;
            CPF.Length = 0;
            CPF.Scale = 0;
            CPF.IsDataField = true;
            CPF.AllowEmpty = true;
            xERPxPessoaFisica.ERPxGeneroID.IsDataField = true;
            xERPxPessoaFisica.ERPxGeneroID.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.OrderType = XOrderType.Asc;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xERPxPessoaFisica.Nascimento.IsDataField = true;
            xERPxPessoaFisica.Nascimento.AllowEmpty = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.IsVariable = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xPETxTutor.Observacao.IsDataField = true;
            xPETxTutor.Observacao.AllowEmpty = true;
            xPETxTutor.SYSxEstadoID.IsDataField = true;
            xPETxTutor.SYSxEstadoID.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.GeneratePK = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Animais => TutorSVC.Animais;
        public XORMField CPF => TutorSVC.CPF;
        public XORMField ERPxGeneroID => xERPxPessoaFisica.ERPxGeneroID;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField Nascimento => xERPxPessoaFisica.Nascimento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Observacao => xPETxTutor.Observacao;
        public XORMField SYSxEstadoID => xPETxTutor.SYSxEstadoID;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        }
        #endregion XFields
        #region TutorSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Animais
        {
            get
            {
                return (String)Value[TutorSVC.Animais.ID];
            }
            set
            {
                Value[TutorSVC.Animais.ID] = value;
            }
        }
        public String? oAnimais
        {
            get
            {
                GetOldValue(TutorSVC.Animais, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String CPF
        {
            get
            {
                return (String)Value[TutorSVC.CPF.ID];
            }
            set
            {
                Value[TutorSVC.CPF.ID] = value;
            }
        }
        public String? oCPF
        {
            get
            {
                GetOldValue(TutorSVC.CPF, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[TutorSVC.xERPxPessoaFisica.ERPxGeneroID.ID];
            }
            set
            {
                Value[TutorSVC.xERPxPessoaFisica.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(TutorSVC.xERPxPessoaFisica.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[TutorSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[TutorSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(TutorSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[TutorSVC.xERPxPessoaFisica.Nascimento.ID];
            }
            set
            {
                Value[TutorSVC.xERPxPessoaFisica.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(TutorSVC.xERPxPessoaFisica.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[TutorSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[TutorSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(TutorSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Observacao
        {
            get
            {
                return (String)Value[TutorSVC.xPETxTutor.Observacao.ID];
            }
            set
            {
                Value[TutorSVC.xPETxTutor.Observacao.ID] = value;
            }
        }
        public String? oObservacao
        {
            get
            {
                GetOldValue(TutorSVC.xPETxTutor.Observacao, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[TutorSVC.xPETxTutor.SYSxEstadoID.ID];
            }
            set
            {
                Value[TutorSVC.xPETxTutor.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(TutorSVC.xPETxTutor.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[TutorSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[TutorSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(TutorSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion TutorSVC.XTuple

        #region TutorSVC.XDataSet

        public class XDataSet : XDataSet<TutorSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(TutorSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<TutorSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Animais => TutorSVC.Animais.ID;
                public Guid CPF => TutorSVC.CPF.ID;
                public Guid ERPxGeneroID => TutorSVC.xERPxPessoaFisica.ERPxGeneroID.ID;
                public Guid Genero => TutorSVC.xERPxGenero.Genero.ID;
                public Guid Nascimento => TutorSVC.xERPxPessoaFisica.Nascimento.ID;
                public Guid Nome => TutorSVC.xSYSxPessoa.Nome.ID;
                public Guid Observacao => TutorSVC.xPETxTutor.Observacao.ID;
                public Guid SYSxEstadoID => TutorSVC.xPETxTutor.SYSxEstadoID.ID;
                public Guid SYSxPessoaID => TutorSVC.xSYSxPessoa.SYSxPessoaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(TutorSVC.XDataSet);
            }

            private Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet _EnderecoDataSet;

            public Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet EnderecoDataSet
            {
                get
                {
                    if (_EnderecoDataSet == null)
                    {
                        _EnderecoDataSet = (Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.EnderecoSVC.gCID);
                    }
                    return  _EnderecoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet _DocumentoDataSet;

            public Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet DocumentoDataSet
            {
                get
                {
                    if (_DocumentoDataSet == null)
                    {
                        _DocumentoDataSet = (Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.DocumentoSVC.gCID);
                    }
                    return  _DocumentoDataSet;
                }
            }

            private Projecao.Core.PET.Tutor.AnimalSVC.XDataSet _AnimalDataSet;

            public Projecao.Core.PET.Tutor.AnimalSVC.XDataSet AnimalDataSet
            {
                get
                {
                    if (_AnimalDataSet == null)
                    {
                        _AnimalDataSet = (Projecao.Core.PET.Tutor.AnimalSVC.XDataSet)Children.Get(Projecao.Core.PET.Tutor.AnimalSVC.gCID);
                    }
                    return  _AnimalDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet _ContatoDataSet;

            public Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet ContatoDataSet
            {
                get
                {
                    if (_ContatoDataSet == null)
                    {
                        _ContatoDataSet = (Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.ContatoSVC.gCID);
                    }
                    return  _ContatoDataSet;
                }
            }

        }
        #endregion TutorSVC.XDataSet
        #if !OnlyDef
        #region TutorSVC.XRule
        public abstract class XRule : XServiceRule<TutorSVC.XDataSet, TutorSVC, TutorSVC.XTuple>
        {
        }
        #endregion TutorSVC.XRule

        [Guid(TutorSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(TutorSVC))]
        protected class _Service : Service<TutorSVC, XDataSet, XTuple>
        {
            public const String sCID = "1A13D38F-9832-4876-AEDF-6B343CE0075E";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<TutorSVC, XDataSet, XTuple>, XService
             where TModel : TutorSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}