//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Agendamento
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Agendamento\AgendamentoServico.dssvc")]
    [XRegister(typeof(AgendamentoServicoSVC), sCID)]
    public class AgendamentoServicoSVC : XSVCModel
    {
        #region AgendamentoServicoFilterFRM

        [XRegister(typeof(AgendamentoServicoFilterFRM), sCID)]
        public class AgendamentoServicoFilterFRM : XFRMModel
        {
            public const String sCID = "135673F1-2B52-489B-BCA9-818591B04FA0";
            public static new readonly Guid gCID = new Guid(sCID);
            static AgendamentoServicoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AgendamentoServicoFilterFRM()
            {
                ID = gCID;
                Name = "AgendamentoServicoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion AgendamentoServicoFilterFRM

        public const String sCID = "6F348C0E-4B83-45D2-9CA1-169A639DB5EA";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_PETxAtendimentoServicos_ISExServicoID; // ISExItem.ISExItemID --> PETxAtendimentoServicos.ISExServicoID

        #region xPETxAtendimentoServicos 
        public class xPETxAtendimentoServicos : XSVCTable
        {

            public static Guid gCID => new Guid("1528C1BC-53C1-4E9B-8D24-4BF5E8FDE48A");

            public xPETxAtendimentoServicos()
            {
                Name = "PETxAtendimentoServicos";
                Alias = "PETxAtendimentoServicos";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.gCID;

                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(PETxAtendimentoServicosID, PETxAtendimentoServicosID.ID);
                PETxAtendimentoServicosID.Owner = this;
                PETxAtendimentoServicosID.OwnerID = ID;
                PETxAtendimentoServicosID.TableName = Name;
                PETxAtendimentoServicosID.Alias = "PETxAtendimentoServicosID";
                Items.Add(ISExServicoID, ISExServicoID.ID);
                ISExServicoID.Owner = this;
                ISExServicoID.OwnerID = ID;
                ISExServicoID.TableName = Name;
                ISExServicoID.Alias = "ISExServicoID";
                Items.Add(Quantidade, Quantidade.ID);
                Quantidade.Owner = this;
                Quantidade.OwnerID = ID;
                Quantidade.TableName = Name;
                Quantidade.Alias = "Quantidade";
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                PETxAtendimentoEstadoID.Alias = "PETxAtendimentoEstadoID";
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                ValorCobrado.Alias = "ValorCobrado";
                Items.Add(ValorTabela, ValorTabela.ID);
                ValorTabela.Owner = this;
                ValorTabela.OwnerID = ID;
                ValorTabela.TableName = Name;
                ValorTabela.Alias = "ValorTabela";
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                ValorTotal.Alias = "ValorTotal";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(DescontoProporcional, DescontoProporcional.ID);
                DescontoProporcional.Owner = this;
                DescontoProporcional.OwnerID = ID;
                DescontoProporcional.TableName = Name;
                DescontoProporcional.Alias = "DescontoProporcional";
                Items.Add(DescontoPacote, DescontoPacote.ID);
                DescontoPacote.Owner = this;
                DescontoPacote.OwnerID = ID;
                DescontoPacote.TableName = Name;
                DescontoPacote.Alias = "DescontoPacote";
                Items.Add(ItemPacote, ItemPacote.ID);
                ItemPacote.Owner = this;
                ItemPacote.OwnerID = ID;
                ItemPacote.TableName = Name;
                ItemPacote.Alias = "ItemPacote";
                Items.Add(QuantidadePacote, QuantidadePacote.ID);
                QuantidadePacote.Owner = this;
                QuantidadePacote.OwnerID = ID;
                QuantidadePacote.TableName = Name;
                QuantidadePacote.Alias = "QuantidadePacote";
            }

            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.PETxAtendimentoID, new Guid("3C04ACAD-31B3-47ED-8C21-8510441D066F"), "PETxAtendimentoID", "Atendimento");
            public static XORMPKField PETxAtendimentoServicosID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.PETxAtendimentoServicosID, new Guid("5F703478-A0CB-44F7-9652-49FB1FE4EF26"), "PETxAtendimentoServicosID", "Serviços por Atendimento");
            public static XORMFKField ISExServicoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.ISExServicoID, new Guid("1766D2EE-613E-4D51-B198-56ECF4990615"), "ISExServicoID", "Serviço");
            public static XORMField Quantidade = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.Quantidade, new Guid("BFC2BAF7-A763-4D54-8723-113F3DB64EF8"), "Quantidade", "Quantidade");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.PETxAtendimentoEstadoID, new Guid("4CB579B6-6380-4E4B-89E0-080DAF968AB5"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.ValorCobrado, new Guid("861F2509-CE40-4C3B-B974-A33625737427"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField ValorTabela = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.ValorTabela, new Guid("7B3F1AA0-95AC-4260-8DA0-47DB3DD0E561"), "ValorTabela", "Valor de Tabela");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.ValorTotal, new Guid("230090B2-3637-44CD-BD13-21DF82728D50"), "ValorTotal", "Valor Total");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.SYSxEstadoID, new Guid("F6AFA306-120B-4565-9345-87A6803EF4A2"), "SYSxEstadoID", "Estado");
            public static XORMDecimalField DescontoProporcional = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.DescontoProporcional, new Guid("6C7FA03F-5236-4336-80CA-B2686421EDDD"), "DescontoProporcional", "Desconto Proporcional");
            public static XORMDecimalField DescontoPacote = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.DescontoPacote, new Guid("0E6E5D7B-D217-4E28-9565-C6D2936B5F1B"), "DescontoPacote", "Desconto por Pacote");
            public static XORMField ItemPacote = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.ItemPacote, new Guid("97D0298D-C261-4167-939B-CFC5F1DBADF6"), "ItemPacote", "Item do Pacote");
            public static XORMField QuantidadePacote = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoServicos.QuantidadePacote, new Guid("64EFF824-D662-439E-B333-C019FC896794"), "QuantidadePacote", "Qtde. Pacote");
        }
        #endregion xPETxAtendimentoServicos 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("E8076AA6-6A4D-4AF9-A517-5D612E3623DF");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("4E351EF8-0216-49FE-8FA6-C1C1EFFF0CD6"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("AA0CE8A7-6C6C-43AF-9C81-C0317069ABC0"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("730046A6-9A93-4B02-8C2B-827DF249A52B"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("4CC79860-C00D-4B97-82B4-D927F8B49E81"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("7999BAA0-5781-44A9-BDB4-B96FBEEB58F5"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("804C46CB-6AF5-45AC-954D-0892E4257C60"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("BFEB5CE9-1A8F-448B-BA50-ACA6D4FABF74"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("E1C421D3-3157-4F66-A818-77E333C0CB09"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("41BA6BEB-FD69-4C02-B5FC-303EF9724529"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        public xISExItem ISExItem;
        public xPETxAtendimentoServicos PETxAtendimentoServicos;

        public AgendamentoServicoSVC()
        {
            TupleType = typeof(AgendamentoServicoSVC.XTuple);
            DataSetType = typeof(AgendamentoServicoSVC.XDataSet);
            ServiceRuleCID = new Guid("E2A2DB91-A99F-47B7-A307-32A5C5ADCFF8");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("6F348C0E-4B83-45D2-9CA1-169A639DB5EA");
            Name = "AgendamentoServico";
            Title = "Serviços do Atendimento";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, xPETxAtendimentoServicos.SYSxEstadoID.ID, xPETxAtendimentoServicos.Quantidade.ID, xPETxAtendimentoServicos.QuantidadePacote.ID, xPETxAtendimentoServicos.ValorTabela.ID, xPETxAtendimentoServicos.ValorCobrado.ID, xPETxAtendimentoServicos.ValorTotal.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xPETxAtendimentoServicos.DescontoPacote.ID, xPETxAtendimentoServicos.QuantidadePacote.ID, xPETxAtendimentoServicos.ItemPacote.ID, xPETxAtendimentoServicos.DescontoProporcional.ID, xPETxAtendimentoServicos.ISExServicoID.ID, xPETxAtendimentoServicos.PETxAtendimentoEstadoID.ID, xPETxAtendimentoServicos.PETxAtendimentoID.ID, xPETxAtendimentoServicos.PETxAtendimentoServicosID.ID, xPETxAtendimentoServicos.Quantidade.ID, xISExItem.Nome.ID, xISExItem.ProdutoID.ID, xPETxAtendimentoServicos.SYSxEstadoID.ID, xPETxAtendimentoServicos.ValorCobrado.ID, xPETxAtendimentoServicos.ValorTabela.ID, xPETxAtendimentoServicos.ValorTotal.ID };
            PKField = xPETxAtendimentoServicos.PETxAtendimentoServicosID.ID;
            ConfigTableID = new Guid("F33EE0A6-6EBD-4570-911C-1EEF1ACE6919");
            StateField = xPETxAtendimentoServicos.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("E2A2DB91-A99F-47B7-A307-32A5C5ADCFF8");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PETxAtendimentoServicos = new xPETxAtendimentoServicos();
            PETxAtendimentoServicos.IsReadOnly = false;
            AddTable(PETxAtendimentoServicos);
            MasterTableID = PETxAtendimentoServicos.ID;
            ISExItem_ISExItemID_PETxAtendimentoServicos_ISExServicoID = AddReference(new XSVCReference(new Guid("A3DD481A-DA6B-4100-8036-1157A64015C5"), "FK_A3DD481ADA6B410080361157A64015C5", AgendamentoServicoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, AgendamentoServicoSVC.xPETxAtendimentoServicos.gCID, xPETxAtendimentoServicos.ISExServicoID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PETxAtendimentoServicos.ISExServicoID
            xPETxAtendimentoServicos.DescontoPacote.Length = 25;
            xPETxAtendimentoServicos.DescontoPacote.Scale = 2;
            xPETxAtendimentoServicos.DescontoPacote.IsDataField = true;
            xPETxAtendimentoServicos.DescontoPacote.AllowEmpty = true;
            xPETxAtendimentoServicos.DescontoProporcional.Length = 25;
            xPETxAtendimentoServicos.DescontoProporcional.Scale = 2;
            xPETxAtendimentoServicos.DescontoProporcional.IsDataField = true;
            xPETxAtendimentoServicos.DescontoProporcional.AllowEmpty = true;
            xPETxAtendimentoServicos.ISExServicoID.IsDataField = true;
            xPETxAtendimentoServicos.ISExServicoID.AllowEmpty = true;
            xPETxAtendimentoServicos.ItemPacote.IsDataField = true;
            xPETxAtendimentoServicos.ItemPacote.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.IsVariable = true;
            xISExItem.Nome.AllowEmpty = true;
            xPETxAtendimentoServicos.PETxAtendimentoEstadoID.IsDataField = true;
            xPETxAtendimentoServicos.PETxAtendimentoEstadoID.AllowEmpty = true;
            xPETxAtendimentoServicos.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimentoServicos.PETxAtendimentoID.AllowEmpty = true;
            xPETxAtendimentoServicos.PETxAtendimentoServicosID.GeneratePK = true;
            xPETxAtendimentoServicos.PETxAtendimentoServicosID.IsDataField = true;
            xPETxAtendimentoServicos.PETxAtendimentoServicosID.AllowEmpty = true;
            xISExItem.ProdutoID.IsReadOnly = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xPETxAtendimentoServicos.Quantidade.IsDataField = true;
            xPETxAtendimentoServicos.Quantidade.IsVariable = true;
            xPETxAtendimentoServicos.Quantidade.AllowEmpty = false;
            xPETxAtendimentoServicos.QuantidadePacote.IsDataField = true;
            xPETxAtendimentoServicos.QuantidadePacote.AllowEmpty = true;
            xPETxAtendimentoServicos.SYSxEstadoID.IsDataField = true;
            xPETxAtendimentoServicos.SYSxEstadoID.AllowEmpty = true;
            xPETxAtendimentoServicos.ValorCobrado.Length = 25;
            xPETxAtendimentoServicos.ValorCobrado.Scale = 2;
            xPETxAtendimentoServicos.ValorCobrado.IsDataField = true;
            xPETxAtendimentoServicos.ValorCobrado.AllowEmpty = true;
            xPETxAtendimentoServicos.ValorTabela.Length = 25;
            xPETxAtendimentoServicos.ValorTabela.Scale = 2;
            xPETxAtendimentoServicos.ValorTabela.IsDataField = true;
            xPETxAtendimentoServicos.ValorTabela.AllowEmpty = true;
            xPETxAtendimentoServicos.ValorTotal.Length = 25;
            xPETxAtendimentoServicos.ValorTotal.Scale = 2;
            xPETxAtendimentoServicos.ValorTotal.IsDataField = true;
            xPETxAtendimentoServicos.ValorTotal.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xPETxAtendimentoServicos.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField DescontoPacote => xPETxAtendimentoServicos.DescontoPacote;
        public XORMField DescontoProporcional => xPETxAtendimentoServicos.DescontoProporcional;
        public XORMField ISExServicoID => xPETxAtendimentoServicos.ISExServicoID;
        public XORMField ItemPacote => xPETxAtendimentoServicos.ItemPacote;
        public XORMField Nome => xISExItem.Nome;
        public XORMField PETxAtendimentoEstadoID => xPETxAtendimentoServicos.PETxAtendimentoEstadoID;
        public XORMField PETxAtendimentoID => xPETxAtendimentoServicos.PETxAtendimentoID;
        public XORMField PETxAtendimentoServicosID => xPETxAtendimentoServicos.PETxAtendimentoServicosID;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Quantidade => xPETxAtendimentoServicos.Quantidade;
        public XORMField QuantidadePacote => xPETxAtendimentoServicos.QuantidadePacote;
        public XORMField SYSxEstadoID => xPETxAtendimentoServicos.SYSxEstadoID;
        public XORMField ValorCobrado => xPETxAtendimentoServicos.ValorCobrado;
        public XORMField ValorTabela => xPETxAtendimentoServicos.ValorTabela;
        public XORMField ValorTotal => xPETxAtendimentoServicos.ValorTotal;
        }
        #endregion XFields
        #region AgendamentoServicoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Decimal DescontoPacote
        {
            get
            {
                return (Decimal)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoPacote.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoPacote.ID] = value;
            }
        }
        public Decimal? oDescontoPacote
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoPacote, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal DescontoProporcional
        {
            get
            {
                return (Decimal)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoProporcional.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoProporcional.ID] = value;
            }
        }
        public Decimal? oDescontoProporcional
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoProporcional, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Guid ISExServicoID
        {
            get
            {
                return (Guid)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ISExServicoID.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ISExServicoID.ID] = value;
            }
        }
        public Guid? oISExServicoID
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.ISExServicoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid ItemPacote
        {
            get
            {
                return (Guid)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ItemPacote.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ItemPacote.ID] = value;
            }
        }
        public Guid? oItemPacote
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.ItemPacote, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AgendamentoServicoSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 PETxAtendimentoEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoEstadoID.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoEstadoID.ID] = value;
            }
        }
        public Int16? oPETxAtendimentoEstadoID
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoID.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAtendimentoServicosID
        {
            get
            {
                return (Guid)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoServicosID.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoServicosID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoServicosID
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoServicosID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[AgendamentoServicoSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 Quantidade
        {
            get
            {
                return (Int32)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.Quantidade.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.Quantidade.ID] = value;
            }
        }
        public Int32? oQuantidade
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.Quantidade, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 QuantidadePacote
        {
            get
            {
                return (Int32)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.QuantidadePacote.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.QuantidadePacote.ID] = value;
            }
        }
        public Int32? oQuantidadePacote
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.QuantidadePacote, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.SYSxEstadoID.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal ValorCobrado
        {
            get
            {
                return (Decimal)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorCobrado.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorCobrado.ID] = value;
            }
        }
        public Decimal? oValorCobrado
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorCobrado, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTabela
        {
            get
            {
                return (Decimal)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTabela.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTabela.ID] = value;
            }
        }
        public Decimal? oValorTabela
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTabela, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTotal
        {
            get
            {
                return (Decimal)Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTotal.ID];
            }
            set
            {
                Value[AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTotal.ID] = value;
            }
        }
        public Decimal? oValorTotal
        {
            get
            {
                GetOldValue(AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTotal, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AgendamentoServicoSVC.XTuple

        #region AgendamentoServicoSVC.XDataSet

        public class XDataSet : XDataSet<AgendamentoServicoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AgendamentoServicoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AgendamentoServicoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid DescontoPacote => AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoPacote.ID;
                public Guid DescontoProporcional => AgendamentoServicoSVC.xPETxAtendimentoServicos.DescontoProporcional.ID;
                public Guid ISExServicoID => AgendamentoServicoSVC.xPETxAtendimentoServicos.ISExServicoID.ID;
                public Guid ItemPacote => AgendamentoServicoSVC.xPETxAtendimentoServicos.ItemPacote.ID;
                public Guid Nome => AgendamentoServicoSVC.xISExItem.Nome.ID;
                public Guid PETxAtendimentoEstadoID => AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoEstadoID.ID;
                public Guid PETxAtendimentoID => AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoID.ID;
                public Guid PETxAtendimentoServicosID => AgendamentoServicoSVC.xPETxAtendimentoServicos.PETxAtendimentoServicosID.ID;
                public Guid ProdutoID => AgendamentoServicoSVC.xISExItem.ProdutoID.ID;
                public Guid Quantidade => AgendamentoServicoSVC.xPETxAtendimentoServicos.Quantidade.ID;
                public Guid QuantidadePacote => AgendamentoServicoSVC.xPETxAtendimentoServicos.QuantidadePacote.ID;
                public Guid SYSxEstadoID => AgendamentoServicoSVC.xPETxAtendimentoServicos.SYSxEstadoID.ID;
                public Guid ValorCobrado => AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorCobrado.ID;
                public Guid ValorTabela => AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTabela.ID;
                public Guid ValorTotal => AgendamentoServicoSVC.xPETxAtendimentoServicos.ValorTotal.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AgendamentoServicoSVC.XDataSet);
            }

        }
        #endregion AgendamentoServicoSVC.XDataSet
        #if !OnlyDef
        #region AgendamentoServicoSVC.XRule
        public abstract class XRule : XServiceRule<AgendamentoServicoSVC.XDataSet, AgendamentoServicoSVC, AgendamentoServicoSVC.XTuple>
        {
        }
        #endregion AgendamentoServicoSVC.XRule

        [Guid(AgendamentoServicoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AgendamentoServicoSVC))]
        protected class _Service : Service<AgendamentoServicoSVC, XDataSet, XTuple>
        {
            public const String sCID = "1536A6CF-92E1-413B-874A-02F37DFAF2A0";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AgendamentoServicoSVC, XDataSet, XTuple>, XService
             where TModel : AgendamentoServicoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}