//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Agendamento
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Agendamento\AgendamentoExames.dssvc")]
    [XRegister(typeof(AgendamentoExamesSVC), sCID)]
    public class AgendamentoExamesSVC : XSVCModel
    {
        #region AgendamentoExamesFilterFRM

        [XRegister(typeof(AgendamentoExamesFilterFRM), sCID)]
        public class AgendamentoExamesFilterFRM : XFRMModel
        {
            public const String sCID = "9DEBDF95-5FA3-4B26-B57C-1CE231E98B3E";
            public static new readonly Guid gCID = new Guid(sCID);
            static AgendamentoExamesFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AgendamentoExamesFilterFRM()
            {
                ID = gCID;
                Name = "AgendamentoExamesFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion AgendamentoExamesFilterFRM

        public const String sCID = "63BE8B8A-6D1A-489F-8522-7D4334144CE7";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_PETxAtendimentoExames_ISExExameID; // ISExItem.ISExItemID --> PETxAtendimentoExames.ISExExameID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("B1D5396F-5953-4702-813C-D738BC5E11C6");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("5126FA19-DC50-42FF-A2D4-44041E4B793C"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("AE526744-A3B2-4EE8-AA89-D095F2FB6134"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("C960EFC8-203B-46E9-9100-3A62947B04F9"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("5115A469-A7FF-4B55-A81F-E96E79CF1D65"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("0A190C36-E592-486E-AEB1-C2626278E450"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("CD08FB7D-32AA-470D-B057-29FDC0426A64"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("53FC3E9F-FE1F-4048-AF5E-84F04C0D4DC9"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("A326B969-C53F-4B43-AD63-9986707B7D05"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("50E30553-ADD7-4127-A3E4-C09E2654015C"), "ProdutoID", "CÃ³digo Legado");
        }
        #endregion xISExItem 


        #region xPETxAtendimentoExames 
        public class xPETxAtendimentoExames : XSVCTable
        {

            public static Guid gCID => new Guid("C2E1CFA9-DBA6-4D81-A211-235EBC658260");

            public xPETxAtendimentoExames()
            {
                Name = "PETxAtendimentoExames";
                Alias = "PETxAtendimentoExames";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.gCID;

                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(ISExExameID, ISExExameID.ID);
                ISExExameID.Owner = this;
                ISExExameID.OwnerID = ID;
                ISExExameID.TableName = Name;
                ISExExameID.Alias = "ISExExameID";
                Items.Add(PETxAtendimentoExamesID, PETxAtendimentoExamesID.ID);
                PETxAtendimentoExamesID.Owner = this;
                PETxAtendimentoExamesID.OwnerID = ID;
                PETxAtendimentoExamesID.TableName = Name;
                PETxAtendimentoExamesID.Alias = "PETxAtendimentoExamesID";
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                PETxAtendimentoEstadoID.Alias = "PETxAtendimentoEstadoID";
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                ValorCobrado.Alias = "ValorCobrado";
                Items.Add(ValorTabela, ValorTabela.ID);
                ValorTabela.Owner = this;
                ValorTabela.OwnerID = ID;
                ValorTabela.TableName = Name;
                ValorTabela.Alias = "ValorTabela";
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                ValorTotal.Alias = "ValorTotal";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.PETxAtendimentoID, new Guid("28DCB51E-2A70-4C0B-8E8F-30366220CDAE"), "PETxAtendimentoID", "Atendimento");
            public static XORMFKField ISExExameID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ISExExameID, new Guid("DB913EC9-D7F0-4E71-AE6A-C3C1CD159DC9"), "ISExExameID", "Exames");
            public static XORMPKField PETxAtendimentoExamesID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.PETxAtendimentoExamesID, new Guid("287EE2C7-BF56-4F26-A4CA-DA373603F7DC"), "PETxAtendimentoExamesID", "Atendimento Exames");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.PETxAtendimentoEstadoID, new Guid("64F0AA1E-63C5-4D45-B7B7-3F16C35B351D"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ValorCobrado, new Guid("9D5C3349-F570-40EE-B110-E397914A4927"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField ValorTabela = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ValorTabela, new Guid("189846BB-D66E-4040-95A9-777D23D6095D"), "ValorTabela", "Valor de Tabela");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ValorTotal, new Guid("A4C5517D-BF10-440A-B327-93B4D622AAEB"), "ValorTotal", "Valor Total");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.SYSxEstadoID, new Guid("A8A0CED2-B786-4085-AC69-4014F273EC5F"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAtendimentoExames 


        public xISExItem ISExItem;
        public xPETxAtendimentoExames PETxAtendimentoExames;

        public AgendamentoExamesSVC()
        {
            TupleType = typeof(AgendamentoExamesSVC.XTuple);
            DataSetType = typeof(AgendamentoExamesSVC.XDataSet);
            ServiceRuleCID = new Guid("E4DBCED3-01A8-497A-AF91-D5026CE98E6B");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("63BE8B8A-6D1A-489F-8522-7D4334144CE7");
            Name = "AgendamentoExames";
            Title = "Exames do Atendimento";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, xPETxAtendimentoExames.SYSxEstadoID.ID, xPETxAtendimentoExames.ValorTabela.ID, xPETxAtendimentoExames.ValorCobrado.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xISExItem.ProdutoID.ID, xPETxAtendimentoExames.ISExExameID.ID, xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID, xPETxAtendimentoExames.PETxAtendimentoExamesID.ID, xPETxAtendimentoExames.PETxAtendimentoID.ID, xPETxAtendimentoExames.SYSxEstadoID.ID, xISExItem.Nome.ID, xPETxAtendimentoExames.ValorCobrado.ID, xPETxAtendimentoExames.ValorTabela.ID, xPETxAtendimentoExames.ValorTotal.ID };
            PKField = xPETxAtendimentoExames.PETxAtendimentoExamesID.ID;
            ConfigTableID = new Guid("13F1BC43-58DC-4F2B-8A68-26F475AF147E");
            StateField = xPETxAtendimentoExames.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("E4DBCED3-01A8-497A-AF91-D5026CE98E6B");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PETxAtendimentoExames = new xPETxAtendimentoExames();
            PETxAtendimentoExames.IsReadOnly = false;
            AddTable(PETxAtendimentoExames);
            MasterTableID = PETxAtendimentoExames.ID;
            ISExItem_ISExItemID_PETxAtendimentoExames_ISExExameID = AddReference(new XSVCReference(new Guid("E6DE6D50-B692-433E-A276-D0F93214A4FC"), "FK_E6DE6D50B692433EA276D0F93214A4FC", AgendamentoExamesSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, AgendamentoExamesSVC.xPETxAtendimentoExames.gCID, xPETxAtendimentoExames.ISExExameID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PETxAtendimentoExames.ISExExameID
            xPETxAtendimentoExames.ISExExameID.IsDataField = true;
            xPETxAtendimentoExames.ISExExameID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.IsVariable = true;
            xISExItem.Nome.AllowEmpty = true;
            xPETxAtendimentoExames.PETxAtendimentoEstadoID.IsDataField = true;
            xPETxAtendimentoExames.PETxAtendimentoEstadoID.AllowEmpty = true;
            xPETxAtendimentoExames.PETxAtendimentoExamesID.GeneratePK = true;
            xPETxAtendimentoExames.PETxAtendimentoExamesID.IsDataField = true;
            xPETxAtendimentoExames.PETxAtendimentoExamesID.AllowEmpty = true;
            xPETxAtendimentoExames.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimentoExames.PETxAtendimentoID.AllowEmpty = true;
            xISExItem.ProdutoID.IsReadOnly = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xPETxAtendimentoExames.SYSxEstadoID.IsDataField = true;
            xPETxAtendimentoExames.SYSxEstadoID.AllowEmpty = true;
            xPETxAtendimentoExames.ValorCobrado.Length = 25;
            xPETxAtendimentoExames.ValorCobrado.Scale = 2;
            xPETxAtendimentoExames.ValorCobrado.IsDataField = true;
            xPETxAtendimentoExames.ValorCobrado.AllowEmpty = true;
            xPETxAtendimentoExames.ValorTabela.Length = 25;
            xPETxAtendimentoExames.ValorTabela.Scale = 2;
            xPETxAtendimentoExames.ValorTabela.IsDataField = true;
            xPETxAtendimentoExames.ValorTabela.AllowEmpty = true;
            xPETxAtendimentoExames.ValorTotal.Length = 25;
            xPETxAtendimentoExames.ValorTotal.Scale = 2;
            xPETxAtendimentoExames.ValorTotal.IsDataField = true;
            xPETxAtendimentoExames.ValorTotal.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xPETxAtendimentoExames.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField ISExExameID => xPETxAtendimentoExames.ISExExameID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField PETxAtendimentoEstadoID => xPETxAtendimentoExames.PETxAtendimentoEstadoID;
        public XORMField PETxAtendimentoExamesID => xPETxAtendimentoExames.PETxAtendimentoExamesID;
        public XORMField PETxAtendimentoID => xPETxAtendimentoExames.PETxAtendimentoID;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField SYSxEstadoID => xPETxAtendimentoExames.SYSxEstadoID;
        public XORMField ValorCobrado => xPETxAtendimentoExames.ValorCobrado;
        public XORMField ValorTabela => xPETxAtendimentoExames.ValorTabela;
        public XORMField ValorTotal => xPETxAtendimentoExames.ValorTotal;
        }
        #endregion XFields
        #region AgendamentoExamesSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid ISExExameID
        {
            get
            {
                return (Guid)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ISExExameID.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ISExExameID.ID] = value;
            }
        }
        public Guid? oISExExameID
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.ISExExameID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AgendamentoExamesSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 PETxAtendimentoEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID] = value;
            }
        }
        public Int16? oPETxAtendimentoEstadoID
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PETxAtendimentoExamesID
        {
            get
            {
                return (Guid)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoExamesID
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[AgendamentoExamesSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.SYSxEstadoID.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal ValorCobrado
        {
            get
            {
                return (Decimal)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ValorCobrado.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ValorCobrado.ID] = value;
            }
        }
        public Decimal? oValorCobrado
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.ValorCobrado, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTabela
        {
            get
            {
                return (Decimal)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTabela.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTabela.ID] = value;
            }
        }
        public Decimal? oValorTabela
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTabela, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTotal
        {
            get
            {
                return (Decimal)Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTotal.ID];
            }
            set
            {
                Value[AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTotal.ID] = value;
            }
        }
        public Decimal? oValorTotal
        {
            get
            {
                GetOldValue(AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTotal, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AgendamentoExamesSVC.XTuple

        #region AgendamentoExamesSVC.XDataSet

        public class XDataSet : XDataSet<AgendamentoExamesSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AgendamentoExamesSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AgendamentoExamesSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid ISExExameID => AgendamentoExamesSVC.xPETxAtendimentoExames.ISExExameID.ID;
                public Guid Nome => AgendamentoExamesSVC.xISExItem.Nome.ID;
                public Guid PETxAtendimentoEstadoID => AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID;
                public Guid PETxAtendimentoExamesID => AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID.ID;
                public Guid PETxAtendimentoID => AgendamentoExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID.ID;
                public Guid ProdutoID => AgendamentoExamesSVC.xISExItem.ProdutoID.ID;
                public Guid SYSxEstadoID => AgendamentoExamesSVC.xPETxAtendimentoExames.SYSxEstadoID.ID;
                public Guid ValorCobrado => AgendamentoExamesSVC.xPETxAtendimentoExames.ValorCobrado.ID;
                public Guid ValorTabela => AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTabela.ID;
                public Guid ValorTotal => AgendamentoExamesSVC.xPETxAtendimentoExames.ValorTotal.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AgendamentoExamesSVC.XDataSet);
            }

        }
        #endregion AgendamentoExamesSVC.XDataSet
        #if !OnlyDef
        #region AgendamentoExamesSVC.XRule
        public abstract class XRule : XServiceRule<AgendamentoExamesSVC.XDataSet, AgendamentoExamesSVC, AgendamentoExamesSVC.XTuple>
        {
        }
        #endregion AgendamentoExamesSVC.XRule

        [Guid(AgendamentoExamesSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AgendamentoExamesSVC))]
        protected class _Service : Service<AgendamentoExamesSVC, XDataSet, XTuple>
        {
            public const String sCID = "16C862F2-F140-42B9-8A5D-33504CAD3B33";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AgendamentoExamesSVC, XDataSet, XTuple>, XService
             where TModel : AgendamentoExamesSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}