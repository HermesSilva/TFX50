//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ERP.DB;
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.Agendamento
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Agendamento\AgendamentoProfiEste.dssvc")]
    [XRegister(typeof(AgendamentoProfiEsteSVC), sCID)]
    public class AgendamentoProfiEsteSVC : XSVCModel
    {
        #region AgendamentoProfiEsteFilterFRM

        [XRegister(typeof(AgendamentoProfiEsteFilterFRM), sCID)]
        public class AgendamentoProfiEsteFilterFRM : XFRMModel
        {
            public const String sCID = "12E7F74F-F969-42D1-980E-B6219A1AE7D3";
            public static new readonly Guid gCID = new Guid(sCID);
            static AgendamentoProfiEsteFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AgendamentoProfiEsteFilterFRM()
            {
                ID = gCID;
                Name = "AgendamentoProfiEsteFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.EqualTo;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("7EFE3A8C-97E0-4C24-A59F-16B6CFC94F63"), "Nome", "Nome", XString.CID, 2, 32, false, gCID, null, new Guid("3A47BF93-1031-4D85-8818-C703AC1592F0")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("7EFE3A8C-97E0-4C24-A59F-16B6CFC94F63"), "Nome", "Nome", typeof(String), false, "");
            }
        }

        #endregion AgendamentoProfiEsteFilterFRM

        public const String sCID = "D16C9FBC-61F5-46E1-B74E-30D9C35537FD";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PETxAtendimentoProfissional_ERPxProfissionalID; // SYSxPessoa.SYSxPessoaID --> PETxAtendimentoProfissional.ERPxProfissionalID
        public static XSVCReference ERPxCategoria_ERPxCategoriaID_PETxAtendimentoProfissional_ERPxCategoriaID; // ERPxCategoria.ERPxCategoriaID --> PETxAtendimentoProfissional.ERPxCategoriaID

        #region xERPxCategoria 
        public class xERPxCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("2BA62C82-FBC3-4C77-A322-CB75A2973AA1");

            public xERPxCategoria()
            {
                Name = "ERPxCategoria";
                Alias = "ERPxCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxCategoria.gCID;

                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                Items.Add(Categoria, Categoria.ID);
                Categoria.Owner = this;
                Categoria.OwnerID = ID;
                Categoria.TableName = Name;
                Categoria.Alias = "Categoria";
            }

            public static XORMPKField ERPxCategoriaID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxCategoria.ERPxCategoriaID, new Guid("D77DF311-B963-4BF2-B2BA-7A2094A31CAB"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMFaceField Categoria = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxCategoria.Categoria, new Guid("D03AA320-7ECA-4615-A84C-17C60F0E8F24"), "Categoria", "Categoria");
        }
        #endregion xERPxCategoria 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("47DFC26C-F181-4209-85C4-9F5344B23B9E");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("3A47BF93-1031-4D85-8818-C703AC1592F0"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("71092691-0652-4539-8202-65B6B6BD0B49"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xPETxAtendimentoProfissional 
        public class xPETxAtendimentoProfissional : XSVCTable
        {

            public static Guid gCID => new Guid("CAC3AC0F-3025-49B8-AC80-B457A65F9FBE");

            public xPETxAtendimentoProfissional()
            {
                Name = "PETxAtendimentoProfissional";
                Alias = "PETxAtendimentoProfissional";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.gCID;

                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                ERPxProfissionalID.Alias = "ERPxProfissionalID";
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                ERPxCategoriaID.Alias = "ERPxCategoriaID";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Inicio.Alias = "Inicio";
                Items.Add(Final, Final.ID);
                Final.Owner = this;
                Final.OwnerID = ID;
                Final.TableName = Name;
                Final.Alias = "Final";
                Items.Add(PETxAtendimentoProfissionalID, PETxAtendimentoProfissionalID.ID);
                PETxAtendimentoProfissionalID.Owner = this;
                PETxAtendimentoProfissionalID.OwnerID = ID;
                PETxAtendimentoProfissionalID.TableName = Name;
                PETxAtendimentoProfissionalID.Alias = "PETxAtendimentoProfissionalID";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.ERPxProfissionalID, new Guid("CD7F6192-6B2E-495E-9EC0-7689D09B1898"), "ERPxProfissionalID", "Profissionais");
            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.PETxAtendimentoID, new Guid("59F1B3AD-ED4D-4796-AFAE-092FB3D7C015"), "PETxAtendimentoID", "Atendimento");
            public static XORMFKField ERPxCategoriaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.ERPxCategoriaID, new Guid("9FDB23E9-0F8B-4ACB-932F-6A90C50ACE60"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.Inicio, new Guid("0825E613-7E3F-4D52-A582-C916D2804463"), "Inicio", "Início do Atendimento");
            public static XORMDateTimeField Final = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.Final, new Guid("B693F540-BF3A-4A78-BC6F-3E5EEB8A21A1"), "Final", "Final do Atendimento");
            public static XORMPKField PETxAtendimentoProfissionalID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.PETxAtendimentoProfissionalID, new Guid("7FD236ED-F1B9-4D7C-B5E8-937B49939AC9"), "PETxAtendimentoProfissionalID", "Profissional por Atendimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.SYSxEmpresaID, new Guid("59B60C1E-0DDD-4698-B7DE-3A18FA414174"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.SYSxEstadoID, new Guid("099B0701-792A-402B-A40C-CCEE4598D11B"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAtendimentoProfissional 


        public xERPxCategoria ERPxCategoria;
        public xPETxAtendimentoProfissional PETxAtendimentoProfissional;
        public xSYSxPessoa SYSxPessoa;

        public AgendamentoProfiEsteSVC()
        {
            TupleType = typeof(AgendamentoProfiEsteSVC.XTuple);
            DataSetType = typeof(AgendamentoProfiEsteSVC.XDataSet);
            ServiceRuleCID = new Guid("062E36AE-622F-4950-BCF8-DF5A3910B36F");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("D16C9FBC-61F5-46E1-B74E-30D9C35537FD");
            Name = "AgendamentoProfiEste";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("12E7F74F-F969-42D1-980E-B6219A1AE7D3");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, xPETxAtendimentoProfissional.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xPETxAtendimentoProfissional.Inicio.ID };
            DataSetFields = new Guid[] { xERPxCategoria.Categoria.ID, xPETxAtendimentoProfissional.SYSxEmpresaID.ID, xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.ID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, xPETxAtendimentoProfissional.Final.ID, xPETxAtendimentoProfissional.Inicio.ID, xPETxAtendimentoProfissional.ERPxCategoriaID.ID, xPETxAtendimentoProfissional.PETxAtendimentoID.ID, xSYSxPessoa.Nome.ID, xPETxAtendimentoProfissional.SYSxEstadoID.ID };
            PKField = xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.ID;
            ConfigTableID = new Guid("9098E203-60EF-4B70-BF57-78CF3366069A");
            StateField = xPETxAtendimentoProfissional.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("062E36AE-622F-4950-BCF8-DF5A3910B36F");
            ERPxCategoria = new xERPxCategoria();
            ERPxCategoria.IsReadOnly = true;
            AddTable(ERPxCategoria);
            PETxAtendimentoProfissional = new xPETxAtendimentoProfissional();
            PETxAtendimentoProfissional.IsReadOnly = false;
            AddTable(PETxAtendimentoProfissional);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PETxAtendimentoProfissional.ID;
            SYSxPessoa_SYSxPessoaID_PETxAtendimentoProfissional_ERPxProfissionalID = AddReference(new XSVCReference(new Guid("CAB97F99-B824-4C6E-B1CE-4AAEE7192F54"), "FK_CAB97F99B8244C6EB1CE4AAEE7192F54", AgendamentoProfiEsteSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.gCID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PETxAtendimentoProfissional.ERPxProfissionalID
            ERPxCategoria_ERPxCategoriaID_PETxAtendimentoProfissional_ERPxCategoriaID = AddReference(new XSVCReference(new Guid("FCE688C4-9967-4D66-BBC5-26C47A9D086D"), "FK_FCE688C499674D66BBC526C47A9D086D", AgendamentoProfiEsteSVC.xERPxCategoria.gCID, xERPxCategoria.ERPxCategoriaID.ID, AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.gCID, xPETxAtendimentoProfissional.ERPxCategoriaID.ID, XJoinType.Inner)); // ERPxCategoria.ERPxCategoriaID --> PETxAtendimentoProfissional.ERPxCategoriaID
            xERPxCategoria.Categoria.IsReadOnly = true;
            xERPxCategoria.Categoria.Length = 35;
            xERPxCategoria.Categoria.IsDataField = true;
            xERPxCategoria.Categoria.AllowEmpty = true;
            xPETxAtendimentoProfissional.ERPxCategoriaID.IsDataField = true;
            xPETxAtendimentoProfissional.ERPxCategoriaID.AllowEmpty = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.IsDataField = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.AllowEmpty = true;
            xPETxAtendimentoProfissional.Final.IsDataField = true;
            xPETxAtendimentoProfissional.Final.AllowEmpty = true;
            xPETxAtendimentoProfissional.Inicio.OrderType = XOrderType.Asc;
            xPETxAtendimentoProfissional.Inicio.IsDataField = true;
            xPETxAtendimentoProfissional.Inicio.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xPETxAtendimentoProfissional.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimentoProfissional.PETxAtendimentoID.AllowEmpty = true;
            xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.GeneratePK = true;
            xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.IsDataField = true;
            xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.AllowEmpty = true;
            xPETxAtendimentoProfissional.SYSxEmpresaID.IsDataField = true;
            xPETxAtendimentoProfissional.SYSxEmpresaID.AllowEmpty = true;
            xPETxAtendimentoProfissional.SYSxEstadoID.IsDataField = true;
            xPETxAtendimentoProfissional.SYSxEstadoID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPETxAtendimentoProfissional.ERPxCategoriaID);
            pWhere.Add(global::Projecao.Core.PET.DB.PETx.ERPxCategoria.XDefault.Estetica_Animal);
        }

        #region XFields

        public class XFields
        {
        public XORMField Categoria => xERPxCategoria.Categoria;
        public XORMField ERPxCategoriaID => xPETxAtendimentoProfissional.ERPxCategoriaID;
        public XORMField ERPxProfissionalID => xPETxAtendimentoProfissional.ERPxProfissionalID;
        public XORMField Final => xPETxAtendimentoProfissional.Final;
        public XORMField Inicio => xPETxAtendimentoProfissional.Inicio;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField PETxAtendimentoID => xPETxAtendimentoProfissional.PETxAtendimentoID;
        public XORMField PETxAtendimentoProfissionalID => xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID;
        public XORMField SYSxEmpresaID => xPETxAtendimentoProfissional.SYSxEmpresaID;
        public XORMField SYSxEstadoID => xPETxAtendimentoProfissional.SYSxEstadoID;
        }
        #endregion XFields
        #region AgendamentoProfiEsteSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Categoria
        {
            get
            {
                return (String)Value[AgendamentoProfiEsteSVC.xERPxCategoria.Categoria.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xERPxCategoria.Categoria.ID] = value;
            }
        }
        public String? oCategoria
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xERPxCategoria.Categoria, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 ERPxCategoriaID
        {
            get
            {
                return (Int16)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxCategoriaID.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxCategoriaID.ID] = value;
            }
        }
        public Int16? oERPxCategoriaID
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxCategoriaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid ERPxProfissionalID
        {
            get
            {
                return (Guid)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID] = value;
            }
        }
        public Guid? oERPxProfissionalID
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxProfissionalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Final
        {
            get
            {
                return (DateTime)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Final.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Final.ID] = value;
            }
        }
        public DateTime? oFinal
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Final, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public DateTime Inicio
        {
            get
            {
                return (DateTime)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Inicio.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Inicio.ID] = value;
            }
        }
        public DateTime? oInicio
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Inicio, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AgendamentoProfiEsteSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoID.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAtendimentoProfissionalID
        {
            get
            {
                return (Guid)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoProfissionalID
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEmpresaID.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEstadoID.ID];
            }
            set
            {
                Value[AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AgendamentoProfiEsteSVC.XTuple

        #region AgendamentoProfiEsteSVC.XDataSet

        public class XDataSet : XDataSet<AgendamentoProfiEsteSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AgendamentoProfiEsteSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AgendamentoProfiEsteSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Categoria => AgendamentoProfiEsteSVC.xERPxCategoria.Categoria.ID;
                public Guid ERPxCategoriaID => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxCategoriaID.ID;
                public Guid ERPxProfissionalID => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID;
                public Guid Final => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Final.ID;
                public Guid Inicio => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.Inicio.ID;
                public Guid Nome => AgendamentoProfiEsteSVC.xSYSxPessoa.Nome.ID;
                public Guid PETxAtendimentoID => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoID.ID;
                public Guid PETxAtendimentoProfissionalID => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.PETxAtendimentoProfissionalID.ID;
                public Guid SYSxEmpresaID => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEmpresaID.ID;
                public Guid SYSxEstadoID => AgendamentoProfiEsteSVC.xPETxAtendimentoProfissional.SYSxEstadoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AgendamentoProfiEsteSVC.XDataSet);
            }

        }
        #endregion AgendamentoProfiEsteSVC.XDataSet
        #if !OnlyDef
        #region AgendamentoProfiEsteSVC.XRule
        public abstract class XRule : XServiceRule<AgendamentoProfiEsteSVC.XDataSet, AgendamentoProfiEsteSVC, AgendamentoProfiEsteSVC.XTuple>
        {
        }
        #endregion AgendamentoProfiEsteSVC.XRule

        [Guid(AgendamentoProfiEsteSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AgendamentoProfiEsteSVC))]
        protected class _Service : Service<AgendamentoProfiEsteSVC, XDataSet, XTuple>
        {
            public const String sCID = "35A86693-3D03-47F0-BEC7-A51652329E7B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AgendamentoProfiEsteSVC, XDataSet, XTuple>, XService
             where TModel : AgendamentoProfiEsteSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}