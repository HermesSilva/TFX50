//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Agendamento
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Agendamento\AgendamentoDetalhe.dssvc")]
    [XRegister(typeof(AgendamentoDetalheSVC), sCID)]
    public class AgendamentoDetalheSVC : XSVCModel
    {
        #region AgendamentoDetalheFilterFRM

        [XRegister(typeof(AgendamentoDetalheFilterFRM), sCID)]
        public class AgendamentoDetalheFilterFRM : XFRMModel
        {
            public const String sCID = "71218F8E-E943-4C55-913D-CEF4DE326AF3";
            public static new readonly Guid gCID = new Guid(sCID);
            static AgendamentoDetalheFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AgendamentoDetalheFilterFRM()
            {
                ID = gCID;
                Name = "AgendamentoDetalheFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion AgendamentoDetalheFilterFRM

        public const String sCID = "1C402F15-3F63-4CAF-BD04-EF55C048E36C";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAtendimentoDetalheItem_PETxAtendimentoDetalheID_PETxAtendimentoDetalhe_PETxAtendimentoDetalheID; // PETxAtendimentoDetalheItem.PETxAtendimentoDetalheID --> PETxAtendimentoDetalhe.PETxAtendimentoDetalheID
        public static XSVCReference PETxAtendimentoDetalhamento_PETxAtendimentoDetalheItemID_PETxAtendimentoDetalheItem_PETxAtendimentoDetalheItemID; // PETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID --> PETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID

        #region xPETxAtendimentoDetalhe 
        public class xPETxAtendimentoDetalhe : XSVCTable
        {

            public static Guid gCID => new Guid("5A16FA9F-E365-4293-B74F-087D90AE1C5B");

            public xPETxAtendimentoDetalhe()
            {
                Name = "PETxAtendimentoDetalhe";
                Alias = "PETxAtendimentoDetalhe";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhe.gCID;

                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
                Items.Add(PETxAtendimentoDetalheID, PETxAtendimentoDetalheID.ID);
                PETxAtendimentoDetalheID.Owner = this;
                PETxAtendimentoDetalheID.OwnerID = ID;
                PETxAtendimentoDetalheID.TableName = Name;
            }

            public static XORMFaceField Grupo = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhe.Grupo, new Guid("BC2C3842-25DD-4B70-A009-09D11F019E7C"), "Grupo", "Grupo do Detalhe");
            public static XORMPKField PETxAtendimentoDetalheID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhe.PETxAtendimentoDetalheID, new Guid("BCEAF4E9-B493-4FAE-AFC4-287A5A94B25A"), "PETxAtendimentoDetalheID", "Detalhamento do Atendimento");
        }
        #endregion xPETxAtendimentoDetalhe 


        #region xPETxAtendimentoDetalhamento 
        public class xPETxAtendimentoDetalhamento : XSVCTable
        {

            public static Guid gCID => new Guid("A2B11671-BAED-4BC5-9DF1-9BDE53191F31");

            public xPETxAtendimentoDetalhamento()
            {
                Name = "PETxAtendimentoDetalhamento";
                Alias = "PETxAtendimentoDetalhamento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhamento.gCID;

                Items.Add(PETxAtendimentoDetalheItemID, PETxAtendimentoDetalheItemID.ID);
                PETxAtendimentoDetalheItemID.Owner = this;
                PETxAtendimentoDetalheItemID.OwnerID = ID;
                PETxAtendimentoDetalheItemID.TableName = Name;
                PETxAtendimentoDetalheItemID.Alias = "PETxAtendimentoDetalheItemID";
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(PETxAtendimentoDetalhamentoID, PETxAtendimentoDetalhamentoID.ID);
                PETxAtendimentoDetalhamentoID.Owner = this;
                PETxAtendimentoDetalhamentoID.OwnerID = ID;
                PETxAtendimentoDetalhamentoID.TableName = Name;
                PETxAtendimentoDetalhamentoID.Alias = "PETxAtendimentoDetalhamentoID";
                Items.Add(Acrescimo, Acrescimo.ID);
                Acrescimo.Owner = this;
                Acrescimo.OwnerID = ID;
                Acrescimo.TableName = Name;
                Acrescimo.Alias = "Acrescimo";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFKField PETxAtendimentoDetalheItemID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID, new Guid("8E3A74D6-A7FD-452D-A438-0C72F15A094E"), "PETxAtendimentoDetalheItemID", "Item do Detalhamento");
            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhamento.PETxAtendimentoID, new Guid("AA8AC271-CABB-48B8-BB24-3D6151E9F544"), "PETxAtendimentoID", "Atendimento");
            public static XORMPKField PETxAtendimentoDetalhamentoID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID, new Guid("F621914A-AEDC-4F5E-B7CB-B61C3E95D56E"), "PETxAtendimentoDetalhamentoID", "Detalhamento do Atendimento");
            public static XORMDecimalField Acrescimo = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhamento.Acrescimo, new Guid("9A023B48-396A-40AD-A587-DCC07C4C51C7"), "Acrescimo", "AcrÃ©scimo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhamento.SYSxEstadoID, new Guid("39DCBE2F-3F41-4C70-A474-18BB855DDA13"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAtendimentoDetalhamento 


        #region xPETxAtendimentoDetalheItem 
        public class xPETxAtendimentoDetalheItem : XSVCTable
        {

            public static Guid gCID => new Guid("BE0F13A6-3258-42A4-B3C6-E0F813F4588D");

            public xPETxAtendimentoDetalheItem()
            {
                Name = "PETxAtendimentoDetalheItem";
                Alias = "PETxAtendimentoDetalheItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.gCID;

                Items.Add(Detalhe, Detalhe.ID);
                Detalhe.Owner = this;
                Detalhe.OwnerID = ID;
                Detalhe.TableName = Name;
                Detalhe.Alias = "Detalhe";
                Items.Add(PETxAtendimentoDetalheItemID, PETxAtendimentoDetalheItemID.ID);
                PETxAtendimentoDetalheItemID.Owner = this;
                PETxAtendimentoDetalheItemID.OwnerID = ID;
                PETxAtendimentoDetalheItemID.TableName = Name;
                Items.Add(PETxAtendimentoDetalheID, PETxAtendimentoDetalheID.ID);
                PETxAtendimentoDetalheID.Owner = this;
                PETxAtendimentoDetalheID.OwnerID = ID;
                PETxAtendimentoDetalheID.TableName = Name;
            }

            public static XORMFaceField Detalhe = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.Detalhe, new Guid("56BEADD2-32B1-48BA-B1C8-4896F868FABA"), "Detalhe", "Detalhe");
            public static XORMPKField PETxAtendimentoDetalheItemID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID, new Guid("CC34752E-C547-4AE6-A063-04948BB0A632"), "PETxAtendimentoDetalheItemID", "Item do Detalhamento");
            public static XORMFKField PETxAtendimentoDetalheID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.PETxAtendimentoDetalheID, new Guid("C29AF21B-C506-4B60-AC3F-AA0F45272BE7"), "PETxAtendimentoDetalheID", "Detalhamento do Atendimento");
        }
        #endregion xPETxAtendimentoDetalheItem 


        public xPETxAtendimentoDetalhamento PETxAtendimentoDetalhamento;
        public xPETxAtendimentoDetalhe PETxAtendimentoDetalhe;
        public xPETxAtendimentoDetalheItem PETxAtendimentoDetalheItem;

        public AgendamentoDetalheSVC()
        {
            TupleType = typeof(AgendamentoDetalheSVC.XTuple);
            DataSetType = typeof(AgendamentoDetalheSVC.XDataSet);
            ServiceRuleCID = new Guid("E9F46339-3467-43BF-BC8C-C52531D02153");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("1C402F15-3F63-4CAF-BD04-EF55C048E36C");
            Name = "AgendamentoDetalhe";
            Title = "Detalhes do Atendimento";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxAtendimentoDetalhe.Grupo.ID, xPETxAtendimentoDetalhamento.SYSxEstadoID.ID, xPETxAtendimentoDetalheItem.Detalhe.ID, xPETxAtendimentoDetalhamento.Acrescimo.ID };
            OrderByFields = new Guid[] { xPETxAtendimentoDetalhe.Grupo.ID, xPETxAtendimentoDetalheItem.Detalhe.ID };
            DataSetFields = new Guid[] { xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.ID, xPETxAtendimentoDetalhamento.SYSxEstadoID.ID, xPETxAtendimentoDetalhamento.Acrescimo.ID, xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.ID, xPETxAtendimentoDetalhamento.PETxAtendimentoID.ID, xPETxAtendimentoDetalhe.Grupo.ID, xPETxAtendimentoDetalheItem.Detalhe.ID };
            PKField = xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.ID;
            ConfigTableID = new Guid("8BC95C64-20FD-4E08-9F45-26B5430CE6B4");
            StateField = xPETxAtendimentoDetalhamento.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("E9F46339-3467-43BF-BC8C-C52531D02153");
            PETxAtendimentoDetalhamento = new xPETxAtendimentoDetalhamento();
            PETxAtendimentoDetalhamento.IsReadOnly = false;
            AddTable(PETxAtendimentoDetalhamento);
            PETxAtendimentoDetalhe = new xPETxAtendimentoDetalhe();
            PETxAtendimentoDetalhe.IsReadOnly = true;
            AddTable(PETxAtendimentoDetalhe);
            PETxAtendimentoDetalheItem = new xPETxAtendimentoDetalheItem();
            PETxAtendimentoDetalheItem.IsReadOnly = true;
            AddTable(PETxAtendimentoDetalheItem);
            MasterTableID = PETxAtendimentoDetalhamento.ID;
            PETxAtendimentoDetalheItem_PETxAtendimentoDetalheID_PETxAtendimentoDetalhe_PETxAtendimentoDetalheID = AddReference(new XSVCReference(new Guid("28D7A7A0-F7FB-4287-BD7A-383E9C7A866B"), "FK_28D7A7A0F7FB4287BD7A383E9C7A866B", AgendamentoDetalheSVC.xPETxAtendimentoDetalheItem.gCID, xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheID.ID, AgendamentoDetalheSVC.xPETxAtendimentoDetalhe.gCID, xPETxAtendimentoDetalhe.PETxAtendimentoDetalheID.ID, XJoinType.Inner)); // PETxAtendimentoDetalheItem.PETxAtendimentoDetalheID --> PETxAtendimentoDetalhe.PETxAtendimentoDetalheID
            PETxAtendimentoDetalhamento_PETxAtendimentoDetalheItemID_PETxAtendimentoDetalheItem_PETxAtendimentoDetalheItemID = AddReference(new XSVCReference(new Guid("52B38DCF-91EC-44B0-B01B-AC05B1F5F769"), "FK_52B38DCF91EC44B0B01BAC05B1F5F769", AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.gCID, xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.ID, AgendamentoDetalheSVC.xPETxAtendimentoDetalheItem.gCID, xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.ID, XJoinType.Inner)); // PETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID --> PETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID
            xPETxAtendimentoDetalhamento.Acrescimo.Length = 25;
            xPETxAtendimentoDetalhamento.Acrescimo.Scale = 2;
            xPETxAtendimentoDetalhamento.Acrescimo.IsDataField = true;
            xPETxAtendimentoDetalhamento.Acrescimo.AllowEmpty = true;
            xPETxAtendimentoDetalheItem.Detalhe.IsReadOnly = true;
            xPETxAtendimentoDetalheItem.Detalhe.OrderType = XOrderType.Asc;
            xPETxAtendimentoDetalheItem.Detalhe.Length = 30;
            xPETxAtendimentoDetalheItem.Detalhe.IsDataField = true;
            xPETxAtendimentoDetalheItem.Detalhe.AllowEmpty = true;
            xPETxAtendimentoDetalhe.Grupo.IsReadOnly = true;
            xPETxAtendimentoDetalhe.Grupo.OrderType = XOrderType.Asc;
            xPETxAtendimentoDetalhe.Grupo.Length = 35;
            xPETxAtendimentoDetalhe.Grupo.IsDataField = true;
            xPETxAtendimentoDetalhe.Grupo.AllowEmpty = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.GeneratePK = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.IsDataField = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.AllowEmpty = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.IsDataField = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.AllowEmpty = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimentoDetalhamento.PETxAtendimentoID.AllowEmpty = true;
            xPETxAtendimentoDetalhamento.SYSxEstadoID.IsDataField = true;
            xPETxAtendimentoDetalhamento.SYSxEstadoID.AllowEmpty = true;
            xPETxAtendimentoDetalhamento.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField Acrescimo => xPETxAtendimentoDetalhamento.Acrescimo;
        public XORMField Detalhe => xPETxAtendimentoDetalheItem.Detalhe;
        public XORMField Grupo => xPETxAtendimentoDetalhe.Grupo;
        public XORMField PETxAtendimentoDetalhamentoID => xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID;
        public XORMField PETxAtendimentoDetalheItemID => xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID;
        public XORMField PETxAtendimentoID => xPETxAtendimentoDetalhamento.PETxAtendimentoID;
        public XORMField SYSxEstadoID => xPETxAtendimentoDetalhamento.SYSxEstadoID;
        }
        #endregion XFields
        #region AgendamentoDetalheSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Decimal Acrescimo
        {
            get
            {
                return (Decimal)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.Acrescimo.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.Acrescimo.ID] = value;
            }
        }
        public Decimal? oAcrescimo
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.Acrescimo, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public String Detalhe
        {
            get
            {
                return (String)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe.ID] = value;
            }
        }
        public String? oDetalhe
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Grupo
        {
            get
            {
                return (String)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAtendimentoDetalhamentoID
        {
            get
            {
                return (Guid)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoDetalhamentoID
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PETxAtendimentoDetalheItemID
        {
            get
            {
                return (Int16)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.ID] = value;
            }
        }
        public Int16? oPETxAtendimentoDetalheItemID
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoID.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.SYSxEstadoID.ID];
            }
            set
            {
                Value[AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AgendamentoDetalheSVC.XTuple

        #region AgendamentoDetalheSVC.XDataSet

        public class XDataSet : XDataSet<AgendamentoDetalheSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AgendamentoDetalheSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AgendamentoDetalheSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Acrescimo => AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.Acrescimo.ID;
                public Guid Detalhe => AgendamentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe.ID;
                public Guid Grupo => AgendamentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo.ID;
                public Guid PETxAtendimentoDetalhamentoID => AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalhamentoID.ID;
                public Guid PETxAtendimentoDetalheItemID => AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoDetalheItemID.ID;
                public Guid PETxAtendimentoID => AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.PETxAtendimentoID.ID;
                public Guid SYSxEstadoID => AgendamentoDetalheSVC.xPETxAtendimentoDetalhamento.SYSxEstadoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AgendamentoDetalheSVC.XDataSet);
            }

        }
        #endregion AgendamentoDetalheSVC.XDataSet
        #if !OnlyDef
        #region AgendamentoDetalheSVC.XRule
        public abstract class XRule : XServiceRule<AgendamentoDetalheSVC.XDataSet, AgendamentoDetalheSVC, AgendamentoDetalheSVC.XTuple>
        {
        }
        #endregion AgendamentoDetalheSVC.XRule

        [Guid(AgendamentoDetalheSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AgendamentoDetalheSVC))]
        protected class _Service : Service<AgendamentoDetalheSVC, XDataSet, XTuple>
        {
            public const String sCID = "4AC7099F-08CC-48B9-BEFC-3E44BF646924";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AgendamentoDetalheSVC, XDataSet, XTuple>, XService
             where TModel : AgendamentoDetalheSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}