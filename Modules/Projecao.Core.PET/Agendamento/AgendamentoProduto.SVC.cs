//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Agendamento
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Agendamento\AgendamentoProduto.dssvc")]
    [XRegister(typeof(AgendamentoProdutoSVC), sCID)]
    public class AgendamentoProdutoSVC : XSVCModel
    {
        #region AgendamentoProdutoFilterFRM

        [XRegister(typeof(AgendamentoProdutoFilterFRM), sCID)]
        public class AgendamentoProdutoFilterFRM : XFRMModel
        {
            public const String sCID = "3D5A320B-B731-426C-AEFF-45CDBF398E0B";
            public static new readonly Guid gCID = new Guid(sCID);
            static AgendamentoProdutoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AgendamentoProdutoFilterFRM()
            {
                ID = gCID;
                Name = "AgendamentoProdutoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion AgendamentoProdutoFilterFRM

        public const String sCID = "C308922A-F6D0-40B4-9650-2DDCDE9EEA1C";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_PETxAtendimentoAcessorios_ISExProdutoID; // ISExItem.ISExItemID --> PETxAtendimentoAcessorios.ISExProdutoID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("94EABCB9-0EF1-4CD2-837B-F37705093610");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("31519087-1955-47EA-9F00-D95D374FF432"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("524150C0-D084-48F7-880E-D8A797914825"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("5AD9E6CB-16A0-4062-930A-0442FCDE7B2B"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("AAE0A79B-DBDC-475E-BFA8-75FED1375E81"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("15323D7B-8913-44E4-A8FC-B3FC127E2111"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("FFC81951-D4AD-43C9-BA3F-610F61F13ECF"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("729975B6-9ED2-4364-8B03-080928AD4E57"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("B9FC36EE-F644-4A35-99F5-5D3F81B56832"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("83134EC1-A417-4DAC-A14C-05E7B72B8F37"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xPETxAtendimentoAcessorios 
        public class xPETxAtendimentoAcessorios : XSVCTable
        {

            public static Guid gCID => new Guid("97BC5F62-FA39-49A0-985B-D0E6A7CF30AA");

            public xPETxAtendimentoAcessorios()
            {
                Name = "PETxAtendimentoAcessorios";
                Alias = "PETxAtendimentoAcessorios";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.gCID;

                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(ISExProdutoID, ISExProdutoID.ID);
                ISExProdutoID.Owner = this;
                ISExProdutoID.OwnerID = ID;
                ISExProdutoID.TableName = Name;
                ISExProdutoID.Alias = "ISExProdutoID";
                Items.Add(Quantidade, Quantidade.ID);
                Quantidade.Owner = this;
                Quantidade.OwnerID = ID;
                Quantidade.TableName = Name;
                Quantidade.Alias = "Quantidade";
                Items.Add(ValorTabela, ValorTabela.ID);
                ValorTabela.Owner = this;
                ValorTabela.OwnerID = ID;
                ValorTabela.TableName = Name;
                ValorTabela.Alias = "ValorTabela";
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                ValorCobrado.Alias = "ValorCobrado";
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                ValorTotal.Alias = "ValorTotal";
                Items.Add(PETxAtendimentoAcessoriosID, PETxAtendimentoAcessoriosID.ID);
                PETxAtendimentoAcessoriosID.Owner = this;
                PETxAtendimentoAcessoriosID.OwnerID = ID;
                PETxAtendimentoAcessoriosID.TableName = Name;
                PETxAtendimentoAcessoriosID.Alias = "PETxAtendimentoAcessoriosID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(DescontoProporcional, DescontoProporcional.ID);
                DescontoProporcional.Owner = this;
                DescontoProporcional.OwnerID = ID;
                DescontoProporcional.TableName = Name;
                DescontoProporcional.Alias = "DescontoProporcional";
            }

            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.PETxAtendimentoID, new Guid("98776819-992A-4BC9-AEE1-D947C6763807"), "PETxAtendimentoID", "Atendimento");
            public static XORMFKField ISExProdutoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.ISExProdutoID, new Guid("09746F86-38DF-493D-AE93-E57187DF571F"), "ISExProdutoID", "Acessórios");
            public static XORMField Quantidade = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.Quantidade, new Guid("2897880D-97BD-4C38-8FF8-714992EDB497"), "Quantidade", "Quantidade");
            public static XORMDecimalField ValorTabela = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.ValorTabela, new Guid("75712B49-252F-40E7-BFC4-EDE9E28318A8"), "ValorTabela", "Valor de Tabela");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.ValorCobrado, new Guid("E16BA921-18DD-4000-AED1-62491E3C3DF5"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.ValorTotal, new Guid("AF5D7EA3-847E-49B2-BCC7-4191122F1DE8"), "ValorTotal", "Valor Total");
            public static XORMPKField PETxAtendimentoAcessoriosID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID, new Guid("EF15CD4E-BA2D-43A1-AAC8-2CA99F6923B1"), "PETxAtendimentoAcessoriosID", "Accessórios do Atendimento");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.SYSxEstadoID, new Guid("84B4DE84-95BC-425F-A582-679231004DB3"), "SYSxEstadoID", "Estado");
            public static XORMDecimalField DescontoProporcional = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoAcessorios.DescontoProporcional, new Guid("47E9DCC6-FC03-4BF5-B37E-5715373E0E81"), "DescontoProporcional", "Desconto Proporcional");
        }
        #endregion xPETxAtendimentoAcessorios 


        public xISExItem ISExItem;
        public xPETxAtendimentoAcessorios PETxAtendimentoAcessorios;

        public AgendamentoProdutoSVC()
        {
            TupleType = typeof(AgendamentoProdutoSVC.XTuple);
            DataSetType = typeof(AgendamentoProdutoSVC.XDataSet);
            ServiceRuleCID = new Guid("7C9EB705-7553-42D4-9636-3F659B50CB6E");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("C308922A-F6D0-40B4-9650-2DDCDE9EEA1C");
            Name = "AgendamentoProduto";
            Title = "Acessórios do Produto";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, xPETxAtendimentoAcessorios.SYSxEstadoID.ID, xPETxAtendimentoAcessorios.Quantidade.ID, xPETxAtendimentoAcessorios.ValorTabela.ID, xPETxAtendimentoAcessorios.ValorCobrado.ID, xPETxAtendimentoAcessorios.ValorTotal.ID };
            DataSetFields = new Guid[] { xISExItem.ProdutoID.ID, xPETxAtendimentoAcessorios.DescontoProporcional.ID, xPETxAtendimentoAcessorios.ISExProdutoID.ID, xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.ID, xPETxAtendimentoAcessorios.PETxAtendimentoID.ID, xPETxAtendimentoAcessorios.Quantidade.ID, xISExItem.Nome.ID, xPETxAtendimentoAcessorios.SYSxEstadoID.ID, xPETxAtendimentoAcessorios.ValorCobrado.ID, xPETxAtendimentoAcessorios.ValorTabela.ID, xPETxAtendimentoAcessorios.ValorTotal.ID };
            PKField = xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.ID;
            ConfigTableID = new Guid("1EC64B57-D4BC-4D2B-AB16-F8C94D18656A");
            StateField = xPETxAtendimentoAcessorios.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("7C9EB705-7553-42D4-9636-3F659B50CB6E");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PETxAtendimentoAcessorios = new xPETxAtendimentoAcessorios();
            PETxAtendimentoAcessorios.IsReadOnly = false;
            AddTable(PETxAtendimentoAcessorios);
            MasterTableID = PETxAtendimentoAcessorios.ID;
            ISExItem_ISExItemID_PETxAtendimentoAcessorios_ISExProdutoID = AddReference(new XSVCReference(new Guid("EBB33CA4-4316-4F70-8716-BBCBE726A796"), "FK_EBB33CA443164F708716BBCBE726A796", AgendamentoProdutoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.gCID, xPETxAtendimentoAcessorios.ISExProdutoID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PETxAtendimentoAcessorios.ISExProdutoID
            xPETxAtendimentoAcessorios.DescontoProporcional.Length = 25;
            xPETxAtendimentoAcessorios.DescontoProporcional.Scale = 2;
            xPETxAtendimentoAcessorios.DescontoProporcional.IsDataField = true;
            xPETxAtendimentoAcessorios.DescontoProporcional.AllowEmpty = true;
            xPETxAtendimentoAcessorios.ISExProdutoID.IsDataField = true;
            xPETxAtendimentoAcessorios.ISExProdutoID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.GeneratePK = true;
            xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.IsDataField = true;
            xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.AllowEmpty = true;
            xPETxAtendimentoAcessorios.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimentoAcessorios.PETxAtendimentoID.AllowEmpty = true;
            xISExItem.ProdutoID.IsReadOnly = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xPETxAtendimentoAcessorios.Quantidade.Length = 25;
            xPETxAtendimentoAcessorios.Quantidade.IsDataField = true;
            xPETxAtendimentoAcessorios.Quantidade.AllowEmpty = true;
            xPETxAtendimentoAcessorios.SYSxEstadoID.IsDataField = true;
            xPETxAtendimentoAcessorios.SYSxEstadoID.AllowEmpty = true;
            xPETxAtendimentoAcessorios.ValorCobrado.Length = 25;
            xPETxAtendimentoAcessorios.ValorCobrado.Scale = 2;
            xPETxAtendimentoAcessorios.ValorCobrado.IsDataField = true;
            xPETxAtendimentoAcessorios.ValorCobrado.AllowEmpty = true;
            xPETxAtendimentoAcessorios.ValorTabela.Length = 25;
            xPETxAtendimentoAcessorios.ValorTabela.Scale = 2;
            xPETxAtendimentoAcessorios.ValorTabela.IsDataField = true;
            xPETxAtendimentoAcessorios.ValorTabela.AllowEmpty = true;
            xPETxAtendimentoAcessorios.ValorTotal.Length = 25;
            xPETxAtendimentoAcessorios.ValorTotal.Scale = 2;
            xPETxAtendimentoAcessorios.ValorTotal.IsDataField = true;
            xPETxAtendimentoAcessorios.ValorTotal.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xPETxAtendimentoAcessorios.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField DescontoProporcional => xPETxAtendimentoAcessorios.DescontoProporcional;
        public XORMField ISExProdutoID => xPETxAtendimentoAcessorios.ISExProdutoID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField PETxAtendimentoAcessoriosID => xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID;
        public XORMField PETxAtendimentoID => xPETxAtendimentoAcessorios.PETxAtendimentoID;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Quantidade => xPETxAtendimentoAcessorios.Quantidade;
        public XORMField SYSxEstadoID => xPETxAtendimentoAcessorios.SYSxEstadoID;
        public XORMField ValorCobrado => xPETxAtendimentoAcessorios.ValorCobrado;
        public XORMField ValorTabela => xPETxAtendimentoAcessorios.ValorTabela;
        public XORMField ValorTotal => xPETxAtendimentoAcessorios.ValorTotal;
        }
        #endregion XFields
        #region AgendamentoProdutoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Decimal DescontoProporcional
        {
            get
            {
                return (Decimal)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.DescontoProporcional.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.DescontoProporcional.ID] = value;
            }
        }
        public Decimal? oDescontoProporcional
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.DescontoProporcional, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Guid ISExProdutoID
        {
            get
            {
                return (Guid)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ISExProdutoID.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ISExProdutoID.ID] = value;
            }
        }
        public Guid? oISExProdutoID
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ISExProdutoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AgendamentoProdutoSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAtendimentoAcessoriosID
        {
            get
            {
                return (Guid)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoAcessoriosID
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoID.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[AgendamentoProdutoSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 Quantidade
        {
            get
            {
                return (Int32)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.Quantidade.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.Quantidade.ID] = value;
            }
        }
        public Int32? oQuantidade
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.Quantidade, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.SYSxEstadoID.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal ValorCobrado
        {
            get
            {
                return (Decimal)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorCobrado.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorCobrado.ID] = value;
            }
        }
        public Decimal? oValorCobrado
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorCobrado, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTabela
        {
            get
            {
                return (Decimal)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTabela.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTabela.ID] = value;
            }
        }
        public Decimal? oValorTabela
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTabela, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTotal
        {
            get
            {
                return (Decimal)Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTotal.ID];
            }
            set
            {
                Value[AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTotal.ID] = value;
            }
        }
        public Decimal? oValorTotal
        {
            get
            {
                GetOldValue(AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTotal, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AgendamentoProdutoSVC.XTuple

        #region AgendamentoProdutoSVC.XDataSet

        public class XDataSet : XDataSet<AgendamentoProdutoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AgendamentoProdutoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AgendamentoProdutoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid DescontoProporcional => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.DescontoProporcional.ID;
                public Guid ISExProdutoID => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ISExProdutoID.ID;
                public Guid Nome => AgendamentoProdutoSVC.xISExItem.Nome.ID;
                public Guid PETxAtendimentoAcessoriosID => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoAcessoriosID.ID;
                public Guid PETxAtendimentoID => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.PETxAtendimentoID.ID;
                public Guid ProdutoID => AgendamentoProdutoSVC.xISExItem.ProdutoID.ID;
                public Guid Quantidade => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.Quantidade.ID;
                public Guid SYSxEstadoID => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.SYSxEstadoID.ID;
                public Guid ValorCobrado => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorCobrado.ID;
                public Guid ValorTabela => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTabela.ID;
                public Guid ValorTotal => AgendamentoProdutoSVC.xPETxAtendimentoAcessorios.ValorTotal.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AgendamentoProdutoSVC.XDataSet);
            }

        }
        #endregion AgendamentoProdutoSVC.XDataSet
        #if !OnlyDef
        #region AgendamentoProdutoSVC.XRule
        public abstract class XRule : XServiceRule<AgendamentoProdutoSVC.XDataSet, AgendamentoProdutoSVC, AgendamentoProdutoSVC.XTuple>
        {
        }
        #endregion AgendamentoProdutoSVC.XRule

        [Guid(AgendamentoProdutoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AgendamentoProdutoSVC))]
        protected class _Service : Service<AgendamentoProdutoSVC, XDataSet, XTuple>
        {
            public const String sCID = "33D09B28-AC10-432D-A62B-A6436BBD1690";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AgendamentoProdutoSVC, XDataSet, XTuple>, XService
             where TModel : AgendamentoProdutoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}