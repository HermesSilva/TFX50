//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.VisaoGeral
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\VisaoGeral\Aniversario.dssvc")]
    [XRegister(typeof(AniversarioSVC), sCID)]
    public class AniversarioSVC : XSVCModel
    {
        public const String sCID = "0664EE7B-9848-4482-80CC-92D5593F3DDA";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoaEmpresaGrupo_SYSxPessoaID_PETxAnimalTutor_PETxTutorID; // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
        public static XSVCReference PETxAnimalTutor_PETxAnimalID_PETxAnimal_PETxAnimalID; // PETxAnimalTutor.PETxAnimalID --> PETxAnimal.PETxAnimalID

        #region xPETxAnimalTutor 
        public class xPETxAnimalTutor : XSVCTable
        {

            public static Guid gCID => new Guid("2EC8BCED-64FC-40EA-9A45-1B35C774D439");

            public xPETxAnimalTutor()
            {
                Name = "PETxAnimalTutor";
                Alias = "PETxAnimalTutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxTutorID, new Guid("71ADFA50-AF42-4B16-8145-954FB911C399"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalID, new Guid("8F35A671-3FA9-4126-9BA6-859CB6EA1C4B"), "PETxAnimalID", "PET");
            public static XORMFaceField PETxAnimalTutorID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalTutorID, new Guid("89641B49-F75A-4A80-9200-00D2982ED555"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.SYSxEstadoID, new Guid("378AEB36-7CB4-4A4E-8423-4560E25001FF"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAnimalTutor 


        #region xSYSxPessoaEmpresaGrupo 
        public class xSYSxPessoaEmpresaGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("2FC95637-3469-4B56-9D9B-B7F1710776A2");

            public xSYSxPessoaEmpresaGrupo()
            {
                Name = "SYSxPessoaEmpresaGrupo";
                Alias = "SYSxPessoaEmpresaGrupo";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.gCID;

                Items.Add(SYSxEmpresaGrupoID, SYSxEmpresaGrupoID.ID);
                SYSxEmpresaGrupoID.Owner = this;
                SYSxEmpresaGrupoID.OwnerID = ID;
                SYSxEmpresaGrupoID.TableName = Name;
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(SYSxPessoaEmpresaGrupoID, SYSxPessoaEmpresaGrupoID.ID);
                SYSxPessoaEmpresaGrupoID.Owner = this;
                SYSxPessoaEmpresaGrupoID.OwnerID = ID;
                SYSxPessoaEmpresaGrupoID.TableName = Name;
            }

            public static XORMFKField SYSxEmpresaGrupoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxEmpresaGrupoID, new Guid("883028E3-03C7-4E3B-B409-BE1DAD9243AA"), "SYSxEmpresaGrupoID", "Grupo de Empresas");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaID, new Guid("4D5C7BC6-B4D9-45A7-97E2-49C8BBB8C063"), "SYSxPessoaID", "Pessoas");
            public static XORMPKField SYSxPessoaEmpresaGrupoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaEmpresaGrupoID, new Guid("A7E8A048-6D28-4D9D-902A-B32CC834CF46"), "SYSxPessoaEmpresaGrupoID", "Pessoa por Grupo de Empresa");
        }
        #endregion xSYSxPessoaEmpresaGrupo 


        #region xPETxAnimal 
        public class xPETxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("C4F94304-769D-4FEE-B973-1279F5F28CC5");

            public xPETxAnimal()
            {
                Name = "PETxAnimal";
                Alias = "PETxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimal.gCID;

                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                PETxAnimalID.Alias = "PETxAnimalID";
                Items.Add(ERPxSexoID, ERPxSexoID.ID);
                ERPxSexoID.Owner = this;
                ERPxSexoID.OwnerID = ID;
                ERPxSexoID.TableName = Name;
                Items.Add(PETxRacaID, PETxRacaID.ID);
                PETxRacaID.Owner = this;
                PETxRacaID.OwnerID = ID;
                PETxRacaID.TableName = Name;
                Items.Add(PETxPelagemID, PETxPelagemID.ID);
                PETxPelagemID.Owner = this;
                PETxPelagemID.OwnerID = ID;
                PETxPelagemID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(PETxPorteID, PETxPorteID.ID);
                PETxPorteID.Owner = this;
                PETxPorteID.OwnerID = ID;
                PETxPorteID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(Cor, Cor.ID);
                Cor.Owner = this;
                Cor.OwnerID = ID;
                Cor.TableName = Name;
            }

            public static XORMFaceField PETxAnimalID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxAnimalID, new Guid("434D29CB-943F-4B9D-8604-9D6067283C3A"), "PETxAnimalID", "PET");
            public static XORMFKField ERPxSexoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.ERPxSexoID, new Guid("541A1EAD-D7AF-4EFD-802F-FE4F67965DDE"), "ERPxSexoID", "Sexo");
            public static XORMFKField PETxRacaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxRacaID, new Guid("2C764E1A-2C25-4C89-A496-125FCACB9C8D"), "PETxRacaID", "Raça");
            public static XORMFKField PETxPelagemID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxPelagemID, new Guid("AEF2F9C5-AB23-439B-8E53-E202F2E306AA"), "PETxPelagemID", "Pelagem");
            public static XORMDateTimeField Nascimento = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Nascimento, new Guid("C05806FD-A378-495C-BC8D-36D524F0B8DB"), "Nascimento", "Nascimento");
            public static XORMField Nome = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Nome, new Guid("3CEA23D4-E78A-4F6F-9A7A-53F9EE57333C"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.SYSxEstadoID, new Guid("160FC301-8172-422E-BFD5-78DE066DAFC1"), "SYSxEstadoID", "Estado");
            public static XORMFKField PETxPorteID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxPorteID, new Guid("BF578654-E774-4675-A599-E497ADA7023F"), "PETxPorteID", "Porte");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Observacao, new Guid("DB3B733C-D799-4501-963E-364C7E03A91A"), "Observacao", "Observação");
            public static XORMField Cor = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Cor, new Guid("5234556A-6519-4F15-A9D0-151304B50596"), "Cor", "Cor");
        }
        #endregion xPETxAnimal 


        public xPETxAnimal PETxAnimal;
        public xPETxAnimalTutor PETxAnimalTutor;
        public xSYSxPessoaEmpresaGrupo SYSxPessoaEmpresaGrupo;
        public static readonly XORMParameterField PrimaryKeyID = new XORMParameterField(new Guid("C57C1B4F-7468-4037-9F84-95462326FAB7"), "PrimaryKeyID", "PrimaryKeyID", XGuid.CID, 0, 0, false, gCID, null);

        public AniversarioSVC()
        {
            TupleType = typeof(AniversarioSVC.XTuple);
            DataSetType = typeof(AniversarioSVC.XDataSet);
            ServiceRuleCID = new Guid("C17DD061-4A8D-4309-9AC5-FFB81617E598");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("0664EE7B-9848-4482-80CC-92D5593F3DDA");
            Name = "Aniversario";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxAnimal.Nome.ID, xPETxAnimal.PETxAnimalID.ID };
            OrderByFields = new Guid[] { xPETxAnimal.Nome.ID };
            DataSetFields = new Guid[] { xPETxAnimal.Nome.ID, xPETxAnimal.PETxAnimalID.ID, PrimaryKeyID.ID, xPETxAnimal.Nascimento.ID };
            PKField = PrimaryKeyID.ID;
            MasterRuleCID = new Guid("C17DD061-4A8D-4309-9AC5-FFB81617E598");
            PETxAnimal = new xPETxAnimal();
            PETxAnimal.IsReadOnly = true;
            AddTable(PETxAnimal);
            PETxAnimalTutor = new xPETxAnimalTutor();
            PETxAnimalTutor.IsReadOnly = true;
            AddTable(PETxAnimalTutor);
            SYSxPessoaEmpresaGrupo = new xSYSxPessoaEmpresaGrupo();
            SYSxPessoaEmpresaGrupo.IsReadOnly = true;
            AddTable(SYSxPessoaEmpresaGrupo);
            MasterTableID = PETxAnimal.ID;
            AttachmentTableID = new Guid("01301E20-761A-4FBD-BAB5-706F923D01C4");
            AttachmentType = XAttachmentType.Guid;
            SYSxPessoaEmpresaGrupo_SYSxPessoaID_PETxAnimalTutor_PETxTutorID = AddReference(new XSVCReference(new Guid("BD06E98E-4113-40D3-BCE3-9C25F1E010D9"), "FK_BD06E98E411340D3BCE39C25F1E010D9", AniversarioSVC.xSYSxPessoaEmpresaGrupo.gCID, xSYSxPessoaEmpresaGrupo.SYSxPessoaID.ID, AniversarioSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxTutorID.ID, XJoinType.Inner)); // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
            PETxAnimalTutor_PETxAnimalID_PETxAnimal_PETxAnimalID = AddReference(new XSVCReference(new Guid("FF47480C-061C-49C6-9D45-28B7A2B77ED1"), "FK_FF47480C061C49C69D4528B7A2B77ED1", AniversarioSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxAnimalID.ID, AniversarioSVC.xPETxAnimal.gCID, xPETxAnimal.PETxAnimalID.ID, XJoinType.Inner)); // PETxAnimalTutor.PETxAnimalID --> PETxAnimal.PETxAnimalID
            AddField(PrimaryKeyID);
            PrimaryKeyID.IsParam = true;
            xPETxAnimal.Nascimento.IsReadOnly = true;
            xPETxAnimal.Nascimento.Mask = "dd/MM/yyyy";
            xPETxAnimal.Nascimento.IsDataField = true;
            xPETxAnimal.Nascimento.AllowEmpty = true;
            xPETxAnimal.Nome.IsReadOnly = true;
            xPETxAnimal.Nome.OrderType = XOrderType.Asc;
            xPETxAnimal.Nome.Length = 60;
            xPETxAnimal.Nome.IsDataField = true;
            xPETxAnimal.Nome.AllowEmpty = true;
            xPETxAnimal.PETxAnimalID.IsReadOnly = true;
            xPETxAnimal.PETxAnimalID.IsDataField = true;
            xPETxAnimal.PETxAnimalID.Icon = "gift.svg";
            xPETxAnimal.PETxAnimalID.AllowEmpty = true;
            PrimaryKeyID.GeneratePK = true;
            PrimaryKeyID.IsReadOnly = false;
            PrimaryKeyID.Length = 0;
            PrimaryKeyID.Scale = 0;
            PrimaryKeyID.IsDataField = true;
            PrimaryKeyID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPETxAnimal.PETxAnimalID);
            pWhere.Add(XOperator.NotEqualTo);
            pWhere.Add(global::Projecao.Core.PET.DB.PETx.PETxAnimal.XDefault._00000000000000000000000000000000);
        }

        #region XFields

        public class XFields
        {
        public XORMField Nascimento => xPETxAnimal.Nascimento;
        public XORMField Nome => xPETxAnimal.Nome;
        public XORMField PETxAnimalID => xPETxAnimal.PETxAnimalID;
        public XORMField PrimaryKeyID => AniversarioSVC.PrimaryKeyID;
        }
        #endregion XFields
        #region AniversarioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[AniversarioSVC.xPETxAnimal.Nascimento.ID];
            }
            set
            {
                Value[AniversarioSVC.xPETxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(AniversarioSVC.xPETxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AniversarioSVC.xPETxAnimal.Nome.ID];
            }
            set
            {
                Value[AniversarioSVC.xPETxAnimal.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AniversarioSVC.xPETxAnimal.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAnimalID
        {
            get
            {
                return (Guid)Value[AniversarioSVC.xPETxAnimal.PETxAnimalID.ID];
            }
            set
            {
                Value[AniversarioSVC.xPETxAnimal.PETxAnimalID.ID] = value;
            }
        }
        public Guid? oPETxAnimalID
        {
            get
            {
                GetOldValue(AniversarioSVC.xPETxAnimal.PETxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PrimaryKeyID
        {
            get
            {
                return (Guid)Value[AniversarioSVC.PrimaryKeyID.ID];
            }
            set
            {
                Value[AniversarioSVC.PrimaryKeyID.ID] = value;
            }
        }
        public Guid? oPrimaryKeyID
        {
            get
            {
                GetOldValue(AniversarioSVC.PrimaryKeyID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AniversarioSVC.XTuple

        #region AniversarioSVC.XDataSet

        public class XDataSet : XDataSet<AniversarioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AniversarioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AniversarioSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Nascimento => AniversarioSVC.xPETxAnimal.Nascimento.ID;
                public Guid Nome => AniversarioSVC.xPETxAnimal.Nome.ID;
                public Guid PETxAnimalID => AniversarioSVC.xPETxAnimal.PETxAnimalID.ID;
                public Guid PrimaryKeyID => AniversarioSVC.PrimaryKeyID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AniversarioSVC.XDataSet);
            }

        }
        #endregion AniversarioSVC.XDataSet
        #if !OnlyDef
        #region AniversarioSVC.XRule
        public abstract class XRule : XServiceRule<AniversarioSVC.XDataSet, AniversarioSVC, AniversarioSVC.XTuple>
        {
        }
        #endregion AniversarioSVC.XRule

        [Guid(AniversarioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AniversarioSVC))]
        protected class _Service : Service<AniversarioSVC, XDataSet, XTuple>
        {
            public const String sCID = "3A96ADAF-41AB-4CD5-8670-3AEFAFE5F84F";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AniversarioSVC, XDataSet, XTuple>, XService
             where TModel : AniversarioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}