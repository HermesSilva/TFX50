//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.ISE.DB;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Consultas
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Consultas\ConsultasExames.dssvc")]
    [XRegister(typeof(ConsultasExamesSVC), sCID)]
    public class ConsultasExamesSVC : XSVCModel
    {
        public const String sCID = "F24C7BB3-C467-48E6-87FD-A9E950388426";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAtendimentoExames_PETxAtendimentoID_PETxAnamnesia_PETxAnamnesiaID; // PETxAtendimentoExames.PETxAtendimentoID --> PETxAnamnesia.PETxAnamnesiaID
        public static XSVCReference ISExItem_ISExItemID_PETxAtendimentoExames_ISExExameID; // ISExItem.ISExItemID --> PETxAtendimentoExames.ISExExameID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("0D1E25DB-306C-44DB-A042-6C3DE0C125FA");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("215E6615-2251-4DCB-BA6A-919FC2324376"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("B8EE020E-0DFD-439C-9CFF-0753D53C1530"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("68779B6E-8850-45F6-AE64-38CC64BEDAC8"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("E569B2A6-6137-4958-BCFD-255E2687F818"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("0E7089FC-1B7F-4F51-9522-3F35EE94E937"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("9E8FA61D-5467-4F38-A548-BD25376F7B28"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("EC2FCBCF-AE99-4AC6-8C2D-3117F68A92B1"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("E673BD68-5407-4F8A-91DF-1FD13E0B7D9A"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("2DC47017-44AE-432F-BC8A-28085FDFC2F4"), "ProdutoID", "CÃ³digo Legado");
        }
        #endregion xISExItem 


        #region xPETxAtendimentoExames 
        public class xPETxAtendimentoExames : XSVCTable
        {

            public static Guid gCID => new Guid("369FEA58-3A1E-41D0-BD4A-41391DC9C63C");

            public xPETxAtendimentoExames()
            {
                Name = "PETxAtendimentoExames";
                Alias = "PETxAtendimentoExames";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.gCID;

                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(ISExExameID, ISExExameID.ID);
                ISExExameID.Owner = this;
                ISExExameID.OwnerID = ID;
                ISExExameID.TableName = Name;
                ISExExameID.Alias = "ISExExameID";
                Items.Add(PETxAtendimentoExamesID, PETxAtendimentoExamesID.ID);
                PETxAtendimentoExamesID.Owner = this;
                PETxAtendimentoExamesID.OwnerID = ID;
                PETxAtendimentoExamesID.TableName = Name;
                PETxAtendimentoExamesID.Alias = "PETxAtendimentoExamesID";
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                PETxAtendimentoEstadoID.Alias = "PETxAtendimentoEstadoID";
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                ValorCobrado.Alias = "ValorCobrado";
                Items.Add(ValorTabela, ValorTabela.ID);
                ValorTabela.Owner = this;
                ValorTabela.OwnerID = ID;
                ValorTabela.TableName = Name;
                ValorTabela.Alias = "ValorTabela";
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                ValorTotal.Alias = "ValorTotal";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.PETxAtendimentoID, new Guid("A7DD1E97-9860-407A-B2D5-F2450A111F6D"), "PETxAtendimentoID", "Atendimento");
            public static XORMFKField ISExExameID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ISExExameID, new Guid("ADB8D679-F5DB-4AF1-8AAE-FAC327C181BF"), "ISExExameID", "Exames");
            public static XORMPKField PETxAtendimentoExamesID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.PETxAtendimentoExamesID, new Guid("2E4B053E-7675-4A37-9B36-ABC2AD7F8DC4"), "PETxAtendimentoExamesID", "Atendimento Exames");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.PETxAtendimentoEstadoID, new Guid("48185415-018B-4A55-85F1-BB45AF9209AC"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ValorCobrado, new Guid("1F592D64-B4CF-4DAA-9D9B-9E5F9CE5C964"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField ValorTabela = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ValorTabela, new Guid("307BD24F-400D-4B4F-A4E2-938B078727DC"), "ValorTabela", "Valor de Tabela");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.ValorTotal, new Guid("ECCCD021-EC82-4080-87ED-318FC166CD40"), "ValorTotal", "Valor Total");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoExames.SYSxEstadoID, new Guid("FA5C15BE-1EC0-4D0F-B326-B5AB107A33B9"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAtendimentoExames 


        #region xPETxAnamnesia 
        public class xPETxAnamnesia : XSVCTable
        {

            public static Guid gCID => new Guid("85A7D933-6DC4-45CB-BCFF-8D0413F16CBA");

            public xPETxAnamnesia()
            {
                Name = "PETxAnamnesia";
                Alias = "PETxAnamnesia";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.gCID;

                Items.Add(PETxAnamnesiaID, PETxAnamnesiaID.ID);
                PETxAnamnesiaID.Owner = this;
                PETxAnamnesiaID.OwnerID = ID;
                PETxAnamnesiaID.TableName = Name;
                Items.Add(Descritivo, Descritivo.ID);
                Descritivo.Owner = this;
                Descritivo.OwnerID = ID;
                Descritivo.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                PETxAnimalID.Alias = "PETxAnimalID";
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
            }

            public static XORMPKField PETxAnamnesiaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAnamnesiaID, new Guid("F134C144-78D6-48F1-BBDC-C0909469DCB9"), "PETxAnamnesiaID", "AnamnÃ©sia");
            public static XORMField Descritivo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Descritivo, new Guid("B3D4D46A-192E-48D5-A261-DB02DF55BD5F"), "Descritivo", "Descritivo");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Data, new Guid("2BFDBDF1-0F8E-4F9F-BEA9-A4FE8A6EEF8A"), "Data", "Data");
            public static XORMField PETxAnimalID = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAnimalID, new Guid("FA6E8814-61A6-448D-B5E2-9D4C30490E23"), "PETxAnimalID", "PET");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Numero, new Guid("33E63099-490A-4EE4-B8A3-77B0C001D997"), "Numero", "NÃºmero");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAtendimentoClasseID, new Guid("3B7332C6-6483-4A06-978A-998E017D4A02"), "PETxAtendimentoClasseID", "Classe");
        }
        #endregion xPETxAnamnesia 


        public xISExItem ISExItem;
        public xPETxAnamnesia PETxAnamnesia;
        public xPETxAtendimentoExames PETxAtendimentoExames;

        public ConsultasExamesSVC()
        {
            TupleType = typeof(ConsultasExamesSVC.XTuple);
            DataSetType = typeof(ConsultasExamesSVC.XDataSet);
            ServiceRuleCID = new Guid("296AA46D-91CD-4B8B-A563-F6BE0F212067");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F24C7BB3-C467-48E6-87FD-A9E950388426");
            Name = "ConsultasExames";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxAnamnesia.Data.ID, xPETxAnamnesia.Numero.ID, xISExItem.Nome.ID, xPETxAtendimentoExames.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xPETxAnamnesia.Numero.ID, xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xPETxAnamnesia.Data.ID, xPETxAnamnesia.Numero.ID, xPETxAnamnesia.PETxAnimalID.ID, xPETxAtendimentoExames.PETxAtendimentoID.ID, xPETxAtendimentoExames.ISExExameID.ID, xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID, xPETxAtendimentoExames.ValorCobrado.ID, xPETxAtendimentoExames.ValorTabela.ID, xPETxAtendimentoExames.ValorTotal.ID, xPETxAtendimentoExames.SYSxEstadoID.ID, xISExItem.Nome.ID, xPETxAtendimentoExames.PETxAtendimentoExamesID.ID };
            StateField = xPETxAtendimentoExames.SYSxEstadoID.ID;
            PKField = xPETxAtendimentoExames.PETxAtendimentoExamesID.ID;
            ConfigTableID = new Guid("13F1BC43-58DC-4F2B-8A68-26F475AF147E");
            MasterRuleCID = new Guid("296AA46D-91CD-4B8B-A563-F6BE0F212067");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PETxAnamnesia = new xPETxAnamnesia();
            PETxAnamnesia.IsReadOnly = true;
            AddTable(PETxAnamnesia);
            PETxAtendimentoExames = new xPETxAtendimentoExames();
            PETxAtendimentoExames.IsReadOnly = false;
            AddTable(PETxAtendimentoExames);
            MasterTableID = PETxAtendimentoExames.ID;
            PETxAtendimentoExames_PETxAtendimentoID_PETxAnamnesia_PETxAnamnesiaID = AddReference(new XSVCReference(new Guid("24E60F33-1824-4801-A6DC-C4E4CA3A3EE1"), "FK_24E60F3318244801A6DCC4E4CA3A3EE1", ConsultasExamesSVC.xPETxAtendimentoExames.gCID, xPETxAtendimentoExames.PETxAtendimentoID.ID, ConsultasExamesSVC.xPETxAnamnesia.gCID, xPETxAnamnesia.PETxAnamnesiaID.ID, XJoinType.Inner)); // PETxAtendimentoExames.PETxAtendimentoID --> PETxAnamnesia.PETxAnamnesiaID
            ISExItem_ISExItemID_PETxAtendimentoExames_ISExExameID = AddReference(new XSVCReference(new Guid("EBA288A9-AD08-469C-A9EA-DDFC45696211"), "FK_EBA288A9AD08469CA9EADDFC45696211", ConsultasExamesSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, ConsultasExamesSVC.xPETxAtendimentoExames.gCID, xPETxAtendimentoExames.ISExExameID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PETxAtendimentoExames.ISExExameID
            xPETxAnamnesia.Data.IsReadOnly = true;
            xPETxAnamnesia.Data.IsDataField = true;
            xPETxAnamnesia.Data.AllowEmpty = true;
            xPETxAtendimentoExames.ISExExameID.IsDataField = true;
            xPETxAtendimentoExames.ISExExameID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xPETxAnamnesia.Numero.IsReadOnly = true;
            xPETxAnamnesia.Numero.OrderType = XOrderType.Desc;
            xPETxAnamnesia.Numero.IsDataField = true;
            xPETxAnamnesia.Numero.AllowEmpty = true;
            xPETxAnamnesia.PETxAnimalID.IsReadOnly = true;
            xPETxAnamnesia.PETxAnimalID.IsDataField = true;
            xPETxAnamnesia.PETxAnimalID.AllowEmpty = true;
            xPETxAtendimentoExames.PETxAtendimentoEstadoID.IsDataField = true;
            xPETxAtendimentoExames.PETxAtendimentoEstadoID.AllowEmpty = true;
            xPETxAtendimentoExames.PETxAtendimentoExamesID.GeneratePK = true;
            xPETxAtendimentoExames.PETxAtendimentoExamesID.IsDataField = true;
            xPETxAtendimentoExames.PETxAtendimentoExamesID.AllowEmpty = true;
            xPETxAtendimentoExames.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimentoExames.PETxAtendimentoID.AllowEmpty = true;
            xPETxAtendimentoExames.SYSxEstadoID.IsDataField = true;
            xPETxAtendimentoExames.SYSxEstadoID.AllowEmpty = true;
            xPETxAtendimentoExames.ValorCobrado.Length = 25;
            xPETxAtendimentoExames.ValorCobrado.Scale = 2;
            xPETxAtendimentoExames.ValorCobrado.IsDataField = true;
            xPETxAtendimentoExames.ValorCobrado.AllowEmpty = true;
            xPETxAtendimentoExames.ValorTabela.Length = 25;
            xPETxAtendimentoExames.ValorTabela.Scale = 2;
            xPETxAtendimentoExames.ValorTabela.IsDataField = true;
            xPETxAtendimentoExames.ValorTabela.AllowEmpty = true;
            xPETxAtendimentoExames.ValorTotal.Length = 25;
            xPETxAtendimentoExames.ValorTotal.Scale = 2;
            xPETxAtendimentoExames.ValorTotal.IsDataField = true;
            xPETxAtendimentoExames.ValorTotal.AllowEmpty = true;
            xPETxAtendimentoExames.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPETxAnamnesia.PETxAtendimentoClasseID);
            pWhere.Add(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoClasse.XDefault.Saude);
        }

        #region XFields

        public class XFields
        {
        public XORMField Data => xPETxAnamnesia.Data;
        public XORMField ISExExameID => xPETxAtendimentoExames.ISExExameID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField Numero => xPETxAnamnesia.Numero;
        public XORMField PETxAnimalID => xPETxAnamnesia.PETxAnimalID;
        public XORMField PETxAtendimentoEstadoID => xPETxAtendimentoExames.PETxAtendimentoEstadoID;
        public XORMField PETxAtendimentoExamesID => xPETxAtendimentoExames.PETxAtendimentoExamesID;
        public XORMField PETxAtendimentoID => xPETxAtendimentoExames.PETxAtendimentoID;
        public XORMField SYSxEstadoID => xPETxAtendimentoExames.SYSxEstadoID;
        public XORMField ValorCobrado => xPETxAtendimentoExames.ValorCobrado;
        public XORMField ValorTabela => xPETxAtendimentoExames.ValorTabela;
        public XORMField ValorTotal => xPETxAtendimentoExames.ValorTotal;
        }
        #endregion XFields
        #region ConsultasExamesSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ConsultasExamesSVC.xPETxAnamnesia.Data.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAnamnesia.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAnamnesia.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Guid ISExExameID
        {
            get
            {
                return (Guid)Value[ConsultasExamesSVC.xPETxAtendimentoExames.ISExExameID.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.ISExExameID.ID] = value;
            }
        }
        public Guid? oISExExameID
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.ISExExameID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ConsultasExamesSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 Numero
        {
            get
            {
                return (Int32)Value[ConsultasExamesSVC.xPETxAnamnesia.Numero.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAnamnesia.Numero.ID] = value;
            }
        }
        public Int32? oNumero
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAnamnesia.Numero, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid PETxAnimalID
        {
            get
            {
                return (Guid)Value[ConsultasExamesSVC.xPETxAnamnesia.PETxAnimalID.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAnamnesia.PETxAnimalID.ID] = value;
            }
        }
        public Guid? oPETxAnimalID
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAnamnesia.PETxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PETxAtendimentoEstadoID
        {
            get
            {
                return (Int16)Value[ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID] = value;
            }
        }
        public Int16? oPETxAtendimentoEstadoID
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PETxAtendimentoExamesID
        {
            get
            {
                return (Guid)Value[ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoExamesID
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConsultasExamesSVC.xPETxAtendimentoExames.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal ValorCobrado
        {
            get
            {
                return (Decimal)Value[ConsultasExamesSVC.xPETxAtendimentoExames.ValorCobrado.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.ValorCobrado.ID] = value;
            }
        }
        public Decimal? oValorCobrado
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.ValorCobrado, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTabela
        {
            get
            {
                return (Decimal)Value[ConsultasExamesSVC.xPETxAtendimentoExames.ValorTabela.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.ValorTabela.ID] = value;
            }
        }
        public Decimal? oValorTabela
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.ValorTabela, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal ValorTotal
        {
            get
            {
                return (Decimal)Value[ConsultasExamesSVC.xPETxAtendimentoExames.ValorTotal.ID];
            }
            set
            {
                Value[ConsultasExamesSVC.xPETxAtendimentoExames.ValorTotal.ID] = value;
            }
        }
        public Decimal? oValorTotal
        {
            get
            {
                GetOldValue(ConsultasExamesSVC.xPETxAtendimentoExames.ValorTotal, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConsultasExamesSVC.XTuple

        #region ConsultasExamesSVC.XDataSet

        public class XDataSet : XDataSet<ConsultasExamesSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConsultasExamesSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConsultasExamesSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Data => ConsultasExamesSVC.xPETxAnamnesia.Data.ID;
                public Guid ISExExameID => ConsultasExamesSVC.xPETxAtendimentoExames.ISExExameID.ID;
                public Guid Nome => ConsultasExamesSVC.xISExItem.Nome.ID;
                public Guid Numero => ConsultasExamesSVC.xPETxAnamnesia.Numero.ID;
                public Guid PETxAnimalID => ConsultasExamesSVC.xPETxAnamnesia.PETxAnimalID.ID;
                public Guid PETxAtendimentoEstadoID => ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoEstadoID.ID;
                public Guid PETxAtendimentoExamesID => ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoExamesID.ID;
                public Guid PETxAtendimentoID => ConsultasExamesSVC.xPETxAtendimentoExames.PETxAtendimentoID.ID;
                public Guid SYSxEstadoID => ConsultasExamesSVC.xPETxAtendimentoExames.SYSxEstadoID.ID;
                public Guid ValorCobrado => ConsultasExamesSVC.xPETxAtendimentoExames.ValorCobrado.ID;
                public Guid ValorTabela => ConsultasExamesSVC.xPETxAtendimentoExames.ValorTabela.ID;
                public Guid ValorTotal => ConsultasExamesSVC.xPETxAtendimentoExames.ValorTotal.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ConsultasExamesSVC.XDataSet);
            }

        }
        #endregion ConsultasExamesSVC.XDataSet
        #if !OnlyDef
        #region ConsultasExamesSVC.XRule
        public abstract class XRule : XServiceRule<ConsultasExamesSVC.XDataSet, ConsultasExamesSVC, ConsultasExamesSVC.XTuple>
        {
        }
        #endregion ConsultasExamesSVC.XRule

        [Guid(ConsultasExamesSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConsultasExamesSVC))]
        protected class _Service : Service<ConsultasExamesSVC, XDataSet, XTuple>
        {
            public const String sCID = "9B2CF535-AA29-4DDB-B991-8EE3A2C542C8";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConsultasExamesSVC, XDataSet, XTuple>, XService
             where TModel : ConsultasExamesSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}