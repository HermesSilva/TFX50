//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Consultas
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Consultas\ConsultasReceitas.dssvc")]
    [XRegister(typeof(ConsultasReceitasSVC), sCID)]
    public class ConsultasReceitasSVC : XSVCModel
    {
        public const String sCID = "90957524-38D8-4B39-AA54-7B4BBC9190B2";
        public static Guid gCID = new Guid(sCID);

        #region xPETxReceita 
        public class xPETxReceita : XSVCTable
        {

            public static Guid gCID => new Guid("DBEF6610-D726-4591-83CC-52F878A92287");

            public xPETxReceita()
            {
                Name = "PETxReceita";
                Alias = "PETxReceita";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxReceita.gCID;

                Items.Add(PETxReceitaID, PETxReceitaID.ID);
                PETxReceitaID.Owner = this;
                PETxReceitaID.OwnerID = ID;
                PETxReceitaID.TableName = Name;
                PETxReceitaID.Alias = "PETxReceitaID";
                Items.Add(PETxAnamnesiaID, PETxAnamnesiaID.ID);
                PETxAnamnesiaID.Owner = this;
                PETxAnamnesiaID.OwnerID = ID;
                PETxAnamnesiaID.TableName = Name;
                PETxAnamnesiaID.Alias = "PETxAnamnesiaID";
                Items.Add(Descritivo, Descritivo.ID);
                Descritivo.Owner = this;
                Descritivo.OwnerID = ID;
                Descritivo.TableName = Name;
                Descritivo.Alias = "Descritivo";
                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                ERPxProfissionalID.Alias = "ERPxProfissionalID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
            }

            public static XORMPKField PETxReceitaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxReceita.PETxReceitaID, new Guid("AEAF716B-7F54-4119-8580-40E7694D1AD5"), "PETxReceitaID", "Receita");
            public static XORMFKField PETxAnamnesiaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxReceita.PETxAnamnesiaID, new Guid("A633730D-98BE-49DA-97E8-4C06ED9385D9"), "PETxAnamnesiaID", "AnamnÃ©sia");
            public static XORMField Descritivo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxReceita.Descritivo, new Guid("951FDC1F-FC09-4BE5-9BC5-6020EE0C98B6"), "Descritivo", "Descritivo");
            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxReceita.ERPxProfissionalID, new Guid("BC40E13A-9A9D-407D-BF7A-10A9F941F188"), "ERPxProfissionalID", "Profissionais");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxReceita.Data, new Guid("F4E3AD5A-5A2A-4196-AB33-80977268B336"), "Data", "Data");
        }
        #endregion xPETxReceita 


        public xPETxReceita PETxReceita;

        public ConsultasReceitasSVC()
        {
            TupleType = typeof(ConsultasReceitasSVC.XTuple);
            DataSetType = typeof(ConsultasReceitasSVC.XDataSet);
            ServiceRuleCID = new Guid("34DC02CB-FC89-46D7-AB87-132A4E4A969E");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("90957524-38D8-4B39-AA54-7B4BBC9190B2");
            Name = "ConsultasReceitas";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxReceita.Descritivo.ID };
            DataSetFields = new Guid[] { xPETxReceita.PETxReceitaID.ID, xPETxReceita.PETxAnamnesiaID.ID, xPETxReceita.Descritivo.ID, xPETxReceita.ERPxProfissionalID.ID, xPETxReceita.Data.ID };
            PKField = xPETxReceita.PETxReceitaID.ID;
            ConfigTableID = new Guid("6493256C-0A19-4ED1-A775-9F9975D32B6D");
            MasterRuleCID = new Guid("34DC02CB-FC89-46D7-AB87-132A4E4A969E");
            PETxReceita = new xPETxReceita();
            PETxReceita.IsReadOnly = false;
            AddTable(PETxReceita);
            MasterTableID = PETxReceita.ID;
            xPETxReceita.Data.IsDataField = true;
            xPETxReceita.Data.AllowEmpty = true;
            xPETxReceita.Descritivo.IsDataField = true;
            xPETxReceita.Descritivo.AllowEmpty = true;
            xPETxReceita.ERPxProfissionalID.IsDataField = true;
            xPETxReceita.ERPxProfissionalID.AllowEmpty = true;
            xPETxReceita.PETxAnamnesiaID.IsDataField = true;
            xPETxReceita.PETxAnamnesiaID.AllowEmpty = true;
            xPETxReceita.PETxReceitaID.GeneratePK = true;
            xPETxReceita.PETxReceitaID.IsDataField = true;
            xPETxReceita.PETxReceitaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Data => xPETxReceita.Data;
        public XORMField Descritivo => xPETxReceita.Descritivo;
        public XORMField ERPxProfissionalID => xPETxReceita.ERPxProfissionalID;
        public XORMField PETxAnamnesiaID => xPETxReceita.PETxAnamnesiaID;
        public XORMField PETxReceitaID => xPETxReceita.PETxReceitaID;
        }
        #endregion XFields
        #region ConsultasReceitasSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ConsultasReceitasSVC.xPETxReceita.Data.ID];
            }
            set
            {
                Value[ConsultasReceitasSVC.xPETxReceita.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ConsultasReceitasSVC.xPETxReceita.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Descritivo
        {
            get
            {
                return (String)Value[ConsultasReceitasSVC.xPETxReceita.Descritivo.ID];
            }
            set
            {
                Value[ConsultasReceitasSVC.xPETxReceita.Descritivo.ID] = value;
            }
        }
        public String? oDescritivo
        {
            get
            {
                GetOldValue(ConsultasReceitasSVC.xPETxReceita.Descritivo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ERPxProfissionalID
        {
            get
            {
                return (Guid)Value[ConsultasReceitasSVC.xPETxReceita.ERPxProfissionalID.ID];
            }
            set
            {
                Value[ConsultasReceitasSVC.xPETxReceita.ERPxProfissionalID.ID] = value;
            }
        }
        public Guid? oERPxProfissionalID
        {
            get
            {
                GetOldValue(ConsultasReceitasSVC.xPETxReceita.ERPxProfissionalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAnamnesiaID
        {
            get
            {
                return (Guid)Value[ConsultasReceitasSVC.xPETxReceita.PETxAnamnesiaID.ID];
            }
            set
            {
                Value[ConsultasReceitasSVC.xPETxReceita.PETxAnamnesiaID.ID] = value;
            }
        }
        public Guid? oPETxAnamnesiaID
        {
            get
            {
                GetOldValue(ConsultasReceitasSVC.xPETxReceita.PETxAnamnesiaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxReceitaID
        {
            get
            {
                return (Guid)Value[ConsultasReceitasSVC.xPETxReceita.PETxReceitaID.ID];
            }
            set
            {
                Value[ConsultasReceitasSVC.xPETxReceita.PETxReceitaID.ID] = value;
            }
        }
        public Guid? oPETxReceitaID
        {
            get
            {
                GetOldValue(ConsultasReceitasSVC.xPETxReceita.PETxReceitaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConsultasReceitasSVC.XTuple

        #region ConsultasReceitasSVC.XDataSet

        public class XDataSet : XDataSet<ConsultasReceitasSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConsultasReceitasSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConsultasReceitasSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Data => ConsultasReceitasSVC.xPETxReceita.Data.ID;
                public Guid Descritivo => ConsultasReceitasSVC.xPETxReceita.Descritivo.ID;
                public Guid ERPxProfissionalID => ConsultasReceitasSVC.xPETxReceita.ERPxProfissionalID.ID;
                public Guid PETxAnamnesiaID => ConsultasReceitasSVC.xPETxReceita.PETxAnamnesiaID.ID;
                public Guid PETxReceitaID => ConsultasReceitasSVC.xPETxReceita.PETxReceitaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ConsultasReceitasSVC.XDataSet);
            }

        }
        #endregion ConsultasReceitasSVC.XDataSet
        #if !OnlyDef
        #region ConsultasReceitasSVC.XRule
        public abstract class XRule : XServiceRule<ConsultasReceitasSVC.XDataSet, ConsultasReceitasSVC, ConsultasReceitasSVC.XTuple>
        {
        }
        #endregion ConsultasReceitasSVC.XRule

        [Guid(ConsultasReceitasSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConsultasReceitasSVC))]
        protected class _Service : Service<ConsultasReceitasSVC, XDataSet, XTuple>
        {
            public const String sCID = "B5B79DD3-1F1D-4E3C-B125-35469E1DBB12";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConsultasReceitasSVC, XDataSet, XTuple>, XService
             where TModel : ConsultasReceitasSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}