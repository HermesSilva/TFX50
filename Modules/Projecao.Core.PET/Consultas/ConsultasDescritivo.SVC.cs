//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Consultas
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Consultas\ConsultasDescritivo.dssvc")]
    [XRegister(typeof(ConsultasDescritivoSVC), sCID)]
    public class ConsultasDescritivoSVC : XSVCModel
    {
        public const String sCID = "C9BF5CC4-37EB-406B-8629-F68EE747EEF4";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAtendimento_PETxAtendimentoID_PETxAnamnesia_PETxAnamnesiaID; // PETxAtendimento.PETxAtendimentoID --> PETxAnamnesia.PETxAnamnesiaID

        #region xPETxAtendimento 
        public class xPETxAtendimento : XSVCTable
        {

            public static Guid gCID => new Guid("8FEB62D9-BF41-414C-ADEA-E6F000CFC626");

            public xPETxAtendimento()
            {
                Name = "PETxAtendimento";
                Alias = "PETxAtendimento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimento.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Items.Add(ERPxEnderecoEntregaID, ERPxEnderecoEntregaID.ID);
                ERPxEnderecoEntregaID.Owner = this;
                ERPxEnderecoEntregaID.OwnerID = ID;
                ERPxEnderecoEntregaID.TableName = Name;
                Items.Add(ERPxEnderecoBuscaID, ERPxEnderecoBuscaID.ID);
                ERPxEnderecoBuscaID.Owner = this;
                ERPxEnderecoBuscaID.OwnerID = ID;
                ERPxEnderecoBuscaID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                Items.Add(DataBusca, DataBusca.ID);
                DataBusca.Owner = this;
                DataBusca.OwnerID = ID;
                DataBusca.TableName = Name;
                Items.Add(DataEntrega, DataEntrega.ID);
                DataEntrega.Owner = this;
                DataEntrega.OwnerID = ID;
                DataEntrega.TableName = Name;
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(PETxAtendimentoTipoID, PETxAtendimentoTipoID.ID);
                PETxAtendimentoTipoID.Owner = this;
                PETxAtendimentoTipoID.OwnerID = ID;
                PETxAtendimentoTipoID.TableName = Name;
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Items.Add(GrupoOrdem, GrupoOrdem.ID);
                GrupoOrdem.Owner = this;
                GrupoOrdem.OwnerID = ID;
                GrupoOrdem.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
                Items.Add(Finalizado, Finalizado.ID);
                Finalizado.Owner = this;
                Finalizado.OwnerID = ID;
                Finalizado.TableName = Name;
                Items.Add(ObservacaoEntrega, ObservacaoEntrega.ID);
                ObservacaoEntrega.Owner = this;
                ObservacaoEntrega.OwnerID = ID;
                ObservacaoEntrega.TableName = Name;
                Items.Add(ObservacaoBusca, ObservacaoBusca.ID);
                ObservacaoBusca.Owner = this;
                ObservacaoBusca.OwnerID = ID;
                ObservacaoBusca.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxTutorID, new Guid("8B013BFE-84DE-47CB-8D4C-9F694E7AD16C"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAnimalTutorID, new Guid("06DAA8B1-6699-447B-927D-87F1000CC96F"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMPKField PETxAtendimentoID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoID, new Guid("BF608946-FDE3-45CD-883C-23535840CE32"), "PETxAtendimentoID", "Atendimento");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Data, new Guid("A24DE80E-6B27-4AEA-830E-738FF15A78EB"), "Data", "Data");
            public static XORMFKField ERPxEnderecoEntregaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoEntregaID, new Guid("A293C896-017C-419E-A053-B92DC39A5DD8"), "ERPxEnderecoEntregaID", "Entregar no Endereço");
            public static XORMFKField ERPxEnderecoBuscaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoBuscaID, new Guid("DDF0A9AF-F11E-4DAF-BD97-A33EBFD3BCDA"), "ERPxEnderecoBuscaID", "Buscar no Endereço");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Observacao, new Guid("8A559097-ECE7-4F99-B96E-D3F7A8773C68"), "Observacao", "Observação");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoEstadoID, new Guid("9339BD79-4A93-4070-B5BC-C0C11FE208F5"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDateTimeField DataBusca = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataBusca, new Guid("0470FA06-0A22-4EB1-8F90-E3C7F185E5B1"), "DataBusca", "Data e Hora de Buscar");
            public static XORMDateTimeField DataEntrega = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataEntrega, new Guid("BC91E999-A81D-489D-A05D-13141DE772EB"), "DataEntrega", "Data e Hora de Entregar");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorTotal, new Guid("44A33A85-9E21-4F38-8BF4-5A1B85334129"), "ValorTotal", "Valor Total");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorCobrado, new Guid("8188D347-8A93-4F4D-87D4-890BC972CD9E"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Desconto, new Guid("D6D262ED-C421-4B20-8AC8-A315B7460EFB"), "Desconto", "Desconto");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEmpresaID, new Guid("D8567D9B-14AF-4B1D-8249-C90D2B43EA36"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEstadoID, new Guid("DED19BBB-406F-4734-BA09-5CF38736D18F"), "SYSxEstadoID", "Estado");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.CTLxUsuarioID, new Guid("E7E0609C-AF09-45D4-9491-91D54A7BB5F7"), "CTLxUsuarioID", "Usuário");
            public static XORMFKField PETxAtendimentoTipoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoTipoID, new Guid("E4129BC7-2833-4A49-8633-EB4EF6CBB41F"), "PETxAtendimentoTipoID", "Tipo de Atendimento");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Grupo, new Guid("A5F8E4AD-71A1-446F-8903-9DD8EE6815C5"), "Grupo", "Grupo");
            public static XORMField GrupoOrdem = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.GrupoOrdem, new Guid("95C21858-459A-4374-8313-4B3F0081EE3D"), "GrupoOrdem", "Ordem no grupo");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Numero, new Guid("B388EE36-AF79-4289-89F6-D1B5F5EAD3EE"), "Numero", "Número");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoClasseID, new Guid("DDCFA043-0A0D-4F37-A8B5-2DC2C44BF090"), "PETxAtendimentoClasseID", "Classe");
            public static XORMField Finalizado = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Finalizado, new Guid("EC736139-E997-47D8-9FC9-A5450D587C42"), "Finalizado", "Finalizado");
            public static XORMField ObservacaoEntrega = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoEntrega, new Guid("DB305BFE-AC99-4B46-BEBC-AC462E91EB23"), "ObservacaoEntrega", "Observação para Entrega");
            public static XORMField ObservacaoBusca = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoBusca, new Guid("3B43A886-221F-49A4-975D-143BBF772492"), "ObservacaoBusca", "Observação para busca");
        }
        #endregion xPETxAtendimento 


        #region xPETxAnamnesia 
        public class xPETxAnamnesia : XSVCTable
        {

            public static Guid gCID => new Guid("E5C267ED-5DFE-40AF-975F-9A8EEAB4CCF6");

            public xPETxAnamnesia()
            {
                Name = "PETxAnamnesia";
                Alias = "PETxAnamnesia";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.gCID;

                Items.Add(PETxAnamnesiaID, PETxAnamnesiaID.ID);
                PETxAnamnesiaID.Owner = this;
                PETxAnamnesiaID.OwnerID = ID;
                PETxAnamnesiaID.TableName = Name;
                PETxAnamnesiaID.Alias = "PETxAnamnesiaID";
                Items.Add(Descritivo, Descritivo.ID);
                Descritivo.Owner = this;
                Descritivo.OwnerID = ID;
                Descritivo.TableName = Name;
                Descritivo.Alias = "Descritivo";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                PETxAnimalID.Alias = "PETxAnimalID";
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
                PETxAtendimentoClasseID.Alias = "PETxAtendimentoClasseID";
            }

            public static XORMPKField PETxAnamnesiaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAnamnesiaID, new Guid("C4EC85E8-A483-4A06-AA74-EFDA3554B215"), "PETxAnamnesiaID", "Anamnésia");
            public static XORMField Descritivo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Descritivo, new Guid("FC742D0D-7966-40B0-A5B3-658AF1B24C9A"), "Descritivo", "Descritivo");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Data, new Guid("663562DB-2872-4AF9-A07C-D63D6A8FC38C"), "Data", "Data");
            public static XORMField PETxAnimalID = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAnimalID, new Guid("D68486A4-47EF-4F41-A9EA-F14B16D25187"), "PETxAnimalID", "PET");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Numero, new Guid("47BD9AAF-4525-47DD-B9C1-B61BFFD23C1A"), "Numero", "Número");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAtendimentoClasseID, new Guid("E87CFB61-0D10-4A33-A198-22835669C1CB"), "PETxAtendimentoClasseID", "Classe");
        }
        #endregion xPETxAnamnesia 


        public xPETxAnamnesia PETxAnamnesia;
        public xPETxAtendimento PETxAtendimento;

        public ConsultasDescritivoSVC()
        {
            TupleType = typeof(ConsultasDescritivoSVC.XTuple);
            DataSetType = typeof(ConsultasDescritivoSVC.XDataSet);
            ServiceRuleCID = new Guid("810E0B1F-ED6C-4355-B0A4-F256EBD33B4A");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("C9BF5CC4-37EB-406B-8629-F68EE747EEF4");
            Name = "ConsultasDescritivo";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxAnamnesia.Data.ID, xPETxAnamnesia.Numero.ID, xPETxAtendimento.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xPETxAnamnesia.Numero.ID };
            DataSetFields = new Guid[] { xPETxAnamnesia.PETxAnamnesiaID.ID, xPETxAnamnesia.PETxAnimalID.ID, xPETxAnamnesia.Data.ID, xPETxAnamnesia.Numero.ID, xPETxAtendimento.SYSxEstadoID.ID, xPETxAnamnesia.Descritivo.ID, xPETxAnamnesia.PETxAtendimentoClasseID.ID };
            PKField = xPETxAnamnesia.PETxAnamnesiaID.ID;
            ConfigTableID = new Guid("10C60480-20AE-42D6-A277-00D2A93A4243");
            StateField = xPETxAtendimento.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("810E0B1F-ED6C-4355-B0A4-F256EBD33B4A");
            PETxAnamnesia = new xPETxAnamnesia();
            PETxAnamnesia.IsReadOnly = false;
            AddTable(PETxAnamnesia);
            PETxAtendimento = new xPETxAtendimento();
            PETxAtendimento.IsReadOnly = true;
            AddTable(PETxAtendimento);
            MasterTableID = PETxAnamnesia.ID;
            PETxAtendimento_PETxAtendimentoID_PETxAnamnesia_PETxAnamnesiaID = AddReference(new XSVCReference(new Guid("FE393BD6-2852-421E-9382-F05E76F31F8E"), "FK_FE393BD62852421E9382F05E76F31F8E", ConsultasDescritivoSVC.xPETxAtendimento.gCID, xPETxAtendimento.PETxAtendimentoID.ID, ConsultasDescritivoSVC.xPETxAnamnesia.gCID, xPETxAnamnesia.PETxAnamnesiaID.ID, XJoinType.Inner)); // PETxAtendimento.PETxAtendimentoID --> PETxAnamnesia.PETxAnamnesiaID
            xPETxAnamnesia.Data.Mask = "dd/MM/yyyy";
            xPETxAnamnesia.Data.IsDataField = true;
            xPETxAnamnesia.Data.AllowEmpty = true;
            xPETxAnamnesia.Descritivo.IsDataField = true;
            xPETxAnamnesia.Descritivo.AllowEmpty = true;
            xPETxAnamnesia.Numero.OrderType = XOrderType.Desc;
            xPETxAnamnesia.Numero.IsDataField = true;
            xPETxAnamnesia.Numero.AllowEmpty = true;
            xPETxAnamnesia.PETxAnamnesiaID.GeneratePK = true;
            xPETxAnamnesia.PETxAnamnesiaID.IsDataField = true;
            xPETxAnamnesia.PETxAnamnesiaID.AllowEmpty = true;
            xPETxAnamnesia.PETxAnimalID.IsDataField = true;
            xPETxAnamnesia.PETxAnimalID.AllowEmpty = true;
            xPETxAnamnesia.PETxAtendimentoClasseID.IsDataField = true;
            xPETxAnamnesia.PETxAtendimentoClasseID.AllowEmpty = true;
            xPETxAtendimento.SYSxEstadoID.IsReadOnly = true;
            xPETxAtendimento.SYSxEstadoID.IsDataField = true;
            xPETxAtendimento.SYSxEstadoID.AllowEmpty = true;
            xPETxAtendimento.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField Data => xPETxAnamnesia.Data;
        public XORMField Descritivo => xPETxAnamnesia.Descritivo;
        public XORMField Numero => xPETxAnamnesia.Numero;
        public XORMField PETxAnamnesiaID => xPETxAnamnesia.PETxAnamnesiaID;
        public XORMField PETxAnimalID => xPETxAnamnesia.PETxAnimalID;
        public XORMField PETxAtendimentoClasseID => xPETxAnamnesia.PETxAtendimentoClasseID;
        public XORMField SYSxEstadoID => xPETxAtendimento.SYSxEstadoID;
        }
        #endregion XFields
        #region ConsultasDescritivoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ConsultasDescritivoSVC.xPETxAnamnesia.Data.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAnamnesia.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAnamnesia.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Descritivo
        {
            get
            {
                return (String)Value[ConsultasDescritivoSVC.xPETxAnamnesia.Descritivo.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAnamnesia.Descritivo.ID] = value;
            }
        }
        public String? oDescritivo
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAnamnesia.Descritivo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 Numero
        {
            get
            {
                return (Int32)Value[ConsultasDescritivoSVC.xPETxAnamnesia.Numero.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAnamnesia.Numero.ID] = value;
            }
        }
        public Int32? oNumero
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAnamnesia.Numero, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid PETxAnamnesiaID
        {
            get
            {
                return (Guid)Value[ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnamnesiaID.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnamnesiaID.ID] = value;
            }
        }
        public Guid? oPETxAnamnesiaID
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnamnesiaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAnimalID
        {
            get
            {
                return (Guid)Value[ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnimalID.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnimalID.ID] = value;
            }
        }
        public Guid? oPETxAnimalID
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PETxAtendimentoClasseID
        {
            get
            {
                return (Int16)Value[ConsultasDescritivoSVC.xPETxAnamnesia.PETxAtendimentoClasseID.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAnamnesia.PETxAtendimentoClasseID.ID] = value;
            }
        }
        public Int16? oPETxAtendimentoClasseID
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAnamnesia.PETxAtendimentoClasseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConsultasDescritivoSVC.xPETxAtendimento.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConsultasDescritivoSVC.xPETxAtendimento.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConsultasDescritivoSVC.xPETxAtendimento.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConsultasDescritivoSVC.XTuple

        #region ConsultasDescritivoSVC.XDataSet

        public class XDataSet : XDataSet<ConsultasDescritivoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConsultasDescritivoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConsultasDescritivoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Data => ConsultasDescritivoSVC.xPETxAnamnesia.Data.ID;
                public Guid Descritivo => ConsultasDescritivoSVC.xPETxAnamnesia.Descritivo.ID;
                public Guid Numero => ConsultasDescritivoSVC.xPETxAnamnesia.Numero.ID;
                public Guid PETxAnamnesiaID => ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnamnesiaID.ID;
                public Guid PETxAnimalID => ConsultasDescritivoSVC.xPETxAnamnesia.PETxAnimalID.ID;
                public Guid PETxAtendimentoClasseID => ConsultasDescritivoSVC.xPETxAnamnesia.PETxAtendimentoClasseID.ID;
                public Guid SYSxEstadoID => ConsultasDescritivoSVC.xPETxAtendimento.SYSxEstadoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ConsultasDescritivoSVC.XDataSet);
            }

        }
        #endregion ConsultasDescritivoSVC.XDataSet
        #if !OnlyDef
        #region ConsultasDescritivoSVC.XRule
        public abstract class XRule : XServiceRule<ConsultasDescritivoSVC.XDataSet, ConsultasDescritivoSVC, ConsultasDescritivoSVC.XTuple>
        {
        }
        #endregion ConsultasDescritivoSVC.XRule

        [Guid(ConsultasDescritivoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConsultasDescritivoSVC))]
        protected class _Service : Service<ConsultasDescritivoSVC, XDataSet, XTuple>
        {
            public const String sCID = "359B73BD-C66C-47B9-8515-9CA80FF790FB";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConsultasDescritivoSVC, XDataSet, XTuple>, XService
             where TModel : ConsultasDescritivoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}