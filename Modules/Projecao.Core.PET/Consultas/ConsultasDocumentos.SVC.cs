//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Consultas
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Consultas\ConsultasDocumentos.dssvc")]
    [XRegister(typeof(ConsultasDocumentosSVC), sCID)]
    public class ConsultasDocumentosSVC : XSVCModel
    {
        #region ConsultasDocumentosFilterFRM

        [XRegister(typeof(ConsultasDocumentosFilterFRM), sCID)]
        public class ConsultasDocumentosFilterFRM : XFRMModel
        {
            public const String sCID = "71A2F150-EB34-47E1-9553-6A888E1AF4D5";
            public static new readonly Guid gCID = new Guid(sCID);
            static ConsultasDocumentosFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ConsultasDocumentosFilterFRM()
            {
                ID = gCID;
                Name = "ConsultasDocumentosFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion ConsultasDocumentosFilterFRM

        public const String sCID = "BC10C82C-7810-43A8-86E1-8116240C4905";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAnamnesia_PETxAnamnesiaID_PETxAnamnesiaDocumento_PETxAnamnesiaID; // PETxAnamnesia.PETxAnamnesiaID --> PETxAnamnesiaDocumento.PETxAnamnesiaID

        #region xPETxAnamnesia 
        public class xPETxAnamnesia : XSVCTable
        {

            public static Guid gCID => new Guid("674E9ADA-0BDF-4864-8699-3D0E3D016370");

            public xPETxAnamnesia()
            {
                Name = "PETxAnamnesia";
                Alias = "PETxAnamnesia";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.gCID;

                Items.Add(PETxAnamnesiaID, PETxAnamnesiaID.ID);
                PETxAnamnesiaID.Owner = this;
                PETxAnamnesiaID.OwnerID = ID;
                PETxAnamnesiaID.TableName = Name;
                Items.Add(Descritivo, Descritivo.ID);
                Descritivo.Owner = this;
                Descritivo.OwnerID = ID;
                Descritivo.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                PETxAnimalID.Alias = "PETxAnimalID";
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
            }

            public static XORMPKField PETxAnamnesiaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAnamnesiaID, new Guid("23CD6369-8EAE-4CD4-A7F8-68E115DFFD2B"), "PETxAnamnesiaID", "Anamnésia");
            public static XORMField Descritivo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Descritivo, new Guid("06BD6B80-B64C-4A00-9AA9-40A271E4EE84"), "Descritivo", "Descritivo");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Data, new Guid("2ABC3EDC-7869-43A1-BE46-194380409FAB"), "Data", "Data");
            public static XORMField PETxAnimalID = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAnimalID, new Guid("2083658E-0A75-40C0-B8B7-306A5F7E36CE"), "PETxAnimalID", "PET");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.Numero, new Guid("BE386687-430F-44E9-BA6D-4B956A14A153"), "Numero", "Número");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesia.PETxAtendimentoClasseID, new Guid("A613613B-179B-4EBA-9A4E-23A8E4DF0EEB"), "PETxAtendimentoClasseID", "Classe");
        }
        #endregion xPETxAnamnesia 


        #region xPETxAnamnesiaDocumento 
        public class xPETxAnamnesiaDocumento : XSVCTable
        {

            public static Guid gCID => new Guid("E84A581A-27EF-4911-8096-322CD1F74FF4");

            public xPETxAnamnesiaDocumento()
            {
                Name = "PETxAnamnesiaDocumento";
                Alias = "PETxAnamnesiaDocumento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.gCID;

                Items.Add(Descricao, Descricao.ID);
                Descricao.Owner = this;
                Descricao.OwnerID = ID;
                Descricao.TableName = Name;
                Descricao.Alias = "Descricao";
                Items.Add(PETxAnamnesiaDocumentoID, PETxAnamnesiaDocumentoID.ID);
                PETxAnamnesiaDocumentoID.Owner = this;
                PETxAnamnesiaDocumentoID.OwnerID = ID;
                PETxAnamnesiaDocumentoID.TableName = Name;
                PETxAnamnesiaDocumentoID.Alias = "PETxAnamnesiaDocumentoID";
                Items.Add(PETxAnamnesiaID, PETxAnamnesiaID.ID);
                PETxAnamnesiaID.Owner = this;
                PETxAnamnesiaID.OwnerID = ID;
                PETxAnamnesiaID.TableName = Name;
                PETxAnamnesiaID.Alias = "PETxAnamnesiaID";
                Items.Add(Documento, Documento.ID);
                Documento.Owner = this;
                Documento.OwnerID = ID;
                Documento.TableName = Name;
                Documento.Alias = "Documento";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "Tipo";
            }

            public static XORMField Descricao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.Descricao, new Guid("4E6783AB-A78A-4F12-86F6-0C504BD9B309"), "Descricao", "Descrição");
            public static XORMPKField PETxAnamnesiaDocumentoID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID, new Guid("7E20B289-A476-4D82-825E-BE4BFE81F5B2"), "PETxAnamnesiaDocumentoID", "Documentos da Anamnésia");
            public static XORMFKField PETxAnamnesiaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.PETxAnamnesiaID, new Guid("7D111972-054E-487D-9D20-832940C74733"), "PETxAnamnesiaID", "Anamnésia");
            public static XORMField Documento = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.Documento, new Guid("CA66E93D-2827-41A5-B17D-3DDBE7056989"), "Documento", "Documento");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.SYSxEstadoID, new Guid("3708AFFE-8646-4E24-8BF3-DF0DC898EA0E"), "SYSxEstadoID", "Estado");
            public static XORMField Tipo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnamnesiaDocumento.Tipo, new Guid("D1F0FAB6-096B-4A6B-8A17-1AF0CF9258DA"), "Tipo", "Tipo");
        }
        #endregion xPETxAnamnesiaDocumento 


        public xPETxAnamnesia PETxAnamnesia;
        public xPETxAnamnesiaDocumento PETxAnamnesiaDocumento;

        public ConsultasDocumentosSVC()
        {
            TupleType = typeof(ConsultasDocumentosSVC.XTuple);
            DataSetType = typeof(ConsultasDocumentosSVC.XDataSet);
            ServiceRuleCID = new Guid("39CB2C84-B28C-4424-8A84-D70CAF2E09A6");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("BC10C82C-7810-43A8-86E1-8116240C4905");
            Name = "ConsultasDocumentos";
            Title = "Documentos da Anamnésia";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxAnamnesiaDocumento.Descricao.ID, xPETxAnamnesiaDocumento.SYSxEstadoID.ID, xPETxAnamnesiaDocumento.Documento.ID };
            OrderByFields = new Guid[] { xPETxAnamnesiaDocumento.Descricao.ID };
            DataSetFields = new Guid[] { xPETxAnamnesiaDocumento.Documento.ID, xPETxAnamnesiaDocumento.SYSxEstadoID.ID, xPETxAnamnesiaDocumento.Tipo.ID, xPETxAnamnesia.PETxAnimalID.ID, xPETxAnamnesia.Data.ID, xPETxAnamnesiaDocumento.Descricao.ID, xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.ID, xPETxAnamnesiaDocumento.PETxAnamnesiaID.ID };
            StateField = xPETxAnamnesiaDocumento.SYSxEstadoID.ID;
            PKField = xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.ID;
            ConfigTableID = new Guid("37B945B3-017A-4F5E-9F0A-B3A6E164A0B8");
            MasterRuleCID = new Guid("39CB2C84-B28C-4424-8A84-D70CAF2E09A6");
            PETxAnamnesia = new xPETxAnamnesia();
            PETxAnamnesia.IsReadOnly = true;
            AddTable(PETxAnamnesia);
            PETxAnamnesiaDocumento = new xPETxAnamnesiaDocumento();
            PETxAnamnesiaDocumento.IsReadOnly = false;
            AddTable(PETxAnamnesiaDocumento);
            MasterTableID = PETxAnamnesiaDocumento.ID;
            PETxAnamnesia_PETxAnamnesiaID_PETxAnamnesiaDocumento_PETxAnamnesiaID = AddReference(new XSVCReference(new Guid("FD17DF7F-4435-44C0-BFE1-6701E7941D96"), "FK_FD17DF7F443544C0BFE16701E7941D96", ConsultasDocumentosSVC.xPETxAnamnesia.gCID, xPETxAnamnesia.PETxAnamnesiaID.ID, ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.gCID, xPETxAnamnesiaDocumento.PETxAnamnesiaID.ID, XJoinType.Inner)); // PETxAnamnesia.PETxAnamnesiaID --> PETxAnamnesiaDocumento.PETxAnamnesiaID
            xPETxAnamnesia.Data.IsReadOnly = true;
            xPETxAnamnesia.Data.IsDataField = true;
            xPETxAnamnesia.Data.AllowEmpty = true;
            xPETxAnamnesiaDocumento.Descricao.OrderType = XOrderType.Asc;
            xPETxAnamnesiaDocumento.Descricao.Length = 128;
            xPETxAnamnesiaDocumento.Descricao.IsDataField = true;
            xPETxAnamnesiaDocumento.Descricao.AllowEmpty = true;
            xPETxAnamnesiaDocumento.Documento.IsDataField = true;
            xPETxAnamnesiaDocumento.Documento.AllowEmpty = true;
            xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.GeneratePK = true;
            xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.IsDataField = true;
            xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.AllowEmpty = true;
            xPETxAnamnesiaDocumento.PETxAnamnesiaID.IsDataField = true;
            xPETxAnamnesiaDocumento.PETxAnamnesiaID.AllowEmpty = true;
            xPETxAnamnesia.PETxAnimalID.IsReadOnly = true;
            xPETxAnamnesia.PETxAnimalID.IsDataField = true;
            xPETxAnamnesia.PETxAnimalID.AllowEmpty = true;
            xPETxAnamnesiaDocumento.SYSxEstadoID.IsDataField = true;
            xPETxAnamnesiaDocumento.SYSxEstadoID.AllowEmpty = true;
            xPETxAnamnesiaDocumento.Tipo.Length = 5;
            xPETxAnamnesiaDocumento.Tipo.IsDataField = true;
            xPETxAnamnesiaDocumento.Tipo.AllowEmpty = true;
            xPETxAnamnesiaDocumento.Documento.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Data => xPETxAnamnesia.Data;
        public XORMField Descricao => xPETxAnamnesiaDocumento.Descricao;
        public XORMField Documento => xPETxAnamnesiaDocumento.Documento;
        public XORMField PETxAnamnesiaDocumentoID => xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID;
        public XORMField PETxAnamnesiaID => xPETxAnamnesiaDocumento.PETxAnamnesiaID;
        public XORMField PETxAnimalID => xPETxAnamnesia.PETxAnimalID;
        public XORMField SYSxEstadoID => xPETxAnamnesiaDocumento.SYSxEstadoID;
        public XORMField Tipo => xPETxAnamnesiaDocumento.Tipo;
        }
        #endregion XFields
        #region ConsultasDocumentosSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ConsultasDocumentosSVC.xPETxAnamnesia.Data.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesia.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesia.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Descricao
        {
            get
            {
                return (String)Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Descricao.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Descricao.ID] = value;
            }
        }
        public String? oDescricao
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Descricao, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Byte[] Documento
        {
            get
            {
                return (Byte[])Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Documento.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Documento.ID] = value;
            }
        }
        public Byte[]? oDocumento
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Documento, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public Guid PETxAnamnesiaDocumentoID
        {
            get
            {
                return (Guid)Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.ID] = value;
            }
        }
        public Guid? oPETxAnamnesiaDocumentoID
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAnamnesiaID
        {
            get
            {
                return (Guid)Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaID.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaID.ID] = value;
            }
        }
        public Guid? oPETxAnamnesiaID
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAnimalID
        {
            get
            {
                return (Guid)Value[ConsultasDocumentosSVC.xPETxAnamnesia.PETxAnimalID.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesia.PETxAnimalID.ID] = value;
            }
        }
        public Guid? oPETxAnimalID
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesia.PETxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.SYSxEstadoID.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Tipo
        {
            get
            {
                return (String)Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Tipo.ID];
            }
            set
            {
                Value[ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Tipo.ID] = value;
            }
        }
        public String? oTipo
        {
            get
            {
                GetOldValue(ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ConsultasDocumentosSVC.XTuple

        #region ConsultasDocumentosSVC.XDataSet

        public class XDataSet : XDataSet<ConsultasDocumentosSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ConsultasDocumentosSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ConsultasDocumentosSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Data => ConsultasDocumentosSVC.xPETxAnamnesia.Data.ID;
                public Guid Descricao => ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Descricao.ID;
                public Guid Documento => ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Documento.ID;
                public Guid PETxAnamnesiaDocumentoID => ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaDocumentoID.ID;
                public Guid PETxAnamnesiaID => ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.PETxAnamnesiaID.ID;
                public Guid PETxAnimalID => ConsultasDocumentosSVC.xPETxAnamnesia.PETxAnimalID.ID;
                public Guid SYSxEstadoID => ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.SYSxEstadoID.ID;
                public Guid Tipo => ConsultasDocumentosSVC.xPETxAnamnesiaDocumento.Tipo.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ConsultasDocumentosSVC.XDataSet);
            }

        }
        #endregion ConsultasDocumentosSVC.XDataSet
        #if !OnlyDef
        #region ConsultasDocumentosSVC.XRule
        public abstract class XRule : XServiceRule<ConsultasDocumentosSVC.XDataSet, ConsultasDocumentosSVC, ConsultasDocumentosSVC.XTuple>
        {
        }
        #endregion ConsultasDocumentosSVC.XRule

        [Guid(ConsultasDocumentosSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ConsultasDocumentosSVC))]
        protected class _Service : Service<ConsultasDocumentosSVC, XDataSet, XTuple>
        {
            public const String sCID = "8A4C3FF9-2ECD-4788-BF4D-7F438AF9E910";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ConsultasDocumentosSVC, XDataSet, XTuple>, XService
             where TModel : ConsultasDocumentosSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}