//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.RPTs.Servico;
using Projecao.Core.ERP.DB;
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.RPTs.Servico
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\RPTs\Servico\Profissional.dssvc")]
    [XRegister(typeof(ProfissionalSVC), sCID)]
    public class ProfissionalSVC : XSVCModel
    {
        #region ProfissionalFilterFRM

        [XRegister(typeof(ProfissionalFilterFRM), sCID)]
        public class ProfissionalFilterFRM : XFRMModel
        {
            public const String sCID = "0718864B-2CB3-4D3E-A80C-19FA2A6FDBDE";
            public static new readonly Guid gCID = new Guid(sCID);
            static ProfissionalFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ProfissionalFilterFRM()
            {
                ID = gCID;
                Name = "ProfissionalFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(DataIni);
                DataIni.ForceRW = true;
                DataIni.CanInsert = true;
                DataIni.CanUpdate = true;
                DataIni.RowCount = 2;
                DataIni.ColCount = 6;
                DataIni.RowCountSmall = 2;
                DataIni.ColCountSmall = 6;
                DataIni.IsHidden = false;
                DataIni.IsHiddenSmall = false;
                DataIni.AdditionalTitle = "";
                DataIni.Icon = "";
                DataIni.Location = 1;
                DataIni.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                DataIni.Operator = XOperator.GreaterThanOrEqualTo;
                DataIni.ShowSpin = false;
                DataIni.HotkeyChar = "";
                DataIni.JustifyHeight = false;
                DataIni.AllowEmpty = true;
                DataIni.FontColor = "#000000";
                DataIni.FontStyle = XFontStyle.Normal;
                DataIni.ShowFooter = false;
                DataIni.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataIni.Order = 1;
                DataIni.Scale = -1;
                DataIni.Length = -1;
                DataIni.SearchAction = XSearchAction.Default;
                DataIni.TypeID = XDateTime.CID;
                DataIni.AdditionalFieldsID = new Guid[] {  };
                DataIni.AdditionalDataFieldsID = new Guid[] {  };
                DataIni.TargetFilterFieldID = new Guid[] {  };
                DataIni.SourceFilterFieldID = new Guid[] {  };
                DataIni.TargetDisplayFieldID = new Guid[] {  };
                DataIni.SourceDisplayFieldID = new Guid[] {  };
                DataIni.AutoLoad = false;
                DataIni.FilterInative = true;
                DataIni.IsAnswer = false;
                DataIni.AllowMultiSelect = false;
                AddItem(DataFin);
                DataFin.ForceRW = true;
                DataFin.CanInsert = true;
                DataFin.CanUpdate = true;
                DataFin.RowCount = 2;
                DataFin.ColCount = 6;
                DataFin.RowCountSmall = 2;
                DataFin.ColCountSmall = 6;
                DataFin.IsHidden = false;
                DataFin.IsHiddenSmall = false;
                DataFin.AdditionalTitle = "";
                DataFin.Icon = "";
                DataFin.Location = 2;
                DataFin.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                DataFin.Operator = XOperator.LessThanOrEqualTo;
                DataFin.ShowSpin = false;
                DataFin.HotkeyChar = "";
                DataFin.JustifyHeight = false;
                DataFin.AllowEmpty = true;
                DataFin.FontColor = "#000000";
                DataFin.FontStyle = XFontStyle.Normal;
                DataFin.ShowFooter = false;
                DataFin.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataFin.Order = 2;
                DataFin.Scale = -1;
                DataFin.Length = -1;
                DataFin.SearchAction = XSearchAction.Default;
                DataFin.TypeID = XDateTime.CID;
                DataFin.AdditionalFieldsID = new Guid[] {  };
                DataFin.AdditionalDataFieldsID = new Guid[] {  };
                DataFin.TargetFilterFieldID = new Guid[] {  };
                DataFin.SourceFilterFieldID = new Guid[] {  };
                DataFin.TargetDisplayFieldID = new Guid[] {  };
                DataFin.SourceDisplayFieldID = new Guid[] {  };
                DataFin.AutoLoad = false;
                DataFin.FilterInative = true;
                DataFin.IsAnswer = false;
                DataFin.AllowMultiSelect = false;
            }
            public XFRMField DataIni = new XFRMField(new Guid("CC2F5A39-939C-480F-8D22-E603EDDAD0A7"), "DataIni", "Data Inicial", XDateTime.CID, 2, 6, false, gCID, null, new Guid("D9F4D60D-19E9-4AE9-A58B-93394D8A71EB")); // DateTime;
            public XFRMField DataFin = new XFRMField(new Guid("B2FBD9A7-3BFA-4828-9DE4-5CFEFF6B1235"), "DataFin", "Data Final", XDateTime.CID, 2, 6, false, gCID, null, new Guid("D9F4D60D-19E9-4AE9-A58B-93394D8A71EB")); // DateTime;
            public static class Fields
            {
                public static XFieldInfo DataIni = new XFieldInfo(new Guid("CC2F5A39-939C-480F-8D22-E603EDDAD0A7"), "DataIni", "Data Inicial", typeof(DateTime), false, "dd/MM/yyyy");
                public static XFieldInfo DataFin = new XFieldInfo(new Guid("B2FBD9A7-3BFA-4828-9DE4-5CFEFF6B1235"), "DataFin", "Data Final", typeof(DateTime), false, "dd/MM/yyyy");
            }
        }

        #endregion ProfissionalFilterFRM

        public const String sCID = "FCA93434-E91B-4ACA-AF70-0CB39AA11537";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAtendimentoProfissional_PETxAtendimentoID_PETxAtendimento_PETxAtendimentoID; // PETxAtendimentoProfissional.PETxAtendimentoID --> PETxAtendimento.PETxAtendimentoID
        public static XSVCReference ERPxProfissionalCategoria_ERPxProfissionalID_PETxAtendimentoProfissional_ERPxProfissionalID; // ERPxProfissionalCategoria.ERPxProfissionalID --> PETxAtendimentoProfissional.ERPxProfissionalID
        public static XSVCReference ERPxCategoria_ERPxCategoriaID_ERPxProfissionalCategoria_ERPxCategoriaID; // ERPxCategoria.ERPxCategoriaID --> ERPxProfissionalCategoria.ERPxCategoriaID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PETxAtendimentoProfissional_ERPxProfissionalID; // SYSxPessoa.SYSxPessoaID --> PETxAtendimentoProfissional.ERPxProfissionalID

        #region xERPxCategoria 
        public class xERPxCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("40D24720-8E6C-46BD-9485-C36AA505E70A");

            public xERPxCategoria()
            {
                Name = "ERPxCategoria";
                Alias = "ERPxCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxCategoria.gCID;

                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                Items.Add(Categoria, Categoria.ID);
                Categoria.Owner = this;
                Categoria.OwnerID = ID;
                Categoria.TableName = Name;
                Categoria.Alias = "Categoria";
            }

            public static XORMPKField ERPxCategoriaID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxCategoria.ERPxCategoriaID, new Guid("BC84A667-F2CD-439C-9DF5-FA9C033CE8D5"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMFaceField Categoria = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxCategoria.Categoria, new Guid("048CE86F-B332-4CA8-BDA3-D3638D2E34F1"), "Categoria", "Categoria");
        }
        #endregion xERPxCategoria 


        #region xPETxAtendimentoProfissional 
        public class xPETxAtendimentoProfissional : XSVCTable
        {

            public static Guid gCID => new Guid("7CE66C9A-FEBA-4D18-8C7E-E83DBA8BB2C4");

            public xPETxAtendimentoProfissional()
            {
                Name = "PETxAtendimentoProfissional";
                Alias = "PETxAtendimentoProfissional";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.gCID;

                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                ERPxProfissionalID.Alias = "ERPxProfissionalID";
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Items.Add(Final, Final.ID);
                Final.Owner = this;
                Final.OwnerID = ID;
                Final.TableName = Name;
                Items.Add(PETxAtendimentoProfissionalID, PETxAtendimentoProfissionalID.ID);
                PETxAtendimentoProfissionalID.Owner = this;
                PETxAtendimentoProfissionalID.OwnerID = ID;
                PETxAtendimentoProfissionalID.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.ERPxProfissionalID, new Guid("D6E01130-C083-4ECD-81BA-0542B60FED58"), "ERPxProfissionalID", "Profissionais");
            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.PETxAtendimentoID, new Guid("9AD41229-B91E-4D9F-A75D-571E23FBF1A0"), "PETxAtendimentoID", "Atendimento");
            public static XORMFKField ERPxCategoriaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.ERPxCategoriaID, new Guid("CED14B12-0402-4E07-BCEA-3785AAE798FF"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.Inicio, new Guid("4FD5129C-02BB-43AA-AA77-7FEC45EB992B"), "Inicio", "Início do Atendimento");
            public static XORMDateTimeField Final = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.Final, new Guid("CDB2BA85-193A-4A80-9372-F58A5319A01A"), "Final", "Final do Atendimento");
            public static XORMPKField PETxAtendimentoProfissionalID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.PETxAtendimentoProfissionalID, new Guid("AC942306-6F12-48EF-AA42-A5D05AF831C6"), "PETxAtendimentoProfissionalID", "Profissional por Atendimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.SYSxEmpresaID, new Guid("05EE6213-6E16-4E10-9F71-79AC8F6E8369"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.SYSxEstadoID, new Guid("41EA3459-0781-445E-B475-D27D0A6B9794"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAtendimentoProfissional 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("87506A84-0487-4F7E-AC7C-3DA2A2620866");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("012371E7-4D42-4561-86BD-1726759D1D8C"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("D6303636-3FCA-425E-9BC1-1511F296C5C4"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xERPxProfissionalCategoria 
        public class xERPxProfissionalCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("A2DABBC4-F9CA-48AA-9A5F-81970124AD4C");

            public xERPxProfissionalCategoria()
            {
                Name = "ERPxProfissionalCategoria";
                Alias = "ERPxProfissionalCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.gCID;

                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                Items.Add(ERPxProfissionalCategoriaID, ERPxProfissionalCategoriaID.ID);
                ERPxProfissionalCategoriaID.Owner = this;
                ERPxProfissionalCategoriaID.OwnerID = ID;
                ERPxProfissionalCategoriaID.TableName = Name;
            }

            public static XORMFKField ERPxCategoriaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxCategoriaID, new Guid("9B15369C-DA99-4A63-AE8A-CCAF769A7BC1"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxProfissionalID, new Guid("82902D91-AFCB-46CB-B05F-946CE4C37B39"), "ERPxProfissionalID", "Profissionais");
            public static XORMFaceField ERPxProfissionalCategoriaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxProfissionalCategoriaID, new Guid("B0FF19D0-276E-4217-A047-AC291E0812B8"), "ERPxProfissionalCategoriaID", "Categorias por Profissional");
        }
        #endregion xERPxProfissionalCategoria 


        #region xPETxAtendimento 
        public class xPETxAtendimento : XSVCTable
        {

            public static Guid gCID => new Guid("FA028CD0-BC0B-41CE-91A3-3575E0D09471");

            public xPETxAtendimento()
            {
                Name = "PETxAtendimento";
                Alias = "PETxAtendimento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimento.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Items.Add(ERPxEnderecoEntregaID, ERPxEnderecoEntregaID.ID);
                ERPxEnderecoEntregaID.Owner = this;
                ERPxEnderecoEntregaID.OwnerID = ID;
                ERPxEnderecoEntregaID.TableName = Name;
                Items.Add(ERPxEnderecoBuscaID, ERPxEnderecoBuscaID.ID);
                ERPxEnderecoBuscaID.Owner = this;
                ERPxEnderecoBuscaID.OwnerID = ID;
                ERPxEnderecoBuscaID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                Items.Add(DataBusca, DataBusca.ID);
                DataBusca.Owner = this;
                DataBusca.OwnerID = ID;
                DataBusca.TableName = Name;
                Items.Add(DataEntrega, DataEntrega.ID);
                DataEntrega.Owner = this;
                DataEntrega.OwnerID = ID;
                DataEntrega.TableName = Name;
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(PETxAtendimentoTipoID, PETxAtendimentoTipoID.ID);
                PETxAtendimentoTipoID.Owner = this;
                PETxAtendimentoTipoID.OwnerID = ID;
                PETxAtendimentoTipoID.TableName = Name;
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Items.Add(GrupoOrdem, GrupoOrdem.ID);
                GrupoOrdem.Owner = this;
                GrupoOrdem.OwnerID = ID;
                GrupoOrdem.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
                Items.Add(Finalizado, Finalizado.ID);
                Finalizado.Owner = this;
                Finalizado.OwnerID = ID;
                Finalizado.TableName = Name;
                Items.Add(ObservacaoEntrega, ObservacaoEntrega.ID);
                ObservacaoEntrega.Owner = this;
                ObservacaoEntrega.OwnerID = ID;
                ObservacaoEntrega.TableName = Name;
                Items.Add(ObservacaoBusca, ObservacaoBusca.ID);
                ObservacaoBusca.Owner = this;
                ObservacaoBusca.OwnerID = ID;
                ObservacaoBusca.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxTutorID, new Guid("FAF50C89-AC6D-413E-90F0-7403D26A2DF8"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAnimalTutorID, new Guid("DB7F3766-874E-4D4D-8AFC-1CE4000AE49F"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMPKField PETxAtendimentoID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoID, new Guid("0D519320-80B1-4A36-8DE4-BFFEF1A29988"), "PETxAtendimentoID", "Quantidade");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Data, new Guid("D9F4D60D-19E9-4AE9-A58B-93394D8A71EB"), "Data", "Data");
            public static XORMFKField ERPxEnderecoEntregaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoEntregaID, new Guid("E49DF1DE-7427-45A1-9E61-D6B0E200F8A2"), "ERPxEnderecoEntregaID", "Entregar no Endereço");
            public static XORMFKField ERPxEnderecoBuscaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoBuscaID, new Guid("B4FFA381-1F5C-4CC6-9CC0-804B4E5F2955"), "ERPxEnderecoBuscaID", "Buscar no Endereço");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Observacao, new Guid("73E52626-0181-48F2-A20C-369C5C192068"), "Observacao", "Observação");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoEstadoID, new Guid("CAAAC356-4D1D-43C2-9609-D092C7A7A4FA"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDateTimeField DataBusca = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataBusca, new Guid("B7F4BAD6-0975-4E12-8ED7-5BE5046CE681"), "DataBusca", "Data e Hora de Buscar");
            public static XORMDateTimeField DataEntrega = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataEntrega, new Guid("EFA13D11-45C6-4CBE-948E-204D12723396"), "DataEntrega", "Data e Hora de Entregar");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorTotal, new Guid("61DCB39D-34F8-4A3C-9DC7-79AEC776F5E0"), "ValorTotal", "Valor Total");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorCobrado, new Guid("9301470D-B974-4B6A-AC63-41D6C2761A32"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Desconto, new Guid("5CC4429F-61FA-4319-8DAC-D811A83A068C"), "Desconto", "Desconto");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEmpresaID, new Guid("F5361EBF-2666-4FBB-B72A-5DB94C6D2AED"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEstadoID, new Guid("1B5617FD-37FD-404C-93A5-D1EEE181EC65"), "SYSxEstadoID", "Estado");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.CTLxUsuarioID, new Guid("249F9E1B-9264-49B4-B5B3-29421A18A663"), "CTLxUsuarioID", "Usuário");
            public static XORMFKField PETxAtendimentoTipoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoTipoID, new Guid("4E454B87-97C0-4A24-8BB0-2630CD6C1BFD"), "PETxAtendimentoTipoID", "Tipo de Atendimento");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Grupo, new Guid("AE4B773E-D819-4922-9F7A-F855E9E608F8"), "Grupo", "Grupo");
            public static XORMField GrupoOrdem = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.GrupoOrdem, new Guid("A57A5BFD-F969-4586-B7AC-20171CD3307A"), "GrupoOrdem", "Ordem no grupo");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Numero, new Guid("C7043493-2A30-424C-BAE4-A8F11955CDF5"), "Numero", "Número");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoClasseID, new Guid("A95AE586-14BD-4757-A620-5150C5EE3038"), "PETxAtendimentoClasseID", "Classe");
            public static XORMField Finalizado = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Finalizado, new Guid("30EF2F82-7A7D-4BD9-8BD6-E2EC591FD0DD"), "Finalizado", "Finalizado");
            public static XORMField ObservacaoEntrega = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoEntrega, new Guid("64E8B6CF-1012-45C7-AFCF-7E845B71557B"), "ObservacaoEntrega", "Observação para Entrega");
            public static XORMField ObservacaoBusca = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoBusca, new Guid("B5F8E765-3F5C-4D59-9A6C-27E6B57F56C2"), "ObservacaoBusca", "Observação para busca");
        }
        #endregion xPETxAtendimento 


        public xERPxCategoria ERPxCategoria;
        public xERPxProfissionalCategoria ERPxProfissionalCategoria;
        public xPETxAtendimento PETxAtendimento;
        public xPETxAtendimentoProfissional PETxAtendimentoProfissional;
        public xSYSxPessoa SYSxPessoa;

        public ProfissionalSVC()
        {
            TupleType = typeof(ProfissionalSVC.XTuple);
            DataSetType = typeof(ProfissionalSVC.XDataSet);
            ServiceRuleCID = new Guid("CCB65004-6EC5-40C1-A6EF-550E736D21AD");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("FCA93434-E91B-4ACA-AF70-0CB39AA11537");
            Name = "Profissional";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("0718864B-2CB3-4D3E-A80C-19FA2A6FDBDE");
            IsReadOnly = true;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            DataSetFields = new Guid[] { xERPxCategoria.Categoria.ID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, xSYSxPessoa.Nome.ID, xPETxAtendimento.PETxAtendimentoID.ID };
            PKField = xPETxAtendimentoProfissional.ERPxProfissionalID.ID;
            ConfigTableID = new Guid("9098E203-60EF-4B70-BF57-78CF3366069A");
            MasterRuleCID = new Guid("CCB65004-6EC5-40C1-A6EF-550E736D21AD");
            XSubServiceItem ss50837D72DF15448FBE4F94E77346674E = new XSubServiceItem(AtendimentoSVC.gCID, AtendimentoSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID, ProfissionalSVC.gCID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, true, XSubSeviceType.Default);
            ss50837D72DF15448FBE4F94E77346674E.Rights = new Int16[] { 1 }; 
            ss50837D72DF15448FBE4F94E77346674E.LateLoad = false;
            SubServices.Add(ss50837D72DF15448FBE4F94E77346674E);
            ERPxCategoria = new xERPxCategoria();
            ERPxCategoria.IsReadOnly = true;
            AddTable(ERPxCategoria);
            ERPxProfissionalCategoria = new xERPxProfissionalCategoria();
            ERPxProfissionalCategoria.IsReadOnly = true;
            AddTable(ERPxProfissionalCategoria);
            PETxAtendimento = new xPETxAtendimento();
            PETxAtendimento.IsReadOnly = true;
            AddTable(PETxAtendimento);
            PETxAtendimentoProfissional = new xPETxAtendimentoProfissional();
            PETxAtendimentoProfissional.IsReadOnly = true;
            AddTable(PETxAtendimentoProfissional);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PETxAtendimentoProfissional.ID;
            PETxAtendimentoProfissional_PETxAtendimentoID_PETxAtendimento_PETxAtendimentoID = AddReference(new XSVCReference(new Guid("539B97A4-7877-45A0-96C5-95CE8D237C5A"), "FK_539B97A4787745A096C595CE8D237C5A", ProfissionalSVC.xPETxAtendimentoProfissional.gCID, xPETxAtendimentoProfissional.PETxAtendimentoID.ID, ProfissionalSVC.xPETxAtendimento.gCID, xPETxAtendimento.PETxAtendimentoID.ID, XJoinType.Inner)); // PETxAtendimentoProfissional.PETxAtendimentoID --> PETxAtendimento.PETxAtendimentoID
            ERPxProfissionalCategoria_ERPxProfissionalID_PETxAtendimentoProfissional_ERPxProfissionalID = AddReference(new XSVCReference(new Guid("7B753545-3BC8-4383-B72A-5EBBE48745B2"), "FK_7B7535453BC84383B72A5EBBE48745B2", ProfissionalSVC.xERPxProfissionalCategoria.gCID, xERPxProfissionalCategoria.ERPxProfissionalID.ID, ProfissionalSVC.xPETxAtendimentoProfissional.gCID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, XJoinType.Inner)); // ERPxProfissionalCategoria.ERPxProfissionalID --> PETxAtendimentoProfissional.ERPxProfissionalID
            ERPxCategoria_ERPxCategoriaID_ERPxProfissionalCategoria_ERPxCategoriaID = AddReference(new XSVCReference(new Guid("DBF68089-7DC1-4AB7-BF0E-1716D58EFB7D"), "FK_DBF680897DC14AB7BF0E1716D58EFB7D", ProfissionalSVC.xERPxCategoria.gCID, xERPxCategoria.ERPxCategoriaID.ID, ProfissionalSVC.xERPxProfissionalCategoria.gCID, xERPxProfissionalCategoria.ERPxCategoriaID.ID, XJoinType.Inner)); // ERPxCategoria.ERPxCategoriaID --> ERPxProfissionalCategoria.ERPxCategoriaID
            SYSxPessoa_SYSxPessoaID_PETxAtendimentoProfissional_ERPxProfissionalID = AddReference(new XSVCReference(new Guid("EEFFE13D-23DC-47FE-9390-802E546E3565"), "FK_EEFFE13D23DC47FE9390802E546E3565", ProfissionalSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, ProfissionalSVC.xPETxAtendimentoProfissional.gCID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PETxAtendimentoProfissional.ERPxProfissionalID
            XSVCReference FK_70797752BD46455BB9CC97999374B6E5 = new XSVCReference(new Guid("70797752-BD46-455B-B9CC-97999374B6E5"), "FK_70797752BD46455BB9CC97999374B6E5", AtendimentoSVC.gCID, AtendimentoSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID, PETxAtendimentoProfissional.ID, ProfissionalSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID, XJoinType.SubService); // AtendimentoSVC.ERPxProfissionalID --> Profissional.ERPxProfissionalID
            FK_70797752BD46455BB9CC97999374B6E5.IsLowRelevance = false;
            AddReference(FK_70797752BD46455BB9CC97999374B6E5);
            xERPxCategoria.Categoria.IsReadOnly = true;
            xERPxCategoria.Categoria.Length = 35;
            xERPxCategoria.Categoria.IsDataField = true;
            xERPxCategoria.Categoria.AllowEmpty = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.IsReadOnly = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.IsDataField = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xPETxAtendimento.PETxAtendimentoID.IsReadOnly = true;
            xPETxAtendimento.PETxAtendimentoID.TypeID = XInt32.CID;
            xPETxAtendimento.PETxAtendimentoID.DefaultValue = default(Int32);
            xPETxAtendimento.PETxAtendimentoID.DBFunctionID = new Guid("7AA76D22-B9AF-477A-A15B-6018CFA7BD4D");
            xPETxAtendimento.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimento.PETxAtendimentoID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPETxAtendimento.PETxAtendimentoEstadoID);
            pWhere.Add(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoEstado.XDefault.Recebido);
            pWhere.Add(xPETxAtendimento.SYSxEmpresaID);
            pWhere.Add(pContext.Logon.CurrentCompanyID);
        }

        #region XFields

        public class XFields
        {
        public XORMField Categoria => xERPxCategoria.Categoria;
        public XORMField ERPxProfissionalID => xPETxAtendimentoProfissional.ERPxProfissionalID;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField PETxAtendimentoID => xPETxAtendimento.PETxAtendimentoID;
        }
        #endregion XFields
        #region ProfissionalSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Categoria
        {
            get
            {
                return (String)Value[ProfissionalSVC.xERPxCategoria.Categoria.ID];
            }
            set
            {
                Value[ProfissionalSVC.xERPxCategoria.Categoria.ID] = value;
            }
        }
        public String? oCategoria
        {
            get
            {
                GetOldValue(ProfissionalSVC.xERPxCategoria.Categoria, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ERPxProfissionalID
        {
            get
            {
                return (Guid)Value[ProfissionalSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID];
            }
            set
            {
                Value[ProfissionalSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID] = value;
            }
        }
        public Guid? oERPxProfissionalID
        {
            get
            {
                GetOldValue(ProfissionalSVC.xPETxAtendimentoProfissional.ERPxProfissionalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ProfissionalSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ProfissionalSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ProfissionalSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 PETxAtendimentoID
        {
            get
            {
                return (Int32)Value[ProfissionalSVC.xPETxAtendimento.PETxAtendimentoID.ID];
            }
            set
            {
                Value[ProfissionalSVC.xPETxAtendimento.PETxAtendimentoID.ID] = value;
            }
        }
        public Int32? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(ProfissionalSVC.xPETxAtendimento.PETxAtendimentoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ProfissionalSVC.XTuple

        #region ProfissionalSVC.XDataSet

        public class XDataSet : XDataSet<ProfissionalSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ProfissionalSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ProfissionalSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Categoria => ProfissionalSVC.xERPxCategoria.Categoria.ID;
                public Guid ERPxProfissionalID => ProfissionalSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID;
                public Guid Nome => ProfissionalSVC.xSYSxPessoa.Nome.ID;
                public Guid PETxAtendimentoID => ProfissionalSVC.xPETxAtendimento.PETxAtendimentoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ProfissionalSVC.XDataSet);
            }

            private Projecao.Core.PET.RPTs.Servico.AtendimentoSVC.XDataSet _AtendimentoDataSet;

            public Projecao.Core.PET.RPTs.Servico.AtendimentoSVC.XDataSet AtendimentoDataSet
            {
                get
                {
                    if (_AtendimentoDataSet == null)
                    {
                        _AtendimentoDataSet = (Projecao.Core.PET.RPTs.Servico.AtendimentoSVC.XDataSet)Children.Get(Projecao.Core.PET.RPTs.Servico.AtendimentoSVC.gCID);
                        _AtendimentoDataSet.IsReadOnly = true;
                    }
                    return  _AtendimentoDataSet;
                }
            }

        }
        #endregion ProfissionalSVC.XDataSet
        #if !OnlyDef
        #region ProfissionalSVC.XRule
        public abstract class XRule : XServiceRule<ProfissionalSVC.XDataSet, ProfissionalSVC, ProfissionalSVC.XTuple>
        {
        }
        #endregion ProfissionalSVC.XRule

        [Guid(ProfissionalSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ProfissionalSVC))]
        protected class _Service : Service<ProfissionalSVC, XDataSet, XTuple>
        {
            public const String sCID = "DD409E9B-6E64-4F5B-BCA8-321908383472";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ProfissionalSVC, XDataSet, XTuple>, XService
             where TModel : ProfissionalSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}