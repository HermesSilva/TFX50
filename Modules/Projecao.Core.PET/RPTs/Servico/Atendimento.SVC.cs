//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.RPTs.Servico
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\RPTs\Servico\Atendimento.dssvc")]
    [XRegister(typeof(AtendimentoSVC), sCID)]
    public class AtendimentoSVC : XSVCModel
    {
        #region AtendimentoFilterFRM

        [XRegister(typeof(AtendimentoFilterFRM), sCID)]
        public class AtendimentoFilterFRM : XFRMModel
        {
            public const String sCID = "7262A5E7-C475-4561-A655-7D0EC111B6CF";
            public static new readonly Guid gCID = new Guid(sCID);
            static AtendimentoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AtendimentoFilterFRM()
            {
                ID = gCID;
                Name = "AtendimentoFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(ERPxProfissionalID);
                ERPxProfissionalID.ForceRW = true;
                ERPxProfissionalID.CanInsert = true;
                ERPxProfissionalID.CanUpdate = true;
                ERPxProfissionalID.RowCount = 2;
                ERPxProfissionalID.ColCount = 18;
                ERPxProfissionalID.RowCountSmall = 2;
                ERPxProfissionalID.ColCountSmall = 18;
                ERPxProfissionalID.IsHidden = false;
                ERPxProfissionalID.IsHiddenSmall = false;
                ERPxProfissionalID.AdditionalTitle = "";
                ERPxProfissionalID.Icon = "";
                ERPxProfissionalID.Location = 1;
                ERPxProfissionalID.EditorCID = new Guid("66290387-F0AD-4746-A1F7-B0D8D4C5C2EE");
                ERPxProfissionalID.Operator = XOperator.EqualTo;
                ERPxProfissionalID.ShowSpin = false;
                ERPxProfissionalID.HotkeyChar = "";
                ERPxProfissionalID.JustifyHeight = false;
                ERPxProfissionalID.AllowEmpty = true;
                ERPxProfissionalID.FontColor = "#000000";
                ERPxProfissionalID.FontStyle = XFontStyle.Normal;
                ERPxProfissionalID.ShowFooter = false;
                ERPxProfissionalID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                ERPxProfissionalID.Order = 1;
                ERPxProfissionalID.Scale = -1;
                ERPxProfissionalID.Length = -1;
                ERPxProfissionalID.SearchAction = XSearchAction.Default;
                ERPxProfissionalID.TypeID = XGuid.CID;
                ERPxProfissionalID.AdditionalFieldsID = new Guid[] {  };
                ERPxProfissionalID.AdditionalDataFieldsID = new Guid[] {  };
                ERPxProfissionalID.TargetFilterFieldID = new Guid[] {  };
                ERPxProfissionalID.SourceFilterFieldID = new Guid[] {  };
                ERPxProfissionalID.TargetDisplayFieldID = new Guid[] {  };
                ERPxProfissionalID.SourceDisplayFieldID = new Guid[] { new Guid("7E498117-436D-4430-A273-E0282A69E085") };
                ERPxProfissionalID.DataSourceID = global::Projecao.Core.ERP.ReadOnly.ProfissionalSVC.gCID;
                ERPxProfissionalID.AutoLoad = false;
                ERPxProfissionalID.FilterInative = true;
                ERPxProfissionalID.IsAnswer = false;
                ERPxProfissionalID.AllowMultiSelect = false;
                AddItem(DataIni);
                DataIni.ForceRW = true;
                DataIni.CanInsert = true;
                DataIni.CanUpdate = true;
                DataIni.RowCount = 2;
                DataIni.ColCount = 7;
                DataIni.RowCountSmall = 2;
                DataIni.ColCountSmall = 7;
                DataIni.IsHidden = false;
                DataIni.IsHiddenSmall = false;
                DataIni.AdditionalTitle = "";
                DataIni.Icon = "";
                DataIni.Location = 2;
                DataIni.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                DataIni.Operator = XOperator.GreaterThanOrEqualTo;
                DataIni.ShowSpin = false;
                DataIni.HotkeyChar = "";
                DataIni.JustifyHeight = false;
                DataIni.AllowEmpty = true;
                DataIni.FontColor = "#000000";
                DataIni.FontStyle = XFontStyle.Normal;
                DataIni.ShowFooter = false;
                DataIni.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataIni.Order = 2;
                DataIni.Scale = -1;
                DataIni.Length = -1;
                DataIni.SearchAction = XSearchAction.Default;
                DataIni.TypeID = XDateTime.CID;
                DataIni.AdditionalFieldsID = new Guid[] {  };
                DataIni.AdditionalDataFieldsID = new Guid[] {  };
                DataIni.TargetFilterFieldID = new Guid[] {  };
                DataIni.SourceFilterFieldID = new Guid[] {  };
                DataIni.TargetDisplayFieldID = new Guid[] {  };
                DataIni.SourceDisplayFieldID = new Guid[] {  };
                DataIni.AutoLoad = false;
                DataIni.FilterInative = true;
                DataIni.IsAnswer = false;
                DataIni.AllowMultiSelect = false;
                AddItem(DataFin);
                DataFin.ForceRW = true;
                DataFin.CanInsert = true;
                DataFin.CanUpdate = true;
                DataFin.RowCount = 2;
                DataFin.ColCount = 7;
                DataFin.RowCountSmall = 2;
                DataFin.ColCountSmall = 7;
                DataFin.IsHidden = false;
                DataFin.IsHiddenSmall = false;
                DataFin.AdditionalTitle = "";
                DataFin.Icon = "";
                DataFin.Location = 3;
                DataFin.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                DataFin.Operator = XOperator.LessThanOrEqualTo;
                DataFin.ShowSpin = false;
                DataFin.HotkeyChar = "";
                DataFin.JustifyHeight = false;
                DataFin.AllowEmpty = true;
                DataFin.FontColor = "#000000";
                DataFin.FontStyle = XFontStyle.Normal;
                DataFin.ShowFooter = false;
                DataFin.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                DataFin.Order = 3;
                DataFin.Scale = -1;
                DataFin.Length = -1;
                DataFin.SearchAction = XSearchAction.Default;
                DataFin.TypeID = XDateTime.CID;
                DataFin.AdditionalFieldsID = new Guid[] {  };
                DataFin.AdditionalDataFieldsID = new Guid[] {  };
                DataFin.TargetFilterFieldID = new Guid[] {  };
                DataFin.SourceFilterFieldID = new Guid[] {  };
                DataFin.TargetDisplayFieldID = new Guid[] {  };
                DataFin.SourceDisplayFieldID = new Guid[] {  };
                DataFin.AutoLoad = false;
                DataFin.FilterInative = true;
                DataFin.IsAnswer = false;
                DataFin.AllowMultiSelect = false;
            }
            public XFRMField ERPxProfissionalID = new XFRMField(new Guid("D5E99BAC-8A5C-4535-A41E-96F27FF495A4"), "ERPxProfissionalID", "Profissionais", XGuid.CID, 2, 18, false, gCID, null, new Guid("32A4C684-0A59-4437-A575-BCA42CB0818F")); // Guid;
            public XFRMField DataIni = new XFRMField(new Guid("4996D7B2-379A-4667-879B-7515E9D5DAF9"), "DataIni", "Data Inicial", XDateTime.CID, 2, 7, false, gCID, null, new Guid("AA2296D8-A274-4734-B3C5-1FD8D7A07C09")); // DateTime;
            public XFRMField DataFin = new XFRMField(new Guid("04177094-8D11-4A75-965F-80AE2218F285"), "DataFin", "Data Final", XDateTime.CID, 2, 7, false, gCID, null, new Guid("AA2296D8-A274-4734-B3C5-1FD8D7A07C09")); // DateTime;
            public static class Fields
            {
                public static XFieldInfo ERPxProfissionalID = new XFieldInfo(new Guid("D5E99BAC-8A5C-4535-A41E-96F27FF495A4"), "ERPxProfissionalID", "Profissionais", typeof(Guid), false, "");
                public static XFieldInfo DataIni = new XFieldInfo(new Guid("4996D7B2-379A-4667-879B-7515E9D5DAF9"), "DataIni", "Data Inicial", typeof(DateTime), false, "dd/MM/yyyy");
                public static XFieldInfo DataFin = new XFieldInfo(new Guid("04177094-8D11-4A75-965F-80AE2218F285"), "DataFin", "Data Final", typeof(DateTime), false, "dd/MM/yyyy");
            }
        }

        #endregion AtendimentoFilterFRM

        public const String sCID = "BE8C6A37-5846-4CE0-986A-4258145065F1";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAnimalTutor_PETxAnimalTutorID_PETxAtendimento_PETxAnimalTutorID; // PETxAnimalTutor.PETxAnimalTutorID --> PETxAtendimento.PETxAnimalTutorID
        public static XSVCReference PETxAtendimentoProfissional_PETxAtendimentoID_PETxAtendimento_PETxAtendimentoID; // PETxAtendimentoProfissional.PETxAtendimentoID --> PETxAtendimento.PETxAtendimentoID
        public static XSVCReference PETxAnimal_PETxAnimalID_PETxAnimalTutor_PETxAnimalID; // PETxAnimal.PETxAnimalID --> PETxAnimalTutor.PETxAnimalID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PETxAnimalTutor_PETxTutorID; // SYSxPessoa.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID

        #region xPETxAtendimentoProfissional 
        public class xPETxAtendimentoProfissional : XSVCTable
        {

            public static Guid gCID => new Guid("13F56F08-73DB-45E9-904C-ABC4E0692643");

            public xPETxAtendimentoProfissional()
            {
                Name = "PETxAtendimentoProfissional";
                Alias = "PETxAtendimentoProfissional";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.gCID;

                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                ERPxProfissionalID.Alias = "ERPxProfissionalID";
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                ERPxCategoriaID.Alias = "ERPxCategoriaID";
                Items.Add(Inicio, Inicio.ID);
                Inicio.Owner = this;
                Inicio.OwnerID = ID;
                Inicio.TableName = Name;
                Inicio.Alias = "Inicio";
                Items.Add(Final, Final.ID);
                Final.Owner = this;
                Final.OwnerID = ID;
                Final.TableName = Name;
                Items.Add(PETxAtendimentoProfissionalID, PETxAtendimentoProfissionalID.ID);
                PETxAtendimentoProfissionalID.Owner = this;
                PETxAtendimentoProfissionalID.OwnerID = ID;
                PETxAtendimentoProfissionalID.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.ERPxProfissionalID, new Guid("32A4C684-0A59-4437-A575-BCA42CB0818F"), "ERPxProfissionalID", "Profissionais");
            public static XORMFKField PETxAtendimentoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.PETxAtendimentoID, new Guid("AE61E2F8-0D71-4E75-A345-B965894C27DF"), "PETxAtendimentoID", "Atendimento");
            public static XORMFKField ERPxCategoriaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.ERPxCategoriaID, new Guid("6C322739-7D66-4C6C-9596-F24C126327F8"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMDateTimeField Inicio = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.Inicio, new Guid("578D04BE-1E4E-4B80-9E41-5342A33B1181"), "Inicio", "Horário");
            public static XORMDateTimeField Final = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.Final, new Guid("2B1CC0C6-7684-4FF4-B466-41A8F1440F0D"), "Final", "Final do Atendimento");
            public static XORMPKField PETxAtendimentoProfissionalID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.PETxAtendimentoProfissionalID, new Guid("5CCF9D12-E1A5-49C4-AC38-0DD06F412B2C"), "PETxAtendimentoProfissionalID", "Profissional por Atendimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.SYSxEmpresaID, new Guid("CAF9D7C7-9741-4027-A8AF-4CA764B71BF1"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoProfissional.SYSxEstadoID, new Guid("DA1F887B-5840-48EA-B683-69FD37857328"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAtendimentoProfissional 


        #region xPETxAnimalTutor 
        public class xPETxAnimalTutor : XSVCTable
        {

            public static Guid gCID => new Guid("619BDD5F-B28D-46DD-AE68-9EDFE68C4841");

            public xPETxAnimalTutor()
            {
                Name = "PETxAnimalTutor";
                Alias = "PETxAnimalTutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxTutorID, new Guid("6F10475C-B18B-49FB-A11D-C785040826BC"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalID, new Guid("1DB856B8-2615-4AF3-AF9D-387A7F27A4B7"), "PETxAnimalID", "PET");
            public static XORMFaceField PETxAnimalTutorID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalTutorID, new Guid("3BB836FA-071F-47E1-8248-038742FAEF5B"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.SYSxEstadoID, new Guid("8F719752-F02A-4C5D-BB4E-57A43F8BEE89"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAnimalTutor 


        #region xPETxAnimal 
        public class xPETxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("ACD43057-74D6-4DCE-9F1A-D3B53899ED13");

            public xPETxAnimal()
            {
                Name = "PETxAnimal";
                Alias = "PETxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimal.gCID;

                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                Items.Add(ERPxSexoID, ERPxSexoID.ID);
                ERPxSexoID.Owner = this;
                ERPxSexoID.OwnerID = ID;
                ERPxSexoID.TableName = Name;
                Items.Add(PETxRacaID, PETxRacaID.ID);
                PETxRacaID.Owner = this;
                PETxRacaID.OwnerID = ID;
                PETxRacaID.TableName = Name;
                Items.Add(PETxPelagemID, PETxPelagemID.ID);
                PETxPelagemID.Owner = this;
                PETxPelagemID.OwnerID = ID;
                PETxPelagemID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "PetNome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(PETxPorteID, PETxPorteID.ID);
                PETxPorteID.Owner = this;
                PETxPorteID.OwnerID = ID;
                PETxPorteID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(Cor, Cor.ID);
                Cor.Owner = this;
                Cor.OwnerID = ID;
                Cor.TableName = Name;
            }

            public static XORMFaceField PETxAnimalID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxAnimalID, new Guid("4941A3A5-B493-4565-9FD1-9CE6FAB43022"), "PETxAnimalID", "PET");
            public static XORMFKField ERPxSexoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.ERPxSexoID, new Guid("8179B6BD-C5FE-452A-B438-836C08C45112"), "ERPxSexoID", "Sexo");
            public static XORMFKField PETxRacaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxRacaID, new Guid("15A85E07-ADA5-489F-8A9F-11DA78179C87"), "PETxRacaID", "Raça");
            public static XORMFKField PETxPelagemID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxPelagemID, new Guid("6B7E60F5-6AC0-4CEE-949E-41205C391162"), "PETxPelagemID", "Pelagem");
            public static XORMDateTimeField Nascimento = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Nascimento, new Guid("5D63A0D6-3B01-4EA4-AB36-C972CBC3A717"), "Nascimento", "Nascimento");
            public static XORMField Nome = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Nome, new Guid("78D63220-BD80-4598-9CA5-FABD029E6184"), "Nome", "PET");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.SYSxEstadoID, new Guid("A263A705-F304-44E0-B3D8-E3F08CD5F66E"), "SYSxEstadoID", "Estado");
            public static XORMFKField PETxPorteID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxPorteID, new Guid("B82402AD-6401-44E3-84F5-C60323FE6668"), "PETxPorteID", "Porte");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Observacao, new Guid("D8D47564-8D19-4B3A-BFC6-AF0599D16618"), "Observacao", "Observação");
            public static XORMField Cor = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Cor, new Guid("AE87420C-698C-4314-AF05-A71C3A94A50D"), "Cor", "Cor");
        }
        #endregion xPETxAnimal 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("C008B43C-C6F4-4157-84F5-A62D44577B8A");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("99338EEB-303C-4A0D-80BE-9D99EF380347"), "Nome", "Tutor");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("64D484E6-11E4-4867-ACFA-F79BE5C4784D"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xPETxAtendimento 
        public class xPETxAtendimento : XSVCTable
        {

            public static Guid gCID => new Guid("E8BB15B9-9905-4F3A-9300-5EC04539136C");

            public xPETxAtendimento()
            {
                Name = "PETxAtendimento";
                Alias = "PETxAtendimento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimento.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                PETxAtendimentoID.Alias = "PETxAtendimentoID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(ERPxEnderecoEntregaID, ERPxEnderecoEntregaID.ID);
                ERPxEnderecoEntregaID.Owner = this;
                ERPxEnderecoEntregaID.OwnerID = ID;
                ERPxEnderecoEntregaID.TableName = Name;
                Items.Add(ERPxEnderecoBuscaID, ERPxEnderecoBuscaID.ID);
                ERPxEnderecoBuscaID.Owner = this;
                ERPxEnderecoBuscaID.OwnerID = ID;
                ERPxEnderecoBuscaID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                Items.Add(DataBusca, DataBusca.ID);
                DataBusca.Owner = this;
                DataBusca.OwnerID = ID;
                DataBusca.TableName = Name;
                Items.Add(DataEntrega, DataEntrega.ID);
                DataEntrega.Owner = this;
                DataEntrega.OwnerID = ID;
                DataEntrega.TableName = Name;
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(PETxAtendimentoTipoID, PETxAtendimentoTipoID.ID);
                PETxAtendimentoTipoID.Owner = this;
                PETxAtendimentoTipoID.OwnerID = ID;
                PETxAtendimentoTipoID.TableName = Name;
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Items.Add(GrupoOrdem, GrupoOrdem.ID);
                GrupoOrdem.Owner = this;
                GrupoOrdem.OwnerID = ID;
                GrupoOrdem.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
                Items.Add(Finalizado, Finalizado.ID);
                Finalizado.Owner = this;
                Finalizado.OwnerID = ID;
                Finalizado.TableName = Name;
                Items.Add(ObservacaoEntrega, ObservacaoEntrega.ID);
                ObservacaoEntrega.Owner = this;
                ObservacaoEntrega.OwnerID = ID;
                ObservacaoEntrega.TableName = Name;
                Items.Add(ObservacaoBusca, ObservacaoBusca.ID);
                ObservacaoBusca.Owner = this;
                ObservacaoBusca.OwnerID = ID;
                ObservacaoBusca.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxTutorID, new Guid("D0B1B8A1-3B8E-4156-8504-DF2EEF0BB3F5"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAnimalTutorID, new Guid("69CAF9EE-FF83-4113-8A38-454BB75FDEBF"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMPKField PETxAtendimentoID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoID, new Guid("87F3F3B0-D28A-411A-8D53-4DD3D0F9B818"), "PETxAtendimentoID", "Atendimento");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Data, new Guid("AA2296D8-A274-4734-B3C5-1FD8D7A07C09"), "Data", "Data");
            public static XORMFKField ERPxEnderecoEntregaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoEntregaID, new Guid("D61D71A6-BA63-4F53-BB9B-31F8DD065DEB"), "ERPxEnderecoEntregaID", "Entregar no Endereço");
            public static XORMFKField ERPxEnderecoBuscaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoBuscaID, new Guid("B4605ED5-A08E-41CF-A085-874FC16C06DE"), "ERPxEnderecoBuscaID", "Buscar no Endereço");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Observacao, new Guid("4420E676-61E5-4A7F-9C98-FD27FCB0F3E6"), "Observacao", "Observação");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoEstadoID, new Guid("14C2DD95-1756-43A6-AF3F-4E643EBF5F26"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDateTimeField DataBusca = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataBusca, new Guid("9DEC6FD3-DCFC-47F0-99CC-D2F96C2DBD31"), "DataBusca", "Data e Hora de Buscar");
            public static XORMDateTimeField DataEntrega = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataEntrega, new Guid("100202A7-06A1-4D0A-9C14-9C4D3F356975"), "DataEntrega", "Data e Hora de Entregar");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorTotal, new Guid("4494C89E-D9BC-49C5-B757-CF5489B0B8E0"), "ValorTotal", "Valor Total");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorCobrado, new Guid("4353F09A-2E6A-432C-A64D-FFFB1610A646"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Desconto, new Guid("A2EFCBC2-FBCD-4A0E-80FC-2B62D6DEA7B5"), "Desconto", "Desconto");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEmpresaID, new Guid("F0EAB42A-FEA6-4EF8-A92E-21845CAB332D"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEstadoID, new Guid("D97B7194-57E8-459E-926C-D1349002F198"), "SYSxEstadoID", "Estado");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.CTLxUsuarioID, new Guid("4D80F71B-A5C5-420C-A0A3-EEF74F8B591C"), "CTLxUsuarioID", "Usuário");
            public static XORMFKField PETxAtendimentoTipoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoTipoID, new Guid("61DF2251-3615-40E6-82EE-679A2FC20EA6"), "PETxAtendimentoTipoID", "Tipo de Atendimento");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Grupo, new Guid("77BD1741-800D-4259-975F-C16E6CDC3708"), "Grupo", "Grupo");
            public static XORMField GrupoOrdem = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.GrupoOrdem, new Guid("A29B923E-C647-4C35-A87E-94CF911082AB"), "GrupoOrdem", "Ordem no grupo");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Numero, new Guid("AA9DC837-C1C9-4C52-98B5-0EC4992F78BE"), "Numero", "Número");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoClasseID, new Guid("8FADB3CB-1B0B-4513-A8DE-267608416ADE"), "PETxAtendimentoClasseID", "Classe");
            public static XORMField Finalizado = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Finalizado, new Guid("52746051-441D-4EBA-9E0D-E7BD9922DB2E"), "Finalizado", "Finalizado");
            public static XORMField ObservacaoEntrega = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoEntrega, new Guid("C87B2088-CAD8-468C-BB30-24E9010C88BD"), "ObservacaoEntrega", "Observação para Entrega");
            public static XORMField ObservacaoBusca = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoBusca, new Guid("7F314B33-338A-4462-8C5B-59419F6193AC"), "ObservacaoBusca", "Observação para busca");
        }
        #endregion xPETxAtendimento 


        public xPETxAnimal PETxAnimal;
        public xPETxAnimalTutor PETxAnimalTutor;
        public xPETxAtendimento PETxAtendimento;
        public xPETxAtendimentoProfissional PETxAtendimentoProfissional;
        public xSYSxPessoa SYSxPessoa;
        public static readonly XORMParameterField Comissao = new XORMParameterField(new Guid("EFA3123C-4AAD-41DE-8E71-7FEF0C1CAF69"), "Comissao", "Comissão", XDecimal.CID, 20, 2, false, gCID, null);
        public static readonly XORMParameterField ValorServico = new XORMParameterField(new Guid("F12DA354-3977-4E37-A5DB-3AE3AF9D24E7"), "ValorServico", "Valor dos Serviços", XDecimal.CID, 25, 2, false, gCID, null);

        public AtendimentoSVC()
        {
            TupleType = typeof(AtendimentoSVC.XTuple);
            DataSetType = typeof(AtendimentoSVC.XDataSet);
            ServiceRuleCID = new Guid("1D1BB7AA-2753-42B3-B6CD-60431BDFE659");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("BE8C6A37-5846-4CE0-986A-4258145065F1");
            Name = "Atendimento";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = true;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("7262A5E7-C475-4561-A655-7D0EC111B6CF");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            OrderByFields = new Guid[] { xPETxAtendimento.Data.ID };
            DataSetFields = new Guid[] { xSYSxPessoa.Nome.ID, ValorServico.ID, Comissao.ID, xPETxAtendimento.Data.ID, xPETxAnimal.Nome.ID, xPETxAtendimento.PETxAtendimentoID.ID, xPETxAtendimentoProfissional.Inicio.ID, xPETxAtendimentoProfissional.ERPxProfissionalID.ID, xPETxAtendimentoProfissional.ERPxCategoriaID.ID, xPETxAtendimento.Numero.ID };
            PKField = xPETxAtendimento.PETxAtendimentoID.ID;
            ConfigTableID = new Guid("F429AFF3-2738-451B-97F2-B450125F37B5");
            MasterRuleCID = new Guid("1D1BB7AA-2753-42B3-B6CD-60431BDFE659");
            PETxAnimal = new xPETxAnimal();
            PETxAnimal.IsReadOnly = true;
            AddTable(PETxAnimal);
            PETxAnimalTutor = new xPETxAnimalTutor();
            PETxAnimalTutor.IsReadOnly = true;
            AddTable(PETxAnimalTutor);
            PETxAtendimento = new xPETxAtendimento();
            PETxAtendimento.IsReadOnly = true;
            AddTable(PETxAtendimento);
            PETxAtendimentoProfissional = new xPETxAtendimentoProfissional();
            PETxAtendimentoProfissional.IsReadOnly = true;
            AddTable(PETxAtendimentoProfissional);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PETxAtendimento.ID;
            PETxAnimalTutor_PETxAnimalTutorID_PETxAtendimento_PETxAnimalTutorID = AddReference(new XSVCReference(new Guid("84F5BFB1-648D-4752-915C-15B65563D76D"), "FK_84F5BFB1648D4752915C15B65563D76D", AtendimentoSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxAnimalTutorID.ID, AtendimentoSVC.xPETxAtendimento.gCID, xPETxAtendimento.PETxAnimalTutorID.ID, XJoinType.Inner)); // PETxAnimalTutor.PETxAnimalTutorID --> PETxAtendimento.PETxAnimalTutorID
            PETxAtendimentoProfissional_PETxAtendimentoID_PETxAtendimento_PETxAtendimentoID = AddReference(new XSVCReference(new Guid("CE4A9E9D-34A0-49DB-92D0-243C60500C99"), "FK_CE4A9E9D34A049DB92D0243C60500C99", AtendimentoSVC.xPETxAtendimentoProfissional.gCID, xPETxAtendimentoProfissional.PETxAtendimentoID.ID, AtendimentoSVC.xPETxAtendimento.gCID, xPETxAtendimento.PETxAtendimentoID.ID, XJoinType.Inner)); // PETxAtendimentoProfissional.PETxAtendimentoID --> PETxAtendimento.PETxAtendimentoID
            PETxAnimal_PETxAnimalID_PETxAnimalTutor_PETxAnimalID = AddReference(new XSVCReference(new Guid("D1CA81F9-B76D-4F85-A84F-A123A4FA4FA7"), "FK_D1CA81F9B76D4F85A84FA123A4FA4FA7", AtendimentoSVC.xPETxAnimal.gCID, xPETxAnimal.PETxAnimalID.ID, AtendimentoSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxAnimalID.ID, XJoinType.Inner)); // PETxAnimal.PETxAnimalID --> PETxAnimalTutor.PETxAnimalID
            SYSxPessoa_SYSxPessoaID_PETxAnimalTutor_PETxTutorID = AddReference(new XSVCReference(new Guid("FA588184-37AC-499E-9AA4-7361C13B13DD"), "FK_FA58818437AC499E9AA47361C13B13DD", AtendimentoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, AtendimentoSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxTutorID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
            AddField(ValorServico);
            ValorServico.IsParam = true;
            AddField(Comissao);
            Comissao.IsParam = true;
            Comissao.IsReadOnly = false;
            Comissao.Length = 20;
            Comissao.Scale = 2;
            Comissao.IsDataField = true;
            Comissao.AllowEmpty = true;
            xPETxAtendimento.Data.IsReadOnly = true;
            xPETxAtendimento.Data.OrderType = XOrderType.Desc;
            xPETxAtendimento.Data.IsDataField = true;
            xPETxAtendimento.Data.AllowEmpty = true;
            xPETxAtendimentoProfissional.ERPxCategoriaID.IsReadOnly = true;
            xPETxAtendimentoProfissional.ERPxCategoriaID.IsDataField = true;
            xPETxAtendimentoProfissional.ERPxCategoriaID.AllowEmpty = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.IsReadOnly = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.IsDataField = true;
            xPETxAtendimentoProfissional.ERPxProfissionalID.AllowEmpty = true;
            xPETxAtendimentoProfissional.Inicio.IsReadOnly = true;
            xPETxAtendimentoProfissional.Inicio.IsDataField = true;
            xPETxAtendimentoProfissional.Inicio.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xPETxAtendimento.Numero.IsReadOnly = true;
            xPETxAtendimento.Numero.IsDataField = true;
            xPETxAtendimento.Numero.AllowEmpty = true;
            xPETxAnimal.Nome.IsReadOnly = true;
            xPETxAnimal.Nome.Length = 60;
            xPETxAnimal.Nome.IsDataField = true;
            xPETxAnimal.Nome.AllowEmpty = true;
            xPETxAtendimento.PETxAtendimentoID.IsReadOnly = true;
            xPETxAtendimento.PETxAtendimentoID.IsDataField = true;
            xPETxAtendimento.PETxAtendimentoID.AllowEmpty = true;
            ValorServico.IsReadOnly = false;
            ValorServico.Length = 25;
            ValorServico.Scale = 2;
            ValorServico.IsDataField = true;
            ValorServico.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPETxAtendimento.SYSxEmpresaID);
            pWhere.Add(pContext.Logon.CurrentCompanyID);
        }

        #region XFields

        public class XFields
        {
        public XORMField Comissao => AtendimentoSVC.Comissao;
        public XORMField Data => xPETxAtendimento.Data;
        public XORMField ERPxCategoriaID => xPETxAtendimentoProfissional.ERPxCategoriaID;
        public XORMField ERPxProfissionalID => xPETxAtendimentoProfissional.ERPxProfissionalID;
        public XORMField Inicio => xPETxAtendimentoProfissional.Inicio;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Numero => xPETxAtendimento.Numero;
        public XORMField PetNome => xPETxAnimal.Nome;
        public XORMField PETxAtendimentoID => xPETxAtendimento.PETxAtendimentoID;
        public XORMField ValorServico => AtendimentoSVC.ValorServico;
        }
        #endregion XFields
        #region AtendimentoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Decimal Comissao
        {
            get
            {
                return (Decimal)Value[AtendimentoSVC.Comissao.ID];
            }
            set
            {
                Value[AtendimentoSVC.Comissao.ID] = value;
            }
        }
        public Decimal? oComissao
        {
            get
            {
                GetOldValue(AtendimentoSVC.Comissao, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[AtendimentoSVC.xPETxAtendimento.Data.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAtendimento.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAtendimento.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Int16 ERPxCategoriaID
        {
            get
            {
                return (Int16)Value[AtendimentoSVC.xPETxAtendimentoProfissional.ERPxCategoriaID.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAtendimentoProfissional.ERPxCategoriaID.ID] = value;
            }
        }
        public Int16? oERPxCategoriaID
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAtendimentoProfissional.ERPxCategoriaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid ERPxProfissionalID
        {
            get
            {
                return (Guid)Value[AtendimentoSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID] = value;
            }
        }
        public Guid? oERPxProfissionalID
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAtendimentoProfissional.ERPxProfissionalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Inicio
        {
            get
            {
                return (DateTime)Value[AtendimentoSVC.xPETxAtendimentoProfissional.Inicio.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAtendimentoProfissional.Inicio.ID] = value;
            }
        }
        public DateTime? oInicio
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAtendimentoProfissional.Inicio, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AtendimentoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[AtendimentoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AtendimentoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 Numero
        {
            get
            {
                return (Int32)Value[AtendimentoSVC.xPETxAtendimento.Numero.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAtendimento.Numero.ID] = value;
            }
        }
        public Int32? oNumero
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAtendimento.Numero, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String PetNome
        {
            get
            {
                return (String)Value[AtendimentoSVC.xPETxAnimal.Nome.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAnimal.Nome.ID] = value;
            }
        }
        public String? oPetNome
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAnimal.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAtendimentoID
        {
            get
            {
                return (Guid)Value[AtendimentoSVC.xPETxAtendimento.PETxAtendimentoID.ID];
            }
            set
            {
                Value[AtendimentoSVC.xPETxAtendimento.PETxAtendimentoID.ID] = value;
            }
        }
        public Guid? oPETxAtendimentoID
        {
            get
            {
                GetOldValue(AtendimentoSVC.xPETxAtendimento.PETxAtendimentoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Decimal ValorServico
        {
            get
            {
                return (Decimal)Value[AtendimentoSVC.ValorServico.ID];
            }
            set
            {
                Value[AtendimentoSVC.ValorServico.ID] = value;
            }
        }
        public Decimal? oValorServico
        {
            get
            {
                GetOldValue(AtendimentoSVC.ValorServico, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AtendimentoSVC.XTuple

        #region AtendimentoSVC.XDataSet

        public class XDataSet : XDataSet<AtendimentoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AtendimentoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AtendimentoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Comissao => AtendimentoSVC.Comissao.ID;
                public Guid Data => AtendimentoSVC.xPETxAtendimento.Data.ID;
                public Guid ERPxCategoriaID => AtendimentoSVC.xPETxAtendimentoProfissional.ERPxCategoriaID.ID;
                public Guid ERPxProfissionalID => AtendimentoSVC.xPETxAtendimentoProfissional.ERPxProfissionalID.ID;
                public Guid Inicio => AtendimentoSVC.xPETxAtendimentoProfissional.Inicio.ID;
                public Guid Nome => AtendimentoSVC.xSYSxPessoa.Nome.ID;
                public Guid Numero => AtendimentoSVC.xPETxAtendimento.Numero.ID;
                public Guid PetNome => AtendimentoSVC.xPETxAnimal.Nome.ID;
                public Guid PETxAtendimentoID => AtendimentoSVC.xPETxAtendimento.PETxAtendimentoID.ID;
                public Guid ValorServico => AtendimentoSVC.ValorServico.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AtendimentoSVC.XDataSet);
            }

        }
        #endregion AtendimentoSVC.XDataSet
        #if !OnlyDef
        #region AtendimentoSVC.XRule
        public abstract class XRule : XServiceRule<AtendimentoSVC.XDataSet, AtendimentoSVC, AtendimentoSVC.XTuple>
        {
        }
        #endregion AtendimentoSVC.XRule

        [Guid(AtendimentoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AtendimentoSVC))]
        protected class _Service : Service<AtendimentoSVC, XDataSet, XTuple>
        {
            public const String sCID = "BC035AEB-E718-484D-B3D1-D2229A752864";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AtendimentoSVC, XDataSet, XTuple>, XService
             where TModel : AtendimentoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}