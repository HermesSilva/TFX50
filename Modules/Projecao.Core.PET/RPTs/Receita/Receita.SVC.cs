//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.ERP.DB;
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.RPTs.Receita
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\RPTs\Receita\Receita.dssvc")]
    [XRegister(typeof(ReceitaSVC), sCID)]
    public class ReceitaSVC : XSVCModel
    {
        public const String sCID = "E975A661-245D-4BF9-AA55-DF877B4C616F";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxFamilia_PETxFamiliaID_PETxRaca_PETxFamiliaID; // PETxFamilia.PETxFamiliaID --> PETxRaca.PETxFamiliaID
        public static XSVCReference PETxAnimal_PETxAnimalID_PETxAnimalTutor_PETxAnimalID; // PETxAnimal.PETxAnimalID --> PETxAnimalTutor.PETxAnimalID
        public static XSVCReference PETxRaca_PETxRacaID_PETxAnimal_PETxRacaID; // PETxRaca.PETxRacaID --> PETxAnimal.PETxRacaID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PETxAnimalTutor_PETxTutorID; // SYSxPessoa.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
        public static XSVCReference PETxAnimalTutor_PETxAnimalTutorID_PETxAtendimento_PETxAnimalTutorID; // PETxAnimalTutor.PETxAnimalTutorID --> PETxAtendimento.PETxAnimalTutorID
        public static XSVCReference PETxReceita_PETxAnamnesiaID_PETxAtendimento_PETxAtendimentoID; // PETxReceita.PETxAnamnesiaID --> PETxAtendimento.PETxAtendimentoID
        public static XSVCReference ERPxGenero_ERPxGeneroID_PETxAnimal_ERPxSexoID; // ERPxGenero.ERPxGeneroID --> PETxAnimal.ERPxSexoID

        #region xPETxFamilia 
        public class xPETxFamilia : XSVCTable
        {

            public static Guid gCID => new Guid("04B95E95-1437-4EDA-B1B9-85E2BBB0C00A");

            public xPETxFamilia()
            {
                Name = "PETxFamilia";
                Alias = "PETxFamilia";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxFamilia.gCID;

                Items.Add(Familia, Familia.ID);
                Familia.Owner = this;
                Familia.OwnerID = ID;
                Familia.TableName = Name;
                Familia.Alias = "Familia";
                Items.Add(PETxFamiliaID, PETxFamiliaID.ID);
                PETxFamiliaID.Owner = this;
                PETxFamiliaID.OwnerID = ID;
                PETxFamiliaID.TableName = Name;
            }

            public static XORMFaceField Familia = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxFamilia.Familia, new Guid("F34388D1-23CD-47B4-AAD8-31E64ADDDD91"), "Familia", "Família");
            public static XORMPKField PETxFamiliaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxFamilia.PETxFamiliaID, new Guid("441D94E6-E759-4FE5-B729-505D35B2FC89"), "PETxFamiliaID", "Família");
        }
        #endregion xPETxFamilia 


        #region xPETxAnimal 
        public class xPETxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("685CED11-6859-4CA1-AB1A-F0E1DDFF8521");

            public xPETxAnimal()
            {
                Name = "PETxAnimal";
                Alias = "PETxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimal.gCID;

                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                Items.Add(ERPxSexoID, ERPxSexoID.ID);
                ERPxSexoID.Owner = this;
                ERPxSexoID.OwnerID = ID;
                ERPxSexoID.TableName = Name;
                Items.Add(PETxRacaID, PETxRacaID.ID);
                PETxRacaID.Owner = this;
                PETxRacaID.OwnerID = ID;
                PETxRacaID.TableName = Name;
                Items.Add(PETxPelagemID, PETxPelagemID.ID);
                PETxPelagemID.Owner = this;
                PETxPelagemID.OwnerID = ID;
                PETxPelagemID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(PETxPorteID, PETxPorteID.ID);
                PETxPorteID.Owner = this;
                PETxPorteID.OwnerID = ID;
                PETxPorteID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(Cor, Cor.ID);
                Cor.Owner = this;
                Cor.OwnerID = ID;
                Cor.TableName = Name;
            }

            public static XORMFaceField PETxAnimalID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxAnimalID, new Guid("BDBC3176-5DC4-41DB-B774-BB661491E2EF"), "PETxAnimalID", "PET");
            public static XORMFKField ERPxSexoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.ERPxSexoID, new Guid("961C137A-4862-4DB9-8BB2-6D46385B96A0"), "ERPxSexoID", "Sexo");
            public static XORMFKField PETxRacaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxRacaID, new Guid("047BFEBB-8FC9-47B5-B2EC-281488F474AC"), "PETxRacaID", "Raça");
            public static XORMFKField PETxPelagemID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxPelagemID, new Guid("3343D008-6915-4C00-919B-4EDA2C754056"), "PETxPelagemID", "Pelagem");
            public static XORMDateTimeField Nascimento = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Nascimento, new Guid("7D025750-7FE4-4D00-9F06-2F45F2B981DB"), "Nascimento", "Nascimento");
            public static XORMField Nome = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Nome, new Guid("0F1D588F-D1C8-4712-B91A-F53E1168CCE2"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.SYSxEstadoID, new Guid("D7837810-A6B0-4A03-B9D4-EF136ABEC788"), "SYSxEstadoID", "Estado");
            public static XORMFKField PETxPorteID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.PETxPorteID, new Guid("815A63EA-6193-4A03-9712-A364A5D0CF0C"), "PETxPorteID", "Porte");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Observacao, new Guid("424130F0-3DBC-4D8D-B42A-47902DB13540"), "Observacao", "Observação");
            public static XORMField Cor = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAnimal.Cor, new Guid("A25CD595-5F7B-482F-B183-480CAB2B4119"), "Cor", "Cor");
        }
        #endregion xPETxAnimal 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("968F8289-FC28-48A3-BACB-03CC22BEBE87");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("7356E0D8-35CB-42BE-AB59-A4E11FF20BF3"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("FB22F2BA-6A2C-4FF1-9FD6-1D4F9059A9CA"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("8994BB01-2F50-4812-9531-A1D37BA8810E"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("1F130554-950C-45B7-BEF8-8B084045FE7A"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xPETxAtendimento 
        public class xPETxAtendimento : XSVCTable
        {

            public static Guid gCID => new Guid("BC764182-D820-4F03-821A-61EAA58988F2");

            public xPETxAtendimento()
            {
                Name = "PETxAtendimento";
                Alias = "PETxAtendimento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimento.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(PETxAtendimentoID, PETxAtendimentoID.ID);
                PETxAtendimentoID.Owner = this;
                PETxAtendimentoID.OwnerID = ID;
                PETxAtendimentoID.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Items.Add(ERPxEnderecoEntregaID, ERPxEnderecoEntregaID.ID);
                ERPxEnderecoEntregaID.Owner = this;
                ERPxEnderecoEntregaID.OwnerID = ID;
                ERPxEnderecoEntregaID.TableName = Name;
                Items.Add(ERPxEnderecoBuscaID, ERPxEnderecoBuscaID.ID);
                ERPxEnderecoBuscaID.Owner = this;
                ERPxEnderecoBuscaID.OwnerID = ID;
                ERPxEnderecoBuscaID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(PETxAtendimentoEstadoID, PETxAtendimentoEstadoID.ID);
                PETxAtendimentoEstadoID.Owner = this;
                PETxAtendimentoEstadoID.OwnerID = ID;
                PETxAtendimentoEstadoID.TableName = Name;
                Items.Add(DataBusca, DataBusca.ID);
                DataBusca.Owner = this;
                DataBusca.OwnerID = ID;
                DataBusca.TableName = Name;
                Items.Add(DataEntrega, DataEntrega.ID);
                DataEntrega.Owner = this;
                DataEntrega.OwnerID = ID;
                DataEntrega.TableName = Name;
                Items.Add(ValorTotal, ValorTotal.ID);
                ValorTotal.Owner = this;
                ValorTotal.OwnerID = ID;
                ValorTotal.TableName = Name;
                Items.Add(ValorCobrado, ValorCobrado.ID);
                ValorCobrado.Owner = this;
                ValorCobrado.OwnerID = ID;
                ValorCobrado.TableName = Name;
                Items.Add(Desconto, Desconto.ID);
                Desconto.Owner = this;
                Desconto.OwnerID = ID;
                Desconto.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                Items.Add(PETxAtendimentoTipoID, PETxAtendimentoTipoID.ID);
                PETxAtendimentoTipoID.Owner = this;
                PETxAtendimentoTipoID.OwnerID = ID;
                PETxAtendimentoTipoID.TableName = Name;
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Items.Add(GrupoOrdem, GrupoOrdem.ID);
                GrupoOrdem.Owner = this;
                GrupoOrdem.OwnerID = ID;
                GrupoOrdem.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(PETxAtendimentoClasseID, PETxAtendimentoClasseID.ID);
                PETxAtendimentoClasseID.Owner = this;
                PETxAtendimentoClasseID.OwnerID = ID;
                PETxAtendimentoClasseID.TableName = Name;
                Items.Add(Finalizado, Finalizado.ID);
                Finalizado.Owner = this;
                Finalizado.OwnerID = ID;
                Finalizado.TableName = Name;
                Items.Add(ObservacaoEntrega, ObservacaoEntrega.ID);
                ObservacaoEntrega.Owner = this;
                ObservacaoEntrega.OwnerID = ID;
                ObservacaoEntrega.TableName = Name;
                Items.Add(ObservacaoBusca, ObservacaoBusca.ID);
                ObservacaoBusca.Owner = this;
                ObservacaoBusca.OwnerID = ID;
                ObservacaoBusca.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxTutorID, new Guid("6AEE3103-BCA7-4276-A7B8-4F59CBFFEFD6"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAnimalTutorID, new Guid("9AC4F2B1-025D-4B75-A39D-B3DA5E5794B0"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMPKField PETxAtendimentoID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoID, new Guid("CE99D27B-D646-4140-8DE4-A504B98A6F6F"), "PETxAtendimentoID", "Atendimento");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Data, new Guid("BF091FD6-1E92-45D5-BA2F-CB7FAB41B0A5"), "Data", "Data");
            public static XORMFKField ERPxEnderecoEntregaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoEntregaID, new Guid("8C145B5A-7644-4BCE-92EB-D98E34BB88D9"), "ERPxEnderecoEntregaID", "Entregar no Endereço");
            public static XORMFKField ERPxEnderecoBuscaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ERPxEnderecoBuscaID, new Guid("4B3D2D34-BB06-4E22-8A41-45433AA29E58"), "ERPxEnderecoBuscaID", "Buscar no Endereço");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Observacao, new Guid("571C2A86-1423-4976-8269-A442B86C7BF5"), "Observacao", "Observação");
            public static XORMFKField PETxAtendimentoEstadoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoEstadoID, new Guid("EB2A81D9-B9DD-46EA-AFD6-FA663958457D"), "PETxAtendimentoEstadoID", "Estado do Atendimento");
            public static XORMDateTimeField DataBusca = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataBusca, new Guid("7FCBFCF8-097A-4127-80D8-E5AE499FF1F5"), "DataBusca", "Data e Hora de Buscar");
            public static XORMDateTimeField DataEntrega = new XORMDateTimeField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.DataEntrega, new Guid("1C9C46A5-7E9F-4380-8BCD-30205DFAFC65"), "DataEntrega", "Data e Hora de Entregar");
            public static XORMDecimalField ValorTotal = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorTotal, new Guid("33E2B2AA-455C-4D12-A3C4-CAF3FDFF9865"), "ValorTotal", "Valor Total");
            public static XORMDecimalField ValorCobrado = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ValorCobrado, new Guid("4FAF6197-C158-446D-9FDB-1AB4794AA58E"), "ValorCobrado", "Valor Cobrado");
            public static XORMDecimalField Desconto = new XORMDecimalField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Desconto, new Guid("F4E414F1-46BB-4A0D-A3A6-FEB4175E76D0"), "Desconto", "Desconto");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEmpresaID, new Guid("A693A5D7-30E1-4923-977E-1D63D4E5EA30"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.SYSxEstadoID, new Guid("09B84DA1-4D73-4038-9383-C76E59207FFB"), "SYSxEstadoID", "Estado");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.CTLxUsuarioID, new Guid("A1AE7196-02F4-47E4-B864-53C7B189A63D"), "CTLxUsuarioID", "Usuário");
            public static XORMFKField PETxAtendimentoTipoID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoTipoID, new Guid("4A54E185-ADD2-47E6-B235-444C4FD5BF7D"), "PETxAtendimentoTipoID", "Tipo de Atendimento");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Grupo, new Guid("ABF1AB2A-A669-4CD0-A5E2-C0449A3A7764"), "Grupo", "Grupo");
            public static XORMField GrupoOrdem = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.GrupoOrdem, new Guid("9861C92B-A285-48B0-BC62-966645509E62"), "GrupoOrdem", "Ordem no grupo");
            public static XORMField Numero = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Numero, new Guid("ABD1D6F7-5503-4B85-AB7E-97642B2B46D5"), "Numero", "Número");
            public static XORMFKField PETxAtendimentoClasseID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.PETxAtendimentoClasseID, new Guid("D18B4E60-8444-411C-8681-31511FF1B8C3"), "PETxAtendimentoClasseID", "Classe");
            public static XORMField Finalizado = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.Finalizado, new Guid("063AC279-CC86-4BB9-8A2A-69825F77CE59"), "Finalizado", "Finalizado");
            public static XORMField ObservacaoEntrega = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoEntrega, new Guid("058184E2-245C-4DFF-B544-F5B150D4A4D7"), "ObservacaoEntrega", "Observação para Entrega");
            public static XORMField ObservacaoBusca = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxAtendimento.ObservacaoBusca, new Guid("5399BC03-7714-4233-A4E0-FDBAB7659AF8"), "ObservacaoBusca", "Observação para busca");
        }
        #endregion xPETxAtendimento 


        #region xPETxAnimalTutor 
        public class xPETxAnimalTutor : XSVCTable
        {

            public static Guid gCID => new Guid("E496B95D-9DD6-40A3-A176-84BE48740CD5");

            public xPETxAnimalTutor()
            {
                Name = "PETxAnimalTutor";
                Alias = "PETxAnimalTutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxTutorID, new Guid("89843433-87B5-48FF-8C69-F97E81F1CCCF"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalID, new Guid("868C33B2-2E87-49CE-8616-ABB41A0D170D"), "PETxAnimalID", "PET");
            public static XORMFaceField PETxAnimalTutorID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalTutorID, new Guid("9613CCE7-38A3-4AC5-991A-AAB4D8AEAE24"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.SYSxEstadoID, new Guid("A2FB7AB9-97CC-4659-8F32-CD7B79BA7150"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAnimalTutor 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("F682FF41-17B9-453E-95A0-0D138BECA3BA");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeTutor";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("A2A96DA3-F931-4828-BB94-F524E844DAFC"), "Nome", "Nome do Tutor");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("11C1DC1A-45EB-4265-8089-21730AA42A0E"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xPETxReceita 
        public class xPETxReceita : XSVCTable
        {

            public static Guid gCID => new Guid("FACCFFBA-CE07-4A9B-95B5-66142A3D7259");

            public xPETxReceita()
            {
                Name = "PETxReceita";
                Alias = "PETxReceita";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxReceita.gCID;

                Items.Add(PETxReceitaID, PETxReceitaID.ID);
                PETxReceitaID.Owner = this;
                PETxReceitaID.OwnerID = ID;
                PETxReceitaID.TableName = Name;
                PETxReceitaID.Alias = "PETxReceitaID";
                Items.Add(PETxAnamnesiaID, PETxAnamnesiaID.ID);
                PETxAnamnesiaID.Owner = this;
                PETxAnamnesiaID.OwnerID = ID;
                PETxAnamnesiaID.TableName = Name;
                Items.Add(Descritivo, Descritivo.ID);
                Descritivo.Owner = this;
                Descritivo.OwnerID = ID;
                Descritivo.TableName = Name;
                Descritivo.Alias = "Descritivo";
                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                ERPxProfissionalID.Alias = "ERPxProfissionalID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
            }

            public static XORMPKField PETxReceitaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxReceita.PETxReceitaID, new Guid("5C691B3A-0524-4F86-B2A6-C92E21BE5CD0"), "PETxReceitaID", "Receita");
            public static XORMFKField PETxAnamnesiaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxReceita.PETxAnamnesiaID, new Guid("9F9E10E1-C8FC-4B33-AF69-412DF18A6CB6"), "PETxAnamnesiaID", "Anamnésia");
            public static XORMField Descritivo = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxReceita.Descritivo, new Guid("2B06C1D7-122D-4912-82A6-D429A6C2D64E"), "Descritivo", "Descritivo");
            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxReceita.ERPxProfissionalID, new Guid("08A1A577-4D8E-4EBD-8E96-75E115B6A4C6"), "ERPxProfissionalID", "Profissionais");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxReceita.Data, new Guid("CC9A3980-105A-4835-A5C3-71163F2CBEE6"), "Data", "Data");
        }
        #endregion xPETxReceita 


        #region xPETxRaca 
        public class xPETxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("FFF19398-80B7-402E-8D9D-BFF9614EA1FF");

            public xPETxRaca()
            {
                Name = "PETxRaca";
                Alias = "PETxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxRaca.gCID;

                Items.Add(PETxRacaID, PETxRacaID.ID);
                PETxRacaID.Owner = this;
                PETxRacaID.OwnerID = ID;
                PETxRacaID.TableName = Name;
                Items.Add(PETxFamiliaID, PETxFamiliaID.ID);
                PETxFamiliaID.Owner = this;
                PETxFamiliaID.OwnerID = ID;
                PETxFamiliaID.TableName = Name;
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PETxRacaID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxRaca.PETxRacaID, new Guid("3A694418-F7DC-4A43-ADC7-92874986F985"), "PETxRacaID", "Raça");
            public static XORMFKField PETxFamiliaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxRaca.PETxFamiliaID, new Guid("50659F6E-591B-47A0-93C4-FA5DF9E44C96"), "PETxFamiliaID", "Família");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxRaca.Raca, new Guid("1CA94CDA-9DAE-4043-9F07-B1CFC24727FC"), "Raca", "Raça");
        }
        #endregion xPETxRaca 


        public xERPxGenero ERPxGenero;
        public xPETxAnimal PETxAnimal;
        public xPETxAnimalTutor PETxAnimalTutor;
        public xPETxAtendimento PETxAtendimento;
        public xPETxFamilia PETxFamilia;
        public xPETxRaca PETxRaca;
        public xPETxReceita PETxReceita;
        public xSYSxPessoa SYSxPessoa;
        public static readonly XORMParameterField CRMV = new XORMParameterField(new Guid("83BB8C6C-0E67-4CD0-816B-38E88EB446C4"), "CRMV", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField CRMVUF = new XORMParameterField(new Guid("BE894655-2A74-4104-8334-5D48CB11C21A"), "CRMVUF", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Endereco = new XORMParameterField(new Guid("44A05BCB-A3BE-468C-9D1E-076D07FD602F"), "Endereco", "Endereço", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField TutorEndereco = new XORMParameterField(new Guid("FC4D02D0-CC38-4289-9ECF-5802F226C258"), "TutorEndereco", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField VetCidade = new XORMParameterField(new Guid("2BE10A7C-D6C8-46B6-BAA7-1F6B5F78E09A"), "VetCidade", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField VetEndereco = new XORMParameterField(new Guid("21001E7B-E399-4AC0-BAF8-58BA03C44563"), "VetEndereco", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Veterinario = new XORMParameterField(new Guid("C854D4A4-D5A1-445E-A08D-87F9D584A3E3"), "Veterinario", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField VetFone = new XORMParameterField(new Guid("FB6001B9-432D-448E-B7AD-B3BBA19D2FAB"), "VetFone", "User Data Field", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField VetUF = new XORMParameterField(new Guid("D3CFB127-C3DB-4479-826D-221F2ED848A9"), "VetUF", "User Data Field", XString.CID, 0, 0, false, gCID, null);

        public ReceitaSVC()
        {
            TupleType = typeof(ReceitaSVC.XTuple);
            DataSetType = typeof(ReceitaSVC.XDataSet);
            ServiceRuleCID = new Guid("558086B3-075D-481C-BF91-4BB599E902E9");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("E975A661-245D-4BF9-AA55-DF877B4C616F");
            Name = "Receita";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            DataSetFields = new Guid[] { xPETxReceita.Descritivo.ID, xPETxReceita.PETxReceitaID.ID, xPETxReceita.ERPxProfissionalID.ID, xPETxReceita.Data.ID, xSYSxPessoa.Nome.ID, xPETxAnimal.Nome.ID, xPETxFamilia.Familia.ID, xPETxRaca.Raca.ID, xPETxAnimal.Nascimento.ID, Endereco.ID, Veterinario.ID, CRMV.ID, CRMVUF.ID, VetEndereco.ID, VetCidade.ID, VetUF.ID, VetFone.ID, xERPxGenero.Genero.ID, TutorEndereco.ID };
            PKField = xPETxReceita.PETxReceitaID.ID;
            ConfigTableID = new Guid("6493256C-0A19-4ED1-A775-9F9975D32B6D");
            MasterRuleCID = new Guid("558086B3-075D-481C-BF91-4BB599E902E9");
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            PETxAnimal = new xPETxAnimal();
            PETxAnimal.IsReadOnly = true;
            AddTable(PETxAnimal);
            PETxAnimalTutor = new xPETxAnimalTutor();
            PETxAnimalTutor.IsReadOnly = true;
            AddTable(PETxAnimalTutor);
            PETxAtendimento = new xPETxAtendimento();
            PETxAtendimento.IsReadOnly = true;
            AddTable(PETxAtendimento);
            PETxFamilia = new xPETxFamilia();
            PETxFamilia.IsReadOnly = true;
            AddTable(PETxFamilia);
            PETxRaca = new xPETxRaca();
            PETxRaca.IsReadOnly = true;
            AddTable(PETxRaca);
            PETxReceita = new xPETxReceita();
            PETxReceita.IsReadOnly = true;
            AddTable(PETxReceita);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PETxReceita.ID;
            PETxFamilia_PETxFamiliaID_PETxRaca_PETxFamiliaID = AddReference(new XSVCReference(new Guid("102708F9-F686-4B40-9536-23E79D390009"), "FK_102708F9F6864B40953623E79D390009", ReceitaSVC.xPETxFamilia.gCID, xPETxFamilia.PETxFamiliaID.ID, ReceitaSVC.xPETxRaca.gCID, xPETxRaca.PETxFamiliaID.ID, XJoinType.Inner)); // PETxFamilia.PETxFamiliaID --> PETxRaca.PETxFamiliaID
            PETxAnimal_PETxAnimalID_PETxAnimalTutor_PETxAnimalID = AddReference(new XSVCReference(new Guid("409ADB43-A9B3-4116-97AA-925D09437E54"), "FK_409ADB43A9B3411697AA925D09437E54", ReceitaSVC.xPETxAnimal.gCID, xPETxAnimal.PETxAnimalID.ID, ReceitaSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxAnimalID.ID, XJoinType.Inner)); // PETxAnimal.PETxAnimalID --> PETxAnimalTutor.PETxAnimalID
            PETxRaca_PETxRacaID_PETxAnimal_PETxRacaID = AddReference(new XSVCReference(new Guid("44E9C7F8-4A48-4CEF-AE18-02A1B688E11B"), "FK_44E9C7F84A484CEFAE1802A1B688E11B", ReceitaSVC.xPETxRaca.gCID, xPETxRaca.PETxRacaID.ID, ReceitaSVC.xPETxAnimal.gCID, xPETxAnimal.PETxRacaID.ID, XJoinType.Inner)); // PETxRaca.PETxRacaID --> PETxAnimal.PETxRacaID
            SYSxPessoa_SYSxPessoaID_PETxAnimalTutor_PETxTutorID = AddReference(new XSVCReference(new Guid("64180BDD-C9E6-4707-AFBF-6F0752F7C197"), "FK_64180BDDC9E64707AFBF6F0752F7C197", ReceitaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, ReceitaSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxTutorID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
            PETxAnimalTutor_PETxAnimalTutorID_PETxAtendimento_PETxAnimalTutorID = AddReference(new XSVCReference(new Guid("67CB2C08-162A-4FD3-8522-BD8A67F9AE24"), "FK_67CB2C08162A4FD38522BD8A67F9AE24", ReceitaSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxAnimalTutorID.ID, ReceitaSVC.xPETxAtendimento.gCID, xPETxAtendimento.PETxAnimalTutorID.ID, XJoinType.Inner)); // PETxAnimalTutor.PETxAnimalTutorID --> PETxAtendimento.PETxAnimalTutorID
            PETxReceita_PETxAnamnesiaID_PETxAtendimento_PETxAtendimentoID = AddReference(new XSVCReference(new Guid("7E9E9EEB-70D8-45DC-BF77-443080B9827D"), "FK_7E9E9EEB70D845DCBF77443080B9827D", ReceitaSVC.xPETxReceita.gCID, xPETxReceita.PETxAnamnesiaID.ID, ReceitaSVC.xPETxAtendimento.gCID, xPETxAtendimento.PETxAtendimentoID.ID, XJoinType.Inner)); // PETxReceita.PETxAnamnesiaID --> PETxAtendimento.PETxAtendimentoID
            ERPxGenero_ERPxGeneroID_PETxAnimal_ERPxSexoID = AddReference(new XSVCReference(new Guid("C6F4D32F-9092-4190-A7C6-703A0301C1EB"), "FK_C6F4D32F90924190A7C6703A0301C1EB", ReceitaSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, ReceitaSVC.xPETxAnimal.gCID, xPETxAnimal.ERPxSexoID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> PETxAnimal.ERPxSexoID
            AddField(Endereco);
            Endereco.IsParam = true;
            AddField(Veterinario);
            Veterinario.IsParam = true;
            AddField(CRMV);
            CRMV.IsParam = true;
            AddField(CRMVUF);
            CRMVUF.IsParam = true;
            AddField(VetEndereco);
            VetEndereco.IsParam = true;
            AddField(VetCidade);
            VetCidade.IsParam = true;
            AddField(VetUF);
            VetUF.IsParam = true;
            AddField(VetFone);
            VetFone.IsParam = true;
            AddField(TutorEndereco);
            TutorEndereco.IsParam = true;
            CRMV.IsReadOnly = false;
            CRMV.Length = 0;
            CRMV.Scale = 0;
            CRMV.IsDataField = true;
            CRMV.AllowEmpty = true;
            CRMVUF.IsReadOnly = false;
            CRMVUF.Length = 0;
            CRMVUF.Scale = 0;
            CRMVUF.IsDataField = true;
            CRMVUF.AllowEmpty = true;
            xPETxReceita.Data.IsReadOnly = true;
            xPETxReceita.Data.IsDataField = true;
            xPETxReceita.Data.AllowEmpty = true;
            xPETxReceita.Descritivo.IsReadOnly = true;
            xPETxReceita.Descritivo.IsDataField = true;
            xPETxReceita.Descritivo.AllowEmpty = true;
            Endereco.IsReadOnly = false;
            Endereco.Length = 0;
            Endereco.Scale = 0;
            Endereco.IsDataField = true;
            Endereco.AllowEmpty = true;
            xPETxReceita.ERPxProfissionalID.IsReadOnly = true;
            xPETxReceita.ERPxProfissionalID.IsDataField = true;
            xPETxReceita.ERPxProfissionalID.AllowEmpty = true;
            xPETxFamilia.Familia.IsReadOnly = true;
            xPETxFamilia.Familia.Length = 25;
            xPETxFamilia.Familia.IsDataField = true;
            xPETxFamilia.Familia.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xPETxAnimal.Nascimento.IsReadOnly = true;
            xPETxAnimal.Nascimento.Mask = "dd/MM/yyyy";
            xPETxAnimal.Nascimento.IsDataField = true;
            xPETxAnimal.Nascimento.AllowEmpty = true;
            xPETxAnimal.Nome.IsReadOnly = true;
            xPETxAnimal.Nome.Length = 60;
            xPETxAnimal.Nome.IsDataField = true;
            xPETxAnimal.Nome.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xPETxReceita.PETxReceitaID.IsReadOnly = true;
            xPETxReceita.PETxReceitaID.IsDataField = true;
            xPETxReceita.PETxReceitaID.AllowEmpty = true;
            xPETxRaca.Raca.IsReadOnly = true;
            xPETxRaca.Raca.Length = 48;
            xPETxRaca.Raca.IsDataField = true;
            xPETxRaca.Raca.AllowEmpty = true;
            TutorEndereco.IsReadOnly = false;
            TutorEndereco.Length = 0;
            TutorEndereco.Scale = 0;
            TutorEndereco.IsDataField = true;
            TutorEndereco.AllowEmpty = true;
            VetCidade.IsReadOnly = false;
            VetCidade.Length = 0;
            VetCidade.Scale = 0;
            VetCidade.IsDataField = true;
            VetCidade.AllowEmpty = true;
            VetEndereco.IsReadOnly = false;
            VetEndereco.Length = 0;
            VetEndereco.Scale = 0;
            VetEndereco.IsDataField = true;
            VetEndereco.AllowEmpty = true;
            Veterinario.IsReadOnly = false;
            Veterinario.Length = 0;
            Veterinario.Scale = 0;
            Veterinario.IsDataField = true;
            Veterinario.AllowEmpty = true;
            VetFone.IsReadOnly = false;
            VetFone.Length = 0;
            VetFone.Scale = 0;
            VetFone.IsDataField = true;
            VetFone.AllowEmpty = true;
            VetUF.IsReadOnly = false;
            VetUF.Length = 0;
            VetUF.Scale = 0;
            VetUF.IsDataField = true;
            VetUF.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CRMV => ReceitaSVC.CRMV;
        public XORMField CRMVUF => ReceitaSVC.CRMVUF;
        public XORMField Data => xPETxReceita.Data;
        public XORMField Descritivo => xPETxReceita.Descritivo;
        public XORMField Endereco => ReceitaSVC.Endereco;
        public XORMField ERPxProfissionalID => xPETxReceita.ERPxProfissionalID;
        public XORMField Familia => xPETxFamilia.Familia;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField Nascimento => xPETxAnimal.Nascimento;
        public XORMField Nome => xPETxAnimal.Nome;
        public XORMField NomeTutor => xSYSxPessoa.Nome;
        public XORMField PETxReceitaID => xPETxReceita.PETxReceitaID;
        public XORMField Raca => xPETxRaca.Raca;
        public XORMField TutorEndereco => ReceitaSVC.TutorEndereco;
        public XORMField VetCidade => ReceitaSVC.VetCidade;
        public XORMField VetEndereco => ReceitaSVC.VetEndereco;
        public XORMField Veterinario => ReceitaSVC.Veterinario;
        public XORMField VetFone => ReceitaSVC.VetFone;
        public XORMField VetUF => ReceitaSVC.VetUF;
        }
        #endregion XFields
        #region ReceitaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String CRMV
        {
            get
            {
                return (String)Value[ReceitaSVC.CRMV.ID];
            }
            set
            {
                Value[ReceitaSVC.CRMV.ID] = value;
            }
        }
        public String? oCRMV
        {
            get
            {
                GetOldValue(ReceitaSVC.CRMV, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String CRMVUF
        {
            get
            {
                return (String)Value[ReceitaSVC.CRMVUF.ID];
            }
            set
            {
                Value[ReceitaSVC.CRMVUF.ID] = value;
            }
        }
        public String? oCRMVUF
        {
            get
            {
                GetOldValue(ReceitaSVC.CRMVUF, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ReceitaSVC.xPETxReceita.Data.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxReceita.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxReceita.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Descritivo
        {
            get
            {
                return (String)Value[ReceitaSVC.xPETxReceita.Descritivo.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxReceita.Descritivo.ID] = value;
            }
        }
        public String? oDescritivo
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxReceita.Descritivo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Endereco
        {
            get
            {
                return (String)Value[ReceitaSVC.Endereco.ID];
            }
            set
            {
                Value[ReceitaSVC.Endereco.ID] = value;
            }
        }
        public String? oEndereco
        {
            get
            {
                GetOldValue(ReceitaSVC.Endereco, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ERPxProfissionalID
        {
            get
            {
                return (Guid)Value[ReceitaSVC.xPETxReceita.ERPxProfissionalID.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxReceita.ERPxProfissionalID.ID] = value;
            }
        }
        public Guid? oERPxProfissionalID
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxReceita.ERPxProfissionalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Familia
        {
            get
            {
                return (String)Value[ReceitaSVC.xPETxFamilia.Familia.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxFamilia.Familia.ID] = value;
            }
        }
        public String? oFamilia
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxFamilia.Familia, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[ReceitaSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[ReceitaSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(ReceitaSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[ReceitaSVC.xPETxAnimal.Nascimento.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ReceitaSVC.xPETxAnimal.Nome.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxAnimal.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxAnimal.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeTutor
        {
            get
            {
                return (String)Value[ReceitaSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ReceitaSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNomeTutor
        {
            get
            {
                GetOldValue(ReceitaSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxReceitaID
        {
            get
            {
                return (Guid)Value[ReceitaSVC.xPETxReceita.PETxReceitaID.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxReceita.PETxReceitaID.ID] = value;
            }
        }
        public Guid? oPETxReceitaID
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxReceita.PETxReceitaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[ReceitaSVC.xPETxRaca.Raca.ID];
            }
            set
            {
                Value[ReceitaSVC.xPETxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(ReceitaSVC.xPETxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String TutorEndereco
        {
            get
            {
                return (String)Value[ReceitaSVC.TutorEndereco.ID];
            }
            set
            {
                Value[ReceitaSVC.TutorEndereco.ID] = value;
            }
        }
        public String? oTutorEndereco
        {
            get
            {
                GetOldValue(ReceitaSVC.TutorEndereco, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String VetCidade
        {
            get
            {
                return (String)Value[ReceitaSVC.VetCidade.ID];
            }
            set
            {
                Value[ReceitaSVC.VetCidade.ID] = value;
            }
        }
        public String? oVetCidade
        {
            get
            {
                GetOldValue(ReceitaSVC.VetCidade, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String VetEndereco
        {
            get
            {
                return (String)Value[ReceitaSVC.VetEndereco.ID];
            }
            set
            {
                Value[ReceitaSVC.VetEndereco.ID] = value;
            }
        }
        public String? oVetEndereco
        {
            get
            {
                GetOldValue(ReceitaSVC.VetEndereco, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Veterinario
        {
            get
            {
                return (String)Value[ReceitaSVC.Veterinario.ID];
            }
            set
            {
                Value[ReceitaSVC.Veterinario.ID] = value;
            }
        }
        public String? oVeterinario
        {
            get
            {
                GetOldValue(ReceitaSVC.Veterinario, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String VetFone
        {
            get
            {
                return (String)Value[ReceitaSVC.VetFone.ID];
            }
            set
            {
                Value[ReceitaSVC.VetFone.ID] = value;
            }
        }
        public String? oVetFone
        {
            get
            {
                GetOldValue(ReceitaSVC.VetFone, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String VetUF
        {
            get
            {
                return (String)Value[ReceitaSVC.VetUF.ID];
            }
            set
            {
                Value[ReceitaSVC.VetUF.ID] = value;
            }
        }
        public String? oVetUF
        {
            get
            {
                GetOldValue(ReceitaSVC.VetUF, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ReceitaSVC.XTuple

        #region ReceitaSVC.XDataSet

        public class XDataSet : XDataSet<ReceitaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ReceitaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ReceitaSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid CRMV => ReceitaSVC.CRMV.ID;
                public Guid CRMVUF => ReceitaSVC.CRMVUF.ID;
                public Guid Data => ReceitaSVC.xPETxReceita.Data.ID;
                public Guid Descritivo => ReceitaSVC.xPETxReceita.Descritivo.ID;
                public Guid Endereco => ReceitaSVC.Endereco.ID;
                public Guid ERPxProfissionalID => ReceitaSVC.xPETxReceita.ERPxProfissionalID.ID;
                public Guid Familia => ReceitaSVC.xPETxFamilia.Familia.ID;
                public Guid Genero => ReceitaSVC.xERPxGenero.Genero.ID;
                public Guid Nascimento => ReceitaSVC.xPETxAnimal.Nascimento.ID;
                public Guid Nome => ReceitaSVC.xPETxAnimal.Nome.ID;
                public Guid NomeTutor => ReceitaSVC.xSYSxPessoa.Nome.ID;
                public Guid PETxReceitaID => ReceitaSVC.xPETxReceita.PETxReceitaID.ID;
                public Guid Raca => ReceitaSVC.xPETxRaca.Raca.ID;
                public Guid TutorEndereco => ReceitaSVC.TutorEndereco.ID;
                public Guid VetCidade => ReceitaSVC.VetCidade.ID;
                public Guid VetEndereco => ReceitaSVC.VetEndereco.ID;
                public Guid Veterinario => ReceitaSVC.Veterinario.ID;
                public Guid VetFone => ReceitaSVC.VetFone.ID;
                public Guid VetUF => ReceitaSVC.VetUF.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ReceitaSVC.XDataSet);
            }

        }
        #endregion ReceitaSVC.XDataSet
        #if !OnlyDef
        #region ReceitaSVC.XRule
        public abstract class XRule : XServiceRule<ReceitaSVC.XDataSet, ReceitaSVC, ReceitaSVC.XTuple>
        {
        }
        #endregion ReceitaSVC.XRule

        [Guid(ReceitaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ReceitaSVC))]
        protected class _Service : Service<ReceitaSVC, XDataSet, XTuple>
        {
            public const String sCID = "3BB14EEF-097B-403A-98A4-C5D6596D558E";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ReceitaSVC, XDataSet, XTuple>, XService
             where TModel : ReceitaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}