//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ERP.DB;
using Projecao.Core.PET.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.Animal
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Animal\AnimalTutor.dssvc")]
    [XRegister(typeof(AnimalTutorSVC), sCID)]
    public class AnimalTutorSVC : XSVCModel
    {
        #region AnimalTutorFilterFRM

        [XRegister(typeof(AnimalTutorFilterFRM), sCID)]
        public class AnimalTutorFilterFRM : XFRMModel
        {
            public const String sCID = "267E5856-8DA1-4543-B029-3058A008EF7C";
            public static new readonly Guid gCID = new Guid(sCID);
            static AnimalTutorFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AnimalTutorFilterFRM()
            {
                ID = gCID;
                Name = "AnimalTutorFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(0, 0, 250, 92);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion AnimalTutorFilterFRM

        public const String sCID = "831BC3C9-0ADB-4B1B-805F-1C4742BB68F2";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxDocumentoTipo_ERPxDocumentoTipoID_ERPxDocumento_ERPxDocumentoTipoID; // ERPxDocumentoTipo.ERPxDocumentoTipoID --> ERPxDocumento.ERPxDocumentoTipoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PETxAnimalTutor_PETxTutorID; // SYSxPessoa.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
        public static XSVCReference ERPxDocumento_SYSxPessoaID_PETxAnimalTutor_PETxTutorID; // ERPxDocumento.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID

        #region xERPxDocumento 
        public class xERPxDocumento : XSVCTable
        {

            public static Guid gCID => new Guid("2605BBFC-3CE0-48E4-9E9E-11C38DBEC1CE");

            public xERPxDocumento()
            {
                Name = "ERPxDocumento";
                Alias = "ERPxDocumento";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.gCID;

                Items.Add(ERPxDocumentoID, ERPxDocumentoID.ID);
                ERPxDocumentoID.Owner = this;
                ERPxDocumentoID.OwnerID = ID;
                ERPxDocumentoID.TableName = Name;
                Items.Add(ERPxDocumentoTipoID, ERPxDocumentoTipoID.ID);
                ERPxDocumentoTipoID.Owner = this;
                ERPxDocumentoTipoID.OwnerID = ID;
                ERPxDocumentoTipoID.TableName = Name;
                ERPxDocumentoTipoID.Alias = "ERPxDocumentoTipoID";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField ERPxDocumentoID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoID, new Guid("71E4B2B6-BDA9-47EA-A88C-FE3732021ACA"), "ERPxDocumentoID", "Documento");
            public static XORMFKField ERPxDocumentoTipoID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoTipoID, new Guid("7077730D-B696-448B-9FF7-80BDEDC5379B"), "ERPxDocumentoTipoID", "Tipo de Documento");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.SYSxPessoaID, new Guid("DCC85403-8BBA-45B9-83BF-73497F696C2F"), "SYSxPessoaID", "Pessoas");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.Numero, new Guid("DD9D9831-AC67-420E-8753-799BA0A83785"), "Numero", "CPF");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.SYSxEstadoID, new Guid("6A4410BF-92E0-488D-A168-9072BBD12857"), "SYSxEstadoID", "Estado");
        }
        #endregion xERPxDocumento 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("2F68A56D-145D-49FB-AFF0-AC7748645BE0");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("74860929-152B-477A-A67D-FCDB0058AFDA"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("8264E8CE-1060-415F-8976-B0B092242D14"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xERPxDocumentoTipo 
        public class xERPxDocumentoTipo : XSVCTable
        {

            public static Guid gCID => new Guid("32AE86DB-04F6-4BDA-96F7-00BA655D292E");

            public xERPxDocumentoTipo()
            {
                Name = "ERPxDocumentoTipo";
                Alias = "ERPxDocumentoTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.gCID;

                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Items.Add(ERPxDocumentoTipoID, ERPxDocumentoTipoID.ID);
                ERPxDocumentoTipoID.Owner = this;
                ERPxDocumentoTipoID.OwnerID = ID;
                ERPxDocumentoTipoID.TableName = Name;
                Items.Add(Mascara, Mascara.ID);
                Mascara.Owner = this;
                Mascara.OwnerID = ID;
                Mascara.TableName = Name;
                Mascara.Alias = "Mascara";
                Items.Add(Filtro, Filtro.ID);
                Filtro.Owner = this;
                Filtro.OwnerID = ID;
                Filtro.TableName = Name;
            }

            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.Tipo, new Guid("7AC5D5F9-B1F6-4501-8D50-44974F09C896"), "Tipo", "Tipo de Documento");
            public static XORMPKField ERPxDocumentoTipoID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.ERPxDocumentoTipoID, new Guid("DF21BFED-4B74-4086-9A77-AA7800121205"), "ERPxDocumentoTipoID", "Tipo de Documento");
            public static XORMField Mascara = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.Mascara, new Guid("3E0C58B3-23FA-41B8-BE3C-9B8B98FFF1CC"), "Mascara", "MÃ¡scara");
            public static XORMField Filtro = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.Filtro, new Guid("10BA1563-BF1F-4722-8252-F9128A435B87"), "Filtro", "Filtro");
        }
        #endregion xERPxDocumentoTipo 


        #region xPETxAnimalTutor 
        public class xPETxAnimalTutor : XSVCTable
        {

            public static Guid gCID => new Guid("7D08DB2F-899E-4F3A-92D4-8853A43217EF");

            public xPETxAnimalTutor()
            {
                Name = "PETxAnimalTutor";
                Alias = "PETxAnimalTutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.gCID;

                Items.Add(PETxTutorID, PETxTutorID.ID);
                PETxTutorID.Owner = this;
                PETxTutorID.OwnerID = ID;
                PETxTutorID.TableName = Name;
                PETxTutorID.Alias = "PETxTutorID";
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                PETxAnimalID.Alias = "PETxAnimalID";
                Items.Add(PETxAnimalTutorID, PETxAnimalTutorID.ID);
                PETxAnimalTutorID.Owner = this;
                PETxAnimalTutorID.OwnerID = ID;
                PETxAnimalTutorID.TableName = Name;
                PETxAnimalTutorID.Alias = "PETxAnimalTutorID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFKField PETxTutorID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxTutorID, new Guid("C4C122AD-EB32-4FF2-8ECC-95FDC81E30E6"), "PETxTutorID", "Tutor");
            public static XORMFKField PETxAnimalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalID, new Guid("D9E1213F-CFB0-4793-986F-96C50FC7E896"), "PETxAnimalID", "PET");
            public static XORMFaceField PETxAnimalTutorID = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.PETxAnimalTutorID, new Guid("78EF2F59-D3EA-4F4F-889C-5233840F11A5"), "PETxAnimalTutorID", "PETs por Tutor");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PET.DB.PETx.PETxAnimalTutor.SYSxEstadoID, new Guid("C041D238-AC1B-4FA3-8618-33A7151D1112"), "SYSxEstadoID", "Estado");
        }
        #endregion xPETxAnimalTutor 


        public xERPxDocumento ERPxDocumento;
        public xERPxDocumentoTipo ERPxDocumentoTipo;
        public xPETxAnimalTutor PETxAnimalTutor;
        public xSYSxPessoa SYSxPessoa;

        public AnimalTutorSVC()
        {
            TupleType = typeof(AnimalTutorSVC.XTuple);
            DataSetType = typeof(AnimalTutorSVC.XDataSet);
            ServiceRuleCID = new Guid("E25F0893-CDFF-4374-8E44-6B0C0A91931E");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("831BC3C9-0ADB-4B1B-805F-1C4742BB68F2");
            Name = "AnimalTutor";
            Title = "Tutores por PET";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xERPxDocumento.Numero.ID, xPETxAnimalTutor.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xERPxDocumento.ERPxDocumentoTipoID.ID, xERPxDocumento.Numero.ID, xPETxAnimalTutor.SYSxEstadoID.ID, xERPxDocumentoTipo.Mascara.ID, xPETxAnimalTutor.PETxAnimalID.ID, xPETxAnimalTutor.PETxAnimalTutorID.ID, xPETxAnimalTutor.PETxTutorID.ID, xSYSxPessoa.Nome.ID };
            StateField = xPETxAnimalTutor.SYSxEstadoID.ID;
            PKField = xPETxAnimalTutor.PETxAnimalTutorID.ID;
            ConfigTableID = new Guid("37217592-CE95-41B1-9D83-E09C12529A6B");
            MasterRuleCID = new Guid("E25F0893-CDFF-4374-8E44-6B0C0A91931E");
            ERPxDocumento = new xERPxDocumento();
            ERPxDocumento.IsReadOnly = true;
            AddTable(ERPxDocumento);
            ERPxDocumentoTipo = new xERPxDocumentoTipo();
            ERPxDocumentoTipo.IsReadOnly = true;
            AddTable(ERPxDocumentoTipo);
            PETxAnimalTutor = new xPETxAnimalTutor();
            PETxAnimalTutor.IsReadOnly = false;
            AddTable(PETxAnimalTutor);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PETxAnimalTutor.ID;
            ERPxDocumentoTipo_ERPxDocumentoTipoID_ERPxDocumento_ERPxDocumentoTipoID = AddReference(new XSVCReference(new Guid("474B64FC-8A36-4B4C-B3DE-C24421B398CE"), "FK_474B64FC8A364B4CB3DEC24421B398CE", AnimalTutorSVC.xERPxDocumentoTipo.gCID, xERPxDocumentoTipo.ERPxDocumentoTipoID.ID, AnimalTutorSVC.xERPxDocumento.gCID, xERPxDocumento.ERPxDocumentoTipoID.ID, XJoinType.Inner)); // ERPxDocumentoTipo.ERPxDocumentoTipoID --> ERPxDocumento.ERPxDocumentoTipoID
            SYSxPessoa_SYSxPessoaID_PETxAnimalTutor_PETxTutorID = AddReference(new XSVCReference(new Guid("6BDA4529-4365-473E-9B3D-1E2F5F364408"), "FK_6BDA45294365473E9B3D1E2F5F364408", AnimalTutorSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, AnimalTutorSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxTutorID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
            ERPxDocumento_SYSxPessoaID_PETxAnimalTutor_PETxTutorID = AddReference(new XSVCReference(new Guid("F7BC28E4-DD20-42A9-A605-B8F5C1AB49DE"), "FK_F7BC28E4DD2042A9A605B8F5C1AB49DE", AnimalTutorSVC.xERPxDocumento.gCID, xERPxDocumento.SYSxPessoaID.ID, AnimalTutorSVC.xPETxAnimalTutor.gCID, xPETxAnimalTutor.PETxTutorID.ID, XJoinType.Inner)); // ERPxDocumento.SYSxPessoaID --> PETxAnimalTutor.PETxTutorID
            xERPxDocumento.ERPxDocumentoTipoID.IsReadOnly = true;
            xERPxDocumento.ERPxDocumentoTipoID.IsDataField = true;
            xERPxDocumento.ERPxDocumentoTipoID.AllowEmpty = true;
            xERPxDocumentoTipo.Mascara.IsReadOnly = true;
            xERPxDocumentoTipo.Mascara.Length = 30;
            xERPxDocumentoTipo.Mascara.IsDataField = true;
            xERPxDocumentoTipo.Mascara.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xERPxDocumento.Numero.IsReadOnly = true;
            xERPxDocumento.Numero.Length = 25;
            xERPxDocumento.Numero.IsDataField = true;
            xERPxDocumento.Numero.MaskSourceID = new Guid("3E0C58B3-23FA-41B8-BE3C-9B8B98FFF1CC");
            xERPxDocumento.Numero.AllowEmpty = true;
            xPETxAnimalTutor.PETxAnimalID.IsDataField = true;
            xPETxAnimalTutor.PETxAnimalID.AllowEmpty = true;
            xPETxAnimalTutor.PETxAnimalTutorID.GeneratePK = true;
            xPETxAnimalTutor.PETxAnimalTutorID.IsDataField = true;
            xPETxAnimalTutor.PETxAnimalTutorID.AllowEmpty = true;
            xPETxAnimalTutor.PETxTutorID.IsDataField = true;
            xPETxAnimalTutor.PETxTutorID.AllowEmpty = true;
            xPETxAnimalTutor.SYSxEstadoID.IsDataField = true;
            xPETxAnimalTutor.SYSxEstadoID.AllowEmpty = true;
            xPETxAnimalTutor.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xERPxDocumentoTipo.ERPxDocumentoTipoID);
            pWhere.Add(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.CPF);
        }

        #region XFields

        public class XFields
        {
        public XORMField ERPxDocumentoTipoID => xERPxDocumento.ERPxDocumentoTipoID;
        public XORMField Mascara => xERPxDocumentoTipo.Mascara;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Numero => xERPxDocumento.Numero;
        public XORMField PETxAnimalID => xPETxAnimalTutor.PETxAnimalID;
        public XORMField PETxAnimalTutorID => xPETxAnimalTutor.PETxAnimalTutorID;
        public XORMField PETxTutorID => xPETxAnimalTutor.PETxTutorID;
        public XORMField SYSxEstadoID => xPETxAnimalTutor.SYSxEstadoID;
        }
        #endregion XFields
        #region AnimalTutorSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int16 ERPxDocumentoTipoID
        {
            get
            {
                return (Int16)Value[AnimalTutorSVC.xERPxDocumento.ERPxDocumentoTipoID.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xERPxDocumento.ERPxDocumentoTipoID.ID] = value;
            }
        }
        public Int16? oERPxDocumentoTipoID
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xERPxDocumento.ERPxDocumentoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Mascara
        {
            get
            {
                return (String)Value[AnimalTutorSVC.xERPxDocumentoTipo.Mascara.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xERPxDocumentoTipo.Mascara.ID] = value;
            }
        }
        public String? oMascara
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xERPxDocumentoTipo.Mascara, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AnimalTutorSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[AnimalTutorSVC.xERPxDocumento.Numero.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xERPxDocumento.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xERPxDocumento.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAnimalID
        {
            get
            {
                return (Guid)Value[AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalID.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalID.ID] = value;
            }
        }
        public Guid? oPETxAnimalID
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxAnimalTutorID
        {
            get
            {
                return (Guid)Value[AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalTutorID.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalTutorID.ID] = value;
            }
        }
        public Guid? oPETxAnimalTutorID
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalTutorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxTutorID
        {
            get
            {
                return (Guid)Value[AnimalTutorSVC.xPETxAnimalTutor.PETxTutorID.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xPETxAnimalTutor.PETxTutorID.ID] = value;
            }
        }
        public Guid? oPETxTutorID
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xPETxAnimalTutor.PETxTutorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AnimalTutorSVC.xPETxAnimalTutor.SYSxEstadoID.ID];
            }
            set
            {
                Value[AnimalTutorSVC.xPETxAnimalTutor.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AnimalTutorSVC.xPETxAnimalTutor.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AnimalTutorSVC.XTuple

        #region AnimalTutorSVC.XDataSet

        public class XDataSet : XDataSet<AnimalTutorSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AnimalTutorSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AnimalTutorSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid ERPxDocumentoTipoID => AnimalTutorSVC.xERPxDocumento.ERPxDocumentoTipoID.ID;
                public Guid Mascara => AnimalTutorSVC.xERPxDocumentoTipo.Mascara.ID;
                public Guid Nome => AnimalTutorSVC.xSYSxPessoa.Nome.ID;
                public Guid Numero => AnimalTutorSVC.xERPxDocumento.Numero.ID;
                public Guid PETxAnimalID => AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalID.ID;
                public Guid PETxAnimalTutorID => AnimalTutorSVC.xPETxAnimalTutor.PETxAnimalTutorID.ID;
                public Guid PETxTutorID => AnimalTutorSVC.xPETxAnimalTutor.PETxTutorID.ID;
                public Guid SYSxEstadoID => AnimalTutorSVC.xPETxAnimalTutor.SYSxEstadoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AnimalTutorSVC.XDataSet);
            }

        }
        #endregion AnimalTutorSVC.XDataSet
        #if !OnlyDef
        #region AnimalTutorSVC.XRule
        public abstract class XRule : XServiceRule<AnimalTutorSVC.XDataSet, AnimalTutorSVC, AnimalTutorSVC.XTuple>
        {
        }
        #endregion AnimalTutorSVC.XRule

        [Guid(AnimalTutorSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AnimalTutorSVC))]
        protected class _Service : Service<AnimalTutorSVC, XDataSet, XTuple>
        {
            public const String sCID = "BCDA1E35-008F-43ED-B156-DD5D553379B2";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AnimalTutorSVC, XDataSet, XTuple>, XService
             where TModel : AnimalTutorSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}