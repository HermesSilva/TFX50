//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.ISE.DB;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.Animal
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Animal\Vacinas.dssvc")]
    [XRegister(typeof(VacinasSVC), sCID)]
    public class VacinasSVC : XSVCModel
    {
        public const String sCID = "4999D1D4-12BF-464D-B362-133EE4E1ECC0";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_PETxVacinas_ISExVacinaID; // ISExItem.ISExItemID --> PETxVacinas.ISExVacinaID

        #region xPETxVacinas 
        public class xPETxVacinas : XSVCTable
        {

            public static Guid gCID => new Guid("32B38EAF-7963-4FED-B33C-F64BF98FBC9C");

            public xPETxVacinas()
            {
                Name = "PETxVacinas";
                Alias = "PETxVacinas";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxVacinas.gCID;

                Items.Add(PETxVacinasID, PETxVacinasID.ID);
                PETxVacinasID.Owner = this;
                PETxVacinasID.OwnerID = ID;
                PETxVacinasID.TableName = Name;
                PETxVacinasID.Alias = "PETxVacinasID";
                Items.Add(PETxAnimalID, PETxAnimalID.ID);
                PETxAnimalID.Owner = this;
                PETxAnimalID.OwnerID = ID;
                PETxAnimalID.TableName = Name;
                PETxAnimalID.Alias = "PETxAnimalID";
                Items.Add(ISExVacinaID, ISExVacinaID.ID);
                ISExVacinaID.Owner = this;
                ISExVacinaID.OwnerID = ID;
                ISExVacinaID.TableName = Name;
                ISExVacinaID.Alias = "ISExVacinaID";
                Items.Add(Realizada, Realizada.ID);
                Realizada.Owner = this;
                Realizada.OwnerID = ID;
                Realizada.TableName = Name;
                Realizada.Alias = "Realizada";
                Items.Add(DataRealizacao, DataRealizacao.ID);
                DataRealizacao.Owner = this;
                DataRealizacao.OwnerID = ID;
                DataRealizacao.TableName = Name;
                DataRealizacao.Alias = "DataRealizacao";
                Items.Add(DataRealizar, DataRealizar.ID);
                DataRealizar.Owner = this;
                DataRealizar.OwnerID = ID;
                DataRealizar.TableName = Name;
                DataRealizar.Alias = "DataRealizar";
            }

            public static XORMPKField PETxVacinasID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxVacinas.PETxVacinasID, new Guid("3BD96F08-C18B-453F-A264-2996C80ED086"), "PETxVacinasID", "Vacinas");
            public static XORMFKField PETxAnimalID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxVacinas.PETxAnimalID, new Guid("3C66CEE6-5B95-4943-AC7E-FD4D74D7B2F2"), "PETxAnimalID", "PET");
            public static XORMFKField ISExVacinaID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxVacinas.ISExVacinaID, new Guid("E36B1DCF-4356-43D1-B4E8-5167BBE72F8B"), "ISExVacinaID", "Vacina");
            public static XORMField Realizada = new XORMField(global::Projecao.Core.PET.DB.PETx.PETxVacinas.Realizada, new Guid("DA808A3C-F5CC-4EEA-BD89-CD0D8BECF88A"), "Realizada", "Realizada");
            public static XORMDateField DataRealizacao = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxVacinas.DataRealizacao, new Guid("2E480AEA-7D34-41D1-9293-2A946E4D30F0"), "DataRealizacao", "Data de Realização");
            public static XORMDateField DataRealizar = new XORMDateField(global::Projecao.Core.PET.DB.PETx.PETxVacinas.DataRealizar, new Guid("61C972DD-F0DA-48EA-BF34-119B19E0D8A6"), "DataRealizar", "Data para Realizar");
        }
        #endregion xPETxVacinas 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("4F048197-B7BA-41D4-AC8F-E44C12190D85");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("B0A8F5D4-FEB2-4F3A-949B-073AEE745A26"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("3B8C3911-A1D7-4E7A-B16A-9822948A1D36"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("DDD19D08-1818-4E79-9353-228C92D18EED"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("F7974846-04BE-41AF-98D0-C0DF2E8E812A"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("EC951256-3FA3-41D0-B279-F3A1388FB1ED"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("D49B997B-F6C3-48F4-88AB-736CFCE9967E"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("02F93D68-8BCC-405D-B89A-93FEEADDE23B"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("49AF1E1B-BC37-4052-A127-96E911759A48"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("EE4FC00C-4DBF-4245-92A8-2FE0778A611B"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        public xISExItem ISExItem;
        public xPETxVacinas PETxVacinas;
        public static readonly XORMParameterField Doses = new XORMParameterField(new Guid("81FCFF7C-A47E-4723-A1D6-1BBC3D66907B"), "Doses", "Quantidade de Doses", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Intervalo = new XORMParameterField(new Guid("BF55B20A-C72C-4CC4-AE7B-6370A49EB6C2"), "Intervalo", "Intervalo (dias)", XInt32.CID, 0, 0, false, gCID, null);

        public VacinasSVC()
        {
            TupleType = typeof(VacinasSVC.XTuple);
            DataSetType = typeof(VacinasSVC.XDataSet);
            ServiceRuleCID = new Guid("55300EE9-04D5-4CB8-A8BF-3EC193617603");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("4999D1D4-12BF-464D-B362-133EE4E1ECC0");
            Name = "Vacinas";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, xPETxVacinas.DataRealizar.ID, xPETxVacinas.DataRealizacao.ID };
            OrderByFields = new Guid[] { xPETxVacinas.DataRealizar.ID };
            DataSetFields = new Guid[] { xISExItem.Nome.ID, xPETxVacinas.PETxVacinasID.ID, xPETxVacinas.PETxAnimalID.ID, xPETxVacinas.ISExVacinaID.ID, xPETxVacinas.DataRealizacao.ID, xPETxVacinas.DataRealizar.ID, xPETxVacinas.Realizada.ID, Intervalo.ID, Doses.ID };
            PKField = xPETxVacinas.PETxVacinasID.ID;
            ConfigTableID = new Guid("4F263910-6F38-4C89-BA01-225FF4FC5576");
            MasterRuleCID = new Guid("55300EE9-04D5-4CB8-A8BF-3EC193617603");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PETxVacinas = new xPETxVacinas();
            PETxVacinas.IsReadOnly = false;
            AddTable(PETxVacinas);
            MasterTableID = PETxVacinas.ID;
            ISExItem_ISExItemID_PETxVacinas_ISExVacinaID = AddReference(new XSVCReference(new Guid("D71EDAA3-A8C3-4465-B54A-3B51B4C1BB97"), "FK_D71EDAA3A8C34465B54A3B51B4C1BB97", VacinasSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, VacinasSVC.xPETxVacinas.gCID, xPETxVacinas.ISExVacinaID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PETxVacinas.ISExVacinaID
            AddField(Intervalo);
            Intervalo.IsParam = true;
            AddField(Doses);
            Doses.IsParam = true;
            xPETxVacinas.DataRealizacao.IsDataField = true;
            xPETxVacinas.DataRealizacao.AllowEmpty = true;
            xPETxVacinas.DataRealizar.OrderType = XOrderType.Desc;
            xPETxVacinas.DataRealizar.IsDataField = true;
            xPETxVacinas.DataRealizar.AllowEmpty = true;
            Doses.IsReadOnly = false;
            Doses.Length = 0;
            Doses.Scale = 0;
            Doses.IsDataField = true;
            Doses.AllowEmpty = true;
            Intervalo.IsReadOnly = false;
            Intervalo.Length = 0;
            Intervalo.Scale = 0;
            Intervalo.IsDataField = true;
            Intervalo.AllowEmpty = true;
            xPETxVacinas.ISExVacinaID.IsDataField = true;
            xPETxVacinas.ISExVacinaID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xPETxVacinas.PETxAnimalID.IsDataField = true;
            xPETxVacinas.PETxAnimalID.AllowEmpty = true;
            xPETxVacinas.PETxVacinasID.GeneratePK = true;
            xPETxVacinas.PETxVacinasID.IsDataField = true;
            xPETxVacinas.PETxVacinasID.AllowEmpty = true;
            xPETxVacinas.Realizada.IsDataField = true;
            xPETxVacinas.Realizada.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField DataRealizacao => xPETxVacinas.DataRealizacao;
        public XORMField DataRealizar => xPETxVacinas.DataRealizar;
        public XORMField Doses => VacinasSVC.Doses;
        public XORMField Intervalo => VacinasSVC.Intervalo;
        public XORMField ISExVacinaID => xPETxVacinas.ISExVacinaID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField PETxAnimalID => xPETxVacinas.PETxAnimalID;
        public XORMField PETxVacinasID => xPETxVacinas.PETxVacinasID;
        public XORMField Realizada => xPETxVacinas.Realizada;
        }
        #endregion XFields
        #region VacinasSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime DataRealizacao
        {
            get
            {
                return (DateTime)Value[VacinasSVC.xPETxVacinas.DataRealizacao.ID];
            }
            set
            {
                Value[VacinasSVC.xPETxVacinas.DataRealizacao.ID] = value;
            }
        }
        public DateTime? oDataRealizacao
        {
            get
            {
                GetOldValue(VacinasSVC.xPETxVacinas.DataRealizacao, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public DateTime DataRealizar
        {
            get
            {
                return (DateTime)Value[VacinasSVC.xPETxVacinas.DataRealizar.ID];
            }
            set
            {
                Value[VacinasSVC.xPETxVacinas.DataRealizar.ID] = value;
            }
        }
        public DateTime? oDataRealizar
        {
            get
            {
                GetOldValue(VacinasSVC.xPETxVacinas.DataRealizar, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Int32 Doses
        {
            get
            {
                return (Int32)Value[VacinasSVC.Doses.ID];
            }
            set
            {
                Value[VacinasSVC.Doses.ID] = value;
            }
        }
        public Int32? oDoses
        {
            get
            {
                GetOldValue(VacinasSVC.Doses, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 Intervalo
        {
            get
            {
                return (Int32)Value[VacinasSVC.Intervalo.ID];
            }
            set
            {
                Value[VacinasSVC.Intervalo.ID] = value;
            }
        }
        public Int32? oIntervalo
        {
            get
            {
                GetOldValue(VacinasSVC.Intervalo, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid ISExVacinaID
        {
            get
            {
                return (Guid)Value[VacinasSVC.xPETxVacinas.ISExVacinaID.ID];
            }
            set
            {
                Value[VacinasSVC.xPETxVacinas.ISExVacinaID.ID] = value;
            }
        }
        public Guid? oISExVacinaID
        {
            get
            {
                GetOldValue(VacinasSVC.xPETxVacinas.ISExVacinaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VacinasSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[VacinasSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VacinasSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PETxAnimalID
        {
            get
            {
                return (Guid)Value[VacinasSVC.xPETxVacinas.PETxAnimalID.ID];
            }
            set
            {
                Value[VacinasSVC.xPETxVacinas.PETxAnimalID.ID] = value;
            }
        }
        public Guid? oPETxAnimalID
        {
            get
            {
                GetOldValue(VacinasSVC.xPETxVacinas.PETxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PETxVacinasID
        {
            get
            {
                return (Guid)Value[VacinasSVC.xPETxVacinas.PETxVacinasID.ID];
            }
            set
            {
                Value[VacinasSVC.xPETxVacinas.PETxVacinasID.ID] = value;
            }
        }
        public Guid? oPETxVacinasID
        {
            get
            {
                GetOldValue(VacinasSVC.xPETxVacinas.PETxVacinasID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Boolean Realizada
        {
            get
            {
                return (Boolean)Value[VacinasSVC.xPETxVacinas.Realizada.ID];
            }
            set
            {
                Value[VacinasSVC.xPETxVacinas.Realizada.ID] = value;
            }
        }
        public Boolean? oRealizada
        {
            get
            {
                GetOldValue(VacinasSVC.xPETxVacinas.Realizada, out Object ovlr);
                return (Boolean?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VacinasSVC.XTuple

        #region VacinasSVC.XDataSet

        public class XDataSet : XDataSet<VacinasSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VacinasSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VacinasSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid DataRealizacao => VacinasSVC.xPETxVacinas.DataRealizacao.ID;
                public Guid DataRealizar => VacinasSVC.xPETxVacinas.DataRealizar.ID;
                public Guid Doses => VacinasSVC.Doses.ID;
                public Guid Intervalo => VacinasSVC.Intervalo.ID;
                public Guid ISExVacinaID => VacinasSVC.xPETxVacinas.ISExVacinaID.ID;
                public Guid Nome => VacinasSVC.xISExItem.Nome.ID;
                public Guid PETxAnimalID => VacinasSVC.xPETxVacinas.PETxAnimalID.ID;
                public Guid PETxVacinasID => VacinasSVC.xPETxVacinas.PETxVacinasID.ID;
                public Guid Realizada => VacinasSVC.xPETxVacinas.Realizada.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(VacinasSVC.XDataSet);
            }

        }
        #endregion VacinasSVC.XDataSet
        #if !OnlyDef
        #region VacinasSVC.XRule
        public abstract class XRule : XServiceRule<VacinasSVC.XDataSet, VacinasSVC, VacinasSVC.XTuple>
        {
        }
        #endregion VacinasSVC.XRule

        [Guid(VacinasSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VacinasSVC))]
        protected class _Service : Service<VacinasSVC, XDataSet, XTuple>
        {
            public const String sCID = "DD971B99-4A6F-424F-901B-8A23362D57C3";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VacinasSVC, XDataSet, XTuple>, XService
             where TModel : VacinasSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}