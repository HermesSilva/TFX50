//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ERP.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\ReadOnly\ProfissionalSaude.dssvc")]
    [XRegister(typeof(ProfissionalSaudeSVC), sCID)]
    public class ProfissionalSaudeSVC : XSVCModel
    {
        #region ProfissionalSaudeFilterFRM

        [XRegister(typeof(ProfissionalSaudeFilterFRM), sCID)]
        public class ProfissionalSaudeFilterFRM : XFRMModel
        {
            public const String sCID = "911DDF94-EB16-4D5E-BFBE-DCB64B96DB41";
            public static new readonly Guid gCID = new Guid(sCID);
            static ProfissionalSaudeFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ProfissionalSaudeFilterFRM()
            {
                ID = gCID;
                Name = "ProfissionalSaudeFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1244, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.Like;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("41A8F267-CF66-406F-AC2F-FD5728DED94A"), "Nome", "Pesquisar Profissional", XString.CID, 2, 32, false, gCID, null, new Guid("0D205713-A0A8-4552-9204-DF73195A81E5")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("41A8F267-CF66-406F-AC2F-FD5728DED94A"), "Nome", "Pesquisar Profissional", typeof(String), false, "");
            }
        }

        #endregion ProfissionalSaudeFilterFRM

        public const String sCID = "69EF6967-90C6-472B-B429-6DD8885FE5EC";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxProfissionalCategoria_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID; // ERPxProfissionalCategoria.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxProfissional_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID; // ERPxProfissional.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxDocumento_SYSxPessoaID_SYSxPessoa_SYSxPessoaID; // ERPxDocumento.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference SYSxPessoaEmpresaGrupo_SYSxPessoaID_SYSxPessoa_SYSxPessoaID; // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID

        #region xERPxProfissional 
        public class xERPxProfissional : XSVCTable
        {

            public static Guid gCID => new Guid("00F98BD2-429D-4931-A778-F43D50D50E4B");

            public xERPxProfissional()
            {
                Name = "ERPxProfissional";
                Alias = "ERPxProfissional";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxProfissional.gCID;

                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField ERPxProfissionalID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissional.ERPxProfissionalID, new Guid("CEA14445-9B61-4F94-96E2-91FBD7A5AF59"), "ERPxProfissionalID", "Profissionais");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissional.SYSxEstadoID, new Guid("130A1E52-B965-4B31-9942-702F5F7D3F7C"), "SYSxEstadoID", "Estado");
        }
        #endregion xERPxProfissional 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("224AD583-B162-4DF7-A792-90A321180296");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("0D205713-A0A8-4552-9204-DF73195A81E5"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("9B50B970-5D4B-4B1A-9DBD-8A6F86E3F2DF"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xSYSxPessoaEmpresaGrupo 
        public class xSYSxPessoaEmpresaGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("44A5D797-A501-47B5-800B-0E54F25431FE");

            public xSYSxPessoaEmpresaGrupo()
            {
                Name = "SYSxPessoaEmpresaGrupo";
                Alias = "SYSxPessoaEmpresaGrupo";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.gCID;

                Items.Add(SYSxEmpresaGrupoID, SYSxEmpresaGrupoID.ID);
                SYSxEmpresaGrupoID.Owner = this;
                SYSxEmpresaGrupoID.OwnerID = ID;
                SYSxEmpresaGrupoID.TableName = Name;
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(SYSxPessoaEmpresaGrupoID, SYSxPessoaEmpresaGrupoID.ID);
                SYSxPessoaEmpresaGrupoID.Owner = this;
                SYSxPessoaEmpresaGrupoID.OwnerID = ID;
                SYSxPessoaEmpresaGrupoID.TableName = Name;
            }

            public static XORMFKField SYSxEmpresaGrupoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxEmpresaGrupoID, new Guid("357D0880-E9B2-49C6-9BE0-F8339417C760"), "SYSxEmpresaGrupoID", "Grupo de Empresas");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaID, new Guid("7AB35B4A-9336-4229-823A-F6DB57315AA1"), "SYSxPessoaID", "Pessoas");
            public static XORMPKField SYSxPessoaEmpresaGrupoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaEmpresaGrupoID, new Guid("31F973A8-A04A-4D6A-AD38-28E5AD975B24"), "SYSxPessoaEmpresaGrupoID", "Pessoa por Grupo de Empresa");
        }
        #endregion xSYSxPessoaEmpresaGrupo 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("7E26501D-8AD5-48D9-BA36-B68B8724BFB0");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("370ADE36-FA95-4ADB-9F72-01EA6D992C88"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("315E8C47-36A3-4A31-96EB-DD32EBB34EE6"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("E6664823-4206-483B-B154-951BC9AF78F4"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("B4B56A59-55A9-414C-A03E-FDC86A749CC1"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xERPxDocumento 
        public class xERPxDocumento : XSVCTable
        {

            public static Guid gCID => new Guid("A645CAE7-2AF0-452A-8895-4C48D9812FD7");

            public xERPxDocumento()
            {
                Name = "ERPxDocumento";
                Alias = "ERPxDocumento";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.gCID;

                Items.Add(ERPxDocumentoID, ERPxDocumentoID.ID);
                ERPxDocumentoID.Owner = this;
                ERPxDocumentoID.OwnerID = ID;
                ERPxDocumentoID.TableName = Name;
                Items.Add(ERPxDocumentoTipoID, ERPxDocumentoTipoID.ID);
                ERPxDocumentoTipoID.Owner = this;
                ERPxDocumentoTipoID.OwnerID = ID;
                ERPxDocumentoTipoID.TableName = Name;
                ERPxDocumentoTipoID.Alias = "ERPxDocumentoTipoID";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField ERPxDocumentoID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoID, new Guid("517B393F-0851-4B1B-88B6-9825646A4CCB"), "ERPxDocumentoID", "Documento");
            public static XORMFKField ERPxDocumentoTipoID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoTipoID, new Guid("21366066-A837-4B06-8ED5-BCCDDC9B9EE7"), "ERPxDocumentoTipoID", "Tipo de Documento");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.SYSxPessoaID, new Guid("99C4BD86-4CDC-4089-80FA-A27F1FB50034"), "SYSxPessoaID", "Pessoas");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.Numero, new Guid("38628963-A0AF-4BCC-9EE3-A28335AAEEAF"), "Numero", "CPF");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.SYSxEstadoID, new Guid("FCDAD076-8268-407B-ACEE-700D94A3FB2B"), "SYSxEstadoID", "Estado");
        }
        #endregion xERPxDocumento 


        #region xERPxPessoaFisica 
        public class xERPxPessoaFisica : XSVCTable
        {

            public static Guid gCID => new Guid("EDB077F7-369D-4C92-B594-FF9D05EAACEC");

            public xERPxPessoaFisica()
            {
                Name = "ERPxPessoaFisica";
                Alias = "ERPxPessoaFisica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.gCID;

                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
            }

            public static XORMFaceField ERPxPessoaFisicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxPessoaFisicaID, new Guid("71DB267B-EB3B-4B5B-891C-0CEB4276DC76"), "ERPxPessoaFisicaID", "Pessoa Física");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.SYSxEstadoID, new Guid("3392D3C6-82FA-44CA-8C98-1B480912B5E6"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxGeneroID, new Guid("5E7C95BB-E0C9-4162-96E1-9A69F233F2F0"), "ERPxGeneroID", "Gênero");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.Nascimento, new Guid("B718F1DD-96A6-462F-9E43-36ADD80B1CAA"), "Nascimento", "Data de Nascimento");
        }
        #endregion xERPxPessoaFisica 


        #region xERPxProfissionalCategoria 
        public class xERPxProfissionalCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("FF2887F3-110F-454D-A1BC-DDA59AD75CB0");

            public xERPxProfissionalCategoria()
            {
                Name = "ERPxProfissionalCategoria";
                Alias = "ERPxProfissionalCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.gCID;

                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                Items.Add(ERPxProfissionalCategoriaID, ERPxProfissionalCategoriaID.ID);
                ERPxProfissionalCategoriaID.Owner = this;
                ERPxProfissionalCategoriaID.OwnerID = ID;
                ERPxProfissionalCategoriaID.TableName = Name;
            }

            public static XORMFKField ERPxCategoriaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxCategoriaID, new Guid("7A3D0ECA-C593-4D05-91BD-2D403411BC2C"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxProfissionalID, new Guid("2D8FD1EC-4945-41FE-86BC-1976F078A45C"), "ERPxProfissionalID", "Profissionais");
            public static XORMFaceField ERPxProfissionalCategoriaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxProfissionalCategoriaID, new Guid("335F5E0A-1B30-45A4-A44E-4441FB9A7647"), "ERPxProfissionalCategoriaID", "Categorias por Profissional");
        }
        #endregion xERPxProfissionalCategoria 


        public xERPxDocumento ERPxDocumento;
        public xERPxGenero ERPxGenero;
        public xERPxPessoaFisica ERPxPessoaFisica;
        public xERPxProfissional ERPxProfissional;
        public xERPxProfissionalCategoria ERPxProfissionalCategoria;
        public xSYSxPessoa SYSxPessoa;
        public xSYSxPessoaEmpresaGrupo SYSxPessoaEmpresaGrupo;
        public static readonly XORMParameterField ERPxCategoriaID = new XORMParameterField(new Guid("2466D6F8-7A1A-402F-A0E3-A58E0B837334"), "ERPxCategoriaID", "Categoria", XInt16.CID, 0, 0, false, gCID, null);

        public ProfissionalSaudeSVC()
        {
            TupleType = typeof(ProfissionalSaudeSVC.XTuple);
            DataSetType = typeof(ProfissionalSaudeSVC.XDataSet);
            ServiceRuleCID = new Guid("5098A818-1219-4546-A5DA-2A9853ED3E6F");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("69EF6967-90C6-472B-B429-6DD8885FE5EC");
            Name = "ProfissionalSaude";
            Title = "Profissional de Saúdo";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("911DDF94-EB16-4D5E-BFBE-DCB64B96DB41");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xERPxPessoaFisica.Nascimento.ID, xERPxDocumento.Numero.ID, xERPxGenero.Genero.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xERPxDocumento.ERPxDocumentoTipoID.ID, ERPxCategoriaID.ID, xERPxDocumento.Numero.ID, xERPxPessoaFisica.Nascimento.ID, xERPxGenero.Genero.ID, xSYSxPessoa.Nome.ID, xSYSxPessoa.SYSxPessoaID.ID };
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("5098A818-1219-4546-A5DA-2A9853ED3E6F");
            ERPxDocumento = new xERPxDocumento();
            ERPxDocumento.IsReadOnly = true;
            AddTable(ERPxDocumento);
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            ERPxPessoaFisica = new xERPxPessoaFisica();
            ERPxPessoaFisica.IsReadOnly = true;
            AddTable(ERPxPessoaFisica);
            ERPxProfissional = new xERPxProfissional();
            ERPxProfissional.IsReadOnly = true;
            AddTable(ERPxProfissional);
            ERPxProfissionalCategoria = new xERPxProfissionalCategoria();
            ERPxProfissionalCategoria.IsReadOnly = true;
            AddTable(ERPxProfissionalCategoria);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            SYSxPessoaEmpresaGrupo = new xSYSxPessoaEmpresaGrupo();
            SYSxPessoaEmpresaGrupo.IsReadOnly = true;
            AddTable(SYSxPessoaEmpresaGrupo);
            MasterTableID = SYSxPessoa.ID;
            ERPxProfissionalCategoria_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("2884F62F-FD0D-42F5-8746-56166FF3DA57"), "FK_2884F62FFD0D42F5874656166FF3DA57", ProfissionalSaudeSVC.xERPxProfissionalCategoria.gCID, xERPxProfissionalCategoria.ERPxProfissionalID.ID, ProfissionalSaudeSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxProfissionalCategoria.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
            ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("37E134C4-FFA9-474F-A173-EF84C8626B22"), "FK_37E134C4FFA9474FA173EF84C8626B22", ProfissionalSaudeSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxPessoaFisicaID.ID, ProfissionalSaudeSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
            ERPxProfissional_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("6A51E2BB-8B93-4209-AC88-F2D01E59EF35"), "FK_6A51E2BB8B934209AC88F2D01E59EF35", ProfissionalSaudeSVC.xERPxProfissional.gCID, xERPxProfissional.ERPxProfissionalID.ID, ProfissionalSaudeSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxProfissional.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
            ERPxDocumento_SYSxPessoaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("788D9CA6-CEA7-4B88-B7FA-4C52E310C744"), "FK_788D9CA6CEA74B88B7FA4C52E310C744", ProfissionalSaudeSVC.xERPxDocumento.gCID, xERPxDocumento.SYSxPessoaID.ID, ProfissionalSaudeSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxDocumento.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
            SYSxPessoaEmpresaGrupo_SYSxPessoaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("7AE87977-DEDE-4E63-BF21-D66372097905"), "FK_7AE87977DEDE4E63BF21D66372097905", ProfissionalSaudeSVC.xSYSxPessoaEmpresaGrupo.gCID, xSYSxPessoaEmpresaGrupo.SYSxPessoaID.ID, ProfissionalSaudeSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
            ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID = AddReference(new XSVCReference(new Guid("D6F561AC-89F4-4731-9422-BFBFF1EB37B4"), "FK_D6F561AC89F447319422BFBFF1EB37B4", ProfissionalSaudeSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, ProfissionalSaudeSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID
            AddField(ERPxCategoriaID);
            ERPxCategoriaID.IsParam = true;
            ERPxCategoriaID.IsReadOnly = false;
            ERPxCategoriaID.Length = 0;
            ERPxCategoriaID.Scale = 0;
            ERPxCategoriaID.IsDataField = true;
            ERPxCategoriaID.AllowEmpty = true;
            xERPxDocumento.ERPxDocumentoTipoID.IsReadOnly = true;
            xERPxDocumento.ERPxDocumentoTipoID.IsDataField = true;
            xERPxDocumento.ERPxDocumentoTipoID.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xERPxPessoaFisica.Nascimento.IsReadOnly = true;
            xERPxPessoaFisica.Nascimento.IsDataField = true;
            xERPxPessoaFisica.Nascimento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xERPxDocumento.Numero.IsReadOnly = true;
            xERPxDocumento.Numero.Length = 25;
            xERPxDocumento.Numero.IsDataField = true;
            xERPxDocumento.Numero.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.IsReadOnly = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xERPxDocumento.ERPxDocumentoTipoID);
            pWhere.Add(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.CPF);
        }

        #region XFields

        public class XFields
        {
        public XORMField ERPxCategoriaID => ProfissionalSaudeSVC.ERPxCategoriaID;
        public XORMField ERPxDocumentoTipoID => xERPxDocumento.ERPxDocumentoTipoID;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField Nascimento => xERPxPessoaFisica.Nascimento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Numero => xERPxDocumento.Numero;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        }
        #endregion XFields
        #region ProfissionalSaudeSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int16 ERPxCategoriaID
        {
            get
            {
                return (Int16)Value[ProfissionalSaudeSVC.ERPxCategoriaID.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.ERPxCategoriaID.ID] = value;
            }
        }
        public Int16? oERPxCategoriaID
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.ERPxCategoriaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 ERPxDocumentoTipoID
        {
            get
            {
                return (Int16)Value[ProfissionalSaudeSVC.xERPxDocumento.ERPxDocumentoTipoID.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.xERPxDocumento.ERPxDocumentoTipoID.ID] = value;
            }
        }
        public Int16? oERPxDocumentoTipoID
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.xERPxDocumento.ERPxDocumentoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[ProfissionalSaudeSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[ProfissionalSaudeSVC.xERPxPessoaFisica.Nascimento.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.xERPxPessoaFisica.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.xERPxPessoaFisica.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ProfissionalSaudeSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[ProfissionalSaudeSVC.xERPxDocumento.Numero.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.xERPxDocumento.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.xERPxDocumento.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[ProfissionalSaudeSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[ProfissionalSaudeSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(ProfissionalSaudeSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ProfissionalSaudeSVC.XTuple

        #region ProfissionalSaudeSVC.XDataSet

        public class XDataSet : XDataSet<ProfissionalSaudeSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ProfissionalSaudeSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ProfissionalSaudeSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid ERPxCategoriaID => ProfissionalSaudeSVC.ERPxCategoriaID.ID;
                public Guid ERPxDocumentoTipoID => ProfissionalSaudeSVC.xERPxDocumento.ERPxDocumentoTipoID.ID;
                public Guid Genero => ProfissionalSaudeSVC.xERPxGenero.Genero.ID;
                public Guid Nascimento => ProfissionalSaudeSVC.xERPxPessoaFisica.Nascimento.ID;
                public Guid Nome => ProfissionalSaudeSVC.xSYSxPessoa.Nome.ID;
                public Guid Numero => ProfissionalSaudeSVC.xERPxDocumento.Numero.ID;
                public Guid SYSxPessoaID => ProfissionalSaudeSVC.xSYSxPessoa.SYSxPessoaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ProfissionalSaudeSVC.XDataSet);
            }

        }
        #endregion ProfissionalSaudeSVC.XDataSet
        #if !OnlyDef
        #region ProfissionalSaudeSVC.XRule
        public abstract class XRule : XServiceRule<ProfissionalSaudeSVC.XDataSet, ProfissionalSaudeSVC, ProfissionalSaudeSVC.XTuple>
        {
        }
        #endregion ProfissionalSaudeSVC.XRule

        [Guid(ProfissionalSaudeSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ProfissionalSaudeSVC))]
        protected class _Service : Service<ProfissionalSaudeSVC, XDataSet, XTuple>
        {
            public const String sCID = "6783350C-F1AF-4238-9F5E-5199F7EE6B72";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ProfissionalSaudeSVC, XDataSet, XTuple>, XService
             where TModel : ProfissionalSaudeSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}