//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ERP.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.PET.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\ReadOnly\ProfissionaEstetica.dssvc")]
    [XRegister(typeof(ProfissionaEsteticaSVC), sCID)]
    public class ProfissionaEsteticaSVC : XSVCModel
    {
        #region ProfissionaEsteticaFilterFRM

        [XRegister(typeof(ProfissionaEsteticaFilterFRM), sCID)]
        public class ProfissionaEsteticaFilterFRM : XFRMModel
        {
            public const String sCID = "4BA8F2D9-7FCD-4327-99F2-B99522FAABE1";
            public static new readonly Guid gCID = new Guid(sCID);
            static ProfissionaEsteticaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ProfissionaEsteticaFilterFRM()
            {
                ID = gCID;
                Name = "ProfissionaEsteticaFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1244, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.Like;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("F503AA86-32F2-4A3B-A04D-764B87E7A1E4"), "Nome", "Pesquisar Profissional", XString.CID, 2, 32, false, gCID, null, new Guid("5B55B97D-6AB7-4B7E-B042-76B3F4A97C8E")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("F503AA86-32F2-4A3B-A04D-764B87E7A1E4"), "Nome", "Pesquisar Profissional", typeof(String), false, "");
            }
        }

        #endregion ProfissionaEsteticaFilterFRM

        public const String sCID = "D30C2118-46D3-4E74-A3F9-1AC5EECD78C9";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID
        public static XSVCReference ERPxDocumento_SYSxPessoaID_SYSxPessoa_SYSxPessoaID; // ERPxDocumento.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference SYSxPessoaEmpresaGrupo_SYSxPessoaID_SYSxPessoa_SYSxPessoaID; // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxProfissional_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID; // ERPxProfissional.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference ERPxProfissionalCategoria_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID; // ERPxProfissionalCategoria.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID

        #region xERPxDocumento 
        public class xERPxDocumento : XSVCTable
        {

            public static Guid gCID => new Guid("066D794A-F2CE-49B6-B9B5-B8A92DA9D492");

            public xERPxDocumento()
            {
                Name = "ERPxDocumento";
                Alias = "ERPxDocumento";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.gCID;

                Items.Add(ERPxDocumentoID, ERPxDocumentoID.ID);
                ERPxDocumentoID.Owner = this;
                ERPxDocumentoID.OwnerID = ID;
                ERPxDocumentoID.TableName = Name;
                Items.Add(ERPxDocumentoTipoID, ERPxDocumentoTipoID.ID);
                ERPxDocumentoTipoID.Owner = this;
                ERPxDocumentoTipoID.OwnerID = ID;
                ERPxDocumentoTipoID.TableName = Name;
                ERPxDocumentoTipoID.Alias = "ERPxDocumentoTipoID";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField ERPxDocumentoID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoID, new Guid("ADA9FC99-FB01-46A9-81D3-0019BD2ABD79"), "ERPxDocumentoID", "Documento");
            public static XORMFKField ERPxDocumentoTipoID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoTipoID, new Guid("6CE744D8-CC21-4442-9100-7C6570D1B4E6"), "ERPxDocumentoTipoID", "Tipo de Documento");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.SYSxPessoaID, new Guid("813A7501-1B9E-4C35-A57B-A0E14D2927D9"), "SYSxPessoaID", "Pessoas");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.Numero, new Guid("0F7745B4-FDE9-4408-9E7E-057DB8222589"), "Numero", "CPF");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.SYSxEstadoID, new Guid("6DAEF871-B2B3-4FE4-A9EA-1B2FEEA646F7"), "SYSxEstadoID", "Estado");
        }
        #endregion xERPxDocumento 


        #region xERPxProfissional 
        public class xERPxProfissional : XSVCTable
        {

            public static Guid gCID => new Guid("1B561545-664A-4AD7-96C4-A78BAAE3F18A");

            public xERPxProfissional()
            {
                Name = "ERPxProfissional";
                Alias = "ERPxProfissional";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxProfissional.gCID;

                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField ERPxProfissionalID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissional.ERPxProfissionalID, new Guid("F68EFD42-F266-4F60-ADD3-1F74F57C262C"), "ERPxProfissionalID", "Profissionais");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissional.SYSxEstadoID, new Guid("4F5CCE11-8DCB-470E-A5FE-CC0ED217D3F3"), "SYSxEstadoID", "Estado");
        }
        #endregion xERPxProfissional 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("4C54E130-2ED7-430F-BA90-F2EF96675DB0");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("5B55B97D-6AB7-4B7E-B042-76B3F4A97C8E"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("8806B562-D1D6-43E5-8A21-A16707F70D8A"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xSYSxPessoaEmpresaGrupo 
        public class xSYSxPessoaEmpresaGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("74F3BFED-D630-400E-986C-0BF654771AFE");

            public xSYSxPessoaEmpresaGrupo()
            {
                Name = "SYSxPessoaEmpresaGrupo";
                Alias = "SYSxPessoaEmpresaGrupo";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.gCID;

                Items.Add(SYSxEmpresaGrupoID, SYSxEmpresaGrupoID.ID);
                SYSxEmpresaGrupoID.Owner = this;
                SYSxEmpresaGrupoID.OwnerID = ID;
                SYSxEmpresaGrupoID.TableName = Name;
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(SYSxPessoaEmpresaGrupoID, SYSxPessoaEmpresaGrupoID.ID);
                SYSxPessoaEmpresaGrupoID.Owner = this;
                SYSxPessoaEmpresaGrupoID.OwnerID = ID;
                SYSxPessoaEmpresaGrupoID.TableName = Name;
            }

            public static XORMFKField SYSxEmpresaGrupoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxEmpresaGrupoID, new Guid("C09A3009-0095-4D31-9E8D-3DCAC134B606"), "SYSxEmpresaGrupoID", "Grupo de Empresas");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaID, new Guid("1FCC2AD0-36FA-42AA-8A84-66E69FE142D7"), "SYSxPessoaID", "Pessoas");
            public static XORMPKField SYSxPessoaEmpresaGrupoID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoaEmpresaGrupo.SYSxPessoaEmpresaGrupoID, new Guid("F0DEA44D-D49D-45B4-8D4C-258D8DC7390C"), "SYSxPessoaEmpresaGrupoID", "Pessoa por Grupo de Empresa");
        }
        #endregion xSYSxPessoaEmpresaGrupo 


        #region xERPxPessoaFisica 
        public class xERPxPessoaFisica : XSVCTable
        {

            public static Guid gCID => new Guid("B4D0F543-D845-495F-99E4-B0B8DB15CD70");

            public xERPxPessoaFisica()
            {
                Name = "ERPxPessoaFisica";
                Alias = "ERPxPessoaFisica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.gCID;

                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
            }

            public static XORMFaceField ERPxPessoaFisicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxPessoaFisicaID, new Guid("97774B81-A85A-48C3-AC1F-533BFAC8E66E"), "ERPxPessoaFisicaID", "Pessoa Física");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.SYSxEstadoID, new Guid("38FA0C69-9A1C-4F24-84B0-1A1B2FDC121C"), "SYSxEstadoID", "Estado");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.ERPxGeneroID, new Guid("AA660787-0C90-4684-9A40-85B42F4B1498"), "ERPxGeneroID", "Gênero");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisica.Nascimento, new Guid("AC181EE5-99A8-4E37-9BCD-DFE77E16E079"), "Nascimento", "Data de Nascimento");
        }
        #endregion xERPxPessoaFisica 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("CC9D2095-D18B-4CC2-8A41-0EDEC6109170");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("5DDC8D5E-0487-4EE5-869B-6D6F5BB6533D"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("8A3DA0E5-4B09-4300-B93C-92E7CE18E5D2"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("111936D5-F138-4A04-8BA7-88527D099AB5"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("A8FF65F6-A872-415B-86A3-FFFDACCC52E6"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xERPxProfissionalCategoria 
        public class xERPxProfissionalCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("FEA19841-04AE-4F20-B306-C72FF612F778");

            public xERPxProfissionalCategoria()
            {
                Name = "ERPxProfissionalCategoria";
                Alias = "ERPxProfissionalCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.gCID;

                Items.Add(ERPxCategoriaID, ERPxCategoriaID.ID);
                ERPxCategoriaID.Owner = this;
                ERPxCategoriaID.OwnerID = ID;
                ERPxCategoriaID.TableName = Name;
                Items.Add(ERPxProfissionalID, ERPxProfissionalID.ID);
                ERPxProfissionalID.Owner = this;
                ERPxProfissionalID.OwnerID = ID;
                ERPxProfissionalID.TableName = Name;
                Items.Add(ERPxProfissionalCategoriaID, ERPxProfissionalCategoriaID.ID);
                ERPxProfissionalCategoriaID.Owner = this;
                ERPxProfissionalCategoriaID.OwnerID = ID;
                ERPxProfissionalCategoriaID.TableName = Name;
            }

            public static XORMFKField ERPxCategoriaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxCategoriaID, new Guid("607518EF-2ED6-492D-A481-D4AC778121F9"), "ERPxCategoriaID", "Categoria de Profissional");
            public static XORMFKField ERPxProfissionalID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxProfissionalID, new Guid("9903AF1B-2151-41D2-AD89-38C4FE47EBB1"), "ERPxProfissionalID", "Profissionais");
            public static XORMFaceField ERPxProfissionalCategoriaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxProfissionalCategoria.ERPxProfissionalCategoriaID, new Guid("ACF9466C-B23F-41FD-9316-C5D778FFB667"), "ERPxProfissionalCategoriaID", "Categorias por Profissional");
        }
        #endregion xERPxProfissionalCategoria 


        public xERPxDocumento ERPxDocumento;
        public xERPxGenero ERPxGenero;
        public xERPxPessoaFisica ERPxPessoaFisica;
        public xERPxProfissional ERPxProfissional;
        public xERPxProfissionalCategoria ERPxProfissionalCategoria;
        public xSYSxPessoa SYSxPessoa;
        public xSYSxPessoaEmpresaGrupo SYSxPessoaEmpresaGrupo;
        public static readonly XORMParameterField ERPxCategoriaID = new XORMParameterField(new Guid("ED1C74BA-3342-498C-AABA-3BC2B15057AD"), "ERPxCategoriaID", "Categoria", XInt16.CID, 0, 0, false, gCID, null);

        public ProfissionaEsteticaSVC()
        {
            TupleType = typeof(ProfissionaEsteticaSVC.XTuple);
            DataSetType = typeof(ProfissionaEsteticaSVC.XDataSet);
            ServiceRuleCID = new Guid("89D7B0BF-3ACE-46E7-8712-26E6E09DFD71");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("D30C2118-46D3-4E74-A3F9-1AC5EECD78C9");
            Name = "ProfissionaEstetica";
            Title = "Profissional de Estética";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("4BA8F2D9-7FCD-4327-99F2-B99522FAABE1");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xERPxPessoaFisica.Nascimento.ID, xERPxDocumento.Numero.ID, xERPxGenero.Genero.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xERPxDocumento.ERPxDocumentoTipoID.ID, ERPxCategoriaID.ID, xERPxDocumento.Numero.ID, xERPxPessoaFisica.Nascimento.ID, xERPxGenero.Genero.ID, xSYSxPessoa.Nome.ID, xSYSxPessoa.SYSxPessoaID.ID };
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("89D7B0BF-3ACE-46E7-8712-26E6E09DFD71");
            ERPxDocumento = new xERPxDocumento();
            ERPxDocumento.IsReadOnly = true;
            AddTable(ERPxDocumento);
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            ERPxPessoaFisica = new xERPxPessoaFisica();
            ERPxPessoaFisica.IsReadOnly = true;
            AddTable(ERPxPessoaFisica);
            ERPxProfissional = new xERPxProfissional();
            ERPxProfissional.IsReadOnly = true;
            AddTable(ERPxProfissional);
            ERPxProfissionalCategoria = new xERPxProfissionalCategoria();
            ERPxProfissionalCategoria.IsReadOnly = true;
            AddTable(ERPxProfissionalCategoria);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            SYSxPessoaEmpresaGrupo = new xSYSxPessoaEmpresaGrupo();
            SYSxPessoaEmpresaGrupo.IsReadOnly = true;
            AddTable(SYSxPessoaEmpresaGrupo);
            MasterTableID = SYSxPessoa.ID;
            ERPxGenero_ERPxGeneroID_ERPxPessoaFisica_ERPxGeneroID = AddReference(new XSVCReference(new Guid("76C8936A-50F3-4ACC-8969-B619C4BDB9FB"), "FK_76C8936A50F34ACC8969B619C4BDB9FB", ProfissionaEsteticaSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, ProfissionaEsteticaSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> ERPxPessoaFisica.ERPxGeneroID
            ERPxDocumento_SYSxPessoaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("9C4C4A4C-F88A-4D1F-856C-DC15A20A8759"), "FK_9C4C4A4CF88A4D1F856CDC15A20A8759", ProfissionaEsteticaSVC.xERPxDocumento.gCID, xERPxDocumento.SYSxPessoaID.ID, ProfissionaEsteticaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxDocumento.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
            ERPxPessoaFisica_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("B9C724A0-0893-484A-83DF-4DD69A2075E7"), "FK_B9C724A00893484A83DF4DD69A2075E7", ProfissionaEsteticaSVC.xERPxPessoaFisica.gCID, xERPxPessoaFisica.ERPxPessoaFisicaID.ID, ProfissionaEsteticaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaFisica.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
            SYSxPessoaEmpresaGrupo_SYSxPessoaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("C081181E-8DCB-4ACB-8C0A-803647B89844"), "FK_C081181E8DCB4ACB8C0A803647B89844", ProfissionaEsteticaSVC.xSYSxPessoaEmpresaGrupo.gCID, xSYSxPessoaEmpresaGrupo.SYSxPessoaID.ID, ProfissionaEsteticaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // SYSxPessoaEmpresaGrupo.SYSxPessoaID --> SYSxPessoa.SYSxPessoaID
            ERPxProfissional_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("C32FCDFA-112C-4F40-A9BC-D64E038747E9"), "FK_C32FCDFA112C4F40A9BCD64E038747E9", ProfissionaEsteticaSVC.xERPxProfissional.gCID, xERPxProfissional.ERPxProfissionalID.ID, ProfissionaEsteticaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxProfissional.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
            ERPxProfissionalCategoria_ERPxProfissionalID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("F18BF790-41F0-4296-BE7E-0F8B94E75D38"), "FK_F18BF79041F04296BE7E0F8B94E75D38", ProfissionaEsteticaSVC.xERPxProfissionalCategoria.gCID, xERPxProfissionalCategoria.ERPxProfissionalID.ID, ProfissionaEsteticaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxProfissionalCategoria.ERPxProfissionalID --> SYSxPessoa.SYSxPessoaID
            AddField(ERPxCategoriaID);
            ERPxCategoriaID.IsParam = true;
            ERPxCategoriaID.IsReadOnly = false;
            ERPxCategoriaID.Length = 0;
            ERPxCategoriaID.Scale = 0;
            ERPxCategoriaID.IsDataField = true;
            ERPxCategoriaID.AllowEmpty = true;
            xERPxDocumento.ERPxDocumentoTipoID.IsReadOnly = true;
            xERPxDocumento.ERPxDocumentoTipoID.IsDataField = true;
            xERPxDocumento.ERPxDocumentoTipoID.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xERPxPessoaFisica.Nascimento.IsReadOnly = true;
            xERPxPessoaFisica.Nascimento.IsDataField = true;
            xERPxPessoaFisica.Nascimento.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xERPxDocumento.Numero.IsReadOnly = true;
            xERPxDocumento.Numero.Length = 25;
            xERPxDocumento.Numero.IsDataField = true;
            xERPxDocumento.Numero.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.IsReadOnly = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xERPxDocumento.ERPxDocumentoTipoID);
            pWhere.Add(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.CPF);
        }

        #region XFields

        public class XFields
        {
        public XORMField ERPxCategoriaID => ProfissionaEsteticaSVC.ERPxCategoriaID;
        public XORMField ERPxDocumentoTipoID => xERPxDocumento.ERPxDocumentoTipoID;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField Nascimento => xERPxPessoaFisica.Nascimento;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Numero => xERPxDocumento.Numero;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        }
        #endregion XFields
        #region ProfissionaEsteticaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int16 ERPxCategoriaID
        {
            get
            {
                return (Int16)Value[ProfissionaEsteticaSVC.ERPxCategoriaID.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.ERPxCategoriaID.ID] = value;
            }
        }
        public Int16? oERPxCategoriaID
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.ERPxCategoriaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 ERPxDocumentoTipoID
        {
            get
            {
                return (Int16)Value[ProfissionaEsteticaSVC.xERPxDocumento.ERPxDocumentoTipoID.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.xERPxDocumento.ERPxDocumentoTipoID.ID] = value;
            }
        }
        public Int16? oERPxDocumentoTipoID
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.xERPxDocumento.ERPxDocumentoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[ProfissionaEsteticaSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[ProfissionaEsteticaSVC.xERPxPessoaFisica.Nascimento.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.xERPxPessoaFisica.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.xERPxPessoaFisica.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ProfissionaEsteticaSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[ProfissionaEsteticaSVC.xERPxDocumento.Numero.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.xERPxDocumento.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.xERPxDocumento.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[ProfissionaEsteticaSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[ProfissionaEsteticaSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(ProfissionaEsteticaSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ProfissionaEsteticaSVC.XTuple

        #region ProfissionaEsteticaSVC.XDataSet

        public class XDataSet : XDataSet<ProfissionaEsteticaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ProfissionaEsteticaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ProfissionaEsteticaSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid ERPxCategoriaID => ProfissionaEsteticaSVC.ERPxCategoriaID.ID;
                public Guid ERPxDocumentoTipoID => ProfissionaEsteticaSVC.xERPxDocumento.ERPxDocumentoTipoID.ID;
                public Guid Genero => ProfissionaEsteticaSVC.xERPxGenero.Genero.ID;
                public Guid Nascimento => ProfissionaEsteticaSVC.xERPxPessoaFisica.Nascimento.ID;
                public Guid Nome => ProfissionaEsteticaSVC.xSYSxPessoa.Nome.ID;
                public Guid Numero => ProfissionaEsteticaSVC.xERPxDocumento.Numero.ID;
                public Guid SYSxPessoaID => ProfissionaEsteticaSVC.xSYSxPessoa.SYSxPessoaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ProfissionaEsteticaSVC.XDataSet);
            }

        }
        #endregion ProfissionaEsteticaSVC.XDataSet
        #if !OnlyDef
        #region ProfissionaEsteticaSVC.XRule
        public abstract class XRule : XServiceRule<ProfissionaEsteticaSVC.XDataSet, ProfissionaEsteticaSVC, ProfissionaEsteticaSVC.XTuple>
        {
        }
        #endregion ProfissionaEsteticaSVC.XRule

        [Guid(ProfissionaEsteticaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ProfissionaEsteticaSVC))]
        protected class _Service : Service<ProfissionaEsteticaSVC, XDataSet, XTuple>
        {
            public const String sCID = "CC16D7CE-DD13-4338-A98E-EF7556B1C71F";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ProfissionaEsteticaSVC, XDataSet, XTuple>, XService
             where TModel : ProfissionaEsteticaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}