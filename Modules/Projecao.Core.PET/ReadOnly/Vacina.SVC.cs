//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;

namespace Projecao.Core.PET.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\ReadOnly\Vacina.dssvc")]
    [XRegister(typeof(VacinaSVC), sCID)]
    public class VacinaSVC : XSVCModel
    {
        #region VacinaFilterFRM

        [XRegister(typeof(VacinaFilterFRM), sCID)]
        public class VacinaFilterFRM : XFRMModel
        {
            public const String sCID = "576B50CF-C666-4BDF-878F-BBADE0A06FBC";
            public static new readonly Guid gCID = new Guid(sCID);
            static VacinaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public VacinaFilterFRM()
            {
                ID = gCID;
                Name = "VacinaFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 1244, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.Like;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("0B6C59DD-85A6-4934-AC0B-1B8FF3D1B95B"), "Nome", "Pesquisar Vacina", XString.CID, 2, 32, false, gCID, null, new Guid("CAF9CBF5-82DF-4924-89AE-EB62E6F1E5F8")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("0B6C59DD-85A6-4934-AC0B-1B8FF3D1B95B"), "Nome", "Pesquisar Vacina", typeof(String), false, "");
            }
        }

        #endregion VacinaFilterFRM

        public const String sCID = "4CFECF4E-03CF-42FA-BE87-F16E8106EA21";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExVacina_ISExVacinaID_ISExItem_ISExItemID; // ISExVacina.ISExVacinaID --> ISExItem.ISExItemID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("9A03FC21-D505-4496-B82D-5B5F7B411095");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("EE3B53EB-BE39-43A5-9ECA-903BD36BF8A1"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("33251485-B230-4C3C-9746-556468FBAC59"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("E135EBC1-B452-4CF3-A5B1-9C6E959D1EFF"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("135639E6-E59F-4D45-A73A-71CDA6D1D4FF"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("76BA4DB0-258E-465C-A20C-0DE50951B26E"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("FFB2F6D7-3E98-46C8-AF6F-3926963E46F2"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("CAF9CBF5-82DF-4924-89AE-EB62E6F1E5F8"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("18E4E8D4-7755-49CB-8E57-A5C46F8822AA"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("7D18D9CC-83E4-49A9-B201-11DB788246B4"), "ProdutoID", "CÃ³digo Legado");
        }
        #endregion xISExItem 


        #region xISExVacina 
        public class xISExVacina : XSVCTable
        {

            public static Guid gCID => new Guid("E8D9FA59-85B6-447B-82C4-06B43987E9AC");

            public xISExVacina()
            {
                Name = "ISExVacina";
                Alias = "ISExVacina";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExVacina.gCID;

                Items.Add(ISExVacinaID, ISExVacinaID.ID);
                ISExVacinaID.Owner = this;
                ISExVacinaID.OwnerID = ID;
                ISExVacinaID.TableName = Name;
                ISExVacinaID.Alias = "ISExVacinaID";
                Items.Add(ISExVacinaPeriodicidadeID, ISExVacinaPeriodicidadeID.ID);
                ISExVacinaPeriodicidadeID.Owner = this;
                ISExVacinaPeriodicidadeID.OwnerID = ID;
                ISExVacinaPeriodicidadeID.TableName = Name;
            }

            public static XORMPKField ISExVacinaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExVacina.ISExVacinaID, new Guid("3C18B875-5057-4BD4-8BF9-3D26E28FBCB1"), "ISExVacinaID", "Vacina");
            public static XORMFKField ISExVacinaPeriodicidadeID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExVacina.ISExVacinaPeriodicidadeID, new Guid("25A77149-B186-4E72-8D8A-66EF3E89A77A"), "ISExVacinaPeriodicidadeID", "Periodicidade de Vacina");
        }
        #endregion xISExVacina 


        public xISExItem ISExItem;
        public xISExVacina ISExVacina;
        public static readonly XORMParameterField AnimalTutorID = new XORMParameterField(new Guid("66BC0B1C-3C16-4A61-8337-74DBEEDE3EB3"), "AnimalTutorID", "Animal", XGuid.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField ItemPacote = new XORMParameterField(new Guid("46D70F85-A7A0-4F3C-A566-7DD53CB78F28"), "ItemPacote", "User Data Field", XGuid.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField QuantidadePacote = new XORMParameterField(new Guid("ACE3ED6F-3CFA-4E8A-8554-7B42E9AD1C86"), "QuantidadePacote", "Qtde. Pacote", XInt32.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField TutorID = new XORMParameterField(new Guid("16A71B33-C92A-48D3-9CD5-EDD5EBEAFE13"), "TutorID", "Tutor", XGuid.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField Valor = new XORMParameterField(new Guid("4F5EC8EF-FBDE-4D05-B3FE-2DC5151C9753"), "Valor", "Valor de Tabela", XDecimal.CID, 25, 2, false, gCID, null);

        public VacinaSVC()
        {
            TupleType = typeof(VacinaSVC.XTuple);
            DataSetType = typeof(VacinaSVC.XDataSet);
            ServiceRuleCID = new Guid("4275D42A-A884-4222-958C-3398334E74BD");
            OnlyActives = true;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("4CFECF4E-03CF-42FA-BE87-F16E8106EA21");
            Name = "Vacina";
            Title = "Vacina";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("576B50CF-C666-4BDF-878F-BBADE0A06FBC");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, QuantidadePacote.ID, Valor.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { Valor.ID, QuantidadePacote.ID, ItemPacote.ID, TutorID.ID, AnimalTutorID.ID, xISExItem.Nome.ID, xISExVacina.ISExVacinaID.ID, xISExItem.SYSxEstadoID.ID };
            PKField = xISExVacina.ISExVacinaID.ID;
            ConfigTableID = new Guid("7DEFD389-F7FA-4C80-AD98-8D565ACDE8FC");
            StateField = xISExItem.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("4275D42A-A884-4222-958C-3398334E74BD");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExVacina = new xISExVacina();
            ISExVacina.IsReadOnly = true;
            AddTable(ISExVacina);
            MasterTableID = ISExItem.ID;
            ISExVacina_ISExVacinaID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("BBECCB37-36AA-44D4-B154-8D352F70501E"), "FK_BBECCB3736AA44D4B1548D352F70501E", VacinaSVC.xISExVacina.gCID, xISExVacina.ISExVacinaID.ID, VacinaSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExVacina.ISExVacinaID --> ISExItem.ISExItemID
            AddField(Valor);
            Valor.IsParam = true;
            AddField(QuantidadePacote);
            QuantidadePacote.IsParam = true;
            AddField(ItemPacote);
            ItemPacote.IsParam = true;
            AddField(TutorID);
            TutorID.IsParam = true;
            AddField(AnimalTutorID);
            AnimalTutorID.IsParam = true;
            AnimalTutorID.IsReadOnly = false;
            AnimalTutorID.Length = 0;
            AnimalTutorID.Scale = 0;
            AnimalTutorID.IsDataField = true;
            AnimalTutorID.AllowEmpty = true;
            xISExVacina.ISExVacinaID.IsReadOnly = true;
            xISExVacina.ISExVacinaID.IsDataField = true;
            xISExVacina.ISExVacinaID.AllowEmpty = true;
            ItemPacote.IsReadOnly = false;
            ItemPacote.Length = 0;
            ItemPacote.Scale = 0;
            ItemPacote.IsDataField = true;
            ItemPacote.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            QuantidadePacote.IsReadOnly = false;
            QuantidadePacote.Length = 0;
            QuantidadePacote.Scale = 0;
            QuantidadePacote.IsDataField = true;
            QuantidadePacote.AllowEmpty = true;
            xISExItem.SYSxEstadoID.IsReadOnly = true;
            xISExItem.SYSxEstadoID.IsDataField = true;
            xISExItem.SYSxEstadoID.AllowEmpty = true;
            TutorID.IsReadOnly = false;
            TutorID.Length = 0;
            TutorID.Scale = 0;
            TutorID.IsDataField = true;
            TutorID.AllowEmpty = true;
            Valor.IsReadOnly = false;
            Valor.Length = 25;
            Valor.Scale = 2;
            Valor.IsDataField = true;
            Valor.AllowEmpty = true;
            xISExItem.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField AnimalTutorID => VacinaSVC.AnimalTutorID;
        public XORMField ISExVacinaID => xISExVacina.ISExVacinaID;
        public XORMField ItemPacote => VacinaSVC.ItemPacote;
        public XORMField Nome => xISExItem.Nome;
        public XORMField QuantidadePacote => VacinaSVC.QuantidadePacote;
        public XORMField SYSxEstadoID => xISExItem.SYSxEstadoID;
        public XORMField TutorID => VacinaSVC.TutorID;
        public XORMField Valor => VacinaSVC.Valor;
        }
        #endregion XFields
        #region VacinaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid AnimalTutorID
        {
            get
            {
                return (Guid)Value[VacinaSVC.AnimalTutorID.ID];
            }
            set
            {
                Value[VacinaSVC.AnimalTutorID.ID] = value;
            }
        }
        public Guid? oAnimalTutorID
        {
            get
            {
                GetOldValue(VacinaSVC.AnimalTutorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid ISExVacinaID
        {
            get
            {
                return (Guid)Value[VacinaSVC.xISExVacina.ISExVacinaID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExVacina.ISExVacinaID.ID] = value;
            }
        }
        public Guid? oISExVacinaID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExVacina.ISExVacinaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid ItemPacote
        {
            get
            {
                return (Guid)Value[VacinaSVC.ItemPacote.ID];
            }
            set
            {
                Value[VacinaSVC.ItemPacote.ID] = value;
            }
        }
        public Guid? oItemPacote
        {
            get
            {
                GetOldValue(VacinaSVC.ItemPacote, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VacinaSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 QuantidadePacote
        {
            get
            {
                return (Int32)Value[VacinaSVC.QuantidadePacote.ID];
            }
            set
            {
                Value[VacinaSVC.QuantidadePacote.ID] = value;
            }
        }
        public Int32? oQuantidadePacote
        {
            get
            {
                GetOldValue(VacinaSVC.QuantidadePacote, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[VacinaSVC.xISExItem.SYSxEstadoID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid TutorID
        {
            get
            {
                return (Guid)Value[VacinaSVC.TutorID.ID];
            }
            set
            {
                Value[VacinaSVC.TutorID.ID] = value;
            }
        }
        public Guid? oTutorID
        {
            get
            {
                GetOldValue(VacinaSVC.TutorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[VacinaSVC.Valor.ID];
            }
            set
            {
                Value[VacinaSVC.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(VacinaSVC.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VacinaSVC.XTuple

        #region VacinaSVC.XDataSet

        public class XDataSet : XDataSet<VacinaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VacinaSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid AnimalTutorID => VacinaSVC.AnimalTutorID.ID;
                public Guid ISExVacinaID => VacinaSVC.xISExVacina.ISExVacinaID.ID;
                public Guid ItemPacote => VacinaSVC.ItemPacote.ID;
                public Guid Nome => VacinaSVC.xISExItem.Nome.ID;
                public Guid QuantidadePacote => VacinaSVC.QuantidadePacote.ID;
                public Guid SYSxEstadoID => VacinaSVC.xISExItem.SYSxEstadoID.ID;
                public Guid TutorID => VacinaSVC.TutorID.ID;
                public Guid Valor => VacinaSVC.Valor.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }

        }
        #endregion VacinaSVC.XDataSet
        #if !OnlyDef
        #region VacinaSVC.XRule
        public abstract class XRule : XServiceRule<VacinaSVC.XDataSet, VacinaSVC, VacinaSVC.XTuple>
        {
        }
        #endregion VacinaSVC.XRule

        [Guid(VacinaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VacinaSVC))]
        protected class _Service : Service<VacinaSVC, XDataSet, XTuple>
        {
            public const String sCID = "5B98218A-2BA4-4678-9C3C-2C144C38DA0B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VacinaSVC, XDataSet, XTuple>, XService
             where TModel : VacinaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}