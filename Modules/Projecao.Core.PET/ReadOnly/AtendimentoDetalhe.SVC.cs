//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.PET.DB;

namespace Projecao.Core.PET.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\Projecao.Core.PET.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PET\ReadOnly\AtendimentoDetalhe.dssvc")]
    [XRegister(typeof(AtendimentoDetalheSVC), sCID)]
    public class AtendimentoDetalheSVC : XSVCModel
    {
        #region AtendimentoDetalheFilterFRM

        [XRegister(typeof(AtendimentoDetalheFilterFRM), sCID)]
        public class AtendimentoDetalheFilterFRM : XFRMModel
        {
            public const String sCID = "5B83941D-C7D8-46E8-AE25-3DC61141A0D1";
            public static new readonly Guid gCID = new Guid(sCID);
            static AtendimentoDetalheFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public AtendimentoDetalheFilterFRM()
            {
                ID = gCID;
                Name = "AtendimentoDetalheFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Grupo);
                Grupo.ForceRW = true;
                Grupo.CanInsert = true;
                Grupo.CanUpdate = true;
                Grupo.RowCount = 2;
                Grupo.ColCount = 32;
                Grupo.RowCountSmall = 2;
                Grupo.ColCountSmall = 32;
                Grupo.IsHidden = false;
                Grupo.IsHiddenSmall = false;
                Grupo.AdditionalTitle = "";
                Grupo.Icon = "";
                Grupo.Location = 1;
                Grupo.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Grupo.Operator = XOperator.Like;
                Grupo.ShowSpin = false;
                Grupo.HotkeyChar = "";
                Grupo.JustifyHeight = false;
                Grupo.AllowEmpty = true;
                Grupo.FontColor = "#000000";
                Grupo.FontStyle = XFontStyle.Normal;
                Grupo.ShowFooter = false;
                Grupo.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Grupo.Order = 1;
                Grupo.Scale = -1;
                Grupo.Length = -1;
                Grupo.SearchAction = XSearchAction.Default;
                Grupo.TypeID = XString.CID;
                Grupo.AdditionalFieldsID = new Guid[] { new Guid("279A1810-7566-4F5B-BCCB-1B5C3C4B5CEC"), new Guid("D31CD157-0E45-4F6A-89BC-51D524893AA2") };
                Grupo.AdditionalDataFieldsID = new Guid[] {  };
                Grupo.TargetFilterFieldID = new Guid[] {  };
                Grupo.SourceFilterFieldID = new Guid[] {  };
                Grupo.TargetDisplayFieldID = new Guid[] {  };
                Grupo.SourceDisplayFieldID = new Guid[] {  };
                Grupo.AutoLoad = false;
                Grupo.FilterInative = true;
                Grupo.IsAnswer = false;
                Grupo.AllowMultiSelect = false;
            }
            public XFRMField Grupo = new XFRMField(new Guid("B31ED8AB-A762-4B56-839C-181CC4B8187F"), "Grupo", "Grupo do Detalhe", XString.CID, 2, 32, false, gCID, null, new Guid("D115345E-4322-47E2-AD74-28F73D5C2DED")); // String;
            public static class Fields
            {
                public static XFieldInfo Grupo = new XFieldInfo(new Guid("B31ED8AB-A762-4B56-839C-181CC4B8187F"), "Grupo", "Grupo do Detalhe", typeof(String), false, "");
            }
        }

        #endregion AtendimentoDetalheFilterFRM

        public const String sCID = "336514F7-BA55-4D87-B420-33EBCC77F930";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PETxAtendimentoDetalhe_PETxAtendimentoDetalheID_PETxAtendimentoDetalheItem_PETxAtendimentoDetalheID; // PETxAtendimentoDetalhe.PETxAtendimentoDetalheID --> PETxAtendimentoDetalheItem.PETxAtendimentoDetalheID

        #region xPETxAtendimentoDetalhe 
        public class xPETxAtendimentoDetalhe : XSVCTable
        {

            public static Guid gCID => new Guid("0FE6A802-573D-4EFD-9582-071644D2CD24");

            public xPETxAtendimentoDetalhe()
            {
                Name = "PETxAtendimentoDetalhe";
                Alias = "PETxAtendimentoDetalhe";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhe.gCID;

                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
                Items.Add(PETxAtendimentoDetalheID, PETxAtendimentoDetalheID.ID);
                PETxAtendimentoDetalheID.Owner = this;
                PETxAtendimentoDetalheID.OwnerID = ID;
                PETxAtendimentoDetalheID.TableName = Name;
            }

            public static XORMFaceField Grupo = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhe.Grupo, new Guid("D115345E-4322-47E2-AD74-28F73D5C2DED"), "Grupo", "Grupo do Detalhe");
            public static XORMPKField PETxAtendimentoDetalheID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalhe.PETxAtendimentoDetalheID, new Guid("3732734B-811F-4F27-912D-7997F8A1581F"), "PETxAtendimentoDetalheID", "Detalhamento do Atendimento");
        }
        #endregion xPETxAtendimentoDetalhe 


        #region xPETxAtendimentoDetalheItem 
        public class xPETxAtendimentoDetalheItem : XSVCTable
        {

            public static Guid gCID => new Guid("70B21FE3-3124-4139-894D-ED1F1D41F48C");

            public xPETxAtendimentoDetalheItem()
            {
                Name = "PETxAtendimentoDetalheItem";
                Alias = "PETxAtendimentoDetalheItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.gCID;

                Items.Add(Detalhe, Detalhe.ID);
                Detalhe.Owner = this;
                Detalhe.OwnerID = ID;
                Detalhe.TableName = Name;
                Detalhe.Alias = "Detalhe";
                Items.Add(PETxAtendimentoDetalheItemID, PETxAtendimentoDetalheItemID.ID);
                PETxAtendimentoDetalheItemID.Owner = this;
                PETxAtendimentoDetalheItemID.OwnerID = ID;
                PETxAtendimentoDetalheItemID.TableName = Name;
                PETxAtendimentoDetalheItemID.Alias = "PETxAtendimentoDetalheItemID";
                Items.Add(PETxAtendimentoDetalheID, PETxAtendimentoDetalheID.ID);
                PETxAtendimentoDetalheID.Owner = this;
                PETxAtendimentoDetalheID.OwnerID = ID;
                PETxAtendimentoDetalheID.TableName = Name;
            }

            public static XORMFaceField Detalhe = new XORMFaceField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.Detalhe, new Guid("A02998BF-5490-4FD9-ACAB-F238A7CF53B8"), "Detalhe", "Detalhe");
            public static XORMPKField PETxAtendimentoDetalheItemID = new XORMPKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID, new Guid("60225178-8E75-453E-9C55-53C36973BAC4"), "PETxAtendimentoDetalheItemID", "Item do Detalhamento");
            public static XORMFKField PETxAtendimentoDetalheID = new XORMFKField(global::Projecao.Core.PET.DB.PETx.PETxAtendimentoDetalheItem.PETxAtendimentoDetalheID, new Guid("68CD1604-515D-4244-8FF6-B0A85AAE65A3"), "PETxAtendimentoDetalheID", "Detalhamento do Atendimento");
        }
        #endregion xPETxAtendimentoDetalheItem 


        public xPETxAtendimentoDetalhe PETxAtendimentoDetalhe;
        public xPETxAtendimentoDetalheItem PETxAtendimentoDetalheItem;

        public AtendimentoDetalheSVC()
        {
            TupleType = typeof(AtendimentoDetalheSVC.XTuple);
            DataSetType = typeof(AtendimentoDetalheSVC.XDataSet);
            ServiceRuleCID = new Guid("3CC8420A-60E7-4F6B-A19B-D4D695E9B568");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("336514F7-BA55-4D87-B420-33EBCC77F930");
            Name = "AtendimentoDetalhe";
            Title = "Detalhes do Atendimento";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("E3D05D28-7014-4B59-9CB6-C283BEEFDB82");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("5B83941D-C7D8-46E8-AE25-3DC61141A0D1");
            IsReadOnly = true;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.PET.js" };
            GridFields = new Guid[] { xPETxAtendimentoDetalhe.Grupo.ID, xPETxAtendimentoDetalheItem.Detalhe.ID };
            OrderByFields = new Guid[] { xPETxAtendimentoDetalhe.Grupo.ID, xPETxAtendimentoDetalheItem.Detalhe.ID };
            DataSetFields = new Guid[] { xPETxAtendimentoDetalhe.Grupo.ID, xPETxAtendimentoDetalheItem.Detalhe.ID, xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.ID };
            PKField = xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.ID;
            ConfigTableID = new Guid("362C37C3-D315-43A4-9563-7D6A9313C67E");
            MasterRuleCID = new Guid("3CC8420A-60E7-4F6B-A19B-D4D695E9B568");
            PETxAtendimentoDetalhe = new xPETxAtendimentoDetalhe();
            PETxAtendimentoDetalhe.IsReadOnly = true;
            AddTable(PETxAtendimentoDetalhe);
            PETxAtendimentoDetalheItem = new xPETxAtendimentoDetalheItem();
            PETxAtendimentoDetalheItem.IsReadOnly = true;
            AddTable(PETxAtendimentoDetalheItem);
            MasterTableID = PETxAtendimentoDetalhe.ID;
            PETxAtendimentoDetalhe_PETxAtendimentoDetalheID_PETxAtendimentoDetalheItem_PETxAtendimentoDetalheID = AddReference(new XSVCReference(new Guid("0A544EDB-1063-4A63-9555-37E4DD1CAF14"), "FK_0A544EDB10634A63955537E4DD1CAF14", AtendimentoDetalheSVC.xPETxAtendimentoDetalhe.gCID, xPETxAtendimentoDetalhe.PETxAtendimentoDetalheID.ID, AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.gCID, xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheID.ID, XJoinType.Inner)); // PETxAtendimentoDetalhe.PETxAtendimentoDetalheID --> PETxAtendimentoDetalheItem.PETxAtendimentoDetalheID
            xPETxAtendimentoDetalheItem.Detalhe.IsReadOnly = true;
            xPETxAtendimentoDetalheItem.Detalhe.OrderType = XOrderType.Asc;
            xPETxAtendimentoDetalheItem.Detalhe.Length = 30;
            xPETxAtendimentoDetalheItem.Detalhe.IsDataField = true;
            xPETxAtendimentoDetalheItem.Detalhe.FilterUse = true;
            xPETxAtendimentoDetalheItem.Detalhe.AllowEmpty = true;
            xPETxAtendimentoDetalhe.Grupo.IsReadOnly = true;
            xPETxAtendimentoDetalhe.Grupo.OrderType = XOrderType.Asc;
            xPETxAtendimentoDetalhe.Grupo.Length = 35;
            xPETxAtendimentoDetalhe.Grupo.IsDataField = true;
            xPETxAtendimentoDetalhe.Grupo.FilterUse = true;
            xPETxAtendimentoDetalhe.Grupo.AllowEmpty = true;
            xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.IsReadOnly = true;
            xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.IsDataField = true;
            xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Detalhe => xPETxAtendimentoDetalheItem.Detalhe;
        public XORMField Grupo => xPETxAtendimentoDetalhe.Grupo;
        public XORMField PETxAtendimentoDetalheItemID => xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID;
        }
        #endregion XFields
        #region AtendimentoDetalheSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Detalhe
        {
            get
            {
                return (String)Value[AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe.ID];
            }
            set
            {
                Value[AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe.ID] = value;
            }
        }
        public String? oDetalhe
        {
            get
            {
                GetOldValue(AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Grupo
        {
            get
            {
                return (String)Value[AtendimentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo.ID];
            }
            set
            {
                Value[AtendimentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(AtendimentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 PETxAtendimentoDetalheItemID
        {
            get
            {
                return (Int16)Value[AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.ID];
            }
            set
            {
                Value[AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.ID] = value;
            }
        }
        public Int16? oPETxAtendimentoDetalheItemID
        {
            get
            {
                GetOldValue(AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AtendimentoDetalheSVC.XTuple

        #region AtendimentoDetalheSVC.XDataSet

        public class XDataSet : XDataSet<AtendimentoDetalheSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AtendimentoDetalheSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AtendimentoDetalheSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Detalhe => AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.Detalhe.ID;
                public Guid Grupo => AtendimentoDetalheSVC.xPETxAtendimentoDetalhe.Grupo.ID;
                public Guid PETxAtendimentoDetalheItemID => AtendimentoDetalheSVC.xPETxAtendimentoDetalheItem.PETxAtendimentoDetalheItemID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AtendimentoDetalheSVC.XDataSet);
            }

        }
        #endregion AtendimentoDetalheSVC.XDataSet
        #if !OnlyDef
        #region AtendimentoDetalheSVC.XRule
        public abstract class XRule : XServiceRule<AtendimentoDetalheSVC.XDataSet, AtendimentoDetalheSVC, AtendimentoDetalheSVC.XTuple>
        {
        }
        #endregion AtendimentoDetalheSVC.XRule

        [Guid(AtendimentoDetalheSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AtendimentoDetalheSVC))]
        protected class _Service : Service<AtendimentoDetalheSVC, XDataSet, XTuple>
        {
            public const String sCID = "AD5F745B-3234-4CB1-AC22-4C2F4C516510";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AtendimentoDetalheSVC, XDataSet, XTuple>, XService
             where TModel : AtendimentoDetalheSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}