//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.AnimalEvento
{
    [XRegister(typeof(AnimalSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\AnimalEvento\Animal.dssvc")]
    public class AnimalSVC : XSVCModel
    {
        public const String sCID = "F69E37B0-2EFB-4385-AA3D-0EB5F23BF0A2";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID; // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID; // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
        public static XSVCReference PCRxAnimalFase_PCRxAnimalFaseID_PCRxAnimal_PCRxAnimalFaseID; // PCRxAnimalFase.PCRxAnimalFaseID --> PCRxAnimal.PCRxAnimalFaseID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("76A25B03-471B-41AC-AEF5-53339CB494C3");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                ISExLinhaID.Alias = "ISExLinhaID";
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                ISExTabelaID.Alias = "ISExTabelaID";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                ISExFabricanteID.Alias = "ISExFabricanteID";
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                ISExMarcaID.Alias = "ISExMarcaID";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                ISExGrupoID.Alias = "ISExGrupoID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("8C131EC0-1CEC-4A83-90EC-89F27CD22523"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("13597F4E-ECB8-4C37-A4C0-F54192CC3199"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("CC4264D8-92F2-4B44-B4FB-E28A42B06596"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("ED11B87C-6BAC-4AD2-BB13-73E5D3D71623"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("C4477DDC-389D-47D4-9F89-7FAB3D87D10F"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("67FB1B8A-954D-4DEB-A02B-62210646F270"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("3A88B663-7383-439B-9F25-049B2FFD7EA2"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("7580D699-F383-43D4-A29F-C356A334710A"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("E7B39805-565F-43FA-84C0-03EC5AC77865"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xPCRxRaca 
        public class xPCRxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("A2BA336A-AEC4-4296-9550-126471E209BE");

            public xPCRxRaca()
            {
                Name = "PCRxRaca";
                Alias = "PCRxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;

                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PCRxRacaID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.PCRxRacaID, new Guid("7C9EF0A1-1A22-47E9-93B5-E27ED18EABE8"), "PCRxRacaID", "Raça");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.Raca, new Guid("FA40811D-E61B-4DFF-8983-AD070C8F3BAA"), "Raca", "Raça");
        }
        #endregion xPCRxRaca 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("A377CE0B-7BCC-4886-95E7-7DAD8F357AE9");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                PCRxRacaID.Alias = "PCRxRacaID";
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                PCRxAnimalFaseID.Alias = "PCRxAnimalFaseID";
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                PCRxAnimalEstadoID.Alias = "PCRxAnimalEstadoID";
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                NumeroPartos.Alias = "NumeroPartos";
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                PCRxEventoReprodutivoID.Alias = "PCRxEventoReprodutivoID";
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                PCRxAnimalLoteID.Alias = "PCRxAnimalLoteID";
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                PCRxIATFFaseID.Alias = "PCRxIATFFaseID";
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("20C7AA09-BB19-4D29-9A4A-D9B7BF11F822"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("55CC0885-138E-4412-B8F2-C4B48166D611"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("7BC6FAA0-718F-4493-A64E-6F170466E549"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("09C2C5E2-CAC8-4D2A-B7B4-B8830B030AB9"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("0445900B-0520-40DF-B7B4-D9FE92703155"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("6DA28394-09B4-425A-B69E-66BE9ED39BC7"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("FB8F4917-693D-4081-9348-79278B24144A"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("79E88171-FB1A-464E-A405-05C89F17C43F"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("990F10A7-C258-4987-87FE-4E74A5D1EAA6"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("8772877F-DE6B-46E6-A598-19FE34E1FFC0"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("8BC35283-30A4-46C4-B9C1-7006373F8C6B"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xPCRxAnimalFase 
        public class xPCRxAnimalFase : XSVCTable
        {

            public static Guid gCID => new Guid("D249619F-A465-49BA-9E89-AF6FC0562508");

            public xPCRxAnimalFase()
            {
                Name = "PCRxAnimalFase";
                Alias = "PCRxAnimalFase";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.gCID;

                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Fase, Fase.ID);
                Fase.Owner = this;
                Fase.OwnerID = ID;
                Fase.TableName = Name;
                Fase.Alias = "Fase";
            }

            public static XORMPKField PCRxAnimalFaseID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.PCRxAnimalFaseID, new Guid("8266282C-B0FA-4569-BFDA-4A4332A9B0D3"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMFaceField Fase = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.Fase, new Guid("40D22DD8-7924-4865-92E9-70662670A43A"), "Fase", "Fase");
        }
        #endregion xPCRxAnimalFase 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("DCAB9741-46F5-4E91-86D1-7C24B3B73945");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                PCRxMaeID.Alias = "PCRxMaeID";
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
                PCRxPaiID.Alias = "PCRxPaiID";
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("C1C8DAA5-5C80-4735-84BD-E295DD2421B6"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("1184DDE5-B9D7-4597-B161-522B483FA4FB"), "PCRxMaeID", "Animal");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("B11FE17D-0E1E-4151-A65A-8C5A9D39F3E1"), "PCRxPaiID", "Animal");
        }
        #endregion xPCRxAnimalFiliacao 


        public xISExItem ISExItem;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalFase PCRxAnimalFase;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;
        public xPCRxRaca PCRxRaca;

        public AnimalSVC()
        {
            TupleType = typeof(AnimalSVC.XTuple);
            DataSetType = typeof(AnimalSVC.XDataSet);
            ServiceRuleCID = new Guid("C5C2F72C-80F4-45EA-B78B-8FCF60BD5FBC");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F69E37B0-2EFB-4385-AA3D-0EB5F23BF0A2");
            Name = "Animal";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            DataSetFields = new Guid[] { xPCRxAnimal.PCRxAnimalID.ID, xPCRxAnimal.ERPxGeneroID.ID, xPCRxAnimal.PCRxRacaID.ID, xPCRxAnimal.PCRxAnimalFaseID.ID, xPCRxAnimal.Nascimento.ID, xPCRxAnimal.SYSxEmpresaID.ID, xPCRxAnimal.PCRxAnimalEstadoID.ID, xPCRxAnimal.NumeroPartos.ID, xISExItem.Nome.ID, xPCRxRaca.Raca.ID, xPCRxAnimalFase.Fase.ID, xPCRxAnimal.PCRxAnimalLoteID.ID, xPCRxAnimal.PCRxEventoReprodutivoID.ID, xPCRxAnimal.PCRxIATFFaseID.ID, xPCRxAnimalFiliacao.PCRxMaeID.ID, xPCRxAnimalFiliacao.PCRxPaiID.ID, xISExItem.ProdutoID.ID, xISExItem.SYSxEstadoID.ID, xISExItem.ISExGrupoID.ID, xISExItem.ISExMarcaID.ID, xISExItem.ISExFabricanteID.ID, xISExItem.ISExTabelaID.ID, xISExItem.ISExLinhaID.ID };
            PKField = xPCRxAnimal.PCRxAnimalID.ID;
            ConfigTableID = new Guid("01BC341A-0142-4C60-87A7-9228AD3A73E9");
            StateField = xISExItem.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("C5C2F72C-80F4-45EA-B78B-8FCF60BD5FBC");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = false;
            AddTable(ISExItem);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = false;
            AddTable(PCRxAnimal);
            PCRxAnimalFase = new xPCRxAnimalFase();
            PCRxAnimalFase.IsReadOnly = true;
            AddTable(PCRxAnimalFase);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = true;
            AddTable(PCRxAnimalFiliacao);
            PCRxRaca = new xPCRxRaca();
            PCRxRaca.IsReadOnly = true;
            AddTable(PCRxRaca);
            MasterTableID = PCRxAnimal.ID;
            ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("3068ED84-C748-4C14-ACD4-8403EBBC9CA2"), "FK_3068ED84C7484C14ACD48403EBBC9CA2", AnimalSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, AnimalSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
            PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("67DB0C50-4815-4817-9AF2-893133FCC011"), "FK_67DB0C50481548179AF2893133FCC011", AnimalSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, AnimalSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
            PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID = AddReference(new XSVCReference(new Guid("C6915DBD-55B9-4888-8944-F6D9460A21C6"), "FK_C6915DBD55B948888944F6D9460A21C6", AnimalSVC.xPCRxRaca.gCID, xPCRxRaca.PCRxRacaID.ID, AnimalSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxRacaID.ID, XJoinType.Inner)); // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
            PCRxAnimalFase_PCRxAnimalFaseID_PCRxAnimal_PCRxAnimalFaseID = AddReference(new XSVCReference(new Guid("E8093B51-7899-4B2E-B934-4EE48E97FDC7"), "FK_E8093B5178994B2EB9344EE48E97FDC7", AnimalSVC.xPCRxAnimalFase.gCID, xPCRxAnimalFase.PCRxAnimalFaseID.ID, AnimalSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalFaseID.ID, XJoinType.Inner)); // PCRxAnimalFase.PCRxAnimalFaseID --> PCRxAnimal.PCRxAnimalFaseID
            xPCRxAnimal.ERPxGeneroID.IsDataField = true;
            xPCRxAnimal.ERPxGeneroID.AllowEmpty = true;
            xPCRxAnimalFase.Fase.IsReadOnly = true;
            xPCRxAnimalFase.Fase.Length = 25;
            xPCRxAnimalFase.Fase.IsDataField = true;
            xPCRxAnimalFase.Fase.AllowEmpty = true;
            xISExItem.ISExFabricanteID.IsDataField = true;
            xISExItem.ISExFabricanteID.AllowEmpty = true;
            xISExItem.ISExGrupoID.IsDataField = true;
            xISExItem.ISExGrupoID.AllowEmpty = true;
            xISExItem.ISExLinhaID.IsDataField = true;
            xISExItem.ISExLinhaID.AllowEmpty = true;
            xISExItem.ISExMarcaID.IsDataField = true;
            xISExItem.ISExMarcaID.AllowEmpty = true;
            xISExItem.ISExTabelaID.IsDataField = true;
            xISExItem.ISExTabelaID.AllowEmpty = true;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xPCRxAnimal.NumeroPartos.IsDataField = true;
            xPCRxAnimal.NumeroPartos.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalEstadoID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalEstadoID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalFaseID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalFaseID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalID.GeneratePK = true;
            xPCRxAnimal.PCRxAnimalID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalLoteID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalLoteID.AllowEmpty = true;
            xPCRxAnimal.PCRxEventoReprodutivoID.IsDataField = true;
            xPCRxAnimal.PCRxEventoReprodutivoID.AllowEmpty = true;
            xPCRxAnimal.PCRxIATFFaseID.IsDataField = true;
            xPCRxAnimal.PCRxIATFFaseID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsReadOnly = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxMaeID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxPaiID.IsReadOnly = true;
            xPCRxAnimalFiliacao.PCRxPaiID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxPaiID.AllowEmpty = true;
            xPCRxAnimal.PCRxRacaID.IsDataField = true;
            xPCRxAnimal.PCRxRacaID.AllowEmpty = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xPCRxRaca.Raca.IsReadOnly = true;
            xPCRxRaca.Raca.Length = 25;
            xPCRxRaca.Raca.IsDataField = true;
            xPCRxRaca.Raca.AllowEmpty = true;
            xPCRxAnimal.SYSxEmpresaID.IsDataField = true;
            xPCRxAnimal.SYSxEmpresaID.AllowEmpty = true;
            xISExItem.SYSxEstadoID.IsDataField = true;
            xISExItem.SYSxEstadoID.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xISExItem.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField ERPxGeneroID => xPCRxAnimal.ERPxGeneroID;
        public XORMField Fase => xPCRxAnimalFase.Fase;
        public XORMField ISExFabricanteID => xISExItem.ISExFabricanteID;
        public XORMField ISExGrupoID => xISExItem.ISExGrupoID;
        public XORMField ISExLinhaID => xISExItem.ISExLinhaID;
        public XORMField ISExMarcaID => xISExItem.ISExMarcaID;
        public XORMField ISExTabelaID => xISExItem.ISExTabelaID;
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField NumeroPartos => xPCRxAnimal.NumeroPartos;
        public XORMField PCRxAnimalEstadoID => xPCRxAnimal.PCRxAnimalEstadoID;
        public XORMField PCRxAnimalFaseID => xPCRxAnimal.PCRxAnimalFaseID;
        public XORMField PCRxAnimalID => xPCRxAnimal.PCRxAnimalID;
        public XORMField PCRxAnimalLoteID => xPCRxAnimal.PCRxAnimalLoteID;
        public XORMField PCRxEventoReprodutivoID => xPCRxAnimal.PCRxEventoReprodutivoID;
        public XORMField PCRxIATFFaseID => xPCRxAnimal.PCRxIATFFaseID;
        public XORMField PCRxMaeID => xPCRxAnimalFiliacao.PCRxMaeID;
        public XORMField PCRxPaiID => xPCRxAnimalFiliacao.PCRxPaiID;
        public XORMField PCRxRacaID => xPCRxAnimal.PCRxRacaID;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Raca => xPCRxRaca.Raca;
        public XORMField SYSxEmpresaID => xPCRxAnimal.SYSxEmpresaID;
        public XORMField SYSxEstadoID => xISExItem.SYSxEstadoID;
        }
        #endregion XFields
        #region AnimalSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[AnimalSVC.xPCRxAnimal.ERPxGeneroID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Fase
        {
            get
            {
                return (String)Value[AnimalSVC.xPCRxAnimalFase.Fase.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimalFase.Fase.ID] = value;
            }
        }
        public String? oFase
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimalFase.Fase, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExFabricanteID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xISExItem.ISExFabricanteID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.ISExFabricanteID.ID] = value;
            }
        }
        public Guid? oISExFabricanteID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.ISExFabricanteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExGrupoID
        {
            get
            {
                return (Int32)Value[AnimalSVC.xISExItem.ISExGrupoID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.ISExGrupoID.ID] = value;
            }
        }
        public Int32? oISExGrupoID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.ISExGrupoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExLinhaID
        {
            get
            {
                return (Int32)Value[AnimalSVC.xISExItem.ISExLinhaID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.ISExLinhaID.ID] = value;
            }
        }
        public Int32? oISExLinhaID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.ISExLinhaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExMarcaID
        {
            get
            {
                return (Int32)Value[AnimalSVC.xISExItem.ISExMarcaID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.ISExMarcaID.ID] = value;
            }
        }
        public Int32? oISExMarcaID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.ISExMarcaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExTabelaID
        {
            get
            {
                return (Int32)Value[AnimalSVC.xISExItem.ISExTabelaID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.ISExTabelaID.ID] = value;
            }
        }
        public Int32? oISExTabelaID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.ISExTabelaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[AnimalSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[AnimalSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 NumeroPartos
        {
            get
            {
                return (Int32)Value[AnimalSVC.xPCRxAnimal.NumeroPartos.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.NumeroPartos.ID] = value;
            }
        }
        public Int32? oNumeroPartos
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.NumeroPartos, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 PCRxAnimalEstadoID
        {
            get
            {
                return (Int16)Value[AnimalSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalEstadoID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxAnimalEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 PCRxAnimalFaseID
        {
            get
            {
                return (Int16)Value[AnimalSVC.xPCRxAnimal.PCRxAnimalFaseID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxAnimalFaseID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalFaseID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxAnimalFaseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimal.PCRxAnimalID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxAnimalLoteID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimal.PCRxAnimalLoteID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxAnimalLoteID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalLoteID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxAnimalLoteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxEventoReprodutivoID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID] = value;
            }
        }
        public Guid? oPCRxEventoReprodutivoID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxEventoReprodutivoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxIATFFaseID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimal.PCRxIATFFaseID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxIATFFaseID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxIATFFaseID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxMaeID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID] = value;
            }
        }
        public Guid? oPCRxMaeID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimalFiliacao.PCRxMaeID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxPaiID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID] = value;
            }
        }
        public Guid? oPCRxPaiID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimalFiliacao.PCRxPaiID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxRacaID
        {
            get
            {
                return (Int16)Value[AnimalSVC.xPCRxAnimal.PCRxRacaID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.PCRxRacaID.ID] = value;
            }
        }
        public Int16? oPCRxRacaID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.PCRxRacaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[AnimalSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[AnimalSVC.xPCRxRaca.Raca.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[AnimalSVC.xPCRxAnimal.SYSxEmpresaID.ID];
            }
            set
            {
                Value[AnimalSVC.xPCRxAnimal.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(AnimalSVC.xPCRxAnimal.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[AnimalSVC.xISExItem.SYSxEstadoID.ID];
            }
            set
            {
                Value[AnimalSVC.xISExItem.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(AnimalSVC.xISExItem.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AnimalSVC.XTuple

        #region AnimalSVC.XRule
        public abstract class XRule : XServiceRule<AnimalSVC.XDataSet, AnimalSVC, AnimalSVC.XTuple>
        {
        }
        #endregion AnimalSVC.XRule

        #region AnimalSVC.XDataSet

        public class XDataSet : XDataSet<AnimalSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AnimalSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AnimalSVC.XTuple> where T : XDataTuple
        {

            public Guid ERPxGeneroID => AnimalSVC.xPCRxAnimal.ERPxGeneroID.ID;
            public Guid Fase => AnimalSVC.xPCRxAnimalFase.Fase.ID;
            public Guid ISExFabricanteID => AnimalSVC.xISExItem.ISExFabricanteID.ID;
            public Guid ISExGrupoID => AnimalSVC.xISExItem.ISExGrupoID.ID;
            public Guid ISExLinhaID => AnimalSVC.xISExItem.ISExLinhaID.ID;
            public Guid ISExMarcaID => AnimalSVC.xISExItem.ISExMarcaID.ID;
            public Guid ISExTabelaID => AnimalSVC.xISExItem.ISExTabelaID.ID;
            public Guid Nascimento => AnimalSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => AnimalSVC.xISExItem.Nome.ID;
            public Guid NumeroPartos => AnimalSVC.xPCRxAnimal.NumeroPartos.ID;
            public Guid PCRxAnimalEstadoID => AnimalSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID;
            public Guid PCRxAnimalFaseID => AnimalSVC.xPCRxAnimal.PCRxAnimalFaseID.ID;
            public Guid PCRxAnimalID => AnimalSVC.xPCRxAnimal.PCRxAnimalID.ID;
            public Guid PCRxAnimalLoteID => AnimalSVC.xPCRxAnimal.PCRxAnimalLoteID.ID;
            public Guid PCRxEventoReprodutivoID => AnimalSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID;
            public Guid PCRxIATFFaseID => AnimalSVC.xPCRxAnimal.PCRxIATFFaseID.ID;
            public Guid PCRxMaeID => AnimalSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID;
            public Guid PCRxPaiID => AnimalSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID;
            public Guid PCRxRacaID => AnimalSVC.xPCRxAnimal.PCRxRacaID.ID;
            public Guid ProdutoID => AnimalSVC.xISExItem.ProdutoID.ID;
            public Guid Raca => AnimalSVC.xPCRxRaca.Raca.ID;
            public Guid SYSxEmpresaID => AnimalSVC.xPCRxAnimal.SYSxEmpresaID.ID;
            public Guid SYSxEstadoID => AnimalSVC.xISExItem.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(AnimalSVC.XDataSet);
            }

        }
        #endregion AnimalSVC.XDataSet

        [Guid(AnimalSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AnimalSVC))]
        protected class _Service : Service<AnimalSVC, XDataSet, XTuple>
        {
            public const String sCID = "C9F8357F-C4B8-455A-AC29-21C667FA19EA";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AnimalSVC, XDataSet, XTuple>, XService
             where TModel : AnimalSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}