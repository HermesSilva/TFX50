//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.AnimalEvento
{
    [XRegister(typeof(AnimalEventoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\AnimalEvento\AnimalEvento.dssvc")]
    public class AnimalEventoSVC : XSVCModel
    {
        public const String sCID = "BF0EB37A-AA62-4133-9DB3-094C2B66249A";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxAnimalEvento_PCRxAnimalEventoID_PCRxEvento_PCRxEventoID; // PCRxAnimalEvento.PCRxAnimalEventoID --> PCRxEvento.PCRxEventoID

        #region xPCRxEvento 
        public class xPCRxEvento : XSVCTable
        {

            public static Guid gCID => new Guid("7977FF4F-BBAF-44DE-8255-0CF64A840BFA");

            public xPCRxEvento()
            {
                Name = "PCRxEvento";
                Alias = "PCRxEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.gCID;

                Items.Add(PCRxEventoID, PCRxEventoID.ID);
                PCRxEventoID.Owner = this;
                PCRxEventoID.OwnerID = ID;
                PCRxEventoID.TableName = Name;
                PCRxEventoID.Alias = "PCRxEventoID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Observacao.Alias = "Observacao";
                Items.Add(PCRxEventoTipoID, PCRxEventoTipoID.ID);
                PCRxEventoTipoID.Owner = this;
                PCRxEventoTipoID.OwnerID = ID;
                PCRxEventoTipoID.TableName = Name;
                PCRxEventoTipoID.Alias = "PCRxEventoTipoID";
                Items.Add(NTRxMobilePontoDestaqueID, NTRxMobilePontoDestaqueID.ID);
                NTRxMobilePontoDestaqueID.Owner = this;
                NTRxMobilePontoDestaqueID.OwnerID = ID;
                NTRxMobilePontoDestaqueID.TableName = Name;
                NTRxMobilePontoDestaqueID.Alias = "NTRxMobilePontoDestaqueID";
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Latitude.Alias = "Latitude";
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Longitude.Alias = "Longitude";
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
                CTLxUsuarioID.Alias = "CTLxUsuarioID";
            }

            public static XORMFaceField PCRxEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoID, new Guid("815A44A2-EB6B-4145-A2C1-C0AF7F6E65D2"), "PCRxEventoID", "Evento");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Data, new Guid("BC594B6A-922B-4E1A-BA8A-9C02FC665325"), "Data", "Data");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Observacao, new Guid("1FD93265-A108-47EB-AAC2-2E0E6412F7EC"), "Observacao", "Observação");
            public static XORMFKField PCRxEventoTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoTipoID, new Guid("A4076B23-BBE9-4D7A-A3CB-655000FFBB74"), "PCRxEventoTipoID", "Tipo de Evento");
            public static XORMFKField NTRxMobilePontoDestaqueID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.NTRxMobilePontoDestaqueID, new Guid("075EC98B-2676-4480-826B-DF0FDAC3049C"), "NTRxMobilePontoDestaqueID", "Ponto de Destaque");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Latitude, new Guid("770D9AD7-F3B0-4D5D-94AC-78F37B4DE729"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Longitude, new Guid("70D46930-2A23-4522-B2C1-E46D7940651A"), "Longitude", "Longitude");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.CTLxUsuarioID, new Guid("C8024A7B-37C4-4F58-8A27-3A9904A8240E"), "CTLxUsuarioID", "Usuário");
        }
        #endregion xPCRxEvento 


        #region xPCRxAnimalEvento 
        public class xPCRxAnimalEvento : XSVCTable
        {

            public static Guid gCID => new Guid("CA0DE49F-29D0-4F57-AE35-81C00A56CC1B");

            public xPCRxAnimalEvento()
            {
                Name = "PCRxAnimalEvento";
                Alias = "PCRxAnimalEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.gCID;

                Items.Add(PCRxAnimalEventoID, PCRxAnimalEventoID.ID);
                PCRxAnimalEventoID.Owner = this;
                PCRxAnimalEventoID.OwnerID = ID;
                PCRxAnimalEventoID.TableName = Name;
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                PCRxReprodutorID.Alias = "PCRxReprodutorID";
                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                PCRxAnimalLoteID.Alias = "PCRxAnimalLoteID";
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                PCRxIATFFaseID.Alias = "PCRxIATFFaseID";
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                PCRxAnimalEstadoID.Alias = "PCRxAnimalEstadoID";
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                PCRxIATFFaseTipoID.Alias = "PCRxIATFFaseTipoID";
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
            }

            public static XORMFaceField PCRxAnimalEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalEventoID, new Guid("B61D31B0-F20B-488F-B253-93262E8AAB43"), "PCRxAnimalEventoID", "Eventos de Animais");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.SYSxPessoaID, new Guid("6C5ABB12-6B14-46F5-8F09-587BD9164CCF"), "SYSxPessoaID", "Responsável");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.ISExItemID, new Guid("48558EBA-2DD0-4FAC-B6CA-7AEBEE45E33C"), "ISExItemID", "Item");
            public static XORMFKField PCRxReprodutorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxReprodutorID, new Guid("CCB6AD4B-327D-41B8-81B6-EACCED82C0BE"), "PCRxReprodutorID", "Reprodutor");
            public static XORMFKField PCRxAnimalID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalID, new Guid("40B586D1-87E5-4EE2-B7D2-E2AE1711B2C5"), "PCRxAnimalID", "Animal");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.Valor, new Guid("11E1F15D-FB00-4E83-BCAA-CBEC77CB6558"), "Valor", "Valor");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalLoteID, new Guid("8C591437-7E30-41FB-8C35-0D82B3C3C814"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxIATFFaseID, new Guid("CF2263F6-0A80-46B7-B755-7762C76D177D"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalEstadoID, new Guid("CCDB2A27-E5DB-4BF4-ABFA-90DB137FF660"), "PCRxAnimalEstadoID", "Estado");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxIATFFaseTipoID, new Guid("F5615F0E-09E7-4027-814D-712D2E8BE850"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.Grupo, new Guid("658CB861-4559-4BC4-9F7F-A59323DE692F"), "Grupo", "Grupo");
        }
        #endregion xPCRxAnimalEvento 


        public xPCRxAnimalEvento PCRxAnimalEvento;
        public xPCRxEvento PCRxEvento;

        public AnimalEventoSVC()
        {
            TupleType = typeof(AnimalEventoSVC.XTuple);
            DataSetType = typeof(AnimalEventoSVC.XDataSet);
            ServiceRuleCID = new Guid("53AFBBAB-6539-45BA-90C1-2F12C775FDCD");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("BF0EB37A-AA62-4133-9DB3-094C2B66249A");
            Name = "AnimalEvento";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            OrderByFields = new Guid[] { xPCRxEvento.Data.ID };
            DataSetFields = new Guid[] { xPCRxEvento.PCRxEventoID.ID, xPCRxEvento.Data.ID, xPCRxEvento.Observacao.ID, xPCRxEvento.PCRxEventoTipoID.ID, xPCRxEvento.NTRxMobilePontoDestaqueID.ID, xPCRxEvento.Latitude.ID, xPCRxEvento.Longitude.ID, xPCRxAnimalEvento.SYSxPessoaID.ID, xPCRxAnimalEvento.ISExItemID.ID, xPCRxAnimalEvento.PCRxReprodutorID.ID, xPCRxAnimalEvento.PCRxAnimalID.ID, xPCRxAnimalEvento.Valor.ID, xPCRxAnimalEvento.PCRxAnimalLoteID.ID, xPCRxAnimalEvento.PCRxIATFFaseID.ID, xPCRxAnimalEvento.PCRxAnimalEstadoID.ID, xPCRxAnimalEvento.PCRxIATFFaseTipoID.ID, xPCRxEvento.CTLxUsuarioID.ID, xPCRxAnimalEvento.Grupo.ID };
            PKField = xPCRxEvento.PCRxEventoID.ID;
            ConfigTableID = new Guid("9C81F109-A48B-4008-92F3-F5E06E46099F");
            MasterRuleCID = new Guid("53AFBBAB-6539-45BA-90C1-2F12C775FDCD");
            PCRxAnimalEvento = new xPCRxAnimalEvento();
            PCRxAnimalEvento.IsReadOnly = false;
            AddTable(PCRxAnimalEvento);
            PCRxEvento = new xPCRxEvento();
            PCRxEvento.IsReadOnly = false;
            AddTable(PCRxEvento);
            MasterTableID = PCRxEvento.ID;
            PCRxAnimalEvento_PCRxAnimalEventoID_PCRxEvento_PCRxEventoID = AddReference(new XSVCReference(new Guid("F697AFB1-3C80-4B12-B96C-F194D50393EF"), "FK_F697AFB13C804B12B96CF194D50393EF", AnimalEventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxAnimalEventoID.ID, AnimalEventoSVC.xPCRxEvento.gCID, xPCRxEvento.PCRxEventoID.ID, XJoinType.Inner)); // PCRxAnimalEvento.PCRxAnimalEventoID --> PCRxEvento.PCRxEventoID
            xPCRxEvento.CTLxUsuarioID.IsDataField = true;
            xPCRxEvento.CTLxUsuarioID.AllowEmpty = true;
            xPCRxEvento.Data.OrderType = XOrderType.Desc;
            xPCRxEvento.Data.IsDataField = true;
            xPCRxEvento.Data.AllowEmpty = true;
            xPCRxAnimalEvento.Grupo.Length = 10;
            xPCRxAnimalEvento.Grupo.IsDataField = true;
            xPCRxAnimalEvento.Grupo.AllowEmpty = true;
            xPCRxAnimalEvento.ISExItemID.IsDataField = true;
            xPCRxAnimalEvento.ISExItemID.AllowEmpty = true;
            xPCRxEvento.Latitude.Length = 20;
            xPCRxEvento.Latitude.Scale = 10;
            xPCRxEvento.Latitude.IsDataField = true;
            xPCRxEvento.Latitude.AllowEmpty = true;
            xPCRxEvento.Longitude.Length = 20;
            xPCRxEvento.Longitude.Scale = 10;
            xPCRxEvento.Longitude.IsDataField = true;
            xPCRxEvento.Longitude.AllowEmpty = true;
            xPCRxEvento.NTRxMobilePontoDestaqueID.IsDataField = true;
            xPCRxEvento.NTRxMobilePontoDestaqueID.AllowEmpty = true;
            xPCRxEvento.Observacao.Length = 200;
            xPCRxEvento.Observacao.IsDataField = true;
            xPCRxEvento.Observacao.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxAnimalEstadoID.IsDataField = true;
            xPCRxAnimalEvento.PCRxAnimalEstadoID.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxAnimalID.IsDataField = true;
            xPCRxAnimalEvento.PCRxAnimalID.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxAnimalLoteID.IsDataField = true;
            xPCRxAnimalEvento.PCRxAnimalLoteID.AllowEmpty = true;
            xPCRxEvento.PCRxEventoID.GeneratePK = true;
            xPCRxEvento.PCRxEventoID.IsDataField = true;
            xPCRxEvento.PCRxEventoID.AllowEmpty = true;
            xPCRxEvento.PCRxEventoTipoID.IsDataField = true;
            xPCRxEvento.PCRxEventoTipoID.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxIATFFaseID.IsDataField = true;
            xPCRxAnimalEvento.PCRxIATFFaseID.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxIATFFaseTipoID.IsDataField = true;
            xPCRxAnimalEvento.PCRxIATFFaseTipoID.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxReprodutorID.IsDataField = true;
            xPCRxAnimalEvento.PCRxReprodutorID.AllowEmpty = true;
            xPCRxAnimalEvento.SYSxPessoaID.IsDataField = true;
            xPCRxAnimalEvento.SYSxPessoaID.AllowEmpty = true;
            xPCRxAnimalEvento.Valor.Length = 25;
            xPCRxAnimalEvento.Valor.Scale = 2;
            xPCRxAnimalEvento.Valor.IsDataField = true;
            xPCRxAnimalEvento.Valor.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CTLxUsuarioID => xPCRxEvento.CTLxUsuarioID;
        public XORMField Data => xPCRxEvento.Data;
        public XORMField Grupo => xPCRxAnimalEvento.Grupo;
        public XORMField ISExItemID => xPCRxAnimalEvento.ISExItemID;
        public XORMField Latitude => xPCRxEvento.Latitude;
        public XORMField Longitude => xPCRxEvento.Longitude;
        public XORMField NTRxMobilePontoDestaqueID => xPCRxEvento.NTRxMobilePontoDestaqueID;
        public XORMField Observacao => xPCRxEvento.Observacao;
        public XORMField PCRxAnimalEstadoID => xPCRxAnimalEvento.PCRxAnimalEstadoID;
        public XORMField PCRxAnimalID => xPCRxAnimalEvento.PCRxAnimalID;
        public XORMField PCRxAnimalLoteID => xPCRxAnimalEvento.PCRxAnimalLoteID;
        public XORMField PCRxEventoID => xPCRxEvento.PCRxEventoID;
        public XORMField PCRxEventoTipoID => xPCRxEvento.PCRxEventoTipoID;
        public XORMField PCRxIATFFaseID => xPCRxAnimalEvento.PCRxIATFFaseID;
        public XORMField PCRxIATFFaseTipoID => xPCRxAnimalEvento.PCRxIATFFaseTipoID;
        public XORMField PCRxReprodutorID => xPCRxAnimalEvento.PCRxReprodutorID;
        public XORMField SYSxPessoaID => xPCRxAnimalEvento.SYSxPessoaID;
        public XORMField Valor => xPCRxAnimalEvento.Valor;
        }
        #endregion XFields
        #region AnimalEventoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid CTLxUsuarioID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxEvento.CTLxUsuarioID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.CTLxUsuarioID.ID] = value;
            }
        }
        public Guid? oCTLxUsuarioID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.CTLxUsuarioID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[AnimalEventoSVC.xPCRxEvento.Data.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Grupo
        {
            get
            {
                return (String)Value[AnimalEventoSVC.xPCRxAnimalEvento.Grupo.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxAnimalEvento.ISExItemID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Decimal Latitude
        {
            get
            {
                return (Decimal)Value[AnimalEventoSVC.xPCRxEvento.Latitude.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.Latitude.ID] = value;
            }
        }
        public Decimal? oLatitude
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.Latitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal Longitude
        {
            get
            {
                return (Decimal)Value[AnimalEventoSVC.xPCRxEvento.Longitude.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.Longitude.ID] = value;
            }
        }
        public Decimal? oLongitude
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.Longitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Guid NTRxMobilePontoDestaqueID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxEvento.NTRxMobilePontoDestaqueID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.NTRxMobilePontoDestaqueID.ID] = value;
            }
        }
        public Guid? oNTRxMobilePontoDestaqueID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.NTRxMobilePontoDestaqueID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Observacao
        {
            get
            {
                return (String)Value[AnimalEventoSVC.xPCRxEvento.Observacao.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.Observacao.ID] = value;
            }
        }
        public String? oObservacao
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.Observacao, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 PCRxAnimalEstadoID
        {
            get
            {
                return (Int16)Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalEstadoID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalEstadoID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalEstadoID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxAnimalLoteID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalLoteID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalLoteID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalLoteID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalLoteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxEventoID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxEvento.PCRxEventoID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.PCRxEventoID.ID] = value;
            }
        }
        public Guid? oPCRxEventoID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.PCRxEventoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxEventoTipoID
        {
            get
            {
                return (Int16)Value[AnimalEventoSVC.xPCRxEvento.PCRxEventoTipoID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxEvento.PCRxEventoTipoID.ID] = value;
            }
        }
        public Int16? oPCRxEventoTipoID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxEvento.PCRxEventoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxIATFFaseID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxIATFFaseTipoID
        {
            get
            {
                return (Int16)Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseTipoID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseTipoID.ID] = value;
            }
        }
        public Int16? oPCRxIATFFaseTipoID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxReprodutorID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxReprodutorID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.PCRxReprodutorID.ID] = value;
            }
        }
        public Guid? oPCRxReprodutorID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.PCRxReprodutorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[AnimalEventoSVC.xPCRxAnimalEvento.SYSxPessoaID.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[AnimalEventoSVC.xPCRxAnimalEvento.Valor.ID];
            }
            set
            {
                Value[AnimalEventoSVC.xPCRxAnimalEvento.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(AnimalEventoSVC.xPCRxAnimalEvento.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AnimalEventoSVC.XTuple

        #region AnimalEventoSVC.XRule
        public abstract class XRule : XServiceRule<AnimalEventoSVC.XDataSet, AnimalEventoSVC, AnimalEventoSVC.XTuple>
        {
        }
        #endregion AnimalEventoSVC.XRule

        #region AnimalEventoSVC.XDataSet

        public class XDataSet : XDataSet<AnimalEventoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AnimalEventoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AnimalEventoSVC.XTuple> where T : XDataTuple
        {

            public Guid CTLxUsuarioID => AnimalEventoSVC.xPCRxEvento.CTLxUsuarioID.ID;
            public Guid Data => AnimalEventoSVC.xPCRxEvento.Data.ID;
            public Guid Grupo => AnimalEventoSVC.xPCRxAnimalEvento.Grupo.ID;
            public Guid ISExItemID => AnimalEventoSVC.xPCRxAnimalEvento.ISExItemID.ID;
            public Guid Latitude => AnimalEventoSVC.xPCRxEvento.Latitude.ID;
            public Guid Longitude => AnimalEventoSVC.xPCRxEvento.Longitude.ID;
            public Guid NTRxMobilePontoDestaqueID => AnimalEventoSVC.xPCRxEvento.NTRxMobilePontoDestaqueID.ID;
            public Guid Observacao => AnimalEventoSVC.xPCRxEvento.Observacao.ID;
            public Guid PCRxAnimalEstadoID => AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalEstadoID.ID;
            public Guid PCRxAnimalID => AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID;
            public Guid PCRxAnimalLoteID => AnimalEventoSVC.xPCRxAnimalEvento.PCRxAnimalLoteID.ID;
            public Guid PCRxEventoID => AnimalEventoSVC.xPCRxEvento.PCRxEventoID.ID;
            public Guid PCRxEventoTipoID => AnimalEventoSVC.xPCRxEvento.PCRxEventoTipoID.ID;
            public Guid PCRxIATFFaseID => AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseID.ID;
            public Guid PCRxIATFFaseTipoID => AnimalEventoSVC.xPCRxAnimalEvento.PCRxIATFFaseTipoID.ID;
            public Guid PCRxReprodutorID => AnimalEventoSVC.xPCRxAnimalEvento.PCRxReprodutorID.ID;
            public Guid SYSxPessoaID => AnimalEventoSVC.xPCRxAnimalEvento.SYSxPessoaID.ID;
            public Guid Valor => AnimalEventoSVC.xPCRxAnimalEvento.Valor.ID;

            public XDataSet()
            {
                DataSetType = typeof(AnimalEventoSVC.XDataSet);
            }

        }
        #endregion AnimalEventoSVC.XDataSet

        [Guid(AnimalEventoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AnimalEventoSVC))]
        protected class _Service : Service<AnimalEventoSVC, XDataSet, XTuple>
        {
            public const String sCID = "BAFFA4CA-8722-49EA-9F36-77B4DCE27D74";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AnimalEventoSVC, XDataSet, XTuple>, XService
             where TModel : AnimalEventoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}