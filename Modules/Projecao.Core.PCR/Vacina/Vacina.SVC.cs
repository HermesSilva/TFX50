//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using Projecao.Core.ISE.Itens;
using TFX.Core.Model.DIC.Types;
using Projecao.Core.PCR.Vacina;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Vacina
{
    [XRegister(typeof(VacinaSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Vacina\Vacina.dssvc")]
    public class VacinaSVC : XSVCModel
    {
        #region VacinaFilterFRM

        [XRegister(typeof(VacinaFilterFRM), sCID)]
        public class VacinaFilterFRM : XFRMModel
        {
            public const String sCID = "84A3C446-D89D-40DB-BE04-AC5704526017";
            static VacinaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public VacinaFilterFRM()
            {
                ID = gCID;
                Name = "VacinaFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 60;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("F2785B90-D48F-4152-ADF5-A1CEB6DC5206"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("88D1B60D-3143-4841-96F4-373D0E722F27")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("F2785B90-D48F-4152-ADF5-A1CEB6DC5206"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion VacinaFilterFRM

        public const String sCID = "5FDAAA33-ABF4-4403-8428-E0B48A507158";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExCategoria_ISExCategoriaID_ISExItemCategoria_ISExCategoriaID; // ISExCategoria.ISExCategoriaID --> ISExItemCategoria.ISExCategoriaID
        public static XSVCReference ISExItemCategoria_ISExItemID_ISExItem_ISExItemID; // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID

        #region xISExCategoria 
        public class xISExCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("B57E65BC-1BD9-4D05-BA64-0AEF018941EA");

            public xISExCategoria()
            {
                Name = "ISExCategoria";
                Alias = "ISExCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExCategoria.gCID;

                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(Categoria, Categoria.ID);
                Categoria.Owner = this;
                Categoria.OwnerID = ID;
                Categoria.TableName = Name;
                Categoria.Alias = "Categoria";
            }

            public static XORMPKField ISExCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExCategoria.ISExCategoriaID, new Guid("5E3FC9D4-AD87-4262-93B4-08635450A1E4"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFaceField Categoria = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExCategoria.Categoria, new Guid("459741ED-69DF-43C7-94BC-CA12969DD888"), "Categoria", "Categoria de Item");
        }
        #endregion xISExCategoria 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("C3C77AF6-09C8-43F9-A580-63DD37AF6C0A");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                ISExLinhaID.Alias = "ISExLinhaID";
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                ISExTabelaID.Alias = "ISExTabelaID";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                ISExFabricanteID.Alias = "ISExFabricanteID";
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                ISExMarcaID.Alias = "ISExMarcaID";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                ISExGrupoID.Alias = "ISExGrupoID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("55E549CB-E79E-4B8F-B0EE-D14FA88F9197"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("88D1B60D-3143-4841-96F4-373D0E722F27"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("A9F2784D-1AE4-42D4-B007-900DBB555DD7"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("9E55B4D7-C8A1-4388-9F1C-700749B0342D"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("607F044F-8D32-4E72-81E3-634D85A285EA"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("614F596E-E783-43C3-AA17-557D308263F3"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("9248ECEB-2A6E-464E-A5A3-B139C3B4D939"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("564BED57-D1E8-427E-8A49-E1CC0D924888"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("4B6709C1-BF89-458D-B025-721455A69B50"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("F5634115-7015-4728-A6A8-E7FB4ABC3FDF");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("4D61196C-CF38-4520-8C0E-A1CB910D7886"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("2C55C23D-457C-4455-94CF-61D647CA4C7D"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("E355339A-608E-475A-8A2D-47AB92139146"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("05AC4993-657D-43E5-95C0-EF1D53038304"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        public xISExCategoria ISExCategoria;
        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;

        public VacinaSVC()
        {
            TupleType = typeof(VacinaSVC.XTuple);
            DataSetType = typeof(VacinaSVC.XDataSet);
            ServiceRuleCID = new Guid("8CB84FB3-FF02-46D0-98F6-5F7D270CDE81");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("5FDAAA33-ABF4-4403-8428-E0B48A507158");
            Name = "Vacina";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("84A3C446-D89D-40DB-BE04-AC5704526017");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExCategoria.Categoria.ID, xISExItem.Nome.ID, xISExItem.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xISExItem.ISExItemID.ID, xISExItem.Nome.ID, xISExCategoria.Categoria.ID, xISExItem.ProdutoID.ID, xISExItem.SYSxEstadoID.ID, xISExItem.ISExGrupoID.ID, xISExItem.ISExMarcaID.ID, xISExItem.ISExFabricanteID.ID, xISExItem.ISExTabelaID.ID, xISExItem.ISExLinhaID.ID };
            PKField = xISExItem.ISExItemID.ID;
            ConfigTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            StateField = xISExItem.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("8CB84FB3-FF02-46D0-98F6-5F7D270CDE81");
            XSubServiceItem ss2CDAD13CF7E34AE0A04168CBEB75ACD3 = new XSubServiceItem(ItemCategoriaSVC.gCID, ItemCategoriaSVC.xISExItemCategoria.ISExItemID.ID, VacinaSVC.gCID, xISExItem.ISExItemID.ID, false, XSubSeviceType.Default);
            ss2CDAD13CF7E34AE0A04168CBEB75ACD3.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ss2CDAD13CF7E34AE0A04168CBEB75ACD3.LateLoad = false;
            SubServices.Add(ss2CDAD13CF7E34AE0A04168CBEB75ACD3);
            XSubServiceItem ss1EF98B9B975045989DBE4A9FF67BBBF6 = new XSubServiceItem(VacinaLoteSVC.gCID, VacinaLoteSVC.xISExLote.ISExItemID.ID, VacinaSVC.gCID, xISExItem.ISExItemID.ID, false, XSubSeviceType.Default);
            ss1EF98B9B975045989DBE4A9FF67BBBF6.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ss1EF98B9B975045989DBE4A9FF67BBBF6.LateLoad = false;
            SubServices.Add(ss1EF98B9B975045989DBE4A9FF67BBBF6);
            ISExCategoria = new xISExCategoria();
            ISExCategoria.IsReadOnly = true;
            AddTable(ISExCategoria);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = false;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            MasterTableID = ISExItem.ID;
            ISExCategoria_ISExCategoriaID_ISExItemCategoria_ISExCategoriaID = AddReference(new XSVCReference(new Guid("CF15F670-A858-4D66-96E0-F760CE3BF509"), "FK_CF15F670A8584D6696E0F760CE3BF509", VacinaSVC.xISExCategoria.gCID, xISExCategoria.ISExCategoriaID.ID, VacinaSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExCategoriaID.ID, XJoinType.Inner)); // ISExCategoria.ISExCategoriaID --> ISExItemCategoria.ISExCategoriaID
            ISExItemCategoria_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("D5D704A3-818A-4194-8339-D34DC8D39422"), "FK_D5D704A3818A41948339D34DC8D39422", VacinaSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, VacinaSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
            XSVCReference FK_26B25A2BF8F340F08DECB33F37D085F5 = new XSVCReference(new Guid("26B25A2B-F8F3-40F0-8DEC-B33F37D085F5"), "FK_26B25A2BF8F340F08DECB33F37D085F5", ItemCategoriaSVC.gCID, ItemCategoriaSVC.xISExItemCategoria.ISExItemID.ID, ISExItem.ID, VacinaSVC.xISExItem.ISExItemID.ID, XJoinType.SubService); // ItemCategoriaSVC.ISExItemID --> Vacina.ISExItemID
            FK_26B25A2BF8F340F08DECB33F37D085F5.IsLowRelevance = false;
            AddReference(FK_26B25A2BF8F340F08DECB33F37D085F5);
            XSVCReference FK_5F9EDD2745F546BCB1576AB0D061E81A = new XSVCReference(new Guid("5F9EDD27-45F5-46BC-B157-6AB0D061E81A"), "FK_5F9EDD2745F546BCB1576AB0D061E81A", VacinaLoteSVC.gCID, VacinaLoteSVC.xISExLote.ISExItemID.ID, ISExItem.ID, VacinaSVC.xISExItem.ISExItemID.ID, XJoinType.SubService); // VacinaLoteSVC.ISExItemID --> Vacina.ISExItemID
            FK_5F9EDD2745F546BCB1576AB0D061E81A.IsLowRelevance = false;
            AddReference(FK_5F9EDD2745F546BCB1576AB0D061E81A);
            xISExCategoria.Categoria.IsReadOnly = true;
            xISExCategoria.Categoria.IsDataField = true;
            xISExCategoria.Categoria.AllowEmpty = true;
            xISExItem.ISExFabricanteID.IsDataField = true;
            xISExItem.ISExFabricanteID.AllowEmpty = true;
            xISExItem.ISExGrupoID.IsDataField = true;
            xISExItem.ISExGrupoID.AllowEmpty = true;
            xISExItem.ISExItemID.GeneratePK = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExItem.ISExLinhaID.IsDataField = true;
            xISExItem.ISExLinhaID.AllowEmpty = true;
            xISExItem.ISExMarcaID.IsDataField = true;
            xISExItem.ISExMarcaID.AllowEmpty = true;
            xISExItem.ISExTabelaID.IsDataField = true;
            xISExItem.ISExTabelaID.AllowEmpty = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xISExItem.SYSxEstadoID.IsDataField = true;
            xISExItem.SYSxEstadoID.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xISExItem.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField Categoria => xISExCategoria.Categoria;
        public XORMField ISExFabricanteID => xISExItem.ISExFabricanteID;
        public XORMField ISExGrupoID => xISExItem.ISExGrupoID;
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField ISExLinhaID => xISExItem.ISExLinhaID;
        public XORMField ISExMarcaID => xISExItem.ISExMarcaID;
        public XORMField ISExTabelaID => xISExItem.ISExTabelaID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField SYSxEstadoID => xISExItem.SYSxEstadoID;
        }
        #endregion XFields
        #region VacinaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Categoria
        {
            get
            {
                return (String)Value[VacinaSVC.xISExCategoria.Categoria.ID];
            }
            set
            {
                Value[VacinaSVC.xISExCategoria.Categoria.ID] = value;
            }
        }
        public String? oCategoria
        {
            get
            {
                GetOldValue(VacinaSVC.xISExCategoria.Categoria, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExFabricanteID
        {
            get
            {
                return (Guid)Value[VacinaSVC.xISExItem.ISExFabricanteID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExFabricanteID.ID] = value;
            }
        }
        public Guid? oISExFabricanteID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExFabricanteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExGrupoID
        {
            get
            {
                return (Int32)Value[VacinaSVC.xISExItem.ISExGrupoID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExGrupoID.ID] = value;
            }
        }
        public Int32? oISExGrupoID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExGrupoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[VacinaSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExLinhaID
        {
            get
            {
                return (Int32)Value[VacinaSVC.xISExItem.ISExLinhaID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExLinhaID.ID] = value;
            }
        }
        public Int32? oISExLinhaID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExLinhaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExMarcaID
        {
            get
            {
                return (Int32)Value[VacinaSVC.xISExItem.ISExMarcaID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExMarcaID.ID] = value;
            }
        }
        public Int32? oISExMarcaID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExMarcaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExTabelaID
        {
            get
            {
                return (Int32)Value[VacinaSVC.xISExItem.ISExTabelaID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExTabelaID.ID] = value;
            }
        }
        public Int32? oISExTabelaID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExTabelaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VacinaSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[VacinaSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[VacinaSVC.xISExItem.SYSxEstadoID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VacinaSVC.XTuple

        #region VacinaSVC.XRule
        public abstract class XRule : XServiceRule<VacinaSVC.XDataSet, VacinaSVC, VacinaSVC.XTuple>
        {
        }
        #endregion VacinaSVC.XRule

        #region VacinaSVC.XDataSet

        public class XDataSet : XDataSet<VacinaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VacinaSVC.XTuple> where T : XDataTuple
        {

            public Guid Categoria => VacinaSVC.xISExCategoria.Categoria.ID;
            public Guid ISExFabricanteID => VacinaSVC.xISExItem.ISExFabricanteID.ID;
            public Guid ISExGrupoID => VacinaSVC.xISExItem.ISExGrupoID.ID;
            public Guid ISExItemID => VacinaSVC.xISExItem.ISExItemID.ID;
            public Guid ISExLinhaID => VacinaSVC.xISExItem.ISExLinhaID.ID;
            public Guid ISExMarcaID => VacinaSVC.xISExItem.ISExMarcaID.ID;
            public Guid ISExTabelaID => VacinaSVC.xISExItem.ISExTabelaID.ID;
            public Guid Nome => VacinaSVC.xISExItem.Nome.ID;
            public Guid ProdutoID => VacinaSVC.xISExItem.ProdutoID.ID;
            public Guid SYSxEstadoID => VacinaSVC.xISExItem.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }

            private Projecao.Core.PCR.Vacina.VacinaLoteSVC.XDataSet _VacinaLoteDataSet;

            public Projecao.Core.PCR.Vacina.VacinaLoteSVC.XDataSet VacinaLoteDataSet
            {
                get
                {
                    if (_VacinaLoteDataSet == null)
                    {
                        _VacinaLoteDataSet = (Projecao.Core.PCR.Vacina.VacinaLoteSVC.XDataSet)Children.Get(Projecao.Core.PCR.Vacina.VacinaLoteSVC.gCID);
                    }
                    return  _VacinaLoteDataSet;
                }
            }

            private Projecao.Core.ISE.Itens.ItemCategoriaSVC.XDataSet _ItemCategoriaDataSet;

            public Projecao.Core.ISE.Itens.ItemCategoriaSVC.XDataSet ItemCategoriaDataSet
            {
                get
                {
                    if (_ItemCategoriaDataSet == null)
                    {
                        _ItemCategoriaDataSet = (Projecao.Core.ISE.Itens.ItemCategoriaSVC.XDataSet)Children.Get(Projecao.Core.ISE.Itens.ItemCategoriaSVC.gCID);
                    }
                    return  _ItemCategoriaDataSet;
                }
            }

        }
        #endregion VacinaSVC.XDataSet

        [Guid(VacinaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VacinaSVC))]
        protected class _Service : Service<VacinaSVC, XDataSet, XTuple>
        {
            public const String sCID = "22624BB9-2B51-4C02-944A-C9A1D731E9B1";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VacinaSVC, XDataSet, XTuple>, XService
             where TModel : VacinaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}