//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.NTR.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Rotas
{
    [XRegister(typeof(PontoDestaqueSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Rotas\PontoDestaque.dssvc")]
    public class PontoDestaqueSVC : XSVCModel
    {
        public const String sCID = "CD9577D9-7B98-48A1-B37E-83D0ABFA460D";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxEventoTipo_PCRxEventoTipoID_PCRxEvento_PCRxEventoTipoID; // PCRxEventoTipo.PCRxEventoTipoID --> PCRxEvento.PCRxEventoTipoID
        public static XSVCReference PCRxEvento_NTRxMobilePontoDestaqueID_NTRxMobilePontoDestaque_NTRxMobilePontoDestaqueID; // PCRxEvento.NTRxMobilePontoDestaqueID --> NTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID

        #region xPCRxEvento 
        public class xPCRxEvento : XSVCTable
        {

            public static Guid gCID => new Guid("30F356CB-63FB-43CE-B396-2C7632B6764B");

            public xPCRxEvento()
            {
                Name = "PCRxEvento";
                Alias = "PCRxEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.gCID;

                Items.Add(PCRxEventoID, PCRxEventoID.ID);
                PCRxEventoID.Owner = this;
                PCRxEventoID.OwnerID = ID;
                PCRxEventoID.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Observacao.Alias = "Observacao";
                Items.Add(PCRxEventoTipoID, PCRxEventoTipoID.ID);
                PCRxEventoTipoID.Owner = this;
                PCRxEventoTipoID.OwnerID = ID;
                PCRxEventoTipoID.TableName = Name;
                Items.Add(NTRxMobilePontoDestaqueID, NTRxMobilePontoDestaqueID.ID);
                NTRxMobilePontoDestaqueID.Owner = this;
                NTRxMobilePontoDestaqueID.OwnerID = ID;
                NTRxMobilePontoDestaqueID.TableName = Name;
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
            }

            public static XORMFaceField PCRxEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoID, new Guid("3E8DF068-AB2C-49B9-A372-497F44CD4509"), "PCRxEventoID", "Evento");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Data, new Guid("9CFB8928-8BF0-4F19-BD18-8C84E0D134EF"), "Data", "Data");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Observacao, new Guid("B2CF1261-03F4-4E79-AAC1-2F0AC99298F7"), "Observacao", "Observação");
            public static XORMFKField PCRxEventoTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoTipoID, new Guid("31337709-385E-479D-8AAD-6C550CEABDAC"), "PCRxEventoTipoID", "Tipo de Evento");
            public static XORMFKField NTRxMobilePontoDestaqueID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.NTRxMobilePontoDestaqueID, new Guid("D9149EF8-9200-44FE-8C4C-DDC8C3593D97"), "NTRxMobilePontoDestaqueID", "Ponto de Destaque");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Latitude, new Guid("F5908E1F-A5A0-454C-81FA-3124E3593ED4"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Longitude, new Guid("239F5C78-DE9F-4566-BFA4-83EB83A8A441"), "Longitude", "Longitude");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.CTLxUsuarioID, new Guid("F442062D-50BD-4F25-B7A6-E6FAABB4B8E3"), "CTLxUsuarioID", "Usuário");
        }
        #endregion xPCRxEvento 


        #region xPCRxEventoTipo 
        public class xPCRxEventoTipo : XSVCTable
        {

            public static Guid gCID => new Guid("42697069-C65B-4D2B-A759-AECE0BBCEFE8");

            public xPCRxEventoTipo()
            {
                Name = "PCRxEventoTipo";
                Alias = "PCRxEventoTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.gCID;

                Items.Add(PCRxEventoTipoID, PCRxEventoTipoID.ID);
                PCRxEventoTipoID.Owner = this;
                PCRxEventoTipoID.OwnerID = ID;
                PCRxEventoTipoID.TableName = Name;
                Items.Add(Evento, Evento.ID);
                Evento.Owner = this;
                Evento.OwnerID = ID;
                Evento.TableName = Name;
                Evento.Alias = "Evento";
                Items.Add(Animal, Animal.ID);
                Animal.Owner = this;
                Animal.OwnerID = ID;
                Animal.TableName = Name;
                Items.Add(Reproducao, Reproducao.ID);
                Reproducao.Owner = this;
                Reproducao.OwnerID = ID;
                Reproducao.TableName = Name;
            }

            public static XORMPKField PCRxEventoTipoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.PCRxEventoTipoID, new Guid("FEF7C00B-587F-429B-A1E9-B35D0EF40924"), "PCRxEventoTipoID", "Tipo de Evento");
            public static XORMFaceField Evento = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.Evento, new Guid("A2F3B200-879F-432C-A49C-90ED79E0DEA5"), "Evento", "Evento");
            public static XORMField Animal = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.Animal, new Guid("FC351E30-1060-4766-BEB5-2C94844A3302"), "Animal", "Animal");
            public static XORMField Reproducao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.Reproducao, new Guid("C3E1831D-F6CE-4317-AF96-017ADD54680F"), "Reproducao", "Reprodução");
        }
        #endregion xPCRxEventoTipo 


        #region xNTRxMobilePontoDestaque 
        public class xNTRxMobilePontoDestaque : XSVCTable
        {

            public static Guid gCID => new Guid("9D6D964A-99D1-425E-81BD-B5A01154E5A5");

            public xNTRxMobilePontoDestaque()
            {
                Name = "NTRxMobilePontoDestaque";
                Alias = "NTRxMobilePontoDestaque";
                ID = gCID;
                ParentID =  global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.gCID;

                Items.Add(NTRxMobilePontoDestaqueID, NTRxMobilePontoDestaqueID.ID);
                NTRxMobilePontoDestaqueID.Owner = this;
                NTRxMobilePontoDestaqueID.OwnerID = ID;
                NTRxMobilePontoDestaqueID.TableName = Name;
                NTRxMobilePontoDestaqueID.Alias = "NTRxMobilePontoDestaqueID";
                Items.Add(NTRxMobileConfigID, NTRxMobileConfigID.ID);
                NTRxMobileConfigID.Owner = this;
                NTRxMobileConfigID.OwnerID = ID;
                NTRxMobileConfigID.TableName = Name;
                NTRxMobileConfigID.Alias = "NTRxMobileConfigID";
                Items.Add(Texto, Texto.ID);
                Texto.Owner = this;
                Texto.OwnerID = ID;
                Texto.TableName = Name;
                Texto.Alias = "Texto";
                Items.Add(Foto, Foto.ID);
                Foto.Owner = this;
                Foto.OwnerID = ID;
                Foto.TableName = Name;
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Latitude.Alias = "Latitude";
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Longitude.Alias = "Longitude";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField NTRxMobilePontoDestaqueID = new XORMFaceField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID, new Guid("2C8B87C7-F65B-4C46-8FEB-10095C02BC08"), "NTRxMobilePontoDestaqueID", "Ponto de Destaque");
            public static XORMFKField NTRxMobileConfigID = new XORMFKField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.NTRxMobileConfigID, new Guid("37F13B53-4432-4291-855F-68261158BD7A"), "NTRxMobileConfigID", "Configurações de Dispositivo Móvel");
            public static XORMField Texto = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.Texto, new Guid("7202CEA1-DF66-40BA-B89A-E2A129D7171F"), "Texto", "Texto");
            public static XORMField Foto = new XORMField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.Foto, new Guid("456514FE-F5FF-46E8-BA9E-C05EB0F47843"), "Foto", "Foto");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.Latitude, new Guid("F11E66ED-9F26-4BF3-83E4-04F615A458D2"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.Longitude, new Guid("224D45E1-9E1B-4C65-81F1-91CC21FD8D14"), "Longitude", "Longitude");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.Data, new Guid("E6A30C72-68AB-4286-A421-3B46DFB94747"), "Data", "Data");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.NTR.DB.NTRx.NTRxMobilePontoDestaque.SYSxEstadoID, new Guid("35EAD943-E8CB-46B7-98A6-0542100E4349"), "SYSxEstadoID", "Estado");
        }
        #endregion xNTRxMobilePontoDestaque 


        public xNTRxMobilePontoDestaque NTRxMobilePontoDestaque;
        public xPCRxEvento PCRxEvento;
        public xPCRxEventoTipo PCRxEventoTipo;
        public static readonly XORMParameterField PrimaryKeyID = new XORMParameterField(new Guid("F4651A9E-C8C7-40F8-BDE8-7D872C301BEB"), "PrimaryKeyID", "User Data Field", XInt32.CID, 0, 0, false, gCID, null);

        public PontoDestaqueSVC()
        {
            TupleType = typeof(PontoDestaqueSVC.XTuple);
            DataSetType = typeof(PontoDestaqueSVC.XDataSet);
            ServiceRuleCID = new Guid("D7655B66-49D8-4D3C-9350-C62D30FD31A0");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("CD9577D9-7B98-48A1-B37E-83D0ABFA460D");
            Name = "PontoDestaque";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            OrderByFields = new Guid[] { xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.ID };
            DataSetFields = new Guid[] { xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.ID, xNTRxMobilePontoDestaque.NTRxMobileConfigID.ID, xNTRxMobilePontoDestaque.Latitude.ID, xNTRxMobilePontoDestaque.Longitude.ID, xNTRxMobilePontoDestaque.Data.ID, xNTRxMobilePontoDestaque.Texto.ID, xPCRxEvento.Observacao.ID, xPCRxEventoTipo.Evento.ID, PrimaryKeyID.ID };
            PKField = PrimaryKeyID.ID;
            MasterRuleCID = new Guid("D7655B66-49D8-4D3C-9350-C62D30FD31A0");
            NTRxMobilePontoDestaque = new xNTRxMobilePontoDestaque();
            NTRxMobilePontoDestaque.IsReadOnly = true;
            AddTable(NTRxMobilePontoDestaque);
            PCRxEvento = new xPCRxEvento();
            PCRxEvento.IsReadOnly = true;
            AddTable(PCRxEvento);
            PCRxEventoTipo = new xPCRxEventoTipo();
            PCRxEventoTipo.IsReadOnly = true;
            AddTable(PCRxEventoTipo);
            MasterTableID = NTRxMobilePontoDestaque.ID;
            PCRxEventoTipo_PCRxEventoTipoID_PCRxEvento_PCRxEventoTipoID = AddReference(new XSVCReference(new Guid("2A3F8F13-3055-4EDD-B963-AF796BF854D6"), "FK_2A3F8F1330554EDDB963AF796BF854D6", PontoDestaqueSVC.xPCRxEventoTipo.gCID, xPCRxEventoTipo.PCRxEventoTipoID.ID, PontoDestaqueSVC.xPCRxEvento.gCID, xPCRxEvento.PCRxEventoTipoID.ID, XJoinType.Inner)); // PCRxEventoTipo.PCRxEventoTipoID --> PCRxEvento.PCRxEventoTipoID
            PCRxEvento_NTRxMobilePontoDestaqueID_NTRxMobilePontoDestaque_NTRxMobilePontoDestaqueID = AddReference(new XSVCReference(new Guid("E66F2EF8-FE68-42E1-AF24-CAA727A4B122"), "FK_E66F2EF8FE6842E1AF24CAA727A4B122", PontoDestaqueSVC.xPCRxEvento.gCID, xPCRxEvento.NTRxMobilePontoDestaqueID.ID, PontoDestaqueSVC.xNTRxMobilePontoDestaque.gCID, xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.ID, XJoinType.Inner)); // PCRxEvento.NTRxMobilePontoDestaqueID --> NTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID
            AddField(PrimaryKeyID);
            PrimaryKeyID.IsParam = true;
            xNTRxMobilePontoDestaque.Data.IsReadOnly = true;
            xNTRxMobilePontoDestaque.Data.IsDataField = true;
            xNTRxMobilePontoDestaque.Data.AllowEmpty = true;
            xPCRxEventoTipo.Evento.IsReadOnly = true;
            xPCRxEventoTipo.Evento.Length = 25;
            xPCRxEventoTipo.Evento.IsDataField = true;
            xPCRxEventoTipo.Evento.AllowEmpty = true;
            xNTRxMobilePontoDestaque.Latitude.IsReadOnly = true;
            xNTRxMobilePontoDestaque.Latitude.Length = 25;
            xNTRxMobilePontoDestaque.Latitude.Scale = 20;
            xNTRxMobilePontoDestaque.Latitude.IsDataField = true;
            xNTRxMobilePontoDestaque.Latitude.AllowEmpty = true;
            xNTRxMobilePontoDestaque.Longitude.IsReadOnly = true;
            xNTRxMobilePontoDestaque.Longitude.Length = 25;
            xNTRxMobilePontoDestaque.Longitude.Scale = 20;
            xNTRxMobilePontoDestaque.Longitude.IsDataField = true;
            xNTRxMobilePontoDestaque.Longitude.AllowEmpty = true;
            xNTRxMobilePontoDestaque.NTRxMobileConfigID.IsReadOnly = true;
            xNTRxMobilePontoDestaque.NTRxMobileConfigID.IsDataField = true;
            xNTRxMobilePontoDestaque.NTRxMobileConfigID.AllowEmpty = true;
            xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.IsReadOnly = true;
            xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.OrderType = XOrderType.Asc;
            xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.IsDataField = true;
            xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.AllowEmpty = true;
            xPCRxEvento.Observacao.IsReadOnly = true;
            xPCRxEvento.Observacao.Length = 200;
            xPCRxEvento.Observacao.IsDataField = true;
            xPCRxEvento.Observacao.AllowEmpty = true;
            PrimaryKeyID.GeneratePK = true;
            PrimaryKeyID.IsReadOnly = false;
            PrimaryKeyID.Length = 0;
            PrimaryKeyID.Scale = 0;
            PrimaryKeyID.IsDataField = true;
            PrimaryKeyID.AllowEmpty = true;
            xNTRxMobilePontoDestaque.Texto.IsReadOnly = true;
            xNTRxMobilePontoDestaque.Texto.IsDataField = true;
            xNTRxMobilePontoDestaque.Texto.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Data => xNTRxMobilePontoDestaque.Data;
        public XORMField Evento => xPCRxEventoTipo.Evento;
        public XORMField Latitude => xNTRxMobilePontoDestaque.Latitude;
        public XORMField Longitude => xNTRxMobilePontoDestaque.Longitude;
        public XORMField NTRxMobileConfigID => xNTRxMobilePontoDestaque.NTRxMobileConfigID;
        public XORMField NTRxMobilePontoDestaqueID => xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID;
        public XORMField Observacao => xPCRxEvento.Observacao;
        public XORMField PrimaryKeyID => PontoDestaqueSVC.PrimaryKeyID;
        public XORMField Texto => xNTRxMobilePontoDestaque.Texto;
        }
        #endregion XFields
        #region PontoDestaqueSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Data.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xNTRxMobilePontoDestaque.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Evento
        {
            get
            {
                return (String)Value[PontoDestaqueSVC.xPCRxEventoTipo.Evento.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xPCRxEventoTipo.Evento.ID] = value;
            }
        }
        public String? oEvento
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xPCRxEventoTipo.Evento, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Latitude
        {
            get
            {
                return (Decimal)Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Latitude.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Latitude.ID] = value;
            }
        }
        public Decimal? oLatitude
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xNTRxMobilePontoDestaque.Latitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal Longitude
        {
            get
            {
                return (Decimal)Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Longitude.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Longitude.ID] = value;
            }
        }
        public Decimal? oLongitude
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xNTRxMobilePontoDestaque.Longitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Guid NTRxMobileConfigID
        {
            get
            {
                return (Guid)Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobileConfigID.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobileConfigID.ID] = value;
            }
        }
        public Guid? oNTRxMobileConfigID
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobileConfigID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid NTRxMobilePontoDestaqueID
        {
            get
            {
                return (Guid)Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.ID] = value;
            }
        }
        public Guid? oNTRxMobilePontoDestaqueID
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Observacao
        {
            get
            {
                return (String)Value[PontoDestaqueSVC.xPCRxEvento.Observacao.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xPCRxEvento.Observacao.ID] = value;
            }
        }
        public String? oObservacao
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xPCRxEvento.Observacao, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 PrimaryKeyID
        {
            get
            {
                return (Int32)Value[PontoDestaqueSVC.PrimaryKeyID.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.PrimaryKeyID.ID] = value;
            }
        }
        public Int32? oPrimaryKeyID
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.PrimaryKeyID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Texto
        {
            get
            {
                return (String)Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Texto.ID];
            }
            set
            {
                Value[PontoDestaqueSVC.xNTRxMobilePontoDestaque.Texto.ID] = value;
            }
        }
        public String? oTexto
        {
            get
            {
                GetOldValue(PontoDestaqueSVC.xNTRxMobilePontoDestaque.Texto, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion PontoDestaqueSVC.XTuple

        #region PontoDestaqueSVC.XRule
        public abstract class XRule : XServiceRule<PontoDestaqueSVC.XDataSet, PontoDestaqueSVC, PontoDestaqueSVC.XTuple>
        {
        }
        #endregion PontoDestaqueSVC.XRule

        #region PontoDestaqueSVC.XDataSet

        public class XDataSet : XDataSet<PontoDestaqueSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(PontoDestaqueSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<PontoDestaqueSVC.XTuple> where T : XDataTuple
        {

            public Guid Data => PontoDestaqueSVC.xNTRxMobilePontoDestaque.Data.ID;
            public Guid Evento => PontoDestaqueSVC.xPCRxEventoTipo.Evento.ID;
            public Guid Latitude => PontoDestaqueSVC.xNTRxMobilePontoDestaque.Latitude.ID;
            public Guid Longitude => PontoDestaqueSVC.xNTRxMobilePontoDestaque.Longitude.ID;
            public Guid NTRxMobileConfigID => PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobileConfigID.ID;
            public Guid NTRxMobilePontoDestaqueID => PontoDestaqueSVC.xNTRxMobilePontoDestaque.NTRxMobilePontoDestaqueID.ID;
            public Guid Observacao => PontoDestaqueSVC.xPCRxEvento.Observacao.ID;
            public Guid PrimaryKeyID => PontoDestaqueSVC.PrimaryKeyID.ID;
            public Guid Texto => PontoDestaqueSVC.xNTRxMobilePontoDestaque.Texto.ID;

            public XDataSet()
            {
                DataSetType = typeof(PontoDestaqueSVC.XDataSet);
            }

        }
        #endregion PontoDestaqueSVC.XDataSet

        [Guid(PontoDestaqueSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(PontoDestaqueSVC))]
        protected class _Service : Service<PontoDestaqueSVC, XDataSet, XTuple>
        {
            public const String sCID = "42FD47E1-0842-4F98-BA8B-1E647009DD41";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<PontoDestaqueSVC, XDataSet, XTuple>, XService
             where TModel : PontoDestaqueSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}