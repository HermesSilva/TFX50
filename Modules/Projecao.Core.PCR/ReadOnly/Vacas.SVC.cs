//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.ReadOnly
{
    [XRegister(typeof(VacasSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\ReadOnly\Vacas.dssvc")]
    public class VacasSVC : XSVCModel
    {
        public const String sCID = "7556600B-C2FA-4973-AF90-A587D7F1FAFB";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID; // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
        public static XSVCReference ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID; // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
        public static XSVCReference PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID; // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference ISExItemCategoria_ISExItemID_ISExItem_ISExItemID; // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID

        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("1B27EE22-D076-4729-A67A-C1F3360C91A0");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("B2BE1CA9-6415-4487-B713-DB91AB816F6E"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("B9EE115D-485A-4F78-AA3D-B115417EED4A"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("1AFE5313-A874-45E3-B2DC-A217022FECFF"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("FB0C89FD-44DA-4C75-B8A0-FF2E7EC88325"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        #region xISExItemMae 
        public class xISExItemMae : XSVCTable
        {

            public static Guid gCID => new Guid("2450BC4D-CA06-47EA-AA51-FE5F2D87EA70");

            public xISExItemMae()
            {
                Name = "ISExItem";
                Alias = "ISExItemMae";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeMae";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("E11CA83D-CE62-472E-90C6-A8D99A95D952"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("B96B5A59-465D-40E7-974E-15B9CB7F36C0"), "Nome", "Nome da Mãe");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("37E8EF6D-ADDF-4F61-963A-4277A5FAB14C"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("A36E92B1-8069-4B26-823A-E9790DE6F5FD"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("6B817082-BA94-47B8-8DE0-72486565E736"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("12BFAD32-0CB3-465A-883F-3DF475391E32"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("9EC17E22-9B3F-4CD6-90C9-8276EA9765D8"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("2260C0D7-90D9-4464-9E7B-88734944540D"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("E3402A7D-18A9-4351-B746-C5A790620E68"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemMae 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("8A19082B-A55B-47C2-B172-7C7215E7F0BF");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("DF800435-8F6E-4CB9-BC33-A5AF2E376764"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("5A581575-7259-4C63-97F2-23251242CC78"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("59464FBE-5862-4A52-BC26-D161D65A9386"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("65B6F98E-4F49-4D6C-BD20-AB2D59FD7E74"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("7D67A60F-A811-4EF7-B93F-4319D0563A93"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("50BB2B70-4890-47AA-B3C8-A3DDF3D042B6"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("75996EBC-27DA-49D8-A338-35B241DE4441"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("4D537450-BD8F-4562-814F-FC75179EBE09"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("01C674A9-7E92-4EC1-BD50-5DB8D5D8C894"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("609F1490-E92E-4D2D-8941-3A4065FA2B5B"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("AD88BE2C-0801-4FC4-BA79-2ED671DE5825"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xISExItemPai 
        public class xISExItemPai : XSVCTable
        {

            public static Guid gCID => new Guid("A1184715-7AAF-41EC-BE33-9F43D945DE65");

            public xISExItemPai()
            {
                Name = "ISExItem";
                Alias = "ISExItemPai";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomePai";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("EF32B12C-D304-49C5-95F6-9B1D050EBE2F"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("0E3516D3-7F95-4DC7-AA65-3F7D56DB5978"), "Nome", "Nome do Pai");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("64A5C0C1-8E2E-4B64-BAF4-2912979BFFC9"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("1C64A5F9-3D0B-44AD-A65E-0E09CA27497C"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("2E3582CA-7839-45B7-B081-5CEE943A7F01"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("3834E7FA-3629-46D5-9956-584CE3ADD596"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("0B631D57-5155-4312-A7AC-5097648D0F95"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("70CF90F6-14F4-43F0-808F-42D1C34C0B31"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("DD556F53-F4CA-423D-B5FB-1EB1E2FC2577"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemPai 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("AA397F29-1E22-4421-9DE9-CC8A71EE20D9");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("F47A9BDB-2EDF-4E04-B054-833A2AB0A4B9"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("36C44DE5-0215-483B-8076-1337507EAF0F"), "PCRxMaeID", "Animal");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("EA61B28E-207C-4320-86AB-D53C18B86CF9"), "PCRxPaiID", "Animal");
        }
        #endregion xPCRxAnimalFiliacao 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("AABA7185-1E68-41F6-8A6D-80D95CD7D8E3");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("BD1A1E1B-0B93-4F66-8057-3AF9E8815A5C"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("028B79B3-F736-43A4-B770-099CE4B9AA2D"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("911668E7-F6BC-4512-87DF-C35330314F8D"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("D868DC68-273A-4C02-81F7-740981407427"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("8AE93C68-A863-4A2F-994B-F345B74A8D85"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("71B51B75-4816-4192-B6B4-384E58E9D6B0"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("2827CEC0-DBB8-4619-A8F6-A56427D9B3B3"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("5B4AF14F-6016-47BF-BAD2-454D0609EF0D"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("86CE9AA6-BD9C-4929-A74E-298351ED4907"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xISExItemMae ISExItemMae;
        public xISExItemPai ISExItemPai;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;

        public VacasSVC()
        {
            TupleType = typeof(VacasSVC.XTuple);
            DataSetType = typeof(VacasSVC.XDataSet);
            ServiceRuleCID = new Guid("BE79BE87-4492-4765-B5A3-8392962B87FE");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("7556600B-C2FA-4973-AF90-A587D7F1FAFB");
            Name = "Vacas";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xPCRxAnimal.Nascimento.ID, xISExItemPai.Nome.ID, xISExItemMae.Nome.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID, xISExItemPai.Nome.ID };
            DataSetFields = new Guid[] { xPCRxAnimal.PCRxAnimalID.ID, xPCRxAnimal.Nascimento.ID, xISExItem.Nome.ID, xISExItemMae.Nome.ID, xISExItemPai.Nome.ID };
            PKField = xPCRxAnimal.PCRxAnimalID.ID;
            ConfigTableID = new Guid("01BC341A-0142-4C60-87A7-9228AD3A73E9");
            MasterRuleCID = new Guid("BE79BE87-4492-4765-B5A3-8392962B87FE");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            ISExItemMae = new xISExItemMae();
            ISExItemMae.IsReadOnly = true;
            AddTable(ISExItemMae);
            ISExItemPai = new xISExItemPai();
            ISExItemPai.IsReadOnly = true;
            AddTable(ISExItemPai);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = true;
            AddTable(PCRxAnimal);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = true;
            AddTable(PCRxAnimalFiliacao);
            MasterTableID = PCRxAnimal.ID;
            ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID = AddReference(new XSVCReference(new Guid("1887CF5E-6482-4CB4-A4E4-DD47DDE8A56A"), "FK_1887CF5E64824CB4A4E4DD47DDE8A56A", VacasSVC.xISExItemPai.gCID, xISExItemPai.ISExItemID.ID, VacasSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxPaiID.ID, XJoinType.Inner)); // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
            ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID = AddReference(new XSVCReference(new Guid("66EFC61F-966F-4735-97E2-EB9C4BE7274E"), "FK_66EFC61F966F473597E2EB9C4BE7274E", VacasSVC.xISExItemMae.gCID, xISExItemMae.ISExItemID.ID, VacasSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxMaeID.ID, XJoinType.Inner)); // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
            PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("9EB5D34D-17E9-4FA8-8AFE-DE7C6FE307E3"), "FK_9EB5D34D17E94FA88AFEDE7C6FE307E3", VacasSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, VacasSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
            ISExItemCategoria_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("AC4D96CD-E2AE-40E6-B86C-F237BC57CEFC"), "FK_AC4D96CDE2AE40E6B86CF237BC57CEFC", VacasSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, VacasSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
            ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("BE304E6A-91E4-48DE-8770-EA9CB85F5510"), "FK_BE304E6A91E448DE8770EA9CB85F5510", VacasSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, VacasSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
            xPCRxAnimal.Nascimento.IsReadOnly = true;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItemMae.Nome.IsReadOnly = true;
            xISExItemMae.Nome.Length = 60;
            xISExItemMae.Nome.IsDataField = true;
            xISExItemMae.Nome.AllowEmpty = true;
            xISExItemPai.Nome.IsReadOnly = true;
            xISExItemPai.Nome.OrderType = XOrderType.Asc;
            xISExItemPai.Nome.Length = 60;
            xISExItemPai.Nome.IsDataField = true;
            xISExItemPai.Nome.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPCRxAnimal.ERPxGeneroID);
            pWhere.Add(XOperator.EqualTo);
            pWhere.Add(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.XDefault.Feminino);
            pWhere.Add(xPCRxAnimal.PCRxAnimalFaseID);
            pWhere.Add(XOperator.EqualTo);
            pWhere.Add(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.XDefault.Vaca);
        }

        #region XFields

        public class XFields
        {
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField NomeMae => xISExItemMae.Nome;
        public XORMField NomePai => xISExItemPai.Nome;
        public XORMField PCRxAnimalID => xPCRxAnimal.PCRxAnimalID;
        }
        #endregion XFields
        #region VacasSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[VacasSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[VacasSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(VacasSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VacasSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[VacasSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VacasSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeMae
        {
            get
            {
                return (String)Value[VacasSVC.xISExItemMae.Nome.ID];
            }
            set
            {
                Value[VacasSVC.xISExItemMae.Nome.ID] = value;
            }
        }
        public String? oNomeMae
        {
            get
            {
                GetOldValue(VacasSVC.xISExItemMae.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomePai
        {
            get
            {
                return (String)Value[VacasSVC.xISExItemPai.Nome.ID];
            }
            set
            {
                Value[VacasSVC.xISExItemPai.Nome.ID] = value;
            }
        }
        public String? oNomePai
        {
            get
            {
                GetOldValue(VacasSVC.xISExItemPai.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[VacasSVC.xPCRxAnimal.PCRxAnimalID.ID];
            }
            set
            {
                Value[VacasSVC.xPCRxAnimal.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(VacasSVC.xPCRxAnimal.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VacasSVC.XTuple

        #region VacasSVC.XRule
        public abstract class XRule : XServiceRule<VacasSVC.XDataSet, VacasSVC, VacasSVC.XTuple>
        {
        }
        #endregion VacasSVC.XRule

        #region VacasSVC.XDataSet

        public class XDataSet : XDataSet<VacasSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VacasSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VacasSVC.XTuple> where T : XDataTuple
        {

            public Guid Nascimento => VacasSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => VacasSVC.xISExItem.Nome.ID;
            public Guid NomeMae => VacasSVC.xISExItemMae.Nome.ID;
            public Guid NomePai => VacasSVC.xISExItemPai.Nome.ID;
            public Guid PCRxAnimalID => VacasSVC.xPCRxAnimal.PCRxAnimalID.ID;

            public XDataSet()
            {
                DataSetType = typeof(VacasSVC.XDataSet);
            }

        }
        #endregion VacasSVC.XDataSet

        [Guid(VacasSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VacasSVC))]
        protected class _Service : Service<VacasSVC, XDataSet, XTuple>
        {
            public const String sCID = "7C0815C8-DFD9-46D6-B056-A5FB7A80654B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VacasSVC, XDataSet, XTuple>, XService
             where TModel : VacasSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}