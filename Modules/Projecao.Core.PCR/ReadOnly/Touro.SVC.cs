//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.ReadOnly
{
    [XRegister(typeof(TouroSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\ReadOnly\Touro.dssvc")]
    public class TouroSVC : XSVCModel
    {
        #region TouroFilterFRM

        [XRegister(typeof(TouroFilterFRM), sCID)]
        public class TouroFilterFRM : XFRMModel
        {
            public const String sCID = "019425FA-15A4-4CC4-894B-6958671FA859";
            static TouroFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public TouroFilterFRM()
            {
                ID = gCID;
                Name = "TouroFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 60;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("4982F41B-EA15-48A4-AFB2-DE6340CE34F3"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("E158F4A4-6458-4E5D-BAAB-43E842ADF61D")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("4982F41B-EA15-48A4-AFB2-DE6340CE34F3"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion TouroFilterFRM

        public const String sCID = "5E5F6FF6-755F-4CF2-AC9C-75BC0E344CE7";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID; // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
        public static XSVCReference PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID; // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference ISExItemCategoria_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItemCategoria.ISExItemID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxReprodutor_PCRxReprodutorID_PCRxAnimal_PCRxAnimalID; // PCRxReprodutor.PCRxReprodutorID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID; // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID

        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("1309F8EE-886C-46FC-82FB-C1F73FACB1D1");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("F4AF3C06-AAB2-4CD2-8187-7ACD9662B5E3"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("681AE2FA-B9B1-47E5-9390-FBB6A8E2B05C"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("5A8FDBDD-5188-485A-82CF-1D4BB7A6C856"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("08D2916D-4C4C-4529-96B4-1B694AC7F82F"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("34462D83-6727-4E93-BECE-39FB52F68041"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("80165886-4D29-4DF8-80F7-BC8DE852FA67"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("0E0FFCB4-2394-476A-92AB-A2F9D0223344"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("5242AD7C-5D63-4071-BC12-96A9A06ABF7B"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("302F16CC-768E-4A64-A466-DF9682474A03"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("3C507C20-C597-4FA8-9C2F-4786F2CD71A9"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("4FD354D0-C294-443A-A865-DBA4E4E12C0F"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("1F94B728-6869-419F-B1AC-A7114A4899AD");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("C619904A-4052-47F9-9B1C-460193965178"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("6EB20878-7BE8-4DAD-A07A-C255A43DD509"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("E78EA625-2757-4851-B967-31DCDC1CCEF4"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("B82E984B-9AEB-44F3-848A-411F0C764736"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        #region xISExItemMae 
        public class xISExItemMae : XSVCTable
        {

            public static Guid gCID => new Guid("435F9A77-8DD0-4AC4-88C1-0BDBF7B212E6");

            public xISExItemMae()
            {
                Name = "ISExItem";
                Alias = "ISExItemMae";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeMae";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("34F4C291-C293-42D9-84A0-922FC7C56DBD"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("27C79257-9EBB-42B3-B019-EC869331FC8B"), "Nome", "Nome da Mãe");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("68313A92-A3CF-4705-8EB0-86A5831C612E"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("B5A5EB76-92A4-4C30-B416-1B3CB57A681C"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("24AE57A1-8DE2-4549-8BEC-C5882093E3DC"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("D4FE5F70-41F2-44F1-8DA2-431E41EA94D2"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("7B66246C-4AED-40BF-9B93-1B4054DD07E7"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("FA6CC4DE-835A-40C7-835F-7A6CE9B678B2"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("E2116042-5122-4ED2-BE04-87ED11AE0AAF"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemMae 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("8C354E31-45B1-4957-8A01-900C7A36D6B8");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("143BF69B-6704-463D-8F1D-C2570A0984CC"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("E158F4A4-6458-4E5D-BAAB-43E842ADF61D"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("C8D409CE-71EB-42B1-84A7-C968389C4A5D"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("0AF7DB07-AA47-4D9E-9A37-631010E0FF64"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("F334F45B-7DE4-4659-9937-16AEB76E8B49"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("965AED17-F96B-413B-973E-92638973D444"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("5732E405-6A9F-447C-BCDD-F6991CEEBA09"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("50EF0404-4916-4B30-A8DE-8F1EB1CA5308"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("71B367CD-5071-4250-B5F5-9108FAA9A1C7"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("D0827246-E7AD-472C-B197-F7AD02266CB7");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("D2855BDF-60C6-426E-9951-26530B6F1CB2"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("F3D4D8F5-3623-4506-9CEB-FBFC08C286FB"), "PCRxMaeID", "Animal");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("28102131-F498-48AB-8E84-F4613A8895EF"), "PCRxPaiID", "Animal");
        }
        #endregion xPCRxAnimalFiliacao 


        #region xPCRxReprodutor 
        public class xPCRxReprodutor : XSVCTable
        {

            public static Guid gCID => new Guid("D72023E2-9BD0-4072-B922-D6C0AD317F27");

            public xPCRxReprodutor()
            {
                Name = "PCRxReprodutor";
                Alias = "PCRxReprodutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.gCID;

                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                Items.Add(ApenasSemem, ApenasSemem.ID);
                ApenasSemem.Owner = this;
                ApenasSemem.OwnerID = ID;
                ApenasSemem.TableName = Name;
            }

            public static XORMFaceField PCRxReprodutorID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.PCRxReprodutorID, new Guid("9F8E8951-F080-434F-B75E-D8857AF842D3"), "PCRxReprodutorID", "Reprodutor");
            public static XORMField ApenasSemem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.ApenasSemem, new Guid("B9DF8280-FECB-42AD-AAFB-DA1FBB2BD979"), "ApenasSemem", "Apenas Sêmem");
        }
        #endregion xPCRxReprodutor 


        #region xISExItemPai 
        public class xISExItemPai : XSVCTable
        {

            public static Guid gCID => new Guid("FA1A31A6-F52A-4300-A8C1-57E5FC887987");

            public xISExItemPai()
            {
                Name = "ISExItem";
                Alias = "ISExItemPai";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomePai";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("110908F3-882E-4404-970F-C2124C2BA155"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("6F791623-8DF1-4A74-AE5E-82C1B46B75BC"), "Nome", "Nome do Pai");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("F75876D5-E6C9-47D8-BA1A-7F56654C0071"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("20F7EE64-593D-4313-B6DA-08E9EC55EA63"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("6737C223-261D-4736-9B9E-8C1BD89A14FC"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("AB805C1C-478B-43DE-8DE1-C4EDB5F5AEF9"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("F81D8A55-C8F9-4CDB-BB36-1B658BFD85CD"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("81A0630C-1C4E-442F-9AAD-5DDA8500A5D7"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("B9775629-1912-43FE-B023-0AF8AE96CD31"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemPai 


        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xISExItemMae ISExItemMae;
        public xISExItemPai ISExItemPai;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;
        public xPCRxReprodutor PCRxReprodutor;

        public TouroSVC()
        {
            TupleType = typeof(TouroSVC.XTuple);
            DataSetType = typeof(TouroSVC.XDataSet);
            ServiceRuleCID = new Guid("6E1518C0-98A6-4932-9471-F9F18683C04C");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("5E5F6FF6-755F-4CF2-AC9C-75BC0E344CE7");
            Name = "Touro";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            FilterFormID = new Guid("019425FA-15A4-4CC4-894B-6958671FA859");
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xPCRxAnimal.Nascimento.ID, xISExItemPai.Nome.ID, xISExItemMae.Nome.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID, xISExItemPai.Nome.ID };
            DataSetFields = new Guid[] { xISExItem.Nome.ID, xPCRxAnimal.Nascimento.ID, xISExItemMae.Nome.ID, xISExItemPai.Nome.ID, xPCRxAnimal.PCRxAnimalID.ID };
            PKField = xPCRxAnimal.PCRxAnimalID.ID;
            ConfigTableID = new Guid("01BC341A-0142-4C60-87A7-9228AD3A73E9");
            MasterRuleCID = new Guid("6E1518C0-98A6-4932-9471-F9F18683C04C");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            ISExItemMae = new xISExItemMae();
            ISExItemMae.IsReadOnly = true;
            AddTable(ISExItemMae);
            ISExItemPai = new xISExItemPai();
            ISExItemPai.IsReadOnly = true;
            AddTable(ISExItemPai);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = true;
            AddTable(PCRxAnimal);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = true;
            AddTable(PCRxAnimalFiliacao);
            PCRxReprodutor = new xPCRxReprodutor();
            PCRxReprodutor.IsReadOnly = true;
            AddTable(PCRxReprodutor);
            MasterTableID = PCRxAnimal.ID;
            ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID = AddReference(new XSVCReference(new Guid("05F3A33D-9927-423F-89A5-30085A13FE1A"), "FK_05F3A33D9927423F89A530085A13FE1A", TouroSVC.xISExItemMae.gCID, xISExItemMae.ISExItemID.ID, TouroSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxMaeID.ID, XJoinType.Inner)); // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
            PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("19E731A9-311C-49B6-BF09-675CC725443A"), "FK_19E731A9311C49B6BF09675CC725443A", TouroSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, TouroSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
            ISExItemCategoria_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("3605D51D-027F-4607-AAF3-A938CD8C1715"), "FK_3605D51D027F4607AAF3A938CD8C1715", TouroSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, TouroSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> PCRxAnimal.PCRxAnimalID
            PCRxReprodutor_PCRxReprodutorID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("76C51375-8E46-4978-A12C-223C9DD67F6F"), "FK_76C513758E464978A12C223C9DD67F6F", TouroSVC.xPCRxReprodutor.gCID, xPCRxReprodutor.PCRxReprodutorID.ID, TouroSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxReprodutor.PCRxReprodutorID --> PCRxAnimal.PCRxAnimalID
            ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("D124376F-6115-40C3-88E5-348EE8D95627"), "FK_D124376F611540C388E5348EE8D95627", TouroSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, TouroSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
            ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID = AddReference(new XSVCReference(new Guid("F7CECFC6-4C84-438A-A3E0-C4785ADB0B04"), "FK_F7CECFC64C84438AA3E0C4785ADB0B04", TouroSVC.xISExItemPai.gCID, xISExItemPai.ISExItemID.ID, TouroSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxPaiID.ID, XJoinType.Inner)); // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
            xPCRxAnimal.Nascimento.IsReadOnly = true;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItemMae.Nome.IsReadOnly = true;
            xISExItemMae.Nome.Length = 60;
            xISExItemMae.Nome.IsDataField = true;
            xISExItemMae.Nome.AllowEmpty = true;
            xISExItemPai.Nome.IsReadOnly = true;
            xISExItemPai.Nome.OrderType = XOrderType.Asc;
            xISExItemPai.Nome.Length = 60;
            xISExItemPai.Nome.IsDataField = true;
            xISExItemPai.Nome.FilterUse = true;
            xISExItemPai.Nome.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xPCRxAnimal.ERPxGeneroID);
            pWhere.Add(XOperator.EqualTo);
            pWhere.Add(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.XDefault.Masculino);
            pWhere.Add(xPCRxAnimal.PCRxAnimalFaseID);
            pWhere.Add(XOperator.EqualTo);
            pWhere.Add(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.XDefault.Touro);
        }

        #region XFields

        public class XFields
        {
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField NomeMae => xISExItemMae.Nome;
        public XORMField NomePai => xISExItemPai.Nome;
        public XORMField PCRxAnimalID => xPCRxAnimal.PCRxAnimalID;
        }
        #endregion XFields
        #region TouroSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[TouroSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[TouroSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(TouroSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[TouroSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[TouroSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(TouroSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeMae
        {
            get
            {
                return (String)Value[TouroSVC.xISExItemMae.Nome.ID];
            }
            set
            {
                Value[TouroSVC.xISExItemMae.Nome.ID] = value;
            }
        }
        public String? oNomeMae
        {
            get
            {
                GetOldValue(TouroSVC.xISExItemMae.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomePai
        {
            get
            {
                return (String)Value[TouroSVC.xISExItemPai.Nome.ID];
            }
            set
            {
                Value[TouroSVC.xISExItemPai.Nome.ID] = value;
            }
        }
        public String? oNomePai
        {
            get
            {
                GetOldValue(TouroSVC.xISExItemPai.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[TouroSVC.xPCRxAnimal.PCRxAnimalID.ID];
            }
            set
            {
                Value[TouroSVC.xPCRxAnimal.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(TouroSVC.xPCRxAnimal.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion TouroSVC.XTuple

        #region TouroSVC.XRule
        public abstract class XRule : XServiceRule<TouroSVC.XDataSet, TouroSVC, TouroSVC.XTuple>
        {
        }
        #endregion TouroSVC.XRule

        #region TouroSVC.XDataSet

        public class XDataSet : XDataSet<TouroSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(TouroSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<TouroSVC.XTuple> where T : XDataTuple
        {

            public Guid Nascimento => TouroSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => TouroSVC.xISExItem.Nome.ID;
            public Guid NomeMae => TouroSVC.xISExItemMae.Nome.ID;
            public Guid NomePai => TouroSVC.xISExItemPai.Nome.ID;
            public Guid PCRxAnimalID => TouroSVC.xPCRxAnimal.PCRxAnimalID.ID;

            public XDataSet()
            {
                DataSetType = typeof(TouroSVC.XDataSet);
            }

        }
        #endregion TouroSVC.XDataSet

        [Guid(TouroSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(TouroSVC))]
        protected class _Service : Service<TouroSVC, XDataSet, XTuple>
        {
            public const String sCID = "50F7AE46-B439-4F7D-8ACF-FFC7CC9C5E03";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<TouroSVC, XDataSet, XTuple>, XService
             where TModel : TouroSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}