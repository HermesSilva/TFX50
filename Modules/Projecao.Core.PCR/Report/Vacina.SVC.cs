//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Report
{
    [XRegister(typeof(VacinaSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Report\Vacina.dssvc")]
    public class VacinaSVC : XSVCModel
    {
        public const String sCID = "8F3E8626-0DC3-4E81-A3D2-1A3645324635";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxAnimalEvento_PCRxAnimalID_PCRxAnimal_PCRxAnimalID; // PCRxAnimalEvento.PCRxAnimalID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxAnimalEvento_ISExItemID_ISExItemCategoria_ISExItemID; // PCRxAnimalEvento.ISExItemID --> ISExItemCategoria.ISExItemID
        public static XSVCReference PCRxEvento_PCRxEventoID_PCRxAnimalEvento_PCRxAnimalEventoID; // PCRxEvento.PCRxEventoID --> PCRxAnimalEvento.PCRxAnimalEventoID
        public static XSVCReference ISExItem_ISExItemID_ISExItemCategoria_ISExItemID; // ISExItem.ISExItemID --> ISExItemCategoria.ISExItemID

        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("2A3807F1-8148-4BD9-B734-CA7F4E3E0FCA");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "Quantidade";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("48456C5C-7218-46F4-8926-9753660B5477"), "PCRxAnimalID", "Quantidade");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("BEC7941E-9684-4177-B219-1116B10E6015"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("06121522-C74B-45EB-A3D9-BC03B3AD570D"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("C6E87438-4F13-47DA-B476-80684A128711"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("E5DBC4DF-6668-4DC1-9426-F9DB4FBFE3A6"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("446A83F3-1E8C-47A6-9B4F-FB2212A6F950"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("09BCE565-A030-49A9-A766-309877CED758"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("EC4D5289-94FB-4D58-97CD-98B871F52C68"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("0C76C764-D881-4456-A1AB-325940C22A2E"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("BA67DC52-245A-4E89-9FB7-A4E6C218B75E"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("D09C555C-39C2-473D-B83E-0E37100B30BF"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("2E5266A8-7296-4B5D-A036-0584E67FDD29");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("96F9C397-E900-44C4-8721-B6CC376DD4D3"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("543BCA52-D78E-4125-A701-571E46D58281"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("3A92AAF3-E49A-4D3E-853C-E880A0F57D3D"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("0138C76A-5CB8-4E73-9947-31A55FC87D3A"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("334794A9-C19D-4E59-B41B-883489CF9DB4");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("2F55AD46-6489-47E7-9E82-22D8EAE655AD"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("08380222-3BF3-4098-A58C-AD81F9120895"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("4E43BB0C-73BE-45A4-9B4C-3F143DC2AEB0"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("4E91183E-4218-4304-9573-DC83B9E41E5F"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("13F30D00-6784-4FF8-8D97-46A61606B283"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("630E0A1C-34B0-4BBB-8F10-D65D4EA580D7"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("43A1827F-F56F-4874-AB8F-C22D167C8934"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("7D3546C1-6642-4D72-9CE4-D6CDD7F72AE1"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("2E7FE617-6775-4AAF-91FC-8A8024CCDF73"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xPCRxEvento 
        public class xPCRxEvento : XSVCTable
        {

            public static Guid gCID => new Guid("629A5EC4-6C94-4FAA-B13B-6BA40E9BE600");

            public xPCRxEvento()
            {
                Name = "PCRxEvento";
                Alias = "PCRxEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.gCID;

                Items.Add(PCRxEventoID, PCRxEventoID.ID);
                PCRxEventoID.Owner = this;
                PCRxEventoID.OwnerID = ID;
                PCRxEventoID.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(PCRxEventoTipoID, PCRxEventoTipoID.ID);
                PCRxEventoTipoID.Owner = this;
                PCRxEventoTipoID.OwnerID = ID;
                PCRxEventoTipoID.TableName = Name;
                Items.Add(NTRxMobilePontoDestaqueID, NTRxMobilePontoDestaqueID.ID);
                NTRxMobilePontoDestaqueID.Owner = this;
                NTRxMobilePontoDestaqueID.OwnerID = ID;
                NTRxMobilePontoDestaqueID.TableName = Name;
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
            }

            public static XORMFaceField PCRxEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoID, new Guid("8EF6EAE5-5163-495F-BE33-8C32DC0E9324"), "PCRxEventoID", "Evento");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Data, new Guid("CA8B164D-851A-41E0-B377-8A61A97DC82C"), "Data", "Data");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Observacao, new Guid("B5BE927E-258B-44BA-B415-EDA7E2EB8A77"), "Observacao", "Observação");
            public static XORMFKField PCRxEventoTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoTipoID, new Guid("9AD3358C-8E12-42C7-B820-F10672EAC32A"), "PCRxEventoTipoID", "Tipo de Evento");
            public static XORMFKField NTRxMobilePontoDestaqueID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.NTRxMobilePontoDestaqueID, new Guid("9E708834-25D8-4771-90A8-F1CF49A00758"), "NTRxMobilePontoDestaqueID", "Ponto de Destaque");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Latitude, new Guid("57D553A8-88CE-4F81-B2B3-D8C78021887C"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Longitude, new Guid("2BDEB731-5FB1-4524-BE9C-EA362D88125C"), "Longitude", "Longitude");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.CTLxUsuarioID, new Guid("66AFFFF5-4749-4C7A-9FB3-E4A76C9AFF36"), "CTLxUsuarioID", "Usuário");
        }
        #endregion xPCRxEvento 


        #region xPCRxAnimalEvento 
        public class xPCRxAnimalEvento : XSVCTable
        {

            public static Guid gCID => new Guid("AE6573D4-114F-442A-BD33-9A395E2C15E1");

            public xPCRxAnimalEvento()
            {
                Name = "PCRxAnimalEvento";
                Alias = "PCRxAnimalEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.gCID;

                Items.Add(PCRxAnimalEventoID, PCRxAnimalEventoID.ID);
                PCRxAnimalEventoID.Owner = this;
                PCRxAnimalEventoID.OwnerID = ID;
                PCRxAnimalEventoID.TableName = Name;
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalEventoID, new Guid("C8B6400C-2F60-4F98-AD6A-BB6D4FECCBD8"), "PCRxAnimalEventoID", "Eventos de Animais");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.SYSxPessoaID, new Guid("753C684C-5C88-456B-A2A5-2F66999C2134"), "SYSxPessoaID", "Responsável");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.ISExItemID, new Guid("51D49FB6-746C-43B3-A397-0A61DF0835D4"), "ISExItemID", "Item");
            public static XORMFKField PCRxReprodutorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxReprodutorID, new Guid("1DC77B7F-699B-43DD-8A53-43E23A207208"), "PCRxReprodutorID", "Reprodutor");
            public static XORMFKField PCRxAnimalID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalID, new Guid("7BEE39D8-F547-485A-8CE1-54EF427A7934"), "PCRxAnimalID", "Animal");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.Valor, new Guid("A665527B-8F30-4FAB-AA0B-61DF15911DC6"), "Valor", "Valor");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalLoteID, new Guid("2E958771-0529-4CC9-A106-C289609C1967"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxIATFFaseID, new Guid("68043E9F-E217-4028-9194-8A7513301252"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalEstadoID, new Guid("2E387C82-C585-498E-8D85-9E4A2E96D731"), "PCRxAnimalEstadoID", "Estado");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxIATFFaseTipoID, new Guid("F10DAA32-A29D-4B14-B8DC-D07F89706975"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.Grupo, new Guid("71E667A1-5CB8-489B-93A9-4E7CD3A653E6"), "Grupo", "Grupo");
        }
        #endregion xPCRxAnimalEvento 


        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalEvento PCRxAnimalEvento;
        public xPCRxEvento PCRxEvento;
        public static readonly XORMParameterField PrimaryKeyID = new XORMParameterField(new Guid("707B46DF-4142-4404-945C-BB334C1A345D"), "PrimaryKeyID", "Chave", XInt32.CID, 0, 0, false, gCID, null);

        public VacinaSVC()
        {
            TupleType = typeof(VacinaSVC.XTuple);
            DataSetType = typeof(VacinaSVC.XDataSet);
            ServiceRuleCID = new Guid("B6488E35-6A99-4B57-89AD-348B67E7CFA7");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("8F3E8626-0DC3-4E81-A3D2-1A3645324635");
            Name = "Vacina";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            DataSetFields = new Guid[] { xISExItem.Nome.ID, xPCRxEvento.Data.ID, PrimaryKeyID.ID, xPCRxAnimal.PCRxAnimalID.ID };
            PKField = PrimaryKeyID.ID;
            MasterRuleCID = new Guid("B6488E35-6A99-4B57-89AD-348B67E7CFA7");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = true;
            AddTable(PCRxAnimal);
            PCRxAnimalEvento = new xPCRxAnimalEvento();
            PCRxAnimalEvento.IsReadOnly = true;
            AddTable(PCRxAnimalEvento);
            PCRxEvento = new xPCRxEvento();
            PCRxEvento.IsReadOnly = true;
            AddTable(PCRxEvento);
            MasterTableID = PCRxAnimal.ID;
            PCRxAnimalEvento_PCRxAnimalID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("3E8F661C-12D3-41A0-861B-919499EC2BD2"), "FK_3E8F661C12D341A0861B919499EC2BD2", VacinaSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxAnimalID.ID, VacinaSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxAnimalEvento.PCRxAnimalID --> PCRxAnimal.PCRxAnimalID
            PCRxAnimalEvento_ISExItemID_ISExItemCategoria_ISExItemID = AddReference(new XSVCReference(new Guid("79138DDC-B43E-4B68-BD94-F53B2C97D102"), "FK_79138DDCB43E4B68BD94F53B2C97D102", VacinaSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.ISExItemID.ID, VacinaSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, XJoinType.Inner)); // PCRxAnimalEvento.ISExItemID --> ISExItemCategoria.ISExItemID
            PCRxEvento_PCRxEventoID_PCRxAnimalEvento_PCRxAnimalEventoID = AddReference(new XSVCReference(new Guid("AFAB714F-1765-4CD9-B32E-039C4C727D0A"), "FK_AFAB714F17654CD9B32E039C4C727D0A", VacinaSVC.xPCRxEvento.gCID, xPCRxEvento.PCRxEventoID.ID, VacinaSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxAnimalEventoID.ID, XJoinType.Inner)); // PCRxEvento.PCRxEventoID --> PCRxAnimalEvento.PCRxAnimalEventoID
            ISExItem_ISExItemID_ISExItemCategoria_ISExItemID = AddReference(new XSVCReference(new Guid("E500423B-87CA-46D8-B2B2-5AAF43506601"), "FK_E500423B87CA46D8B2B25AAF43506601", VacinaSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, VacinaSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> ISExItemCategoria.ISExItemID
            AddField(PrimaryKeyID);
            PrimaryKeyID.IsParam = true;
            xPCRxEvento.Data.IsReadOnly = true;
            xPCRxEvento.Data.Mask = "dd/MM/yyyy";
            xPCRxEvento.Data.DBFunctionID = new Guid("B7985BF5-4492-4F98-AB58-FC194257FD1D");
            xPCRxEvento.Data.IsDataField = true;
            xPCRxEvento.Data.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            PrimaryKeyID.GeneratePK = true;
            PrimaryKeyID.IsReadOnly = false;
            PrimaryKeyID.Length = 0;
            PrimaryKeyID.Scale = 0;
            PrimaryKeyID.IsDataField = true;
            PrimaryKeyID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalID.TypeID = XInt32.CID;
            xPCRxAnimal.PCRxAnimalID.DefaultValue = default(Int32);
            xPCRxAnimal.PCRxAnimalID.DBFunctionID = new Guid("7AA76D22-B9AF-477A-A15B-6018CFA7BD4D");
            xPCRxAnimal.PCRxAnimalID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Data => xPCRxEvento.Data;
        public XORMField Nome => xISExItem.Nome;
        public XORMField PrimaryKeyID => VacinaSVC.PrimaryKeyID;
        public XORMField Quantidade => xPCRxAnimal.PCRxAnimalID;
        }
        #endregion XFields
        #region VacinaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[VacinaSVC.xPCRxEvento.Data.ID];
            }
            set
            {
                Value[VacinaSVC.xPCRxEvento.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(VacinaSVC.xPCRxEvento.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VacinaSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 PrimaryKeyID
        {
            get
            {
                return (Int32)Value[VacinaSVC.PrimaryKeyID.ID];
            }
            set
            {
                Value[VacinaSVC.PrimaryKeyID.ID] = value;
            }
        }
        public Int32? oPrimaryKeyID
        {
            get
            {
                GetOldValue(VacinaSVC.PrimaryKeyID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 Quantidade
        {
            get
            {
                return (Int32)Value[VacinaSVC.xPCRxAnimal.PCRxAnimalID.ID];
            }
            set
            {
                Value[VacinaSVC.xPCRxAnimal.PCRxAnimalID.ID] = value;
            }
        }
        public Int32? oQuantidade
        {
            get
            {
                GetOldValue(VacinaSVC.xPCRxAnimal.PCRxAnimalID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VacinaSVC.XTuple

        #region VacinaSVC.XRule
        public abstract class XRule : XServiceRule<VacinaSVC.XDataSet, VacinaSVC, VacinaSVC.XTuple>
        {
        }
        #endregion VacinaSVC.XRule

        #region VacinaSVC.XDataSet

        public class XDataSet : XDataSet<VacinaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VacinaSVC.XTuple> where T : XDataTuple
        {

            public Guid Data => VacinaSVC.xPCRxEvento.Data.ID;
            public Guid Nome => VacinaSVC.xISExItem.Nome.ID;
            public Guid PrimaryKeyID => VacinaSVC.PrimaryKeyID.ID;
            public Guid Quantidade => VacinaSVC.xPCRxAnimal.PCRxAnimalID.ID;

            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }

        }
        #endregion VacinaSVC.XDataSet

        [Guid(VacinaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VacinaSVC))]
        protected class _Service : Service<VacinaSVC, XDataSet, XTuple>
        {
            public const String sCID = "616E2D12-EC2B-44EB-BC27-BFF3B6E4103A";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VacinaSVC, XDataSet, XTuple>, XService
             where TModel : VacinaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}