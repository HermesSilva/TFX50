//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using Projecao.Core.PCR.Report;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Report
{
    [XRegister(typeof(DashboardSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Report\Dashboard.dssvc")]
    public class DashboardSVC : XSVCModel
    {
        public const String sCID = "45ABCF4F-2B40-4587-BC71-234CF6750534";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_SYSxEmpresa_SYSxEmpresaID; // SYSxPessoa.SYSxPessoaID --> SYSxEmpresa.SYSxEmpresaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("416A3695-E361-40D9-B379-A2A3BC74E5B6");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("1E5C6497-370D-46AD-BC2E-7EA70B7041E0"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("CC9E0814-BFF3-45F2-AC4E-0DAED2DE8821"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xSYSxEmpresa 
        public class xSYSxEmpresa : XSVCTable
        {

            public static Guid gCID => new Guid("48A7FD13-216D-4E35-BFB1-9B667EAA7AC7");

            public xSYSxEmpresa()
            {
                Name = "SYSxEmpresa";
                Alias = "SYSxEmpresa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID;

                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "Sigla";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(SYSxEmpresaMatrizID, SYSxEmpresaMatrizID.ID);
                SYSxEmpresaMatrizID.Owner = this;
                SYSxEmpresaMatrizID.OwnerID = ID;
                SYSxEmpresaMatrizID.TableName = Name;
            }

            public static XORMFaceField Sigla = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.Sigla, new Guid("9C01D4A2-485C-454A-8875-EC2E8B0E77A7"), "Sigla", "Sigla");
            public static XORMPKField SYSxEmpresaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID, new Guid("D19C771F-046C-4FE5-844C-A6DB69DFB12C"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEstadoID, new Guid("197A8669-22B7-4C97-B02B-0E5764278A55"), "SYSxEstadoID", "Estado");
            public static XORMFKField SYSxEmpresaMatrizID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaMatrizID, new Guid("147377B2-DCDC-478C-BFAA-8ACE299E016E"), "SYSxEmpresaMatrizID", "Empresa");
        }
        #endregion xSYSxEmpresa 


        public xSYSxEmpresa SYSxEmpresa;
        public xSYSxPessoa SYSxPessoa;

        public DashboardSVC()
        {
            TupleType = typeof(DashboardSVC.XTuple);
            DataSetType = typeof(DashboardSVC.XDataSet);
            ServiceRuleCID = new Guid("E337A1BC-E0EB-4006-B555-5BFF2A036DFF");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("45ABCF4F-2B40-4587-BC71-234CF6750534");
            Name = "Dashboard";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xSYSxEmpresa.Sigla.ID, xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xSYSxEmpresa.Sigla.ID, xSYSxPessoa.Nome.ID, xSYSxEmpresa.SYSxEmpresaID.ID };
            PKField = xSYSxEmpresa.SYSxEmpresaID.ID;
            ConfigTableID = new Guid("A50A4CD0-B499-4F2A-96C3-B6925817205D");
            MasterRuleCID = new Guid("E337A1BC-E0EB-4006-B555-5BFF2A036DFF");
            XSubServiceItem ss383890B8D1E84243B10EE095CD33205E = new XSubServiceItem(RebanhoAgrupadoSVC.gCID, RebanhoAgrupadoSVC.EmpresaID.ID, DashboardSVC.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, true, XSubSeviceType.Default);
            ss383890B8D1E84243B10EE095CD33205E.Rights = new Int16[] { 1 }; 
            ss383890B8D1E84243B10EE095CD33205E.LateLoad = false;
            SubServices.Add(ss383890B8D1E84243B10EE095CD33205E);
            XSubServiceItem ss9F33DC3989B547B2AD112BBED3E4FB83 = new XSubServiceItem(IATFEficaciaSVC.gCID, IATFEficaciaSVC.EmpresaID.ID, DashboardSVC.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, true, XSubSeviceType.Default);
            ss9F33DC3989B547B2AD112BBED3E4FB83.Rights = new Int16[] { 1 }; 
            ss9F33DC3989B547B2AD112BBED3E4FB83.LateLoad = false;
            SubServices.Add(ss9F33DC3989B547B2AD112BBED3E4FB83);
            SYSxEmpresa = new xSYSxEmpresa();
            SYSxEmpresa.IsReadOnly = true;
            AddTable(SYSxEmpresa);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = SYSxEmpresa.ID;
            SYSxPessoa_SYSxPessoaID_SYSxEmpresa_SYSxEmpresaID = AddReference(new XSVCReference(new Guid("E7705C5E-DF31-4D26-923F-95BF5CDBA641"), "FK_E7705C5EDF314D26923F95BF5CDBA641", DashboardSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, DashboardSVC.xSYSxEmpresa.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> SYSxEmpresa.SYSxEmpresaID
            XSVCReference FK_5634E850011B44EA804E9B78D4EAE984 = new XSVCReference(new Guid("5634E850-011B-44EA-804E-9B78D4EAE984"), "FK_5634E850011B44EA804E9B78D4EAE984", RebanhoAgrupadoSVC.gCID, RebanhoAgrupadoSVC.EmpresaID.ID, SYSxEmpresa.ID, DashboardSVC.xSYSxEmpresa.SYSxEmpresaID.ID, XJoinType.SubService); // RebanhoAgrupadoSVC.EmpresaID --> Dashboard.SYSxEmpresaID
            FK_5634E850011B44EA804E9B78D4EAE984.IsLowRelevance = false;
            AddReference(FK_5634E850011B44EA804E9B78D4EAE984);
            XSVCReference FK_7579586E458940709ACDC03ECD384ADA = new XSVCReference(new Guid("7579586E-4589-4070-9ACD-C03ECD384ADA"), "FK_7579586E458940709ACDC03ECD384ADA", IATFEficaciaSVC.gCID, IATFEficaciaSVC.EmpresaID.ID, SYSxEmpresa.ID, DashboardSVC.xSYSxEmpresa.SYSxEmpresaID.ID, XJoinType.SubService); // IATFEficaciaSVC.EmpresaID --> Dashboard.SYSxEmpresaID
            FK_7579586E458940709ACDC03ECD384ADA.IsLowRelevance = false;
            AddReference(FK_7579586E458940709ACDC03ECD384ADA);
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xSYSxEmpresa.Sigla.IsReadOnly = true;
            xSYSxEmpresa.Sigla.Length = 25;
            xSYSxEmpresa.Sigla.IsDataField = true;
            xSYSxEmpresa.Sigla.AllowEmpty = true;
            xSYSxEmpresa.SYSxEmpresaID.IsReadOnly = true;
            xSYSxEmpresa.SYSxEmpresaID.IsDataField = true;
            xSYSxEmpresa.SYSxEmpresaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField Sigla => xSYSxEmpresa.Sigla;
        public XORMField SYSxEmpresaID => xSYSxEmpresa.SYSxEmpresaID;
        }
        #endregion XFields
        #region DashboardSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Nome
        {
            get
            {
                return (String)Value[DashboardSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[DashboardSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(DashboardSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Sigla
        {
            get
            {
                return (String)Value[DashboardSVC.xSYSxEmpresa.Sigla.ID];
            }
            set
            {
                Value[DashboardSVC.xSYSxEmpresa.Sigla.ID] = value;
            }
        }
        public String? oSigla
        {
            get
            {
                GetOldValue(DashboardSVC.xSYSxEmpresa.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[DashboardSVC.xSYSxEmpresa.SYSxEmpresaID.ID];
            }
            set
            {
                Value[DashboardSVC.xSYSxEmpresa.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(DashboardSVC.xSYSxEmpresa.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion DashboardSVC.XTuple

        #region DashboardSVC.XRule
        public abstract class XRule : XServiceRule<DashboardSVC.XDataSet, DashboardSVC, DashboardSVC.XTuple>
        {
        }
        #endregion DashboardSVC.XRule

        #region DashboardSVC.XDataSet

        public class XDataSet : XDataSet<DashboardSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(DashboardSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<DashboardSVC.XTuple> where T : XDataTuple
        {

            public Guid Nome => DashboardSVC.xSYSxPessoa.Nome.ID;
            public Guid Sigla => DashboardSVC.xSYSxEmpresa.Sigla.ID;
            public Guid SYSxEmpresaID => DashboardSVC.xSYSxEmpresa.SYSxEmpresaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(DashboardSVC.XDataSet);
            }

            private Projecao.Core.PCR.Report.RebanhoAgrupadoSVC.XDataSet _RebanhoAgrupadoDataSet;

            public Projecao.Core.PCR.Report.RebanhoAgrupadoSVC.XDataSet RebanhoAgrupadoDataSet
            {
                get
                {
                    if (_RebanhoAgrupadoDataSet == null)
                    {
                        _RebanhoAgrupadoDataSet.IsReadOnly = true;
                        _RebanhoAgrupadoDataSet = (Projecao.Core.PCR.Report.RebanhoAgrupadoSVC.XDataSet)Children.Get(Projecao.Core.PCR.Report.RebanhoAgrupadoSVC.gCID);
                    }
                    return  _RebanhoAgrupadoDataSet;
                }
            }

            private Projecao.Core.PCR.Report.IATFEficaciaSVC.XDataSet _IATFEficaciaDataSet;

            public Projecao.Core.PCR.Report.IATFEficaciaSVC.XDataSet IATFEficaciaDataSet
            {
                get
                {
                    if (_IATFEficaciaDataSet == null)
                    {
                        _IATFEficaciaDataSet.IsReadOnly = true;
                        _IATFEficaciaDataSet = (Projecao.Core.PCR.Report.IATFEficaciaSVC.XDataSet)Children.Get(Projecao.Core.PCR.Report.IATFEficaciaSVC.gCID);
                    }
                    return  _IATFEficaciaDataSet;
                }
            }

        }
        #endregion DashboardSVC.XDataSet

        [Guid(DashboardSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(DashboardSVC))]
        protected class _Service : Service<DashboardSVC, XDataSet, XTuple>
        {
            public const String sCID = "5A293E4D-0E21-4814-8F7F-4AD991F517B6";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<DashboardSVC, XDataSet, XTuple>, XService
             where TModel : DashboardSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}