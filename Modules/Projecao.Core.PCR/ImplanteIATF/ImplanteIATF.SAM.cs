//<auto-generated/>
using System;
using TFX.Core.Data;
using System.Drawing;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.DIC;
using TFX.Core.Reflections;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;

namespace Projecao.Core.PCR.ImplanteIATF
{
    [XRegister(typeof(ImplanteIATFSAM), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\ImplanteIATF\ImplanteIATF.dssam")]
    public class ImplanteIATFSAM : XAPPModel
    {
        #region xImplanteIATFACT

        [XRegister(typeof(xImplanteIATFACT), sCID)]
        public class xImplanteIATFACT : XAPPStep
        {
            public const String sCID = "C86B66A3-5AA0-4708-BD3A-582E1E254354";
            public static Guid gCID = new Guid(sCID);
            public xImplanteIATFACT(Guid pID, String pName, String pTitle, Guid pFormID, Guid pDataSourceID)
              :base(pID, pName, pTitle, pFormID, pDataSourceID)
            {
            }
        }

        #endregion xImplanteIATFACT

        #region ImplanteIATFFRM

        [XRegister(typeof(ImplanteIATFFRM), sCID)]
        public class ImplanteIATFFRM : XFRMModel
        {
            public const String sCID = "3AE9F52F-44A9-44ED-B182-ECBDD7DFE37B";
            static ImplanteIATFFRM()
            {
                gCID = new Guid(sCID);
            }
            public ImplanteIATFFRM()
            {
                ID = gCID;
                Name = "ImplanteIATF";
                Title = "";
                MinRows = 11;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 60;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
                AddItem(ISExItemID);
                ISExItemID.CanInsert = true;
                ISExItemID.CanUpdate = true;
                ISExItemID.RowCount = 10;
                ISExItemID.ColCount = 32;
                ISExItemID.RowCountSmall = 10;
                ISExItemID.ColCountSmall = 32;
                ISExItemID.IsHidden = false;
                ISExItemID.IsHiddenSmall = false;
                ISExItemID.AdditionalTitle = "";
                ISExItemID.Location = 2;
                ISExItemID.EditorCID = new Guid("083C4AC6-6C57-4BE4-8EFB-11B6B442FA4C");
                ISExItemID.FormImplace = true;
                ISExItemID.Operator = XOperator.EqualTo;
                ISExItemID.JustifyHeight = true;
                ISExItemID.AllowEmpty = true;
                ISExItemID.FontColor = "#000000";
                ISExItemID.FontStyle = XFontStyle.Normal;
                ISExItemID.ShowFooter = false;
                ISExItemID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                ISExItemID.Scale = 0;
                ISExItemID.Length = 0;
                ISExItemID.SearchAction = XSearchAction.Default;
                ISExItemID.TypeID = XGuid.CID;
                ISExItemID.AdditionalFieldsID = new Guid[] {  };
                ISExItemID.AdditionalDataFieldsID = new Guid[] {  };
                ISExItemID.GridFormCID = new Guid("731B0A1E-4941-44F5-B1F2-F3BA9B140258");
                ISExItemID.TargetFilterFieldID = new Guid[] {  };
                ISExItemID.SourceFilterFieldID = new Guid[] {  };
                ISExItemID.TargetDisplayFieldID = new Guid[] {  };
                ISExItemID.SourceDisplayFieldID = new Guid[] {  };
                ISExItemID.DataSourceID = global::Projecao.Core.PCR.Vacina.VacinaLoteSVC.gCID;
                ISExItemID.AutoLoad = false;
                ISExItemID.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                ISExItemID.FilterInative = true;
                ISExItemID.IsAnswer = false;
                ISExItemID.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("D3B8AD63-FC04-450B-8F0F-FBE18CB7ADDC"), "Nome", "Nome do Implante para IATF", XString.CID, 1, 32, false, gCID, null, new Guid("AB185ED9-3D02-4157-B7C6-C70B8E17E605")); // String;
            public XFRMField ISExItemID = new XFRMField(new Guid("C422C019-D9AA-43D3-86E1-262B12EA4DA2"), "ISExItemID", "Lotes do Implante para IATF", XGuid.CID, 10, 32, false, gCID, null, new Guid("979E54A4-971E-4D6D-BD3E-415EFE470FC1")); // Guid;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("D3B8AD63-FC04-450B-8F0F-FBE18CB7ADDC"), "Nome", "Nome do Implante para IATF", typeof(String));
                public static XFieldInfo ISExItemID = new XFieldInfo(new Guid("C422C019-D9AA-43D3-86E1-262B12EA4DA2"), "ISExItemID", "Lotes do Implante para IATF", typeof(Guid));
            }
        }

        #endregion ImplanteIATFFRM

        #region ISExItemIDFRM

        [XRegister(typeof(ISExItemIDFRM), sCID)]
        public class ISExItemIDFRM : XFRMModel
        {
            public const String sCID = "731B0A1E-4941-44F5-B1F2-F3BA9B140258";
            static ISExItemIDFRM()
            {
                gCID = new Guid(sCID);
            }
            public ISExItemIDFRM()
            {
                ID = gCID;
                Name = "ISExItemID";
                Title = "Lotes do Implante para IATF";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(11, 20, 50, 54);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Numero);
                Numero.CanInsert = true;
                Numero.CanUpdate = true;
                Numero.RowCount = 1;
                Numero.ColCount = 14;
                Numero.RowCountSmall = 1;
                Numero.ColCountSmall = 14;
                Numero.IsHidden = false;
                Numero.IsHiddenSmall = false;
                Numero.AdditionalTitle = "";
                Numero.Location = 1;
                Numero.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Numero.FormImplace = true;
                Numero.Operator = XOperator.EqualTo;
                Numero.JustifyHeight = false;
                Numero.AllowEmpty = true;
                Numero.FontColor = "#000000";
                Numero.FontStyle = XFontStyle.Normal;
                Numero.ShowFooter = false;
                Numero.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.Scale = 0;
                Numero.Length = 20;
                Numero.SearchAction = XSearchAction.Default;
                Numero.TypeID = XString.CID;
                Numero.AdditionalFieldsID = new Guid[] {  };
                Numero.AdditionalDataFieldsID = new Guid[] {  };
                Numero.TargetFilterFieldID = new Guid[] {  };
                Numero.SourceFilterFieldID = new Guid[] {  };
                Numero.TargetDisplayFieldID = new Guid[] {  };
                Numero.SourceDisplayFieldID = new Guid[] {  };
                Numero.AutoLoad = false;
                Numero.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.FilterInative = true;
                Numero.IsAnswer = false;
                Numero.AllowMultiSelect = false;
                AddItem(Fabricacao);
                Fabricacao.CanInsert = true;
                Fabricacao.CanUpdate = true;
                Fabricacao.RowCount = 1;
                Fabricacao.ColCount = 9;
                Fabricacao.RowCountSmall = 1;
                Fabricacao.ColCountSmall = 9;
                Fabricacao.IsHidden = false;
                Fabricacao.IsHiddenSmall = false;
                Fabricacao.AdditionalTitle = "";
                Fabricacao.Location = 2;
                Fabricacao.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                Fabricacao.FormImplace = true;
                Fabricacao.Operator = XOperator.EqualTo;
                Fabricacao.JustifyHeight = false;
                Fabricacao.AllowEmpty = true;
                Fabricacao.FontColor = "#000000";
                Fabricacao.FontStyle = XFontStyle.Normal;
                Fabricacao.ShowFooter = false;
                Fabricacao.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Fabricacao.Scale = 0;
                Fabricacao.Length = 0;
                Fabricacao.SearchAction = XSearchAction.Default;
                Fabricacao.TypeID = XDate.CID;
                Fabricacao.AdditionalFieldsID = new Guid[] {  };
                Fabricacao.AdditionalDataFieldsID = new Guid[] {  };
                Fabricacao.TargetFilterFieldID = new Guid[] {  };
                Fabricacao.SourceFilterFieldID = new Guid[] {  };
                Fabricacao.TargetDisplayFieldID = new Guid[] {  };
                Fabricacao.SourceDisplayFieldID = new Guid[] {  };
                Fabricacao.AutoLoad = false;
                Fabricacao.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Fabricacao.FilterInative = true;
                Fabricacao.IsAnswer = false;
                Fabricacao.AllowMultiSelect = false;
                AddItem(Validade);
                Validade.CanInsert = true;
                Validade.CanUpdate = true;
                Validade.RowCount = 1;
                Validade.ColCount = 9;
                Validade.RowCountSmall = 1;
                Validade.ColCountSmall = 9;
                Validade.IsHidden = false;
                Validade.IsHiddenSmall = false;
                Validade.AdditionalTitle = "";
                Validade.Location = 3;
                Validade.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                Validade.FormImplace = true;
                Validade.Operator = XOperator.EqualTo;
                Validade.JustifyHeight = false;
                Validade.AllowEmpty = true;
                Validade.FontColor = "#000000";
                Validade.FontStyle = XFontStyle.Normal;
                Validade.ShowFooter = false;
                Validade.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Validade.Scale = 0;
                Validade.Length = 0;
                Validade.SearchAction = XSearchAction.Default;
                Validade.TypeID = XDate.CID;
                Validade.AdditionalFieldsID = new Guid[] {  };
                Validade.AdditionalDataFieldsID = new Guid[] {  };
                Validade.TargetFilterFieldID = new Guid[] {  };
                Validade.SourceFilterFieldID = new Guid[] {  };
                Validade.TargetDisplayFieldID = new Guid[] {  };
                Validade.SourceDisplayFieldID = new Guid[] {  };
                Validade.AutoLoad = false;
                Validade.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Validade.FilterInative = true;
                Validade.IsAnswer = false;
                Validade.AllowMultiSelect = false;
            }
            public XFRMField Numero = new XFRMField(new Guid("1D4B2972-BC1D-4C8D-986D-4C2E83F7E1FB"), "Numero", "Número do Lote", XString.CID, 1, 14, false, gCID, null, new Guid("0FEB1D9C-70F2-4EC6-B269-C21DA3EF9B0E")); // String;
            public XFRMField Fabricacao = new XFRMField(new Guid("50FB42B9-ADAF-4379-B5B3-B429F9D8FB68"), "Fabricacao", "Fabricação", XDateTime.CID, 1, 9, false, gCID, null, new Guid("A2315082-1BEA-424C-BE37-72808DCB8243")); // DateTime;
            public XFRMField Validade = new XFRMField(new Guid("8873198E-11FA-4DAC-89D7-8F85ED989C91"), "Validade", "Validade", XDateTime.CID, 1, 9, false, gCID, null, new Guid("29A2DFFC-1D47-4443-A607-C2599D68CF8F")); // DateTime;
            public static class Fields
            {
                public static XFieldInfo Numero = new XFieldInfo(new Guid("1D4B2972-BC1D-4C8D-986D-4C2E83F7E1FB"), "Numero", "Número do Lote", typeof(String));
                public static XFieldInfo Fabricacao = new XFieldInfo(new Guid("50FB42B9-ADAF-4379-B5B3-B429F9D8FB68"), "Fabricacao", "Fabricação", typeof(DateTime));
                public static XFieldInfo Validade = new XFieldInfo(new Guid("8873198E-11FA-4DAC-89D7-8F85ED989C91"), "Validade", "Validade", typeof(DateTime));
            }
        }

        #endregion ISExItemIDFRM

        public const String sCID = "A97F11B5-5043-4270-813D-C9E5D0EE8A87";
        public static Guid gCID = new Guid(sCID);
        public static readonly xImplanteIATFACT ImplanteIATFACT;

        static ImplanteIATFSAM()
        {
            ImplanteIATFACT = new xImplanteIATFACT(new Guid("C86B66A3-5AA0-4708-BD3A-582E1E254354"), "ImplanteIATFACT", "", new Guid("3AE9F52F-44A9-44ED-B182-ECBDD7DFE37B"), new Guid("00000000-0000-0000-0000-000000000000"));
        }

        public ImplanteIATFSAM()
        {
            ID = new Guid("A97F11B5-5043-4270-813D-C9E5D0EE8A87");
            Name = "ImplanteIATF";
            Title = "Cadastro de Implantes para IATF";
            AppTypeID = XAppType.SAM;
            Userlevel = XUserlevel.UserCloud;
            UseTypeID = new Int16[] { 1, 2 };
            Rights = new Int16[] { 3, 6, 4, 1, 5, 2 }; 
            IsDisabled = false;
            StartAction = XStartAction.DataGrid;
            ClientScript = "Projecao.Core.PCR.js";
            Size = new Size(329, 150);
            DataSourceID = global::Projecao.Core.PCR.ImplanteIATF.ImplanteIATFSVC.gCID;
            AppModulesID = new [] { (Int16)19 };
            AppGroupsID = new [] { (Int16)2 };
            ImplanteIATFACT.FormID = new Guid("3AE9F52F-44A9-44ED-B182-ECBDD7DFE37B"); 
            ImplanteIATFACT.Type = XActivityType.UserActivity;
            AddItem(ImplanteIATFACT);
        }
    }
}