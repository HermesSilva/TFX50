//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.CEP.DB;
using Projecao.Core.ERP.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using Projecao.Core.ERP.Pessoa;
using TFX.Core.Model.Interfaces;
using Projecao.Core.PCR.Fazenda;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Fazenda
{
    [XRegister(typeof(FazendaSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Fazenda\Fazenda.dssvc")]
    public class FazendaSVC : XSVCModel
    {
        #region FazendaFilterFRM

        [XRegister(typeof(FazendaFilterFRM), sCID)]
        public class FazendaFilterFRM : XFRMModel
        {
            public const String sCID = "50D43AAE-986E-4A64-9CED-1C0A11F4B93F";
            static FazendaFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public FazendaFilterFRM()
            {
                ID = gCID;
                Name = "FazendaFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 256;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("B460083F-305F-4257-A027-6079575639C0"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("108AF139-B4D7-4DEE-9A3A-1DBB8A11617C")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("B460083F-305F-4257-A027-6079575639C0"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion FazendaFilterFRM

        public const String sCID = "32D77CEF-08F2-4CCF-9864-5C24804585EE";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxEmpresa_SYSxEmpresaID_SYSxPessoa_SYSxPessoaID; // SYSxEmpresa.SYSxEmpresaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference CEPxLocalidade_CEPxLocalidadeID_PCRxFazenda_CEPxLocalidadeID; // CEPxLocalidade.CEPxLocalidadeID --> PCRxFazenda.CEPxLocalidadeID
        public static XSVCReference ERPxPessoaJuridica_ERPxPessoaJuridicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> SYSxPessoa.SYSxPessoaID
        public static XSVCReference CEPxUF_CEPxUFID_CEPxLocalidade_CEPxUFID; // CEPxUF.CEPxUFID --> CEPxLocalidade.CEPxUFID
        public static XSVCReference PCRxFazenda_PCRxFazendaID_SYSxPessoa_SYSxPessoaID; // PCRxFazenda.PCRxFazendaID --> SYSxPessoa.SYSxPessoaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("0ED26140-F22C-4EC4-B8D2-EA96A0ECFFC2");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("108AF139-B4D7-4DEE-9A3A-1DBB8A11617C"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("111C95DD-CD6E-49E5-A99B-F5AB859C8358"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xCEPxLocalidade 
        public class xCEPxLocalidade : XSVCTable
        {

            public static Guid gCID => new Guid("403413AA-E118-4CA9-AAAE-180769C6D420");

            public xCEPxLocalidade()
            {
                Name = "CEPxLocalidade";
                Alias = "CEPxLocalidade";
                ID = gCID;
                ParentID =  global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.gCID;

                Items.Add(CEPxLocalidadeID, CEPxLocalidadeID.ID);
                CEPxLocalidadeID.Owner = this;
                CEPxLocalidadeID.OwnerID = ID;
                CEPxLocalidadeID.TableName = Name;
                Items.Add(CEPxUFID, CEPxUFID.ID);
                CEPxUFID.Owner = this;
                CEPxUFID.OwnerID = ID;
                CEPxUFID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Localidade";
                Items.Add(CEPxMunicipioID, CEPxMunicipioID.ID);
                CEPxMunicipioID.Owner = this;
                CEPxMunicipioID.OwnerID = ID;
                CEPxMunicipioID.TableName = Name;
                Items.Add(CodigoIBGE, CodigoIBGE.ID);
                CodigoIBGE.Owner = this;
                CodigoIBGE.OwnerID = ID;
                CodigoIBGE.TableName = Name;
                Items.Add(CEPxLocalidadeTipoID, CEPxLocalidadeTipoID.ID);
                CEPxLocalidadeTipoID.Owner = this;
                CEPxLocalidadeTipoID.OwnerID = ID;
                CEPxLocalidadeTipoID.TableName = Name;
                Items.Add(CEPGeral, CEPGeral.ID);
                CEPGeral.Owner = this;
                CEPGeral.OwnerID = ID;
                CEPGeral.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
            }

            public static XORMPKField CEPxLocalidadeID = new XORMPKField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.CEPxLocalidadeID, new Guid("991DEB07-9D12-4F61-BFDE-63F5F73E76AB"), "CEPxLocalidadeID", "Localidade");
            public static XORMFKField CEPxUFID = new XORMFKField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.CEPxUFID, new Guid("B8442DC0-6059-424D-8908-54687253D412"), "CEPxUFID", "Unidade Federativa");
            public static XORMFaceField Nome = new XORMFaceField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.Nome, new Guid("E3572668-4965-42AE-845D-64DA95703B75"), "Nome", "Nome da Localidade");
            public static XORMFKField CEPxMunicipioID = new XORMFKField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.CEPxMunicipioID, new Guid("88C57708-4D46-4C58-9ACB-B125A984AD2A"), "CEPxMunicipioID", "Municipio");
            public static XORMField CodigoIBGE = new XORMField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.CodigoIBGE, new Guid("60336D66-8191-4F93-94AC-9EC3A55839DB"), "CodigoIBGE", "Código no IBGE");
            public static XORMFKField CEPxLocalidadeTipoID = new XORMFKField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.CEPxLocalidadeTipoID, new Guid("945A93AA-EB21-45F6-9554-9C5216BDB274"), "CEPxLocalidadeTipoID", "Tipo de Localidade");
            public static XORMField CEPGeral = new XORMField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.CEPGeral, new Guid("F18831C9-5311-4925-A84B-F80C1B53B55B"), "CEPGeral", "CEPGeral");
            public static XORMField Numero = new XORMField(global::Projecao.Core.CEP.DB.CEPx.CEPxLocalidade.Numero, new Guid("8742689C-E436-4C71-BE2B-1B700E28D8AA"), "Numero", "Número");
        }
        #endregion xCEPxLocalidade 


        #region xPCRxFazenda 
        public class xPCRxFazenda : XSVCTable
        {

            public static Guid gCID => new Guid("6A1178CD-40FD-4A5B-AC46-4518F1346FAE");

            public xPCRxFazenda()
            {
                Name = "PCRxFazenda";
                Alias = "PCRxFazenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.gCID;

                Items.Add(PCRxFazendaID, PCRxFazendaID.ID);
                PCRxFazendaID.Owner = this;
                PCRxFazendaID.OwnerID = ID;
                PCRxFazendaID.TableName = Name;
                Items.Add(CEPxLocalidadeID, CEPxLocalidadeID.ID);
                CEPxLocalidadeID.Owner = this;
                CEPxLocalidadeID.OwnerID = ID;
                CEPxLocalidadeID.TableName = Name;
                CEPxLocalidadeID.Alias = "CEPxLocalidadeID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(CoordenadasArea, CoordenadasArea.ID);
                CoordenadasArea.Owner = this;
                CoordenadasArea.OwnerID = ID;
                CoordenadasArea.TableName = Name;
                CoordenadasArea.Alias = "CoordenadasArea";
            }

            public static XORMFaceField PCRxFazendaID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.PCRxFazendaID, new Guid("2FD74D04-FFAB-448A-A25F-619726FBF379"), "PCRxFazendaID", "Fazenda");
            public static XORMFKField CEPxLocalidadeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.CEPxLocalidadeID, new Guid("4A6EA98F-98C1-4166-8F68-05C68C2A36B1"), "CEPxLocalidadeID", "Localidade");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.SYSxEstadoID, new Guid("A8637881-CC79-455B-BDEE-FD673E128E1F"), "SYSxEstadoID", "Estado");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.SYSxEmpresaID, new Guid("57FD033E-8E9E-4D32-A8EC-A313241B06F0"), "SYSxEmpresaID", "Empresa");
            public static XORMField CoordenadasArea = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.CoordenadasArea, new Guid("63F32F19-095F-4974-8E7C-E397D1AF35FA"), "CoordenadasArea", "Coordenadas da Área");
        }
        #endregion xPCRxFazenda 


        #region xSYSxEmpresa 
        public class xSYSxEmpresa : XSVCTable
        {

            public static Guid gCID => new Guid("8050A17C-07FA-455E-AA1B-38D04462E738");

            public xSYSxEmpresa()
            {
                Name = "SYSxEmpresa";
                Alias = "SYSxEmpresa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID;

                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "EmpresaSigla";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(SYSxEmpresaMatrizID, SYSxEmpresaMatrizID.ID);
                SYSxEmpresaMatrizID.Owner = this;
                SYSxEmpresaMatrizID.OwnerID = ID;
                SYSxEmpresaMatrizID.TableName = Name;
                SYSxEmpresaMatrizID.Alias = "SYSxEmpresaMatrizID";
            }

            public static XORMFaceField Sigla = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.Sigla, new Guid("91718B68-209B-4157-B652-D48746E0B50D"), "Sigla", "Sigla");
            public static XORMPKField SYSxEmpresaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID, new Guid("2B783D63-D8EC-4A27-ABCA-59D8D13FB928"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEstadoID, new Guid("BB123A1A-48A2-44A2-8203-3ED60122B126"), "SYSxEstadoID", "Estado");
            public static XORMFKField SYSxEmpresaMatrizID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaMatrizID, new Guid("F8C6AB43-13B3-4950-889D-7DC30B51DE7A"), "SYSxEmpresaMatrizID", "Empresa");
        }
        #endregion xSYSxEmpresa 


        #region xCEPxUF 
        public class xCEPxUF : XSVCTable
        {

            public static Guid gCID => new Guid("B3E840E8-C90D-4658-A715-67A230574B1B");

            public xCEPxUF()
            {
                Name = "CEPxUF";
                Alias = "CEPxUF";
                ID = gCID;
                ParentID =  global::Projecao.Core.CEP.DB.CEPx.CEPxUF.gCID;

                Items.Add(CEPxUFID, CEPxUFID.ID);
                CEPxUFID.Owner = this;
                CEPxUFID.OwnerID = ID;
                CEPxUFID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "UFNome";
                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "Sigla";
                Items.Add(CEPxPaisID, CEPxPaisID.ID);
                CEPxPaisID.Owner = this;
                CEPxPaisID.OwnerID = ID;
                CEPxPaisID.TableName = Name;
                Items.Add(CEPInicial, CEPInicial.ID);
                CEPInicial.Owner = this;
                CEPInicial.OwnerID = ID;
                CEPInicial.TableName = Name;
                Items.Add(CEPFinal, CEPFinal.ID);
                CEPFinal.Owner = this;
                CEPFinal.OwnerID = ID;
                CEPFinal.TableName = Name;
            }

            public static XORMPKField CEPxUFID = new XORMPKField(global::Projecao.Core.CEP.DB.CEPx.CEPxUF.CEPxUFID, new Guid("FA7D451B-2C9A-4A2A-80EA-7FC0D97B6781"), "CEPxUFID", "UF");
            public static XORMFaceField Nome = new XORMFaceField(global::Projecao.Core.CEP.DB.CEPx.CEPxUF.Nome, new Guid("315A9995-B4DC-49AB-A573-5F53E5B4DBF5"), "Nome", "Nome da UF");
            public static XORMField Sigla = new XORMField(global::Projecao.Core.CEP.DB.CEPx.CEPxUF.Sigla, new Guid("FFE6918F-7494-4BD4-A945-297D42551BC5"), "Sigla", "UF");
            public static XORMFKField CEPxPaisID = new XORMFKField(global::Projecao.Core.CEP.DB.CEPx.CEPxUF.CEPxPaisID, new Guid("00AD4B13-EC85-4ECB-9FF9-BEF60EB007F9"), "CEPxPaisID", "Pais");
            public static XORMField CEPInicial = new XORMField(global::Projecao.Core.CEP.DB.CEPx.CEPxUF.CEPInicial, new Guid("FE78EE75-31C5-49E8-B320-CF1E0C5396F4"), "CEPInicial", "CEP Inicial");
            public static XORMField CEPFinal = new XORMField(global::Projecao.Core.CEP.DB.CEPx.CEPxUF.CEPFinal, new Guid("1DCCBC21-ED27-4AB8-80AC-95AA30567993"), "CEPFinal", "CEP Final");
        }
        #endregion xCEPxUF 


        #region xERPxPessoaJuridica 
        public class xERPxPessoaJuridica : XSVCTable
        {

            public static Guid gCID => new Guid("F0C9F506-7695-4E30-9D5C-76590B7BC2E5");

            public xERPxPessoaJuridica()
            {
                Name = "ERPxPessoaJuridica";
                Alias = "ERPxPessoaJuridica";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.gCID;

                Items.Add(ERPxPessoaJuridicaID, ERPxPessoaJuridicaID.ID);
                ERPxPessoaJuridicaID.Owner = this;
                ERPxPessoaJuridicaID.OwnerID = ID;
                ERPxPessoaJuridicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(RazaoSocial, RazaoSocial.ID);
                RazaoSocial.Owner = this;
                RazaoSocial.OwnerID = ID;
                RazaoSocial.TableName = Name;
                RazaoSocial.Alias = "RazaoSocial";
            }

            public static XORMFaceField ERPxPessoaJuridicaID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.ERPxPessoaJuridicaID, new Guid("6BD9CEC0-61FB-4841-821C-7DD9E03358E7"), "ERPxPessoaJuridicaID", "Pessoa Jurídica");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.SYSxEstadoID, new Guid("0163D794-C05A-471E-BF0E-B6593B22A2B3"), "SYSxEstadoID", "Estado");
            public static XORMField RazaoSocial = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.RazaoSocial, new Guid("E0D6518E-522D-4AD9-B49E-990B6ABA495C"), "RazaoSocial", "Razão Social");
        }
        #endregion xERPxPessoaJuridica 


        public xCEPxLocalidade CEPxLocalidade;
        public xCEPxUF CEPxUF;
        public xERPxPessoaJuridica ERPxPessoaJuridica;
        public xPCRxFazenda PCRxFazenda;
        public xSYSxEmpresa SYSxEmpresa;
        public xSYSxPessoa SYSxPessoa;

        public FazendaSVC()
        {
            TupleType = typeof(FazendaSVC.XTuple);
            DataSetType = typeof(FazendaSVC.XDataSet);
            ServiceRuleCID = new Guid("A09A965E-E91D-4A25-B496-F8B3266A0C80");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("32D77CEF-08F2-4CCF-9864-5C24804585EE");
            Name = "Fazenda";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("50D43AAE-986E-4A64-9CED-1C0A11F4B93F");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xSYSxEmpresa.Sigla.ID, xCEPxLocalidade.Nome.ID, xCEPxUF.Sigla.ID, xPCRxFazenda.SYSxEstadoID.ID };
            DataSetFields = new Guid[] { xERPxPessoaJuridica.RazaoSocial.ID, xCEPxLocalidade.Nome.ID, xCEPxUF.Sigla.ID, xCEPxUF.Nome.ID, xSYSxEmpresa.Sigla.ID, xSYSxEmpresa.SYSxEmpresaMatrizID.ID, xPCRxFazenda.CoordenadasArea.ID, xSYSxPessoa.Nome.ID, xPCRxFazenda.CEPxLocalidadeID.ID, xPCRxFazenda.SYSxEstadoID.ID, xSYSxPessoa.SYSxPessoaID.ID };
            StateField = xPCRxFazenda.SYSxEstadoID.ID;
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("A09A965E-E91D-4A25-B496-F8B3266A0C80");
            XSubServiceItem ssFEE6C268DC0D4B6B8B3E053BE25282FE = new XSubServiceItem(ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, FazendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ssFEE6C268DC0D4B6B8B3E053BE25282FE.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ssFEE6C268DC0D4B6B8B3E053BE25282FE.LateLoad = false;
            SubServices.Add(ssFEE6C268DC0D4B6B8B3E053BE25282FE);
            XSubServiceItem ssC450ED13DFD14EB882E8014856A53B66 = new XSubServiceItem(DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, FazendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ssC450ED13DFD14EB882E8014856A53B66.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ssC450ED13DFD14EB882E8014856A53B66.LateLoad = false;
            SubServices.Add(ssC450ED13DFD14EB882E8014856A53B66);
            XSubServiceItem ss033079D346A74AD3BD2A174D067C5EA7 = new XSubServiceItem(RetiroSVC.gCID, RetiroSVC.xPCRxRetiro.SYSxEmpresaID.ID, FazendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, true, XSubSeviceType.Default);
            ss033079D346A74AD3BD2A174D067C5EA7.Rights = new Int16[] { 1 }; 
            ss033079D346A74AD3BD2A174D067C5EA7.LateLoad = false;
            SubServices.Add(ss033079D346A74AD3BD2A174D067C5EA7);
            XSubServiceItem ssD387943C61254D57B511D7D69495CE5F = new XSubServiceItem(EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, FazendaSVC.gCID, xSYSxPessoa.SYSxPessoaID.ID, false, XSubSeviceType.Default);
            ssD387943C61254D57B511D7D69495CE5F.Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ssD387943C61254D57B511D7D69495CE5F.LateLoad = false;
            SubServices.Add(ssD387943C61254D57B511D7D69495CE5F);
            CEPxLocalidade = new xCEPxLocalidade();
            CEPxLocalidade.IsReadOnly = true;
            AddTable(CEPxLocalidade);
            CEPxUF = new xCEPxUF();
            CEPxUF.IsReadOnly = true;
            AddTable(CEPxUF);
            ERPxPessoaJuridica = new xERPxPessoaJuridica();
            ERPxPessoaJuridica.IsReadOnly = false;
            AddTable(ERPxPessoaJuridica);
            PCRxFazenda = new xPCRxFazenda();
            PCRxFazenda.IsReadOnly = false;
            AddTable(PCRxFazenda);
            SYSxEmpresa = new xSYSxEmpresa();
            SYSxEmpresa.IsReadOnly = false;
            AddTable(SYSxEmpresa);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = false;
            AddTable(SYSxPessoa);
            MasterTableID = SYSxPessoa.ID;
            SYSxEmpresa_SYSxEmpresaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("1B1519D7-028B-421D-BDED-C898591D6C6E"), "FK_1B1519D7028B421DBDEDC898591D6C6E", FazendaSVC.xSYSxEmpresa.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, FazendaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // SYSxEmpresa.SYSxEmpresaID --> SYSxPessoa.SYSxPessoaID
            CEPxLocalidade_CEPxLocalidadeID_PCRxFazenda_CEPxLocalidadeID = AddReference(new XSVCReference(new Guid("3E9F2F07-743D-4EEB-BE72-2F8C06596E24"), "FK_3E9F2F07743D4EEBBE722F8C06596E24", FazendaSVC.xCEPxLocalidade.gCID, xCEPxLocalidade.CEPxLocalidadeID.ID, FazendaSVC.xPCRxFazenda.gCID, xPCRxFazenda.CEPxLocalidadeID.ID, XJoinType.Inner)); // CEPxLocalidade.CEPxLocalidadeID --> PCRxFazenda.CEPxLocalidadeID
            ERPxPessoaJuridica_ERPxPessoaJuridicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("7FCD4006-DC4B-4C52-B253-187E1AA2BEB0"), "FK_7FCD4006DC4B4C52B253187E1AA2BEB0", FazendaSVC.xERPxPessoaJuridica.gCID, xERPxPessoaJuridica.ERPxPessoaJuridicaID.ID, FazendaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaJuridica.ERPxPessoaJuridicaID --> SYSxPessoa.SYSxPessoaID
            CEPxUF_CEPxUFID_CEPxLocalidade_CEPxUFID = AddReference(new XSVCReference(new Guid("87A892D5-C751-4802-9404-0C1CA4B2FDB4"), "FK_87A892D5C751480294040C1CA4B2FDB4", FazendaSVC.xCEPxUF.gCID, xCEPxUF.CEPxUFID.ID, FazendaSVC.xCEPxLocalidade.gCID, xCEPxLocalidade.CEPxUFID.ID, XJoinType.Inner)); // CEPxUF.CEPxUFID --> CEPxLocalidade.CEPxUFID
            PCRxFazenda_PCRxFazendaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("AB5D0799-3652-423D-94B4-431CC5973E80"), "FK_AB5D07993652423D94B4431CC5973E80", FazendaSVC.xPCRxFazenda.gCID, xPCRxFazenda.PCRxFazendaID.ID, FazendaSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // PCRxFazenda.PCRxFazendaID --> SYSxPessoa.SYSxPessoaID
            XSVCReference FK_17206894AEE0484FA717C639F4695F57 = new XSVCReference(new Guid("17206894-AEE0-484F-A717-C639F4695F57"), "FK_17206894AEE0484FA717C639F4695F57", ContatoSVC.gCID, ContatoSVC.xERPxContato.SYSxPessoaID.ID, SYSxPessoa.ID, FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // ContatoSVC.SYSxPessoaID --> Fazenda.SYSxPessoaID
            FK_17206894AEE0484FA717C639F4695F57.IsLowRelevance = false;
            AddReference(FK_17206894AEE0484FA717C639F4695F57);
            XSVCReference FK_673556A581434985B226009DDBA683FC = new XSVCReference(new Guid("673556A5-8143-4985-B226-009DDBA683FC"), "FK_673556A581434985B226009DDBA683FC", DocumentoSVC.gCID, DocumentoSVC.xERPxDocumento.SYSxPessoaID.ID, SYSxPessoa.ID, FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // DocumentoSVC.SYSxPessoaID --> Fazenda.SYSxPessoaID
            FK_673556A581434985B226009DDBA683FC.IsLowRelevance = false;
            AddReference(FK_673556A581434985B226009DDBA683FC);
            XSVCReference FK_69D8A56EC5414267B65E7DE7C6C30AB8 = new XSVCReference(new Guid("69D8A56E-C541-4267-B65E-7DE7C6C30AB8"), "FK_69D8A56EC5414267B65E7DE7C6C30AB8", RetiroSVC.gCID, RetiroSVC.xPCRxRetiro.SYSxEmpresaID.ID, SYSxPessoa.ID, FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // RetiroSVC.SYSxEmpresaID --> Fazenda.SYSxPessoaID
            FK_69D8A56EC5414267B65E7DE7C6C30AB8.IsLowRelevance = false;
            AddReference(FK_69D8A56EC5414267B65E7DE7C6C30AB8);
            XSVCReference FK_77B966C6D59E4275BEF76AEC8FF58567 = new XSVCReference(new Guid("77B966C6-D59E-4275-BEF7-6AEC8FF58567"), "FK_77B966C6D59E4275BEF76AEC8FF58567", EnderecoSVC.gCID, EnderecoSVC.xERPxEndereco.SYSxPessoaID.ID, SYSxPessoa.ID, FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID, XJoinType.SubService); // EnderecoSVC.SYSxPessoaID --> Fazenda.SYSxPessoaID
            FK_77B966C6D59E4275BEF76AEC8FF58567.IsLowRelevance = false;
            AddReference(FK_77B966C6D59E4275BEF76AEC8FF58567);
            xPCRxFazenda.CEPxLocalidadeID.IsDataField = true;
            xPCRxFazenda.CEPxLocalidadeID.AllowEmpty = true;
            xPCRxFazenda.CoordenadasArea.IsDataField = true;
            xPCRxFazenda.CoordenadasArea.AllowEmpty = true;
            xSYSxEmpresa.Sigla.Length = 25;
            xSYSxEmpresa.Sigla.IsDataField = true;
            xSYSxEmpresa.Sigla.FilterUse = true;
            xSYSxEmpresa.Sigla.AllowEmpty = true;
            xCEPxLocalidade.Nome.IsReadOnly = true;
            xCEPxLocalidade.Nome.Length = 128;
            xCEPxLocalidade.Nome.IsDataField = true;
            xCEPxLocalidade.Nome.FilterUse = true;
            xCEPxLocalidade.Nome.AllowEmpty = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xERPxPessoaJuridica.RazaoSocial.Length = 160;
            xERPxPessoaJuridica.RazaoSocial.IsDataField = true;
            xERPxPessoaJuridica.RazaoSocial.AllowEmpty = true;
            xCEPxUF.Sigla.IsReadOnly = true;
            xCEPxUF.Sigla.Length = 2;
            xCEPxUF.Sigla.IsDataField = true;
            xCEPxUF.Sigla.AllowEmpty = true;
            xSYSxEmpresa.SYSxEmpresaMatrizID.IsDataField = true;
            xSYSxEmpresa.SYSxEmpresaMatrizID.AllowEmpty = true;
            xPCRxFazenda.SYSxEstadoID.IsDataField = true;
            xPCRxFazenda.SYSxEstadoID.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.GeneratePK = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
            xCEPxUF.Nome.IsReadOnly = true;
            xCEPxUF.Nome.Length = 45;
            xCEPxUF.Nome.IsDataField = true;
            xCEPxUF.Nome.AllowEmpty = true;
            XFilterValue fltrDD5EB4628C4548F684D42D2D71576857 = new XFilterValue(new Guid("8DB32F34-2E96-4DCB-8486-4D26AC973738"), Projecao.Core.ERP.Pessoa.DocumentoSVC.gCID);
            fltrDD5EB4628C4548F684D42D2D71576857.Add(global::Projecao.Core.ERP.DB.ERPx.ERPxDocumento.ERPxDocumentoTipoID);
            fltrDD5EB4628C4548F684D42D2D71576857.Add(XOperator.In);
            fltrDD5EB4628C4548F684D42D2D71576857.Add((global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.CNPJ, global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.Outros, global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.IE, global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.Inscricao_Municipal, global::Projecao.Core.ERP.DB.ERPx.ERPxDocumentoTipo.XDefault.Alvara_Municipal));
            AddFilter(fltrDD5EB4628C4548F684D42D2D71576857);
        }

        #region XFields

        public class XFields
        {
        public XORMField CEPxLocalidadeID => xPCRxFazenda.CEPxLocalidadeID;
        public XORMField CoordenadasArea => xPCRxFazenda.CoordenadasArea;
        public XORMField EmpresaSigla => xSYSxEmpresa.Sigla;
        public XORMField Localidade => xCEPxLocalidade.Nome;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField RazaoSocial => xERPxPessoaJuridica.RazaoSocial;
        public XORMField Sigla => xCEPxUF.Sigla;
        public XORMField SYSxEmpresaMatrizID => xSYSxEmpresa.SYSxEmpresaMatrizID;
        public XORMField SYSxEstadoID => xPCRxFazenda.SYSxEstadoID;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        public XORMField UFNome => xCEPxUF.Nome;
        }
        #endregion XFields
        #region FazendaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 CEPxLocalidadeID
        {
            get
            {
                return (Int32)Value[FazendaSVC.xPCRxFazenda.CEPxLocalidadeID.ID];
            }
            set
            {
                Value[FazendaSVC.xPCRxFazenda.CEPxLocalidadeID.ID] = value;
            }
        }
        public Int32? oCEPxLocalidadeID
        {
            get
            {
                GetOldValue(FazendaSVC.xPCRxFazenda.CEPxLocalidadeID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String CoordenadasArea
        {
            get
            {
                return (String)Value[FazendaSVC.xPCRxFazenda.CoordenadasArea.ID];
            }
            set
            {
                Value[FazendaSVC.xPCRxFazenda.CoordenadasArea.ID] = value;
            }
        }
        public String? oCoordenadasArea
        {
            get
            {
                GetOldValue(FazendaSVC.xPCRxFazenda.CoordenadasArea, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String EmpresaSigla
        {
            get
            {
                return (String)Value[FazendaSVC.xSYSxEmpresa.Sigla.ID];
            }
            set
            {
                Value[FazendaSVC.xSYSxEmpresa.Sigla.ID] = value;
            }
        }
        public String? oEmpresaSigla
        {
            get
            {
                GetOldValue(FazendaSVC.xSYSxEmpresa.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Localidade
        {
            get
            {
                return (String)Value[FazendaSVC.xCEPxLocalidade.Nome.ID];
            }
            set
            {
                Value[FazendaSVC.xCEPxLocalidade.Nome.ID] = value;
            }
        }
        public String? oLocalidade
        {
            get
            {
                GetOldValue(FazendaSVC.xCEPxLocalidade.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[FazendaSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[FazendaSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(FazendaSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String RazaoSocial
        {
            get
            {
                return (String)Value[FazendaSVC.xERPxPessoaJuridica.RazaoSocial.ID];
            }
            set
            {
                Value[FazendaSVC.xERPxPessoaJuridica.RazaoSocial.ID] = value;
            }
        }
        public String? oRazaoSocial
        {
            get
            {
                GetOldValue(FazendaSVC.xERPxPessoaJuridica.RazaoSocial, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Sigla
        {
            get
            {
                return (String)Value[FazendaSVC.xCEPxUF.Sigla.ID];
            }
            set
            {
                Value[FazendaSVC.xCEPxUF.Sigla.ID] = value;
            }
        }
        public String? oSigla
        {
            get
            {
                GetOldValue(FazendaSVC.xCEPxUF.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxEmpresaMatrizID
        {
            get
            {
                return (Guid)Value[FazendaSVC.xSYSxEmpresa.SYSxEmpresaMatrizID.ID];
            }
            set
            {
                Value[FazendaSVC.xSYSxEmpresa.SYSxEmpresaMatrizID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaMatrizID
        {
            get
            {
                GetOldValue(FazendaSVC.xSYSxEmpresa.SYSxEmpresaMatrizID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[FazendaSVC.xPCRxFazenda.SYSxEstadoID.ID];
            }
            set
            {
                Value[FazendaSVC.xPCRxFazenda.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(FazendaSVC.xPCRxFazenda.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(FazendaSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String UFNome
        {
            get
            {
                return (String)Value[FazendaSVC.xCEPxUF.Nome.ID];
            }
            set
            {
                Value[FazendaSVC.xCEPxUF.Nome.ID] = value;
            }
        }
        public String? oUFNome
        {
            get
            {
                GetOldValue(FazendaSVC.xCEPxUF.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FazendaSVC.XTuple

        #region FazendaSVC.XRule
        public abstract class XRule : XServiceRule<FazendaSVC.XDataSet, FazendaSVC, FazendaSVC.XTuple>
        {
        }
        #endregion FazendaSVC.XRule

        #region FazendaSVC.XDataSet

        public class XDataSet : XDataSet<FazendaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FazendaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FazendaSVC.XTuple> where T : XDataTuple
        {

            public Guid CEPxLocalidadeID => FazendaSVC.xPCRxFazenda.CEPxLocalidadeID.ID;
            public Guid CoordenadasArea => FazendaSVC.xPCRxFazenda.CoordenadasArea.ID;
            public Guid EmpresaSigla => FazendaSVC.xSYSxEmpresa.Sigla.ID;
            public Guid Localidade => FazendaSVC.xCEPxLocalidade.Nome.ID;
            public Guid Nome => FazendaSVC.xSYSxPessoa.Nome.ID;
            public Guid RazaoSocial => FazendaSVC.xERPxPessoaJuridica.RazaoSocial.ID;
            public Guid Sigla => FazendaSVC.xCEPxUF.Sigla.ID;
            public Guid SYSxEmpresaMatrizID => FazendaSVC.xSYSxEmpresa.SYSxEmpresaMatrizID.ID;
            public Guid SYSxEstadoID => FazendaSVC.xPCRxFazenda.SYSxEstadoID.ID;
            public Guid SYSxPessoaID => FazendaSVC.xSYSxPessoa.SYSxPessoaID.ID;
            public Guid UFNome => FazendaSVC.xCEPxUF.Nome.ID;

            public XDataSet()
            {
                DataSetType = typeof(FazendaSVC.XDataSet);
            }

            private Projecao.Core.PCR.Fazenda.RetiroSVC.XDataSet _RetiroDataSet;

            public Projecao.Core.PCR.Fazenda.RetiroSVC.XDataSet RetiroDataSet
            {
                get
                {
                    if (_RetiroDataSet == null)
                    {
                        _RetiroDataSet.IsReadOnly = true;
                        _RetiroDataSet = (Projecao.Core.PCR.Fazenda.RetiroSVC.XDataSet)Children.Get(Projecao.Core.PCR.Fazenda.RetiroSVC.gCID);
                    }
                    return  _RetiroDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet _DocumentoDataSet;

            public Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet DocumentoDataSet
            {
                get
                {
                    if (_DocumentoDataSet == null)
                    {
                        _DocumentoDataSet = (Projecao.Core.ERP.Pessoa.DocumentoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.DocumentoSVC.gCID);
                    }
                    return  _DocumentoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet _EnderecoDataSet;

            public Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet EnderecoDataSet
            {
                get
                {
                    if (_EnderecoDataSet == null)
                    {
                        _EnderecoDataSet = (Projecao.Core.ERP.Pessoa.EnderecoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.EnderecoSVC.gCID);
                    }
                    return  _EnderecoDataSet;
                }
            }

            private Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet _ContatoDataSet;

            public Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet ContatoDataSet
            {
                get
                {
                    if (_ContatoDataSet == null)
                    {
                        _ContatoDataSet = (Projecao.Core.ERP.Pessoa.ContatoSVC.XDataSet)Children.Get(Projecao.Core.ERP.Pessoa.ContatoSVC.gCID);
                    }
                    return  _ContatoDataSet;
                }
            }

        }
        #endregion FazendaSVC.XDataSet

        [Guid(FazendaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FazendaSVC))]
        protected class _Service : Service<FazendaSVC, XDataSet, XTuple>
        {
            public const String sCID = "A0EDAFAF-6925-4D71-885F-A541B0165DBE";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FazendaSVC, XDataSet, XTuple>, XService
             where TModel : FazendaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}