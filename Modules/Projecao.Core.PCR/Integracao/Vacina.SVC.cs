//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Integracao
{
    [XRegister(typeof(VacinaSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Integracao\Vacina.dssvc")]
    public class VacinaSVC : XSVCModel
    {
        public const String sCID = "97B5EB3F-C668-427C-ADCD-522D5715A28A";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItemCategoria_ISExItemID_ISExItem_ISExItemID; // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("ABFBB062-C984-473E-B2F9-FAEFC458C381");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("394DF842-B3DE-45B0-8120-DAFFEF588DFE"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("C4F15171-C622-4958-8589-0EB3A0F69935"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("15406C09-5387-4C17-83A8-4D96E7B98ABA"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("D51D3060-DF50-4176-9039-81D170B16730"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("5878A9C7-B6EE-40F3-9C20-3C28A1F67241"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("F999C3A2-AB6A-4995-9558-5DB76DF334F7"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("0424099B-F423-40C6-BE38-F6098A202427"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("B5149624-CB3D-46B4-AD16-AC6CEC0ACAA4"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("D758F9AA-E490-49E6-99BF-EC5840313D2F"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("DE66B804-85DD-4E1A-BF12-1D3F2B5FFA83");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("44ED0D86-1FE8-4C7F-A477-24C6B0BF670D"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("1B28951D-CE0E-4A84-9AA9-B4CE0630E088"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("1466A925-C1AE-4CA2-A09F-FE2C5CBD5971"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("73D805AF-5B6D-4EDA-8B4E-FD5223C6EB06"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;

        public VacinaSVC()
        {
            TupleType = typeof(VacinaSVC.XTuple);
            DataSetType = typeof(VacinaSVC.XDataSet);
            ServiceRuleCID = new Guid("5C47EC8B-8081-4542-93B6-7EB578A4BF7A");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("97B5EB3F-C668-427C-ADCD-522D5715A28A");
            Name = "Vacina";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = true;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xISExItem.Nome.ID, xISExItem.ISExItemID.ID };
            PKField = xISExItem.ISExItemID.ID;
            ConfigTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            MasterRuleCID = new Guid("5C47EC8B-8081-4542-93B6-7EB578A4BF7A");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            MasterTableID = ISExItem.ID;
            ISExItemCategoria_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("105CC04B-61C5-4671-B5F9-0B551EBB17EB"), "FK_105CC04B61C54671B5F90B551EBB17EB", VacinaSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, VacinaSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
            xISExItem.ISExItemID.IsReadOnly = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField Nome => xISExItem.Nome;
        }
        #endregion XFields
        #region VacinaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[VacinaSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[VacinaSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[VacinaSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VacinaSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VacinaSVC.XTuple

        #region VacinaSVC.XRule
        public abstract class XRule : XServiceRule<VacinaSVC.XDataSet, VacinaSVC, VacinaSVC.XTuple>
        {
        }
        #endregion VacinaSVC.XRule

        #region VacinaSVC.XDataSet

        public class XDataSet : XDataSet<VacinaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VacinaSVC.XTuple> where T : XDataTuple
        {

            public Guid ISExItemID => VacinaSVC.xISExItem.ISExItemID.ID;
            public Guid Nome => VacinaSVC.xISExItem.Nome.ID;

            public XDataSet()
            {
                DataSetType = typeof(VacinaSVC.XDataSet);
            }

        }
        #endregion VacinaSVC.XDataSet

        [Guid(VacinaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VacinaSVC))]
        protected class _Service : Service<VacinaSVC, XDataSet, XTuple>
        {
            public const String sCID = "1128C5E6-9D9E-4140-906D-B48EB81A0BE1";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VacinaSVC, XDataSet, XTuple>, XService
             where TModel : VacinaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}