//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Integracao
{
    [XRegister(typeof(HormonioSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Integracao\Hormonio.dssvc")]
    public class HormonioSVC : XSVCModel
    {
        public const String sCID = "099D2C3D-68B1-4403-8D9C-C0F48EADFA94";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExLote_ISExItemID_ISExItem_ISExItemID; // ISExLote.ISExItemID --> ISExItem.ISExItemID
        public static XSVCReference ISExItemCategoria_ISExItemID_ISExItem_ISExItemID; // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("0FAF50B5-DEFD-4601-815C-7CA5A5FF390A");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("E105490A-2626-4567-AFDE-2A474EA8A137"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("638ED4AD-161A-4BE1-A09B-746B1A756D40"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("1F767B1F-25AC-4917-89E9-1EFF309EF97D"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("DD5D8CAD-59F7-4E43-9DD6-F287D3BA8ABD"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("55E70997-5E4A-46AB-A66E-8C84B4E70A04"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("94C70A12-4EE0-46D4-92F3-9C4C60E72F42"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("414E205F-1F30-42E9-801A-D882B7E95EB6"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("44E6350E-B6A3-4A18-88AD-491C598BBB03"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("FFA86F25-2F21-4B4F-804C-8CF7802FEC36"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("2B22E547-A696-432B-9D1B-51B618513416");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("43FA2EB1-6DA7-4D65-B999-967296894DB2"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("EB342BAC-80F8-4765-82F0-869EDB569E75"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("C8A86BC9-EC79-492A-91FB-0B5F2710437C"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("429F5F35-2AC2-4BB2-8973-4CFE78590690"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        #region xISExLote 
        public class xISExLote : XSVCTable
        {

            public static Guid gCID => new Guid("34B59070-DA5E-42D0-B0F9-0DD80D7688D0");

            public xISExLote()
            {
                Name = "ISExLote";
                Alias = "ISExLote";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExLote.gCID;

                Items.Add(ISExLoteID, ISExLoteID.ID);
                ISExLoteID.Owner = this;
                ISExLoteID.OwnerID = ID;
                ISExLoteID.TableName = Name;
                ISExLoteID.Alias = "ISExLoteID";
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(Fabricacao, Fabricacao.ID);
                Fabricacao.Owner = this;
                Fabricacao.OwnerID = ID;
                Fabricacao.TableName = Name;
                Fabricacao.Alias = "Fabricacao";
                Items.Add(Validade, Validade.ID);
                Validade.Owner = this;
                Validade.OwnerID = ID;
                Validade.TableName = Name;
                Validade.Alias = "Validade";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
            }

            public static XORMPKField ISExLoteID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExLote.ISExLoteID, new Guid("AB7FDCBC-F9C6-4818-8D2C-EAC1B3B7F164"), "ISExLoteID", "Lote");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExLote.Numero, new Guid("5A5DE8B7-2659-424E-8165-D9CCD31D1973"), "Numero", "Número do Lote");
            public static XORMDateField Fabricacao = new XORMDateField(global::Projecao.Core.ISE.DB.ISEx.ISExLote.Fabricacao, new Guid("6B053429-D1E6-4115-B804-C16D2A01BA4F"), "Fabricacao", "Fabricação");
            public static XORMDateField Validade = new XORMDateField(global::Projecao.Core.ISE.DB.ISEx.ISExLote.Validade, new Guid("0076950D-31C0-4263-B546-8B487E662ECF"), "Validade", "Validade");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExLote.ISExItemID, new Guid("046C795F-CBC1-4238-9D15-58ABB65207D9"), "ISExItemID", "Item");
        }
        #endregion xISExLote 


        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xISExLote ISExLote;
        public static readonly XORMParameterField PrimaryKeyID = new XORMParameterField(new Guid("038BD69D-4611-42F2-891E-0DEABD1319B5"), "PrimaryKeyID", "User Data Field", XInt32.CID, 0, 0, false, gCID, null);

        public HormonioSVC()
        {
            TupleType = typeof(HormonioSVC.XTuple);
            DataSetType = typeof(HormonioSVC.XDataSet);
            ServiceRuleCID = new Guid("1AB7D0DB-D67F-4866-A3F3-9F13EB4DBB8C");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("099D2C3D-68B1-4403-8D9C-C0F48EADFA94");
            Name = "Hormonio";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = true;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xISExLote.Numero.ID, xISExLote.Validade.ID, xISExLote.Fabricacao.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xISExLote.Validade.ID, xISExLote.Fabricacao.ID, xISExLote.Numero.ID, xISExLote.ISExLoteID.ID, xISExItem.Nome.ID, xISExItem.ISExItemID.ID, PrimaryKeyID.ID };
            PKField = PrimaryKeyID.ID;
            MasterRuleCID = new Guid("1AB7D0DB-D67F-4866-A3F3-9F13EB4DBB8C");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            ISExLote = new xISExLote();
            ISExLote.IsReadOnly = true;
            AddTable(ISExLote);
            MasterTableID = ISExItem.ID;
            ISExLote_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("30E4E80A-7C9E-4215-9A3F-B070C3FD5CF7"), "FK_30E4E80A7C9E42159A3FB070C3FD5CF7", HormonioSVC.xISExLote.gCID, xISExLote.ISExItemID.ID, HormonioSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Left)); // ISExLote.ISExItemID --> ISExItem.ISExItemID
            ISExItemCategoria_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("877EB02D-8DE1-4767-BB5A-7E5A017E4749"), "FK_877EB02D8DE14767BB5A7E5A017E4749", HormonioSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, HormonioSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
            AddField(PrimaryKeyID);
            PrimaryKeyID.IsParam = true;
            xISExLote.Fabricacao.IsReadOnly = true;
            xISExLote.Fabricacao.IsDataField = true;
            xISExLote.Fabricacao.AllowEmpty = true;
            xISExItem.ISExItemID.IsReadOnly = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExLote.ISExLoteID.IsReadOnly = true;
            xISExLote.ISExLoteID.IsDataField = true;
            xISExLote.ISExLoteID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExLote.Numero.IsReadOnly = true;
            xISExLote.Numero.Length = 20;
            xISExLote.Numero.IsDataField = true;
            xISExLote.Numero.AllowEmpty = true;
            PrimaryKeyID.GeneratePK = true;
            PrimaryKeyID.IsReadOnly = false;
            PrimaryKeyID.Length = 0;
            PrimaryKeyID.Scale = 0;
            PrimaryKeyID.IsDataField = true;
            PrimaryKeyID.AllowEmpty = true;
            xISExLote.Validade.IsReadOnly = true;
            xISExLote.Validade.IsDataField = true;
            xISExLote.Validade.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Fabricacao => xISExLote.Fabricacao;
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField ISExLoteID => xISExLote.ISExLoteID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField Numero => xISExLote.Numero;
        public XORMField PrimaryKeyID => HormonioSVC.PrimaryKeyID;
        public XORMField Validade => xISExLote.Validade;
        }
        #endregion XFields
        #region HormonioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Fabricacao
        {
            get
            {
                return (DateTime)Value[HormonioSVC.xISExLote.Fabricacao.ID];
            }
            set
            {
                Value[HormonioSVC.xISExLote.Fabricacao.ID] = value;
            }
        }
        public DateTime? oFabricacao
        {
            get
            {
                GetOldValue(HormonioSVC.xISExLote.Fabricacao, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[HormonioSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[HormonioSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(HormonioSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid ISExLoteID
        {
            get
            {
                return (Guid)Value[HormonioSVC.xISExLote.ISExLoteID.ID];
            }
            set
            {
                Value[HormonioSVC.xISExLote.ISExLoteID.ID] = value;
            }
        }
        public Guid? oISExLoteID
        {
            get
            {
                GetOldValue(HormonioSVC.xISExLote.ISExLoteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[HormonioSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[HormonioSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(HormonioSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[HormonioSVC.xISExLote.Numero.ID];
            }
            set
            {
                Value[HormonioSVC.xISExLote.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(HormonioSVC.xISExLote.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 PrimaryKeyID
        {
            get
            {
                return (Int32)Value[HormonioSVC.PrimaryKeyID.ID];
            }
            set
            {
                Value[HormonioSVC.PrimaryKeyID.ID] = value;
            }
        }
        public Int32? oPrimaryKeyID
        {
            get
            {
                GetOldValue(HormonioSVC.PrimaryKeyID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public DateTime Validade
        {
            get
            {
                return (DateTime)Value[HormonioSVC.xISExLote.Validade.ID];
            }
            set
            {
                Value[HormonioSVC.xISExLote.Validade.ID] = value;
            }
        }
        public DateTime? oValidade
        {
            get
            {
                GetOldValue(HormonioSVC.xISExLote.Validade, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion HormonioSVC.XTuple

        #region HormonioSVC.XRule
        public abstract class XRule : XServiceRule<HormonioSVC.XDataSet, HormonioSVC, HormonioSVC.XTuple>
        {
        }
        #endregion HormonioSVC.XRule

        #region HormonioSVC.XDataSet

        public class XDataSet : XDataSet<HormonioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(HormonioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<HormonioSVC.XTuple> where T : XDataTuple
        {

            public Guid Fabricacao => HormonioSVC.xISExLote.Fabricacao.ID;
            public Guid ISExItemID => HormonioSVC.xISExItem.ISExItemID.ID;
            public Guid ISExLoteID => HormonioSVC.xISExLote.ISExLoteID.ID;
            public Guid Nome => HormonioSVC.xISExItem.Nome.ID;
            public Guid Numero => HormonioSVC.xISExLote.Numero.ID;
            public Guid PrimaryKeyID => HormonioSVC.PrimaryKeyID.ID;
            public Guid Validade => HormonioSVC.xISExLote.Validade.ID;

            public XDataSet()
            {
                DataSetType = typeof(HormonioSVC.XDataSet);
            }

        }
        #endregion HormonioSVC.XDataSet

        [Guid(HormonioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(HormonioSVC))]
        protected class _Service : Service<HormonioSVC, XDataSet, XTuple>
        {
            public const String sCID = "37C4B712-46DC-4AC5-B547-94D6B1191FB3";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<HormonioSVC, XDataSet, XTuple>, XService
             where TModel : HormonioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}