//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Integracao
{
    [XRegister(typeof(ReprodutorSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Integracao\Reprodutor.dssvc")]
    public class ReprodutorSVC : XSVCModel
    {
        public const String sCID = "A65EF3FD-0729-4725-89A4-2652A6FD6F98";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxReprodutor_PCRxReprodutorID_PCRxAnimal_PCRxAnimalID; // PCRxReprodutor.PCRxReprodutorID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference ISExItemCategoria_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItemCategoria.ISExItemID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID; // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID

        #region xPCRxRaca 
        public class xPCRxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("2DCA4726-6F7C-4F92-97DF-1D3DE4802F0F");

            public xPCRxRaca()
            {
                Name = "PCRxRaca";
                Alias = "PCRxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;

                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PCRxRacaID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.PCRxRacaID, new Guid("E447C623-559F-416B-A709-97C81645C95A"), "PCRxRacaID", "Raça");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.Raca, new Guid("1D47B9E9-3B5E-4413-A736-77AE19F8EB26"), "Raca", "Raça");
        }
        #endregion xPCRxRaca 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("36D02E34-F638-4EBB-BB46-63276C33A8E8");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("9C1BB6F5-CD04-45CC-A35B-11E64B007A23"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("C536050B-0C73-472B-B61C-11F1FF590C8F"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("5348CB3E-8DA9-4D28-BCF0-D07E91FC30CC"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("F0CB9185-0C12-4727-9634-BBD39FC46E6A"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("AE811C47-8902-4CB5-99D4-3181322B0296"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("DAE78662-52AB-4ACE-971D-7013DCF56C5C"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("CB9A1088-560C-4DB8-B8EA-3C2E262A1083"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("5757971B-AA2F-420A-AF51-CFC8B196DE53"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("ADF3F3A6-6174-4B99-86F5-464DD826AE46"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("47B9FACC-E227-4B8E-A0DB-A71ABEA0C2A6"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("D95F632C-5318-4E6B-8298-7149FE6CE482"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("B90984E4-AD6E-4D5B-880A-DCFE2CE5BA15");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("BFA298C5-04E8-4D1D-9F1B-CF85AB9507D3"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("3A335BB0-BDBF-451E-8F2C-45F903263374"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("4240F171-3B44-45E8-A22F-7F09B1F24377"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("0344789F-C22B-438F-B7F3-B5FA8B16ECFE"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        #region xPCRxReprodutor 
        public class xPCRxReprodutor : XSVCTable
        {

            public static Guid gCID => new Guid("CA6D09E3-C9B9-4F95-8C01-77004F536423");

            public xPCRxReprodutor()
            {
                Name = "PCRxReprodutor";
                Alias = "PCRxReprodutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.gCID;

                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                Items.Add(ApenasSemem, ApenasSemem.ID);
                ApenasSemem.Owner = this;
                ApenasSemem.OwnerID = ID;
                ApenasSemem.TableName = Name;
                ApenasSemem.Alias = "ApenasSemem";
            }

            public static XORMFaceField PCRxReprodutorID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.PCRxReprodutorID, new Guid("ACE19B46-F696-4643-9FEF-3880901E712F"), "PCRxReprodutorID", "Reprodutor");
            public static XORMField ApenasSemem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.ApenasSemem, new Guid("906B81A8-BFD8-414C-9E38-603C462A7809"), "ApenasSemem", "Apenas Sêmem");
        }
        #endregion xPCRxReprodutor 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("EAAF61A1-65CE-463C-96F6-EA2C4351F0B5");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("57C6E04B-9DA2-44AE-9557-D34B256D9D65"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("C226E992-A657-482C-96AC-1A06BE28EEA1"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("B70B31DE-8006-4FFC-9CE7-0FD848320718"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("3461B274-EB8D-4604-8F6A-449C0F33356E"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("E6AD88A2-46C0-4A3E-AC8F-0CEFA71189C8"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("0BEEF0B1-1A2E-4CF0-AFAA-6E1CF6DB649B"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("231C2D9C-8FAF-402C-93A2-34C2399C9A4B"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("D6BE88C7-7509-4FB6-9A8E-06D0DFD99A71"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("33303FF4-AA9D-4432-B75B-CA59098480A4"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxRaca PCRxRaca;
        public xPCRxReprodutor PCRxReprodutor;

        public ReprodutorSVC()
        {
            TupleType = typeof(ReprodutorSVC.XTuple);
            DataSetType = typeof(ReprodutorSVC.XDataSet);
            ServiceRuleCID = new Guid("BB269D2D-09AA-4E52-9A5B-FAABF6789CAB");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("A65EF3FD-0729-4725-89A4-2652A6FD6F98");
            Name = "Reprodutor";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = true;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xPCRxAnimal.Nascimento.ID, xPCRxRaca.Raca.ID, xPCRxReprodutor.ApenasSemem.ID };
            DataSetFields = new Guid[] { xPCRxReprodutor.ApenasSemem.ID, xISExItem.Nome.ID, xPCRxAnimal.PCRxAnimalID.ID, xPCRxAnimal.Nascimento.ID, xPCRxRaca.Raca.ID };
            PKField = xPCRxAnimal.PCRxAnimalID.ID;
            ConfigTableID = new Guid("01BC341A-0142-4C60-87A7-9228AD3A73E9");
            MasterRuleCID = new Guid("BB269D2D-09AA-4E52-9A5B-FAABF6789CAB");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = true;
            AddTable(PCRxAnimal);
            PCRxRaca = new xPCRxRaca();
            PCRxRaca.IsReadOnly = true;
            AddTable(PCRxRaca);
            PCRxReprodutor = new xPCRxReprodutor();
            PCRxReprodutor.IsReadOnly = true;
            AddTable(PCRxReprodutor);
            MasterTableID = PCRxReprodutor.ID;
            PCRxReprodutor_PCRxReprodutorID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("22E88E8A-2552-48FD-804E-A56947573C33"), "FK_22E88E8A255248FD804EA56947573C33", ReprodutorSVC.xPCRxReprodutor.gCID, xPCRxReprodutor.PCRxReprodutorID.ID, ReprodutorSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxReprodutor.PCRxReprodutorID --> PCRxAnimal.PCRxAnimalID
            ISExItemCategoria_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("33766179-1609-4D89-88FC-BAFDC8C11DC0"), "FK_3376617916094D8988FCBAFDC8C11DC0", ReprodutorSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, ReprodutorSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> PCRxAnimal.PCRxAnimalID
            PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID = AddReference(new XSVCReference(new Guid("37BA529E-5BD3-420E-9061-837259BEEA0B"), "FK_37BA529E5BD3420E9061837259BEEA0B", ReprodutorSVC.xPCRxRaca.gCID, xPCRxRaca.PCRxRacaID.ID, ReprodutorSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxRacaID.ID, XJoinType.Inner)); // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
            ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("41795F94-F232-4B99-A74F-8354826A5FBB"), "FK_41795F94F2324B99A74F8354826A5FBB", ReprodutorSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, ReprodutorSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
            xPCRxReprodutor.ApenasSemem.IsReadOnly = true;
            xPCRxReprodutor.ApenasSemem.IsDataField = true;
            xPCRxReprodutor.ApenasSemem.AllowEmpty = true;
            xPCRxAnimal.Nascimento.IsReadOnly = true;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalID.AllowEmpty = true;
            xPCRxRaca.Raca.IsReadOnly = true;
            xPCRxRaca.Raca.Length = 25;
            xPCRxRaca.Raca.IsDataField = true;
            xPCRxRaca.Raca.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField ApenasSemem => xPCRxReprodutor.ApenasSemem;
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField PCRxAnimalID => xPCRxAnimal.PCRxAnimalID;
        public XORMField Raca => xPCRxRaca.Raca;
        }
        #endregion XFields
        #region ReprodutorSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Boolean ApenasSemem
        {
            get
            {
                return (Boolean)Value[ReprodutorSVC.xPCRxReprodutor.ApenasSemem.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxReprodutor.ApenasSemem.ID] = value;
            }
        }
        public Boolean? oApenasSemem
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxReprodutor.ApenasSemem, out Object ovlr);
                return (Boolean?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[ReprodutorSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[ReprodutorSVC.xPCRxRaca.Raca.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ReprodutorSVC.XTuple

        #region ReprodutorSVC.XRule
        public abstract class XRule : XServiceRule<ReprodutorSVC.XDataSet, ReprodutorSVC, ReprodutorSVC.XTuple>
        {
        }
        #endregion ReprodutorSVC.XRule

        #region ReprodutorSVC.XDataSet

        public class XDataSet : XDataSet<ReprodutorSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ReprodutorSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ReprodutorSVC.XTuple> where T : XDataTuple
        {

            public Guid ApenasSemem => ReprodutorSVC.xPCRxReprodutor.ApenasSemem.ID;
            public Guid Nascimento => ReprodutorSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => ReprodutorSVC.xISExItem.Nome.ID;
            public Guid PCRxAnimalID => ReprodutorSVC.xPCRxAnimal.PCRxAnimalID.ID;
            public Guid Raca => ReprodutorSVC.xPCRxRaca.Raca.ID;

            public XDataSet()
            {
                DataSetType = typeof(ReprodutorSVC.XDataSet);
            }

        }
        #endregion ReprodutorSVC.XDataSet

        [Guid(ReprodutorSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ReprodutorSVC))]
        protected class _Service : Service<ReprodutorSVC, XDataSet, XTuple>
        {
            public const String sCID = "845ED55F-7396-46F4-8986-AFB0C7FE062B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ReprodutorSVC, XDataSet, XTuple>, XService
             where TModel : ReprodutorSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}