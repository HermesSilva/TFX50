//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ERP.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Integracao
{
    [XRegister(typeof(FazendaEnderecoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Integracao\FazendaEndereco.dssvc")]
    public class FazendaEnderecoSVC : XSVCModel
    {
        public const String sCID = "6565B37F-141C-4318-A096-F5E522688B9D";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxFazenda_PCRxFazendaID_ERPxEndereco_SYSxPessoaID; // PCRxFazenda.PCRxFazendaID --> ERPxEndereco.SYSxPessoaID

        #region xERPxEndereco 
        public class xERPxEndereco : XSVCTable
        {

            public static Guid gCID => new Guid("2BD22237-6400-4472-9EB8-C0A9E0B898AD");

            public xERPxEndereco()
            {
                Name = "ERPxEndereco";
                Alias = "ERPxEndereco";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.gCID;

                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
                Items.Add(ERPxEnderecoID, ERPxEnderecoID.ID);
                ERPxEnderecoID.Owner = this;
                ERPxEnderecoID.OwnerID = ID;
                ERPxEnderecoID.TableName = Name;
                ERPxEnderecoID.Alias = "ERPxEnderecoID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(Lote, Lote.ID);
                Lote.Owner = this;
                Lote.OwnerID = ID;
                Lote.TableName = Name;
                Items.Add(Quadra, Quadra.ID);
                Quadra.Owner = this;
                Quadra.OwnerID = ID;
                Quadra.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Items.Add(ERPxFinalidadeID, ERPxFinalidadeID.ID);
                ERPxFinalidadeID.Owner = this;
                ERPxFinalidadeID.OwnerID = ID;
                ERPxFinalidadeID.TableName = Name;
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Items.Add(CEPxLogradouroID, CEPxLogradouroID.ID);
                CEPxLogradouroID.Owner = this;
                CEPxLogradouroID.OwnerID = ID;
                CEPxLogradouroID.TableName = Name;
                Items.Add(Complemento, Complemento.ID);
                Complemento.Owner = this;
                Complemento.OwnerID = ID;
                Complemento.TableName = Name;
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Latitude.Alias = "Latitude";
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Longitude.Alias = "Longitude";
            }

            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.SYSxPessoaID, new Guid("A632BE97-69E4-4E34-9CAB-D1621C33E68A"), "SYSxPessoaID", "Pessoas");
            public static XORMFaceField ERPxEnderecoID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.ERPxEnderecoID, new Guid("A1984FBF-D1F4-4D71-B76B-636A207931DA"), "ERPxEnderecoID", "Endereço");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.SYSxEstadoID, new Guid("C00C7158-E96E-4926-A98C-307E6D30B233"), "SYSxEstadoID", "Estado");
            public static XORMField Lote = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Lote, new Guid("915F5D2B-8293-415A-AAA1-DF8694CF1524"), "Lote", "Lote");
            public static XORMField Quadra = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Quadra, new Guid("7769E6BE-78E3-4BE5-834D-083118010223"), "Quadra", "Quadra");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Numero, new Guid("B7852CEF-AD36-43AD-B981-C95310072F3F"), "Numero", "Número");
            public static XORMFKField ERPxFinalidadeID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.ERPxFinalidadeID, new Guid("DE29A13B-EF47-4426-B16B-02B4E3816E58"), "ERPxFinalidadeID", "Finalidade");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Observacao, new Guid("49992EC6-B7F3-43A9-8B86-E0612341358B"), "Observacao", "Observação");
            public static XORMFKField CEPxLogradouroID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.CEPxLogradouroID, new Guid("64F2504B-09C7-4DE4-AE66-21C4C1D4B4F0"), "CEPxLogradouroID", "Logradouro");
            public static XORMField Complemento = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Complemento, new Guid("2EC274DF-296F-4058-B823-81A9BB7C4421"), "Complemento", "Complemento");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Latitude, new Guid("537E83F4-510A-4E41-AF1A-55AFAA57AC55"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.ERP.DB.ERPx.ERPxEndereco.Longitude, new Guid("C5A85888-FC65-47A5-B55E-4FE25709A932"), "Longitude", "Longitude");
        }
        #endregion xERPxEndereco 


        #region xPCRxFazenda 
        public class xPCRxFazenda : XSVCTable
        {

            public static Guid gCID => new Guid("3C369A78-225B-433B-AD42-554E4B823EE4");

            public xPCRxFazenda()
            {
                Name = "PCRxFazenda";
                Alias = "PCRxFazenda";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.gCID;

                Items.Add(PCRxFazendaID, PCRxFazendaID.ID);
                PCRxFazendaID.Owner = this;
                PCRxFazendaID.OwnerID = ID;
                PCRxFazendaID.TableName = Name;
                Items.Add(CEPxLocalidadeID, CEPxLocalidadeID.ID);
                CEPxLocalidadeID.Owner = this;
                CEPxLocalidadeID.OwnerID = ID;
                CEPxLocalidadeID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(CoordenadasArea, CoordenadasArea.ID);
                CoordenadasArea.Owner = this;
                CoordenadasArea.OwnerID = ID;
                CoordenadasArea.TableName = Name;
            }

            public static XORMFaceField PCRxFazendaID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.PCRxFazendaID, new Guid("5F94914F-9ED9-47A0-A75E-411A1C186FD9"), "PCRxFazendaID", "Fazenda");
            public static XORMFKField CEPxLocalidadeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.CEPxLocalidadeID, new Guid("CF227E4E-9B6F-4196-AB78-0AE90DE1D1E0"), "CEPxLocalidadeID", "Localidade");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.SYSxEstadoID, new Guid("28FFEE69-9181-4D49-A77C-DB0EC3596F50"), "SYSxEstadoID", "Estado");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.SYSxEmpresaID, new Guid("8C02F759-2210-4DD2-9B94-1862235C78E5"), "SYSxEmpresaID", "Empresa");
            public static XORMField CoordenadasArea = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxFazenda.CoordenadasArea, new Guid("C8EFD710-5363-4668-A284-6CDABC96FF97"), "CoordenadasArea", "Coordenadas da Área");
        }
        #endregion xPCRxFazenda 


        public xERPxEndereco ERPxEndereco;
        public xPCRxFazenda PCRxFazenda;

        public FazendaEnderecoSVC()
        {
            TupleType = typeof(FazendaEnderecoSVC.XTuple);
            DataSetType = typeof(FazendaEnderecoSVC.XDataSet);
            ServiceRuleCID = new Guid("C3EEC8E4-CC4A-48E4-9476-D3DD71852A0B");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("6565B37F-141C-4318-A096-F5E522688B9D");
            Name = "FazendaEndereco";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = true;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            DataSetFields = new Guid[] { xERPxEndereco.Longitude.ID, xERPxEndereco.Latitude.ID, xERPxEndereco.ERPxEnderecoID.ID, xERPxEndereco.SYSxPessoaID.ID };
            PKField = xERPxEndereco.ERPxEnderecoID.ID;
            ConfigTableID = new Guid("0BF2DF22-6A0B-43CE-B33F-A11DB4216699");
            MasterRuleCID = new Guid("C3EEC8E4-CC4A-48E4-9476-D3DD71852A0B");
            ERPxEndereco = new xERPxEndereco();
            ERPxEndereco.IsReadOnly = true;
            AddTable(ERPxEndereco);
            PCRxFazenda = new xPCRxFazenda();
            PCRxFazenda.IsReadOnly = true;
            AddTable(PCRxFazenda);
            MasterTableID = ERPxEndereco.ID;
            PCRxFazenda_PCRxFazendaID_ERPxEndereco_SYSxPessoaID = AddReference(new XSVCReference(new Guid("C24F6CF1-C55B-45C9-84CA-BC5E5A88C108"), "FK_C24F6CF1C55B45C984CABC5E5A88C108", FazendaEnderecoSVC.xPCRxFazenda.gCID, xPCRxFazenda.PCRxFazendaID.ID, FazendaEnderecoSVC.xERPxEndereco.gCID, xERPxEndereco.SYSxPessoaID.ID, XJoinType.Inner)); // PCRxFazenda.PCRxFazendaID --> ERPxEndereco.SYSxPessoaID
            xERPxEndereco.ERPxEnderecoID.IsReadOnly = true;
            xERPxEndereco.ERPxEnderecoID.IsDataField = true;
            xERPxEndereco.ERPxEnderecoID.AllowEmpty = true;
            xERPxEndereco.Latitude.IsReadOnly = true;
            xERPxEndereco.Latitude.Length = 20;
            xERPxEndereco.Latitude.Scale = 10;
            xERPxEndereco.Latitude.IsDataField = true;
            xERPxEndereco.Latitude.AllowEmpty = true;
            xERPxEndereco.Longitude.IsReadOnly = true;
            xERPxEndereco.Longitude.Length = 20;
            xERPxEndereco.Longitude.Scale = 10;
            xERPxEndereco.Longitude.IsDataField = true;
            xERPxEndereco.Longitude.AllowEmpty = true;
            xERPxEndereco.SYSxPessoaID.IsReadOnly = true;
            xERPxEndereco.SYSxPessoaID.IsDataField = true;
            xERPxEndereco.SYSxPessoaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField ERPxEnderecoID => xERPxEndereco.ERPxEnderecoID;
        public XORMField Latitude => xERPxEndereco.Latitude;
        public XORMField Longitude => xERPxEndereco.Longitude;
        public XORMField SYSxPessoaID => xERPxEndereco.SYSxPessoaID;
        }
        #endregion XFields
        #region FazendaEnderecoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 ERPxEnderecoID
        {
            get
            {
                return (Int32)Value[FazendaEnderecoSVC.xERPxEndereco.ERPxEnderecoID.ID];
            }
            set
            {
                Value[FazendaEnderecoSVC.xERPxEndereco.ERPxEnderecoID.ID] = value;
            }
        }
        public Int32? oERPxEnderecoID
        {
            get
            {
                GetOldValue(FazendaEnderecoSVC.xERPxEndereco.ERPxEnderecoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Decimal Latitude
        {
            get
            {
                return (Decimal)Value[FazendaEnderecoSVC.xERPxEndereco.Latitude.ID];
            }
            set
            {
                Value[FazendaEnderecoSVC.xERPxEndereco.Latitude.ID] = value;
            }
        }
        public Decimal? oLatitude
        {
            get
            {
                GetOldValue(FazendaEnderecoSVC.xERPxEndereco.Latitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal Longitude
        {
            get
            {
                return (Decimal)Value[FazendaEnderecoSVC.xERPxEndereco.Longitude.ID];
            }
            set
            {
                Value[FazendaEnderecoSVC.xERPxEndereco.Longitude.ID] = value;
            }
        }
        public Decimal? oLongitude
        {
            get
            {
                GetOldValue(FazendaEnderecoSVC.xERPxEndereco.Longitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[FazendaEnderecoSVC.xERPxEndereco.SYSxPessoaID.ID];
            }
            set
            {
                Value[FazendaEnderecoSVC.xERPxEndereco.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(FazendaEnderecoSVC.xERPxEndereco.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FazendaEnderecoSVC.XTuple

        #region FazendaEnderecoSVC.XRule
        public abstract class XRule : XServiceRule<FazendaEnderecoSVC.XDataSet, FazendaEnderecoSVC, FazendaEnderecoSVC.XTuple>
        {
        }
        #endregion FazendaEnderecoSVC.XRule

        #region FazendaEnderecoSVC.XDataSet

        public class XDataSet : XDataSet<FazendaEnderecoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FazendaEnderecoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FazendaEnderecoSVC.XTuple> where T : XDataTuple
        {

            public Guid ERPxEnderecoID => FazendaEnderecoSVC.xERPxEndereco.ERPxEnderecoID.ID;
            public Guid Latitude => FazendaEnderecoSVC.xERPxEndereco.Latitude.ID;
            public Guid Longitude => FazendaEnderecoSVC.xERPxEndereco.Longitude.ID;
            public Guid SYSxPessoaID => FazendaEnderecoSVC.xERPxEndereco.SYSxPessoaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(FazendaEnderecoSVC.XDataSet);
            }

        }
        #endregion FazendaEnderecoSVC.XDataSet

        [Guid(FazendaEnderecoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FazendaEnderecoSVC))]
        protected class _Service : Service<FazendaEnderecoSVC, XDataSet, XTuple>
        {
            public const String sCID = "9335FFED-9419-4C79-A646-F30A9BB84B28";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FazendaEnderecoSVC, XDataSet, XTuple>, XService
             where TModel : FazendaEnderecoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}