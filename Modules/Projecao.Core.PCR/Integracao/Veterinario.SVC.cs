//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ERP.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Integracao
{
    [XRegister(typeof(VeterinarioSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Integracao\Veterinario.dssvc")]
    public class VeterinarioSVC : XSVCModel
    {
        public const String sCID = "677755A2-7F15-4FB9-B5C6-C14EF51022E9";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ERPxPessoaFisicaTipos_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID; // ERPxPessoaFisicaTipos.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("C2973008-5262-4574-9382-8E9072F52926");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("2F6BD8ED-62BB-44B8-8B57-87DA7C84FCCE"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("9DE7DE3D-1AFB-4082-82A5-17F8A85A0D14"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xERPxPessoaFisicaTipos 
        public class xERPxPessoaFisicaTipos : XSVCTable
        {

            public static Guid gCID => new Guid("CC98467F-6066-4812-9B47-76AB861947FB");

            public xERPxPessoaFisicaTipos()
            {
                Name = "ERPxPessoaFisicaTipos";
                Alias = "ERPxPessoaFisicaTipos";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisicaTipos.gCID;

                Items.Add(ERPxPessoaFisicaTiposID, ERPxPessoaFisicaTiposID.ID);
                ERPxPessoaFisicaTiposID.Owner = this;
                ERPxPessoaFisicaTiposID.OwnerID = ID;
                ERPxPessoaFisicaTiposID.TableName = Name;
                Items.Add(ERPxPessoaFisicaTipoID, ERPxPessoaFisicaTipoID.ID);
                ERPxPessoaFisicaTipoID.Owner = this;
                ERPxPessoaFisicaTipoID.OwnerID = ID;
                ERPxPessoaFisicaTipoID.TableName = Name;
                Items.Add(ERPxPessoaFisicaID, ERPxPessoaFisicaID.ID);
                ERPxPessoaFisicaID.Owner = this;
                ERPxPessoaFisicaID.OwnerID = ID;
                ERPxPessoaFisicaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField ERPxPessoaFisicaTiposID = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisicaTipos.ERPxPessoaFisicaTiposID, new Guid("B384C2BF-ECA2-4F6D-8B81-D4B8B91ED346"), "ERPxPessoaFisicaTiposID", "Ligação de Pessoa Física à Tipo");
            public static XORMFKField ERPxPessoaFisicaTipoID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisicaTipos.ERPxPessoaFisicaTipoID, new Guid("0202D03E-9FBB-4F87-8BD4-E540ECF059DC"), "ERPxPessoaFisicaTipoID", "Tipo de Pessoa Física");
            public static XORMFKField ERPxPessoaFisicaID = new XORMFKField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisicaTipos.ERPxPessoaFisicaID, new Guid("1366901B-AE86-4499-9E59-2A140C2EC20F"), "ERPxPessoaFisicaID", "Pessoa Física");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaFisicaTipos.SYSxEstadoID, new Guid("4B93A419-FBFE-4E07-96B1-DE8AEBA8AC24"), "SYSxEstadoID", "Estado");
        }
        #endregion xERPxPessoaFisicaTipos 


        public xERPxPessoaFisicaTipos ERPxPessoaFisicaTipos;
        public xSYSxPessoa SYSxPessoa;

        public VeterinarioSVC()
        {
            TupleType = typeof(VeterinarioSVC.XTuple);
            DataSetType = typeof(VeterinarioSVC.XDataSet);
            ServiceRuleCID = new Guid("3DF86C23-B87E-4995-82CD-9176344CC1F2");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("677755A2-7F15-4FB9-B5C6-C14EF51022E9");
            Name = "Veterinario";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = true;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID };
            DataSetFields = new Guid[] { xSYSxPessoa.Nome.ID, xSYSxPessoa.SYSxPessoaID.ID };
            PKField = xSYSxPessoa.SYSxPessoaID.ID;
            ConfigTableID = new Guid("6FBFB697-EAEA-4747-A431-053B84E28FEC");
            MasterRuleCID = new Guid("3DF86C23-B87E-4995-82CD-9176344CC1F2");
            ERPxPessoaFisicaTipos = new xERPxPessoaFisicaTipos();
            ERPxPessoaFisicaTipos.IsReadOnly = true;
            AddTable(ERPxPessoaFisicaTipos);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = SYSxPessoa.ID;
            ERPxPessoaFisicaTipos_ERPxPessoaFisicaID_SYSxPessoa_SYSxPessoaID = AddReference(new XSVCReference(new Guid("7F5E2CF2-1EC3-4BD2-93C5-F92A0543904A"), "FK_7F5E2CF21EC34BD293C5F92A0543904A", VeterinarioSVC.xERPxPessoaFisicaTipos.gCID, xERPxPessoaFisicaTipos.ERPxPessoaFisicaID.ID, VeterinarioSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, XJoinType.Inner)); // ERPxPessoaFisicaTipos.ERPxPessoaFisicaID --> SYSxPessoa.SYSxPessoaID
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xSYSxPessoa.SYSxPessoaID.IsReadOnly = true;
            xSYSxPessoa.SYSxPessoaID.IsDataField = true;
            xSYSxPessoa.SYSxPessoaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField SYSxPessoaID => xSYSxPessoa.SYSxPessoaID;
        }
        #endregion XFields
        #region VeterinarioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Nome
        {
            get
            {
                return (String)Value[VeterinarioSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[VeterinarioSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(VeterinarioSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[VeterinarioSVC.xSYSxPessoa.SYSxPessoaID.ID];
            }
            set
            {
                Value[VeterinarioSVC.xSYSxPessoa.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(VeterinarioSVC.xSYSxPessoa.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion VeterinarioSVC.XTuple

        #region VeterinarioSVC.XRule
        public abstract class XRule : XServiceRule<VeterinarioSVC.XDataSet, VeterinarioSVC, VeterinarioSVC.XTuple>
        {
        }
        #endregion VeterinarioSVC.XRule

        #region VeterinarioSVC.XDataSet

        public class XDataSet : XDataSet<VeterinarioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(VeterinarioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<VeterinarioSVC.XTuple> where T : XDataTuple
        {

            public Guid Nome => VeterinarioSVC.xSYSxPessoa.Nome.ID;
            public Guid SYSxPessoaID => VeterinarioSVC.xSYSxPessoa.SYSxPessoaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(VeterinarioSVC.XDataSet);
            }

        }
        #endregion VeterinarioSVC.XDataSet

        [Guid(VeterinarioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(VeterinarioSVC))]
        protected class _Service : Service<VeterinarioSVC, XDataSet, XTuple>
        {
            public const String sCID = "B4F80240-FF44-4909-9DAA-BFD7383D0145";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<VeterinarioSVC, XDataSet, XTuple>, XService
             where TModel : VeterinarioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}