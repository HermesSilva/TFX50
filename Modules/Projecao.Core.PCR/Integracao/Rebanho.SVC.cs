//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ERP.DB;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Integracao
{
    [XRegister(typeof(RebanhoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Integracao\Rebanho.dssvc")]
    public class RebanhoSVC : XSVCModel
    {
        public const String sCID = "1CAE28EA-66CF-4CCF-BBF9-27818F032B86";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID; // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxAnimalFase_PCRxAnimalFaseID_PCRxAnimal_PCRxAnimalFaseID; // PCRxAnimalFase.PCRxAnimalFaseID --> PCRxAnimal.PCRxAnimalFaseID
        public static XSVCReference PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID; // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
        public static XSVCReference PCRxAnimalLote_PCRxAnimalLoteID_PCRxAnimal_PCRxAnimalLoteID; // PCRxAnimalLote.PCRxAnimalLoteID --> PCRxAnimal.PCRxAnimalLoteID
        public static XSVCReference PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID; // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
        public static XSVCReference PCRxAnimal_PCRxIATFFaseID_PCRxIATFFase_PCRxIATFFaseID; // PCRxAnimal.PCRxIATFFaseID --> PCRxIATFFase.PCRxIATFFaseID
        public static XSVCReference ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID; // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
        public static XSVCReference ISExItemCategoria_ISExItemID_ISExItem_ISExItemID; // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
        public static XSVCReference PCRxAnimalEstado_PCRxAnimalEstadoID_PCRxAnimal_PCRxAnimalEstadoID; // PCRxAnimalEstado.PCRxAnimalEstadoID --> PCRxAnimal.PCRxAnimalEstadoID
        public static XSVCReference ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID; // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
        public static XSVCReference PCRxReprodutor_PCRxReprodutorID_ISExItem_ISExItemID; // PCRxReprodutor.PCRxReprodutorID --> ISExItem.ISExItemID
        public static XSVCReference ERPxGenero_ERPxGeneroID_PCRxAnimal_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> PCRxAnimal.ERPxGeneroID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("01F7F9ED-6AA2-42C2-B6D6-6FF75D0A48B9");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("27ABDA85-97E3-4CB7-8C10-487532162267"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("1F683268-13D3-4520-9CCB-7E0FF5CDCD44"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("D906DC3A-545F-48B6-9F3A-583350CBDB2D"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("C22A55D9-9B2C-4E85-B080-06B74B76F36C"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("CB4CBB20-8CC8-4098-B020-CF8D604525D3"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("4CD318DA-BC50-4B14-9449-A199B0A443BA"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("A1744845-8C1D-46FD-A472-23CA0D69EA4E"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("316D9488-D835-4952-B217-6CF8B3D63FE6"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("C7902327-116F-4899-82E2-9E2131C2DCD7"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExItemMae 
        public class xISExItemMae : XSVCTable
        {

            public static Guid gCID => new Guid("142FA0C4-476B-4CCF-BDD8-871B37CC47BE");

            public xISExItemMae()
            {
                Name = "ISExItem";
                Alias = "ISExItemMae";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeMae";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("677D9215-39A1-44D4-A340-752057E10035"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("89DB4361-381C-4673-9CA9-675A0C87BAB5"), "Nome", "Nome da Mãe");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("8DA8B3E0-F3C6-4C74-9C65-B8129A7C7491"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("352AB274-540D-41AF-A3B6-731420F3064F"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("D22E5A23-30F0-479E-96B7-A80BEF948879"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("B02AAE13-84CD-4F44-AC7E-A3312C831F04"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("8BE183A2-1FBC-4768-B7CD-94E4EA7BF057"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("E7DED298-622F-43AD-B203-4F29CF99DAAB"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("1FD1ABEC-E08C-446E-A9D4-75636A9AF742"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemMae 


        #region xPCRxRaca 
        public class xPCRxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("26998DC6-A656-4618-A408-7EE51A82821A");

            public xPCRxRaca()
            {
                Name = "PCRxRaca";
                Alias = "PCRxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;

                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PCRxRacaID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.PCRxRacaID, new Guid("A107F23D-3662-4008-B71A-81BD8645B231"), "PCRxRacaID", "Raça");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.Raca, new Guid("15EC4081-01B0-47D2-BC55-5B289433FFAF"), "Raca", "Raça");
        }
        #endregion xPCRxRaca 


        #region xPCRxAnimalFase 
        public class xPCRxAnimalFase : XSVCTable
        {

            public static Guid gCID => new Guid("4107C58A-E4B2-4740-8C26-36C16B0D6AE4");

            public xPCRxAnimalFase()
            {
                Name = "PCRxAnimalFase";
                Alias = "PCRxAnimalFase";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.gCID;

                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Fase, Fase.ID);
                Fase.Owner = this;
                Fase.OwnerID = ID;
                Fase.TableName = Name;
                Fase.Alias = "Fase";
            }

            public static XORMPKField PCRxAnimalFaseID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.PCRxAnimalFaseID, new Guid("DF9C1B5A-0BD0-415B-835F-6FEF102174F3"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMFaceField Fase = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.Fase, new Guid("806A1056-EF1A-4507-B131-9155F1BB398B"), "Fase", "Fase");
        }
        #endregion xPCRxAnimalFase 


        #region xPCRxReprodutor 
        public class xPCRxReprodutor : XSVCTable
        {

            public static Guid gCID => new Guid("5C55422B-40E1-462B-8958-3428555CD03C");

            public xPCRxReprodutor()
            {
                Name = "PCRxReprodutor";
                Alias = "PCRxReprodutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.gCID;

                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                Items.Add(ApenasSemem, ApenasSemem.ID);
                ApenasSemem.Owner = this;
                ApenasSemem.OwnerID = ID;
                ApenasSemem.TableName = Name;
                ApenasSemem.Alias = "ApenasSemem";
            }

            public static XORMFaceField PCRxReprodutorID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.PCRxReprodutorID, new Guid("DABD5C92-689A-4463-8E91-AA310C0EFBEB"), "PCRxReprodutorID", "Reprodutor");
            public static XORMField ApenasSemem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.ApenasSemem, new Guid("0AF2824D-3EA8-4943-9679-0B48876281AB"), "ApenasSemem", "Apenas Sêmem");
        }
        #endregion xPCRxReprodutor 


        #region xPCRxAnimalEstado 
        public class xPCRxAnimalEstado : XSVCTable
        {

            public static Guid gCID => new Guid("72428267-2A4E-4C4D-9D9E-27B063E72317");

            public xPCRxAnimalEstado()
            {
                Name = "PCRxAnimalEstado";
                Alias = "PCRxAnimalEstado";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.gCID;

                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(AnimalEstado, AnimalEstado.ID);
                AnimalEstado.Owner = this;
                AnimalEstado.OwnerID = ID;
                AnimalEstado.TableName = Name;
                AnimalEstado.Alias = "AnimalEstado";
            }

            public static XORMPKField PCRxAnimalEstadoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.PCRxAnimalEstadoID, new Guid("83B083EB-2AF7-4566-A0B3-3F317832BFCA"), "PCRxAnimalEstadoID", "Estado");
            public static XORMFaceField AnimalEstado = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.AnimalEstado, new Guid("61A14E4D-9AB1-408E-8F29-B01A7C231BCA"), "AnimalEstado", "Estado do Animal");
        }
        #endregion xPCRxAnimalEstado 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("79EA96AB-9471-4B11-B8C9-DA5B49CDDD58");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                PCRxRacaID.Alias = "PCRxRacaID";
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                PCRxAnimalFaseID.Alias = "PCRxAnimalFaseID";
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                PCRxAnimalEstadoID.Alias = "PCRxAnimalEstadoID";
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                PCRxAnimalLoteID.Alias = "PCRxAnimalLoteID";
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                PCRxIATFFaseID.Alias = "PCRxIATFFaseID";
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("1D3171F1-0E6E-4ADB-A876-841EB1C456C5"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("E2D289A7-6251-4946-A6E9-910E9F90A3FA"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("457DA9DD-BBF5-45E1-B57D-761C4AFA61AA"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("2F5E3F8D-9781-43A3-A97E-DC12D2FEEFB8"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("90ACC02D-2C1F-4712-A942-3E1AB48C03E1"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("21348FAF-0020-4911-B48F-FE5F718ED8E9"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("5E137430-1180-409F-AB4E-97E10DD4C699"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("D0427016-849C-4688-8647-BE4A050D859F"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("9A3E42F2-9FC3-49AA-A36F-02DBB4F5EFD4"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("8AA80DB9-C12D-4CB1-BC0E-980F422CE4BD"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("73D208DA-8931-44C5-9457-2E321A1B5CF9"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("8969498A-5AB4-41C5-A305-A2615B7152E7");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                PCRxMaeID.Alias = "PCRxMaeID";
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
                PCRxPaiID.Alias = "PCRxPaiID";
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("5C4ADD22-19E4-42C4-B393-FAD6F4981FBA"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("1C857C54-2306-4466-9C07-9FE57D44D1FC"), "PCRxMaeID", "Animal");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("EC4872F8-4894-43F8-8E74-1117BD53A25D"), "PCRxPaiID", "Animal");
        }
        #endregion xPCRxAnimalFiliacao 


        #region xPCRxIATFFase 
        public class xPCRxIATFFase : XSVCTable
        {

            public static Guid gCID => new Guid("A31DFE39-89A0-47F0-B19D-F407A367137D");

            public xPCRxIATFFase()
            {
                Name = "PCRxIATFFase";
                Alias = "PCRxIATFFase";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.gCID;

                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                Items.Add(PCRxIATFID, PCRxIATFID.ID);
                PCRxIATFID.Owner = this;
                PCRxIATFID.OwnerID = ID;
                PCRxIATFID.TableName = Name;
                Items.Add(Ordem, Ordem.ID);
                Ordem.Owner = this;
                Ordem.OwnerID = ID;
                Ordem.TableName = Name;
                Items.Add(PCRxIATFFaseAnteriorID, PCRxIATFFaseAnteriorID.ID);
                PCRxIATFFaseAnteriorID.Owner = this;
                PCRxIATFFaseAnteriorID.OwnerID = ID;
                PCRxIATFFaseAnteriorID.TableName = Name;
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                PCRxIATFFaseTipoID.Alias = "PCRxIATFFaseTipoID";
                Items.Add(PCRxIATFFaseProximaID, PCRxIATFFaseProximaID.ID);
                PCRxIATFFaseProximaID.Owner = this;
                PCRxIATFFaseProximaID.OwnerID = ID;
                PCRxIATFFaseProximaID.TableName = Name;
                Items.Add(Duracao, Duracao.ID);
                Duracao.Owner = this;
                Duracao.OwnerID = ID;
                Duracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField PCRxIATFFaseID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseID, new Guid("CCC95598-4758-438F-A0D1-E97827BE703D"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxIATFID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFID, new Guid("ED490902-ABC6-4DE4-BD59-4470BF0C6835"), "PCRxIATFID", "Inseminação Artificial em Tempo Fixo");
            public static XORMField Ordem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Ordem, new Guid("8238B15A-F5B4-47A4-AECC-63FCC4B5D666"), "Ordem", "Ordem");
            public static XORMFKField PCRxIATFFaseAnteriorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseAnteriorID, new Guid("BCB41A39-FC0E-47F9-B622-DA5E777BDF00"), "PCRxIATFFaseAnteriorID", "Fase Anterior da IATF");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseTipoID, new Guid("71F304B2-1C59-474D-B3DC-6F527093A710"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFKField PCRxIATFFaseProximaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseProximaID, new Guid("C26F3B52-5ED7-4B96-A5DC-9EC40AA0A916"), "PCRxIATFFaseProximaID", "Próxima Fases da IATF");
            public static XORMField Duracao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Duracao, new Guid("6B8B91C0-0A6F-452C-B347-9BA0BDE92952"), "Duracao", "Duração (dias)");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.SYSxEstadoID, new Guid("F450F533-94EA-4B62-8FC3-68E60A9FC331"), "SYSxEstadoID", "Estado");
        }
        #endregion xPCRxIATFFase 


        #region xPCRxAnimalLote 
        public class xPCRxAnimalLote : XSVCTable
        {

            public static Guid gCID => new Guid("AAEC45AD-AFA2-4EE0-8302-1CD8D6D5A1F3");

            public xPCRxAnimalLote()
            {
                Name = "PCRxAnimalLote";
                Alias = "PCRxAnimalLote";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.gCID;

                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(DataCriacao, DataCriacao.ID);
                DataCriacao.Owner = this;
                DataCriacao.OwnerID = ID;
                DataCriacao.TableName = Name;
                DataCriacao.Alias = "DataCriacao";
                Items.Add(Lote, Lote.ID);
                Lote.Owner = this;
                Lote.OwnerID = ID;
                Lote.TableName = Name;
                Lote.Alias = "Lote";
                Items.Add(Ano, Ano.ID);
                Ano.Owner = this;
                Ano.OwnerID = ID;
                Ano.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalLoteID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.PCRxAnimalLoteID, new Guid("070334A7-0D1A-4DAC-9C41-5D6191CA0F46"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMDateTimeField DataCriacao = new XORMDateTimeField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.DataCriacao, new Guid("780BDFD4-3D25-4B09-8280-DDFE2704A7D3"), "DataCriacao", "da de Criação");
            public static XORMFaceField Lote = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.Lote, new Guid("5FA254FC-1D9A-49B6-9306-ED09469EF980"), "Lote", "Lote");
            public static XORMField Ano = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.Ano, new Guid("7EC47A67-EA76-4CFD-AC4C-03B52E17D6E7"), "Ano", "Ano");
        }
        #endregion xPCRxAnimalLote 


        #region xISExItemPai 
        public class xISExItemPai : XSVCTable
        {

            public static Guid gCID => new Guid("B8A41656-B5BF-413F-B4EC-DC005FBFB4CE");

            public xISExItemPai()
            {
                Name = "ISExItem";
                Alias = "ISExItemPai";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomePai";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("D24032F5-9CFF-4108-BD83-86B706897C70"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("64AEBEF5-B330-4CC8-9CC5-E03DDBABC30F"), "Nome", "Nome do Pai");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("5AC3669D-254D-441D-8D00-2DB7327C1E84"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("1C3D1E9E-D116-430C-8D81-E1BDAB79C2F8"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("E4556016-96C7-469C-B722-1EF86F6C8C93"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("7F6204DD-E7F6-4737-8D97-DD2CF5134BAA"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("3A43A8ED-B156-4EAA-94C8-0887B18C3108"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("58C52DF5-6131-48F0-8268-6DBA8A9ABA11"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("053F0E81-65A1-4305-BCC6-297A7D755C05"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemPai 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("CAC1A7F4-7BFF-45E0-9ACB-A944B0C957F3");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("E594DF10-A83B-4E0F-9A74-65698A309E5D"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("0B731585-BD12-4FCC-84B3-C37B01730553"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("E8A470B2-14DD-46D6-A548-F7321FF34C44"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("797222BE-0FAA-4544-82C7-AF8A9766C86B"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("F4870B7E-B206-40A2-960D-10D01017F964");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("F4472272-8FC4-4446-8E1F-929C3832DD6E"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("F375AF4F-3841-467B-BC2A-034997079945"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("8EEE49AD-DC00-45C6-A64D-BD261865BE93"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("CBD5D768-F5F9-4C1D-923E-87502DB423A7"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        public xERPxGenero ERPxGenero;
        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xISExItemMae ISExItemMae;
        public xISExItemPai ISExItemPai;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalEstado PCRxAnimalEstado;
        public xPCRxAnimalFase PCRxAnimalFase;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;
        public xPCRxAnimalLote PCRxAnimalLote;
        public xPCRxIATFFase PCRxIATFFase;
        public xPCRxRaca PCRxRaca;
        public xPCRxReprodutor PCRxReprodutor;
        public static readonly XORMParameterField IdadeMeses = new XORMParameterField(new Guid("4875612D-D34E-4EDC-A24E-62DEBEA547B0"), "IdadeMeses", "Idade (meses)", XInt32.CID, 0, 0, false, gCID, null);

        public RebanhoSVC()
        {
            TupleType = typeof(RebanhoSVC.XTuple);
            DataSetType = typeof(RebanhoSVC.XDataSet);
            ServiceRuleCID = new Guid("95FF978C-3F3B-4D0A-842C-5376AD8E0267");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("1CAE28EA-66CF-4CCF-BBF9-27818F032B86");
            Name = "Rebanho";
            Title = "Rebanho";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = true;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            DataSetFields = new Guid[] { xPCRxAnimal.SYSxEmpresaID.ID, xPCRxAnimal.Nascimento.ID, xPCRxAnimal.PCRxAnimalID.ID, xISExItem.Nome.ID, xPCRxAnimalFase.Fase.ID, xERPxGenero.Genero.ID, xPCRxRaca.Raca.ID, xISExItemMae.Nome.ID, xISExItemPai.Nome.ID, xPCRxAnimal.PCRxAnimalEstadoID.ID, xPCRxAnimal.PCRxAnimalFaseID.ID, xPCRxAnimal.PCRxRacaID.ID, xPCRxAnimal.ERPxGeneroID.ID, xPCRxAnimalEstado.AnimalEstado.ID, xPCRxAnimalFiliacao.PCRxMaeID.ID, xPCRxAnimalFiliacao.PCRxPaiID.ID, xPCRxAnimalLote.Lote.ID, xPCRxAnimalLote.DataCriacao.ID, xPCRxAnimal.PCRxAnimalLoteID.ID, xPCRxAnimal.PCRxIATFFaseID.ID, xPCRxIATFFase.PCRxIATFFaseTipoID.ID, xPCRxReprodutor.ApenasSemem.ID, IdadeMeses.ID };
            PKField = xPCRxAnimal.PCRxAnimalID.ID;
            ConfigTableID = new Guid("01BC341A-0142-4C60-87A7-9228AD3A73E9");
            MasterRuleCID = new Guid("95FF978C-3F3B-4D0A-842C-5376AD8E0267");
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            ISExItemMae = new xISExItemMae();
            ISExItemMae.IsReadOnly = true;
            AddTable(ISExItemMae);
            ISExItemPai = new xISExItemPai();
            ISExItemPai.IsReadOnly = true;
            AddTable(ISExItemPai);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = true;
            AddTable(PCRxAnimal);
            PCRxAnimalEstado = new xPCRxAnimalEstado();
            PCRxAnimalEstado.IsReadOnly = true;
            AddTable(PCRxAnimalEstado);
            PCRxAnimalFase = new xPCRxAnimalFase();
            PCRxAnimalFase.IsReadOnly = true;
            AddTable(PCRxAnimalFase);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = true;
            AddTable(PCRxAnimalFiliacao);
            PCRxAnimalLote = new xPCRxAnimalLote();
            PCRxAnimalLote.IsReadOnly = true;
            AddTable(PCRxAnimalLote);
            PCRxIATFFase = new xPCRxIATFFase();
            PCRxIATFFase.IsReadOnly = true;
            AddTable(PCRxIATFFase);
            PCRxRaca = new xPCRxRaca();
            PCRxRaca.IsReadOnly = true;
            AddTable(PCRxRaca);
            PCRxReprodutor = new xPCRxReprodutor();
            PCRxReprodutor.IsReadOnly = true;
            AddTable(PCRxReprodutor);
            MasterTableID = PCRxAnimal.ID;
            ISExItem_ISExItemID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("0D1692FF-4BEA-4260-B967-0DEE3E20DEE0"), "FK_0D1692FF4BEA4260B9670DEE3E20DEE0", RebanhoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimal.PCRxAnimalID
            PCRxAnimalFase_PCRxAnimalFaseID_PCRxAnimal_PCRxAnimalFaseID = AddReference(new XSVCReference(new Guid("0D8480FE-A572-4314-82CB-49984854959C"), "FK_0D8480FEA572431482CB49984854959C", RebanhoSVC.xPCRxAnimalFase.gCID, xPCRxAnimalFase.PCRxAnimalFaseID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalFaseID.ID, XJoinType.Inner)); // PCRxAnimalFase.PCRxAnimalFaseID --> PCRxAnimal.PCRxAnimalFaseID
            PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID = AddReference(new XSVCReference(new Guid("0FFF9212-ECA5-4655-8F21-486FCCB3AD26"), "FK_0FFF9212ECA546558F21486FCCB3AD26", RebanhoSVC.xPCRxRaca.gCID, xPCRxRaca.PCRxRacaID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxRacaID.ID, XJoinType.Inner)); // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
            PCRxAnimalLote_PCRxAnimalLoteID_PCRxAnimal_PCRxAnimalLoteID = AddReference(new XSVCReference(new Guid("38C7848A-3692-433E-BC88-31C20313EFD9"), "FK_38C7848A3692433EBC8831C20313EFD9", RebanhoSVC.xPCRxAnimalLote.gCID, xPCRxAnimalLote.PCRxAnimalLoteID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalLoteID.ID, XJoinType.Inner)); // PCRxAnimalLote.PCRxAnimalLoteID --> PCRxAnimal.PCRxAnimalLoteID
            PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_PCRxAnimal_PCRxAnimalID = AddReference(new XSVCReference(new Guid("8703548E-75D1-45AC-A5C9-562BF3117296"), "FK_8703548E75D145ACA5C9562BF3117296", RebanhoSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, XJoinType.Inner)); // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> PCRxAnimal.PCRxAnimalID
            PCRxAnimal_PCRxIATFFaseID_PCRxIATFFase_PCRxIATFFaseID = AddReference(new XSVCReference(new Guid("9E808DD1-8926-4998-A255-E27C5841DBC0"), "FK_9E808DD189264998A255E27C5841DBC0", RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxIATFFaseID.ID, RebanhoSVC.xPCRxIATFFase.gCID, xPCRxIATFFase.PCRxIATFFaseID.ID, XJoinType.Inner)); // PCRxAnimal.PCRxIATFFaseID --> PCRxIATFFase.PCRxIATFFaseID
            ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID = AddReference(new XSVCReference(new Guid("A375A23B-B627-4CB7-BC35-8D65EDE0DF43"), "FK_A375A23BB6274CB7BC358D65EDE0DF43", RebanhoSVC.xISExItemMae.gCID, xISExItemMae.ISExItemID.ID, RebanhoSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxMaeID.ID, XJoinType.Inner)); // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
            ISExItemCategoria_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("AFDAFB53-F3DB-485D-8CA5-EB1D9CA4B1BA"), "FK_AFDAFB53F3DB485D8CA5EB1D9CA4B1BA", RebanhoSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, RebanhoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
            PCRxAnimalEstado_PCRxAnimalEstadoID_PCRxAnimal_PCRxAnimalEstadoID = AddReference(new XSVCReference(new Guid("B6AD649C-C7E4-49E9-8EF3-03053AFA1EFA"), "FK_B6AD649CC7E449E98EF303053AFA1EFA", RebanhoSVC.xPCRxAnimalEstado.gCID, xPCRxAnimalEstado.PCRxAnimalEstadoID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalEstadoID.ID, XJoinType.Inner)); // PCRxAnimalEstado.PCRxAnimalEstadoID --> PCRxAnimal.PCRxAnimalEstadoID
            ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID = AddReference(new XSVCReference(new Guid("CAA79A06-9B68-4E95-88A6-4F81F25036DC"), "FK_CAA79A069B684E9588A64F81F25036DC", RebanhoSVC.xISExItemPai.gCID, xISExItemPai.ISExItemID.ID, RebanhoSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxPaiID.ID, XJoinType.Inner)); // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
            PCRxReprodutor_PCRxReprodutorID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("DA481014-F6FA-455D-9A66-BA8732E973F4"), "FK_DA481014F6FA455D9A66BA8732E973F4", RebanhoSVC.xPCRxReprodutor.gCID, xPCRxReprodutor.PCRxReprodutorID.ID, RebanhoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Left)); // PCRxReprodutor.PCRxReprodutorID --> ISExItem.ISExItemID
            ERPxGenero_ERPxGeneroID_PCRxAnimal_ERPxGeneroID = AddReference(new XSVCReference(new Guid("F81F57BA-D855-412F-A257-0ABCE9909A76"), "FK_F81F57BAD855412FA2570ABCE9909A76", RebanhoSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> PCRxAnimal.ERPxGeneroID
            AddField(IdadeMeses);
            IdadeMeses.IsParam = true;
            xPCRxAnimalEstado.AnimalEstado.IsReadOnly = true;
            xPCRxAnimalEstado.AnimalEstado.IsDataField = true;
            xPCRxAnimalEstado.AnimalEstado.AllowEmpty = true;
            xPCRxReprodutor.ApenasSemem.IsReadOnly = true;
            xPCRxReprodutor.ApenasSemem.IsDataField = true;
            xPCRxReprodutor.ApenasSemem.AllowEmpty = true;
            xPCRxAnimalLote.DataCriacao.IsReadOnly = true;
            xPCRxAnimalLote.DataCriacao.IsDataField = true;
            xPCRxAnimalLote.DataCriacao.AllowEmpty = true;
            xPCRxAnimal.ERPxGeneroID.IsReadOnly = true;
            xPCRxAnimal.ERPxGeneroID.IsDataField = true;
            xPCRxAnimal.ERPxGeneroID.AllowEmpty = true;
            xPCRxAnimalFase.Fase.IsReadOnly = true;
            xPCRxAnimalFase.Fase.Length = 25;
            xPCRxAnimalFase.Fase.IsDataField = true;
            xPCRxAnimalFase.Fase.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            IdadeMeses.IsReadOnly = false;
            IdadeMeses.Length = 0;
            IdadeMeses.Scale = 0;
            IdadeMeses.IsDataField = true;
            IdadeMeses.AllowEmpty = true;
            xPCRxAnimalLote.Lote.IsReadOnly = true;
            xPCRxAnimalLote.Lote.Length = 12;
            xPCRxAnimalLote.Lote.IsDataField = true;
            xPCRxAnimalLote.Lote.AllowEmpty = true;
            xPCRxAnimal.Nascimento.IsReadOnly = true;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItemMae.Nome.IsReadOnly = true;
            xISExItemMae.Nome.Length = 60;
            xISExItemMae.Nome.IsDataField = true;
            xISExItemMae.Nome.AllowEmpty = true;
            xISExItemPai.Nome.IsReadOnly = true;
            xISExItemPai.Nome.Length = 60;
            xISExItemPai.Nome.IsDataField = true;
            xISExItemPai.Nome.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalEstadoID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalEstadoID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalEstadoID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalFaseID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalFaseID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalFaseID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalLoteID.IsReadOnly = true;
            xPCRxAnimal.PCRxAnimalLoteID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalLoteID.AllowEmpty = true;
            xPCRxAnimal.PCRxIATFFaseID.IsReadOnly = true;
            xPCRxAnimal.PCRxIATFFaseID.IsDataField = true;
            xPCRxAnimal.PCRxIATFFaseID.AllowEmpty = true;
            xPCRxIATFFase.PCRxIATFFaseTipoID.IsReadOnly = true;
            xPCRxIATFFase.PCRxIATFFaseTipoID.IsDataField = true;
            xPCRxIATFFase.PCRxIATFFaseTipoID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsReadOnly = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxMaeID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxPaiID.IsReadOnly = true;
            xPCRxAnimalFiliacao.PCRxPaiID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxPaiID.AllowEmpty = true;
            xPCRxAnimal.PCRxRacaID.IsReadOnly = true;
            xPCRxAnimal.PCRxRacaID.IsDataField = true;
            xPCRxAnimal.PCRxRacaID.AllowEmpty = true;
            xPCRxRaca.Raca.IsReadOnly = true;
            xPCRxRaca.Raca.Length = 25;
            xPCRxRaca.Raca.IsDataField = true;
            xPCRxRaca.Raca.AllowEmpty = true;
            xPCRxAnimal.SYSxEmpresaID.IsReadOnly = true;
            xPCRxAnimal.SYSxEmpresaID.IsDataField = true;
            xPCRxAnimal.SYSxEmpresaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField AnimalEstado => xPCRxAnimalEstado.AnimalEstado;
        public XORMField ApenasSemem => xPCRxReprodutor.ApenasSemem;
        public XORMField DataCriacao => xPCRxAnimalLote.DataCriacao;
        public XORMField ERPxGeneroID => xPCRxAnimal.ERPxGeneroID;
        public XORMField Fase => xPCRxAnimalFase.Fase;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField IdadeMeses => RebanhoSVC.IdadeMeses;
        public XORMField Lote => xPCRxAnimalLote.Lote;
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField NomeMae => xISExItemMae.Nome;
        public XORMField NomePai => xISExItemPai.Nome;
        public XORMField PCRxAnimalEstadoID => xPCRxAnimal.PCRxAnimalEstadoID;
        public XORMField PCRxAnimalFaseID => xPCRxAnimal.PCRxAnimalFaseID;
        public XORMField PCRxAnimalID => xPCRxAnimal.PCRxAnimalID;
        public XORMField PCRxAnimalLoteID => xPCRxAnimal.PCRxAnimalLoteID;
        public XORMField PCRxIATFFaseID => xPCRxAnimal.PCRxIATFFaseID;
        public XORMField PCRxIATFFaseTipoID => xPCRxIATFFase.PCRxIATFFaseTipoID;
        public XORMField PCRxMaeID => xPCRxAnimalFiliacao.PCRxMaeID;
        public XORMField PCRxPaiID => xPCRxAnimalFiliacao.PCRxPaiID;
        public XORMField PCRxRacaID => xPCRxAnimal.PCRxRacaID;
        public XORMField Raca => xPCRxRaca.Raca;
        public XORMField SYSxEmpresaID => xPCRxAnimal.SYSxEmpresaID;
        }
        #endregion XFields
        #region RebanhoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String AnimalEstado
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxAnimalEstado.AnimalEstado.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalEstado.AnimalEstado.ID] = value;
            }
        }
        public String? oAnimalEstado
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalEstado.AnimalEstado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Boolean ApenasSemem
        {
            get
            {
                return (Boolean)Value[RebanhoSVC.xPCRxReprodutor.ApenasSemem.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxReprodutor.ApenasSemem.ID] = value;
            }
        }
        public Boolean? oApenasSemem
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxReprodutor.ApenasSemem, out Object ovlr);
                return (Boolean?)ovlr;
            }
        }

        public DateTime DataCriacao
        {
            get
            {
                return (DateTime)Value[RebanhoSVC.xPCRxAnimalLote.DataCriacao.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalLote.DataCriacao.ID] = value;
            }
        }
        public DateTime? oDataCriacao
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalLote.DataCriacao, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.ERPxGeneroID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Fase
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxAnimalFase.Fase.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalFase.Fase.ID] = value;
            }
        }
        public String? oFase
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalFase.Fase, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[RebanhoSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[RebanhoSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(RebanhoSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 IdadeMeses
        {
            get
            {
                return (Int32)Value[RebanhoSVC.IdadeMeses.ID];
            }
            set
            {
                Value[RebanhoSVC.IdadeMeses.ID] = value;
            }
        }
        public Int32? oIdadeMeses
        {
            get
            {
                GetOldValue(RebanhoSVC.IdadeMeses, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Lote
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxAnimalLote.Lote.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalLote.Lote.ID] = value;
            }
        }
        public String? oLote
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalLote.Lote, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[RebanhoSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeMae
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExItemMae.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItemMae.Nome.ID] = value;
            }
        }
        public String? oNomeMae
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItemMae.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomePai
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExItemPai.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItemPai.Nome.ID] = value;
            }
        }
        public String? oNomePai
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItemPai.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 PCRxAnimalEstadoID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalEstadoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 PCRxAnimalFaseID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalFaseID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxAnimalLoteID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalLoteID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxIATFFaseID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxIATFFaseTipoID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxIATFFase.PCRxIATFFaseTipoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxIATFFase.PCRxIATFFaseTipoID.ID] = value;
            }
        }
        public Int16? oPCRxIATFFaseTipoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxIATFFase.PCRxIATFFaseTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxMaeID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID] = value;
            }
        }
        public Guid? oPCRxMaeID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxPaiID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID] = value;
            }
        }
        public Guid? oPCRxPaiID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxRacaID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.PCRxRacaID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxRacaID.ID] = value;
            }
        }
        public Int16? oPCRxRacaID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxRacaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxRaca.Raca.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.SYSxEmpresaID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion RebanhoSVC.XTuple

        #region RebanhoSVC.XRule
        public abstract class XRule : XServiceRule<RebanhoSVC.XDataSet, RebanhoSVC, RebanhoSVC.XTuple>
        {
        }
        #endregion RebanhoSVC.XRule

        #region RebanhoSVC.XDataSet

        public class XDataSet : XDataSet<RebanhoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(RebanhoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<RebanhoSVC.XTuple> where T : XDataTuple
        {

            public Guid AnimalEstado => RebanhoSVC.xPCRxAnimalEstado.AnimalEstado.ID;
            public Guid ApenasSemem => RebanhoSVC.xPCRxReprodutor.ApenasSemem.ID;
            public Guid DataCriacao => RebanhoSVC.xPCRxAnimalLote.DataCriacao.ID;
            public Guid ERPxGeneroID => RebanhoSVC.xPCRxAnimal.ERPxGeneroID.ID;
            public Guid Fase => RebanhoSVC.xPCRxAnimalFase.Fase.ID;
            public Guid Genero => RebanhoSVC.xERPxGenero.Genero.ID;
            public Guid IdadeMeses => RebanhoSVC.IdadeMeses.ID;
            public Guid Lote => RebanhoSVC.xPCRxAnimalLote.Lote.ID;
            public Guid Nascimento => RebanhoSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => RebanhoSVC.xISExItem.Nome.ID;
            public Guid NomeMae => RebanhoSVC.xISExItemMae.Nome.ID;
            public Guid NomePai => RebanhoSVC.xISExItemPai.Nome.ID;
            public Guid PCRxAnimalEstadoID => RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID;
            public Guid PCRxAnimalFaseID => RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID.ID;
            public Guid PCRxAnimalID => RebanhoSVC.xPCRxAnimal.PCRxAnimalID.ID;
            public Guid PCRxAnimalLoteID => RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID.ID;
            public Guid PCRxIATFFaseID => RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID.ID;
            public Guid PCRxIATFFaseTipoID => RebanhoSVC.xPCRxIATFFase.PCRxIATFFaseTipoID.ID;
            public Guid PCRxMaeID => RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID;
            public Guid PCRxPaiID => RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID;
            public Guid PCRxRacaID => RebanhoSVC.xPCRxAnimal.PCRxRacaID.ID;
            public Guid Raca => RebanhoSVC.xPCRxRaca.Raca.ID;
            public Guid SYSxEmpresaID => RebanhoSVC.xPCRxAnimal.SYSxEmpresaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(RebanhoSVC.XDataSet);
            }

        }
        #endregion RebanhoSVC.XDataSet

        [Guid(RebanhoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(RebanhoSVC))]
        protected class _Service : Service<RebanhoSVC, XDataSet, XTuple>
        {
            public const String sCID = "FE245F08-8BF7-44C0-A88E-893D0AA0988D";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<RebanhoSVC, XDataSet, XTuple>, XService
             where TModel : RebanhoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}