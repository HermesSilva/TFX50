//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ERP.DB;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using Projecao.Core.PCR.Rebanho;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Rebanho
{
    [XRegister(typeof(RebanhoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Rebanho\Rebanho.dssvc")]
    public class RebanhoSVC : XSVCModel
    {
        #region RebanhoFilterFRM

        [XRegister(typeof(RebanhoFilterFRM), sCID)]
        public class RebanhoFilterFRM : XFRMModel
        {
            public const String sCID = "533236C2-3D15-4CCE-B28E-FDBA0D24F8DE";
            static RebanhoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public RebanhoFilterFRM()
            {
                ID = gCID;
                Name = "RebanhoFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(PCRxAnimalEstadoID);
                PCRxAnimalEstadoID.ForceRW = true;
                PCRxAnimalEstadoID.CanInsert = true;
                PCRxAnimalEstadoID.CanUpdate = true;
                PCRxAnimalEstadoID.RowCount = 1;
                PCRxAnimalEstadoID.ColCount = 5;
                PCRxAnimalEstadoID.RowCountSmall = 1;
                PCRxAnimalEstadoID.ColCountSmall = 5;
                PCRxAnimalEstadoID.IsHidden = false;
                PCRxAnimalEstadoID.IsHiddenSmall = false;
                PCRxAnimalEstadoID.AdditionalTitle = "";
                PCRxAnimalEstadoID.DataSourceID = global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.gCID;
                PCRxAnimalEstadoID.Location = 1;
                PCRxAnimalEstadoID.EditorCID = new Guid("AC111493-AD7B-4F74-A0E8-DF0E0BB6B74A");
                PCRxAnimalEstadoID.FormImplace = true;
                PCRxAnimalEstadoID.Operator = XOperator.EqualTo;
                PCRxAnimalEstadoID.JustifyHeight = false;
                PCRxAnimalEstadoID.AllowEmpty = true;
                PCRxAnimalEstadoID.FontColor = "#000000";
                PCRxAnimalEstadoID.FontStyle = XFontStyle.Normal;
                PCRxAnimalEstadoID.ShowFooter = false;
                PCRxAnimalEstadoID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxAnimalEstadoID.Scale = 0;
                PCRxAnimalEstadoID.Length = 0;
                PCRxAnimalEstadoID.SearchAction = XSearchAction.Default;
                PCRxAnimalEstadoID.TypeID = XInt16.CID;
                PCRxAnimalEstadoID.AdditionalFieldsID = new Guid[] {  };
                PCRxAnimalEstadoID.AdditionalDataFieldsID = new Guid[] {  };
                PCRxAnimalEstadoID.TargetFilterFieldID = new Guid[] {  };
                PCRxAnimalEstadoID.SourceFilterFieldID = new Guid[] {  };
                PCRxAnimalEstadoID.TargetDisplayFieldID = new Guid[] { new Guid("DE777E5A-03C2-467C-8EEE-8EB9BB317E0C") };
                PCRxAnimalEstadoID.SourceDisplayFieldID = new Guid[] { new Guid("F9E74758-A7C0-4C56-95B4-B68BBFB56A31") };
                PCRxAnimalEstadoID.DataSourceID = global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.gCID;
                PCRxAnimalEstadoID.AutoLoad = false;
                PCRxAnimalEstadoID.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxAnimalEstadoID.FilterInative = true;
                PCRxAnimalEstadoID.IsAnswer = false;
                PCRxAnimalEstadoID.AllowMultiSelect = false;
                AddItem(Numero);
                Numero.ForceRW = true;
                Numero.CanInsert = true;
                Numero.CanUpdate = true;
                Numero.RowCount = 1;
                Numero.ColCount = 4;
                Numero.RowCountSmall = 1;
                Numero.ColCountSmall = 4;
                Numero.IsHidden = false;
                Numero.IsHiddenSmall = false;
                Numero.AdditionalTitle = "";
                Numero.Location = 2;
                Numero.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Numero.FormImplace = true;
                Numero.Operator = XOperator.EqualTo;
                Numero.JustifyHeight = false;
                Numero.AllowEmpty = true;
                Numero.FontColor = "#000000";
                Numero.FontStyle = XFontStyle.Normal;
                Numero.ShowFooter = false;
                Numero.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.Scale = 0;
                Numero.Length = 36;
                Numero.SearchAction = XSearchAction.Default;
                Numero.TypeID = XString.CID;
                Numero.AdditionalFieldsID = new Guid[] {  };
                Numero.AdditionalDataFieldsID = new Guid[] {  };
                Numero.TargetFilterFieldID = new Guid[] {  };
                Numero.SourceFilterFieldID = new Guid[] {  };
                Numero.TargetDisplayFieldID = new Guid[] {  };
                Numero.SourceDisplayFieldID = new Guid[] {  };
                Numero.AutoLoad = false;
                Numero.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.FilterInative = true;
                Numero.IsAnswer = false;
                Numero.AllowMultiSelect = false;
                AddItem(Lote);
                Lote.ForceRW = true;
                Lote.CanInsert = true;
                Lote.CanUpdate = true;
                Lote.RowCount = 1;
                Lote.ColCount = 4;
                Lote.RowCountSmall = 1;
                Lote.ColCountSmall = 4;
                Lote.IsHidden = false;
                Lote.IsHiddenSmall = false;
                Lote.AdditionalTitle = "";
                Lote.Location = 3;
                Lote.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Lote.FormImplace = true;
                Lote.Operator = XOperator.EqualTo;
                Lote.JustifyHeight = false;
                Lote.AllowEmpty = true;
                Lote.FontColor = "#000000";
                Lote.FontStyle = XFontStyle.Normal;
                Lote.ShowFooter = false;
                Lote.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Lote.Scale = 0;
                Lote.Length = 12;
                Lote.SearchAction = XSearchAction.Default;
                Lote.TypeID = XString.CID;
                Lote.AdditionalFieldsID = new Guid[] {  };
                Lote.AdditionalDataFieldsID = new Guid[] {  };
                Lote.TargetFilterFieldID = new Guid[] {  };
                Lote.SourceFilterFieldID = new Guid[] {  };
                Lote.TargetDisplayFieldID = new Guid[] {  };
                Lote.SourceDisplayFieldID = new Guid[] {  };
                Lote.AutoLoad = false;
                Lote.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Lote.FilterInative = true;
                Lote.IsAnswer = false;
                Lote.AllowMultiSelect = false;
                AddItem(NascimentoIni);
                NascimentoIni.ForceRW = true;
                NascimentoIni.CanInsert = true;
                NascimentoIni.CanUpdate = true;
                NascimentoIni.RowCount = 1;
                NascimentoIni.ColCount = 4;
                NascimentoIni.RowCountSmall = 1;
                NascimentoIni.ColCountSmall = 4;
                NascimentoIni.IsHidden = false;
                NascimentoIni.IsHiddenSmall = false;
                NascimentoIni.AdditionalTitle = "";
                NascimentoIni.Location = 4;
                NascimentoIni.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                NascimentoIni.FormImplace = true;
                NascimentoIni.Operator = XOperator.GreaterThanOrEqualTo;
                NascimentoIni.JustifyHeight = false;
                NascimentoIni.AllowEmpty = true;
                NascimentoIni.FontColor = "#000000";
                NascimentoIni.FontStyle = XFontStyle.Normal;
                NascimentoIni.ShowFooter = false;
                NascimentoIni.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                NascimentoIni.Scale = 0;
                NascimentoIni.Length = 0;
                NascimentoIni.SearchAction = XSearchAction.Default;
                NascimentoIni.TypeID = XDate.CID;
                NascimentoIni.AdditionalFieldsID = new Guid[] {  };
                NascimentoIni.AdditionalDataFieldsID = new Guid[] {  };
                NascimentoIni.TargetFilterFieldID = new Guid[] {  };
                NascimentoIni.SourceFilterFieldID = new Guid[] {  };
                NascimentoIni.TargetDisplayFieldID = new Guid[] {  };
                NascimentoIni.SourceDisplayFieldID = new Guid[] {  };
                NascimentoIni.AutoLoad = false;
                NascimentoIni.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                NascimentoIni.FilterInative = true;
                NascimentoIni.IsAnswer = false;
                NascimentoIni.AllowMultiSelect = false;
                AddItem(NascimentoFin);
                NascimentoFin.ForceRW = true;
                NascimentoFin.CanInsert = true;
                NascimentoFin.CanUpdate = true;
                NascimentoFin.RowCount = 1;
                NascimentoFin.ColCount = 4;
                NascimentoFin.RowCountSmall = 1;
                NascimentoFin.ColCountSmall = 4;
                NascimentoFin.IsHidden = false;
                NascimentoFin.IsHiddenSmall = false;
                NascimentoFin.AdditionalTitle = "";
                NascimentoFin.Location = 5;
                NascimentoFin.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                NascimentoFin.FormImplace = true;
                NascimentoFin.Operator = XOperator.LessThanOrEqualTo;
                NascimentoFin.JustifyHeight = false;
                NascimentoFin.AllowEmpty = true;
                NascimentoFin.FontColor = "#000000";
                NascimentoFin.FontStyle = XFontStyle.Normal;
                NascimentoFin.ShowFooter = false;
                NascimentoFin.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                NascimentoFin.Scale = 0;
                NascimentoFin.Length = 0;
                NascimentoFin.SearchAction = XSearchAction.Default;
                NascimentoFin.TypeID = XDate.CID;
                NascimentoFin.AdditionalFieldsID = new Guid[] {  };
                NascimentoFin.AdditionalDataFieldsID = new Guid[] {  };
                NascimentoFin.TargetFilterFieldID = new Guid[] {  };
                NascimentoFin.SourceFilterFieldID = new Guid[] {  };
                NascimentoFin.TargetDisplayFieldID = new Guid[] {  };
                NascimentoFin.SourceDisplayFieldID = new Guid[] {  };
                NascimentoFin.AutoLoad = false;
                NascimentoFin.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                NascimentoFin.FilterInative = true;
                NascimentoFin.IsAnswer = false;
                NascimentoFin.AllowMultiSelect = false;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 11;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 11;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 6;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.Like;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 60;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField PCRxAnimalEstadoID = new XFRMField(new Guid("F2E13EFA-430F-4B6D-87A4-B467B222B8FD"), "PCRxAnimalEstadoID", "Estado", XInt16.CID, 1, 5, false, gCID, null, new Guid("FC493ACB-6F76-4F39-853C-257F6C596A26")); // Int16;
            public XFRMField Numero = new XFRMField(new Guid("867CABED-99E7-4F83-8884-84D44E3CF8D4"), "Numero", "Nr. Brinco", XString.CID, 1, 4, true, gCID, null, new Guid("85648958-E996-495E-9DC0-4685B6AAB835")); // String;
            public XFRMField Lote = new XFRMField(new Guid("581869CD-76F5-4610-BD99-4136825C4580"), "Lote", "Lote", XString.CID, 1, 4, false, gCID, null, new Guid("9165BDF8-8AAD-4E74-A90D-C787B97BAEBA")); // String;
            public XFRMField NascimentoIni = new XFRMField(new Guid("87530145-FA14-422B-BCBC-9CECAA6B2ABB"), "NascimentoIni", "Nascimento (ini)", XDateTime.CID, 1, 4, false, gCID, null, new Guid("C024FDBF-A201-40C9-8152-2EC265AF63DE")); // DateTime;
            public XFRMField NascimentoFin = new XFRMField(new Guid("46F375E1-51D0-4FEE-8A46-8C34F9BF3853"), "NascimentoFin", "Nascimento (fin)", XDateTime.CID, 1, 4, false, gCID, null, new Guid("C024FDBF-A201-40C9-8152-2EC265AF63DE")); // DateTime;
            public XFRMField Nome = new XFRMField(new Guid("56F1D830-80A3-4D43-AD83-C1A24B260F3C"), "Nome", "Pesquisa Livre", XString.CID, 1, 11, false, gCID, null, new Guid("D8B5F7C6-478C-4FE5-ACEF-714F4C866D5B")); // String;
            public static class Fields
            {
                public static XFieldInfo PCRxAnimalEstadoID = new XFieldInfo(new Guid("F2E13EFA-430F-4B6D-87A4-B467B222B8FD"), "PCRxAnimalEstadoID", "Estado", typeof(Int16));
                public static XFieldInfo Numero = new XFieldInfo(new Guid("867CABED-99E7-4F83-8884-84D44E3CF8D4"), "Numero", "Nr. Brinco", typeof(String));
                public static XFieldInfo Lote = new XFieldInfo(new Guid("581869CD-76F5-4610-BD99-4136825C4580"), "Lote", "Lote", typeof(String));
                public static XFieldInfo NascimentoIni = new XFieldInfo(new Guid("87530145-FA14-422B-BCBC-9CECAA6B2ABB"), "NascimentoIni", "Nascimento (ini)", typeof(DateTime));
                public static XFieldInfo NascimentoFin = new XFieldInfo(new Guid("46F375E1-51D0-4FEE-8A46-8C34F9BF3853"), "NascimentoFin", "Nascimento (fin)", typeof(DateTime));
                public static XFieldInfo Nome = new XFieldInfo(new Guid("56F1D830-80A3-4D43-AD83-C1A24B260F3C"), "Nome", "Pesquisa Livre", typeof(String));
            }
        }

        #endregion RebanhoFilterFRM

        public const String sCID = "696EAE7E-70D2-465C-94E1-AD22CC0F210F";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID; // PCRxPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
        public static XSVCReference ISExCodigo_ISExItemID_ISExItem_ISExItemID; // ISExCodigo.ISExItemID --> ISExItem.ISExItemID
        public static XSVCReference ISExCodigoMae_ISExItemID_PCRxMae_ISExItemID; // ISExCodigoMae.ISExItemID --> PCRxMae.ISExItemID
        public static XSVCReference PCRxAnimalFase_PCRxAnimalFaseID_PCRxAnimal_PCRxAnimalFaseID; // PCRxAnimalFase.PCRxAnimalFaseID --> PCRxAnimal.PCRxAnimalFaseID
        public static XSVCReference PCRxMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID; // PCRxMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_SYSxEmpresa_SYSxEmpresaID; // SYSxPessoa.SYSxPessoaID --> SYSxEmpresa.SYSxEmpresaID
        public static XSVCReference ERPxGenero_ERPxGeneroID_PCRxAnimal_ERPxGeneroID; // ERPxGenero.ERPxGeneroID --> PCRxAnimal.ERPxGeneroID
        public static XSVCReference PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID; // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
        public static XSVCReference PCRxAnimalLote_PCRxAnimalLoteID_PCRxAnimal_PCRxAnimalLoteID; // PCRxAnimalLote.PCRxAnimalLoteID --> PCRxAnimal.PCRxAnimalLoteID
        public static XSVCReference SYSxEmpresa_SYSxEmpresaID_PCRxAnimal_SYSxEmpresaID; // SYSxEmpresa.SYSxEmpresaID --> PCRxAnimal.SYSxEmpresaID
        public static XSVCReference PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_ISExItem_ISExItemID; // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> ISExItem.ISExItemID
        public static XSVCReference PCRxAnimal_PCRxAnimalID_ISExItem_ISExItemID; // PCRxAnimal.PCRxAnimalID --> ISExItem.ISExItemID
        public static XSVCReference PCRxAnimalEstado_PCRxAnimalEstadoID_PCRxAnimal_PCRxAnimalEstadoID; // PCRxAnimalEstado.PCRxAnimalEstadoID --> PCRxAnimal.PCRxAnimalEstadoID

        #region xPCRxAnimalEstado 
        public class xPCRxAnimalEstado : XSVCTable
        {

            public static Guid gCID => new Guid("05652B8E-8253-48C8-91B5-48B963B90AC5");

            public xPCRxAnimalEstado()
            {
                Name = "PCRxAnimalEstado";
                Alias = "PCRxAnimalEstado";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.gCID;

                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(AnimalEstado, AnimalEstado.ID);
                AnimalEstado.Owner = this;
                AnimalEstado.OwnerID = ID;
                AnimalEstado.TableName = Name;
                AnimalEstado.Alias = "AnimalEstado";
            }

            public static XORMPKField PCRxAnimalEstadoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.PCRxAnimalEstadoID, new Guid("66779FF5-10A7-4455-B762-398520399834"), "PCRxAnimalEstadoID", "Estado");
            public static XORMFaceField AnimalEstado = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.AnimalEstado, new Guid("DE777E5A-03C2-467C-8EEE-8EB9BB317E0C"), "AnimalEstado", "Estado do Animal");
        }
        #endregion xPCRxAnimalEstado 


        #region xPCRxPai 
        public class xPCRxPai : XSVCTable
        {

            public static Guid gCID => new Guid("20101EFB-504E-49F8-932E-5919AF57E1E5");

            public xPCRxPai()
            {
                Name = "ISExItem";
                Alias = "PCRxPai";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Pai";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("78B3F640-7C2A-4EB9-B13C-0CA2D5C79408"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("A0E448FF-E5D2-4E32-8FB5-3850FE9E568A"), "Nome", "Pai");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("F00396F1-9F3F-4B93-A00B-A2F7F9B3BFBD"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("FBE6D863-8A75-475F-8777-EEA91C7E4303"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("5E78872C-1B9F-4866-A7C4-1CE5CA8EADAB"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("5FB78DB8-45BC-452B-A40D-8B8B0CAC94FD"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("3966B601-D507-4B83-91BE-68E37FD378CE"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("64CCF11E-6EBE-46B1-A246-EE1FDB70AA6F"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("05F1EFC2-5F62-40BF-8C27-EA6E77545DF8"), "ProdutoID", "Código Legado");
        }
        #endregion xPCRxPai 


        #region xPCRxAnimalFase 
        public class xPCRxAnimalFase : XSVCTable
        {

            public static Guid gCID => new Guid("2D955D26-C86E-4E09-A757-44E53817A074");

            public xPCRxAnimalFase()
            {
                Name = "PCRxAnimalFase";
                Alias = "PCRxAnimalFase";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.gCID;

                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Fase, Fase.ID);
                Fase.Owner = this;
                Fase.OwnerID = ID;
                Fase.TableName = Name;
                Fase.Alias = "Fase";
            }

            public static XORMPKField PCRxAnimalFaseID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.PCRxAnimalFaseID, new Guid("6204F240-1400-4BD4-BB6F-8C9F1E243C16"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMFaceField Fase = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFase.Fase, new Guid("C6419893-319E-4D4E-A9D4-E3B8F8984379"), "Fase", "Fase");
        }
        #endregion xPCRxAnimalFase 


        #region xSYSxEmpresa 
        public class xSYSxEmpresa : XSVCTable
        {

            public static Guid gCID => new Guid("39C9AF86-E592-48B0-A58C-F7F1D7FE1206");

            public xSYSxEmpresa()
            {
                Name = "SYSxEmpresa";
                Alias = "SYSxEmpresa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID;

                Items.Add(Sigla, Sigla.ID);
                Sigla.Owner = this;
                Sigla.OwnerID = ID;
                Sigla.TableName = Name;
                Sigla.Alias = "Sigla";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(SYSxEmpresaMatrizID, SYSxEmpresaMatrizID.ID);
                SYSxEmpresaMatrizID.Owner = this;
                SYSxEmpresaMatrizID.OwnerID = ID;
                SYSxEmpresaMatrizID.TableName = Name;
            }

            public static XORMFaceField Sigla = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.Sigla, new Guid("A0A359FE-C893-4E95-90D1-774090E58C07"), "Sigla", "Sigla");
            public static XORMPKField SYSxEmpresaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID, new Guid("329807A4-E76C-4B09-960C-B133EB76AD46"), "SYSxEmpresaID", "Empresa");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEstadoID, new Guid("C3789716-EE51-472B-916D-37E6983CE88C"), "SYSxEstadoID", "Estado");
            public static XORMFKField SYSxEmpresaMatrizID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaMatrizID, new Guid("F04C48EB-967F-4FC9-88F3-0B03E1718594"), "SYSxEmpresaMatrizID", "Empresa");
        }
        #endregion xSYSxEmpresa 


        #region xPCRxMae 
        public class xPCRxMae : XSVCTable
        {

            public static Guid gCID => new Guid("571FF79A-166D-4E6C-822A-187E79E91AB8");

            public xPCRxMae()
            {
                Name = "ISExItem";
                Alias = "PCRxMae";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Mae";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("55ACAB5D-4E84-4C3A-B346-03033DAF401E"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("4AB964CF-D86A-4C92-8404-D234A8DFB010"), "Nome", "Mãe");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("384A4509-1AA6-441C-9ED6-EC7D45E31287"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("C5A04E90-AAA8-43F5-B43F-45A0E8721B34"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("1A9A4602-4F6F-4A97-AD2E-0442F9B17595"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("F534F72B-784B-41AB-AF18-DA09139E96F8"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("15A4ADAD-B183-442D-BB38-C957C60A6334"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("DBC549AE-FC9D-43FF-A0EC-301F83FB4AF7"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("5D934726-B76E-4D16-BD2C-CA56E2F7B919"), "ProdutoID", "Código Legado");
        }
        #endregion xPCRxMae 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("664C489F-765D-4C0F-B96C-AE1E4609572D");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Fazenda";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("6919F13F-358E-447E-A04D-0D9032848713"), "Nome", "Nome da Fazenda");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("4B228ACA-6887-4CC6-AC6B-970C9E890F75"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("68B6BDEF-7FEB-4136-B1FE-35531FA9CF8F");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                PCRxRacaID.Alias = "PCRxRacaID";
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                PCRxAnimalFaseID.Alias = "PCRxAnimalFaseID";
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                PCRxAnimalEstadoID.Alias = "PCRxAnimalEstadoID";
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                NumeroPartos.Alias = "NumeroPartos";
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                PCRxEventoReprodutivoID.Alias = "PCRxEventoReprodutivoID";
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                PCRxAnimalLoteID.Alias = "PCRxAnimalLoteID";
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                PCRxIATFFaseID.Alias = "PCRxIATFFaseID";
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("95415223-4CD3-4262-A041-A37A0037CC03"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("07EBC22D-D9C3-4131-B754-0920FAB9B08D"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("F6341624-17FA-4C2A-B321-E785C53C1286"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("8F919BBA-F8EB-41D1-B621-F78EAF629F1A"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("C024FDBF-A201-40C9-8152-2EC265AF63DE"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("BA934C78-615C-41E6-927F-3DC808FE7377"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("FC493ACB-6F76-4F39-853C-257F6C596A26"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("6B39F8ED-DB03-49FE-A246-2B1067067B20"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("4CABA919-7C51-4D45-9CCA-C45439DBE92E"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("B2932D02-1D60-4F1D-A2B1-756B7F4C085E"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("622559C6-7C87-49F4-8914-3E711E3FBC7E"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("71B86E18-F422-4E3D-9EC1-F9134294104F");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                ISExLinhaID.Alias = "ISExLinhaID";
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                ISExTabelaID.Alias = "ISExTabelaID";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                ISExFabricanteID.Alias = "ISExFabricanteID";
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                ISExMarcaID.Alias = "ISExMarcaID";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                ISExGrupoID.Alias = "ISExGrupoID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("F78B9C84-7D4F-427E-935E-1051B45ECF58"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("D8B5F7C6-478C-4FE5-ACEF-714F4C866D5B"), "Nome", "Animal");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("EA15162E-FA64-4918-8087-B529DEB1759C"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("958A86E3-773B-4CDF-A5C7-4AC242010D16"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("1A68863F-9325-4BD2-900B-41A9D26DA0BC"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("5B798179-3AB0-4B27-8380-245AECEE07DC"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("450AC2F6-D1ED-4403-A56C-53B0F5E821B9"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("3F059F4E-0A80-4C61-BB57-BBD2BD86FFF5"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("F149A93C-B08E-42C7-88C7-894B08ED7D08"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExCodigoMae 
        public class xISExCodigoMae : XSVCTable
        {

            public static Guid gCID => new Guid("7CBC9553-617F-481C-B4B3-576578215937");

            public xISExCodigoMae()
            {
                Name = "ISExCodigo";
                Alias = "ISExCodigoMae";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.gCID;

                Items.Add(ISExCodigoID, ISExCodigoID.ID);
                ISExCodigoID.Owner = this;
                ISExCodigoID.OwnerID = ID;
                ISExCodigoID.TableName = Name;
                Items.Add(ISExCodigoTipoID, ISExCodigoTipoID.ID);
                ISExCodigoTipoID.Owner = this;
                ISExCodigoTipoID.OwnerID = ID;
                ISExCodigoTipoID.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "NumeroMae";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(NumeroCurto, NumeroCurto.ID);
                NumeroCurto.Owner = this;
                NumeroCurto.OwnerID = ID;
                NumeroCurto.TableName = Name;
            }

            public static XORMPKField ISExCodigoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoID, new Guid("F0085700-6870-41E1-A91C-670732B91A95"), "ISExCodigoID", "Tipo de Código");
            public static XORMFKField ISExCodigoTipoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoTipoID, new Guid("4B48122D-FC01-4A13-8574-346D71FEDDD0"), "ISExCodigoTipoID", "Tipo de Código");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.Numero, new Guid("131A7A4F-AFBB-42D3-AE32-A608F7BDC2A1"), "Numero", "Nr. Brinco Mãe");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExItemID, new Guid("A1F2BC40-9DAD-44A3-B2DB-1237F46E4262"), "ISExItemID", "Item");
            public static XORMField NumeroCurto = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.NumeroCurto, new Guid("5F8E1A60-8947-4B89-872C-10708C6BB5F7"), "NumeroCurto", "Número Curto");
        }
        #endregion xISExCodigoMae 


        #region xERPxGenero 
        public class xERPxGenero : XSVCTable
        {

            public static Guid gCID => new Guid("9B027BF3-6CCF-4E29-829C-A201FFFFAD27");

            public xERPxGenero()
            {
                Name = "ERPxGenero";
                Alias = "ERPxGenero";
                ID = gCID;
                ParentID =  global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.gCID;

                Items.Add(Genero, Genero.ID);
                Genero.Owner = this;
                Genero.OwnerID = ID;
                Genero.TableName = Name;
                Genero.Alias = "Genero";
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(Invisivel, Invisivel.ID);
                Invisivel.Owner = this;
                Invisivel.OwnerID = ID;
                Invisivel.TableName = Name;
                Items.Add(Designacao, Designacao.ID);
                Designacao.Owner = this;
                Designacao.OwnerID = ID;
                Designacao.TableName = Name;
            }

            public static XORMFaceField Genero = new XORMFaceField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Genero, new Guid("BD0E3C48-3199-4F3E-9224-CEF3C89B45FA"), "Genero", "Gênero");
            public static XORMPKField ERPxGeneroID = new XORMPKField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.ERPxGeneroID, new Guid("83091414-C58D-4269-8B79-72BED9418FC2"), "ERPxGeneroID", "Gênero");
            public static XORMField Invisivel = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Invisivel, new Guid("83E5224F-51E9-4E53-8601-7672A6C7B8A5"), "Invisivel", "Invisível");
            public static XORMField Designacao = new XORMField(global::Projecao.Core.ERP.DB.ERPx.ERPxGenero.Designacao, new Guid("B152FD0A-7BA8-4E75-9444-098CF5183524"), "Designacao", "Designação");
        }
        #endregion xERPxGenero 


        #region xPCRxAnimalLote 
        public class xPCRxAnimalLote : XSVCTable
        {

            public static Guid gCID => new Guid("B241AFC3-B9D3-4208-B572-ACE92DD014A3");

            public xPCRxAnimalLote()
            {
                Name = "PCRxAnimalLote";
                Alias = "PCRxAnimalLote";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.gCID;

                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(DataCriacao, DataCriacao.ID);
                DataCriacao.Owner = this;
                DataCriacao.OwnerID = ID;
                DataCriacao.TableName = Name;
                Items.Add(Lote, Lote.ID);
                Lote.Owner = this;
                Lote.OwnerID = ID;
                Lote.TableName = Name;
                Lote.Alias = "Lote";
                Items.Add(Ano, Ano.ID);
                Ano.Owner = this;
                Ano.OwnerID = ID;
                Ano.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalLoteID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.PCRxAnimalLoteID, new Guid("B92F9459-385F-4A73-B65E-7DB2155CD308"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMDateTimeField DataCriacao = new XORMDateTimeField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.DataCriacao, new Guid("D9252FA8-9CFD-450A-B514-2D04B192AD53"), "DataCriacao", "da de Criação");
            public static XORMFaceField Lote = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.Lote, new Guid("9165BDF8-8AAD-4E74-A90D-C787B97BAEBA"), "Lote", "Lote");
            public static XORMField Ano = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalLote.Ano, new Guid("FBAE87B7-1E4D-417F-ACE8-7111F2A3F496"), "Ano", "Ano");
        }
        #endregion xPCRxAnimalLote 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("D5D2AD81-840A-49BF-82BA-EBE86AC8B213");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                PCRxMaeID.Alias = "PCRxMaeID";
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
                PCRxPaiID.Alias = "PCRxPaiID";
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("E637BB73-3621-415B-ABEC-C281F0F92F6C"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("C4679564-8127-4CC7-9687-654CBEC03AFB"), "PCRxMaeID", "Animal");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("1AEB3E6D-AF85-430B-97DF-4A2E0F24DF1A"), "PCRxPaiID", "Animal");
        }
        #endregion xPCRxAnimalFiliacao 


        #region xISExCodigo 
        public class xISExCodigo : XSVCTable
        {

            public static Guid gCID => new Guid("D9A06DF9-79B2-46B6-910D-77A1AE91073B");

            public xISExCodigo()
            {
                Name = "ISExCodigo";
                Alias = "ISExCodigo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.gCID;

                Items.Add(ISExCodigoID, ISExCodigoID.ID);
                ISExCodigoID.Owner = this;
                ISExCodigoID.OwnerID = ID;
                ISExCodigoID.TableName = Name;
                Items.Add(ISExCodigoTipoID, ISExCodigoTipoID.ID);
                ISExCodigoTipoID.Owner = this;
                ISExCodigoTipoID.OwnerID = ID;
                ISExCodigoTipoID.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(NumeroCurto, NumeroCurto.ID);
                NumeroCurto.Owner = this;
                NumeroCurto.OwnerID = ID;
                NumeroCurto.TableName = Name;
            }

            public static XORMPKField ISExCodigoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoID, new Guid("BA020AEC-6C2B-4195-ABEA-6F5851894CCE"), "ISExCodigoID", "Tipo de Código");
            public static XORMFKField ISExCodigoTipoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoTipoID, new Guid("E9C7F386-F754-4EEB-9AE3-EB120BE64BBA"), "ISExCodigoTipoID", "Tipo de Código");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.Numero, new Guid("85648958-E996-495E-9DC0-4685B6AAB835"), "Numero", "Nr. Brinco");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExItemID, new Guid("D962E918-4B1B-45D6-8FF6-980066FA4E5B"), "ISExItemID", "Item");
            public static XORMField NumeroCurto = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.NumeroCurto, new Guid("5E7142BF-745D-4EF2-A18E-5850BCCAA404"), "NumeroCurto", "Número Curto");
        }
        #endregion xISExCodigo 


        #region xPCRxRaca 
        public class xPCRxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("EDC236D9-FD97-4CA9-8EB2-46D32D4A47B7");

            public xPCRxRaca()
            {
                Name = "PCRxRaca";
                Alias = "PCRxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;

                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PCRxRacaID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.PCRxRacaID, new Guid("EB6554B7-304F-4C41-9043-6371120F33AA"), "PCRxRacaID", "Raça");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.Raca, new Guid("1A61763E-0ADC-4D3A-843E-B95F88759A19"), "Raca", "Raça");
        }
        #endregion xPCRxRaca 


        public xERPxGenero ERPxGenero;
        public xISExCodigo ISExCodigo;
        public xISExCodigoMae ISExCodigoMae;
        public xISExItem ISExItem;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalEstado PCRxAnimalEstado;
        public xPCRxAnimalFase PCRxAnimalFase;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;
        public xPCRxAnimalLote PCRxAnimalLote;
        public xPCRxMae PCRxMae;
        public xPCRxPai PCRxPai;
        public xPCRxRaca PCRxRaca;
        public xSYSxEmpresa SYSxEmpresa;
        public xSYSxPessoa SYSxPessoa;

        public RebanhoSVC()
        {
            TupleType = typeof(RebanhoSVC.XTuple);
            DataSetType = typeof(RebanhoSVC.XDataSet);
            ServiceRuleCID = new Guid("23542C87-DFC6-4AD9-8C5E-8D80138D8615");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("696EAE7E-70D2-465C-94E1-AD22CC0F210F");
            Name = "Rebanho";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("533236C2-3D15-4CCE-B28E-FDBA0D24F8DE");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xERPxGenero.Genero.ID, xPCRxAnimalEstado.AnimalEstado.ID, xPCRxAnimalLote.Lote.ID, xISExCodigo.Numero.ID, xPCRxAnimal.Nascimento.ID, xSYSxPessoa.Nome.ID, xPCRxRaca.Raca.ID, xPCRxMae.Nome.ID, xISExCodigoMae.Numero.ID, xPCRxPai.Nome.ID, xISExItem.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xPCRxAnimal.PCRxAnimalFaseID.ID, xPCRxAnimal.NumeroPartos.ID, xPCRxAnimal.PCRxAnimalLoteID.ID, xPCRxAnimal.PCRxEventoReprodutivoID.ID, xPCRxAnimal.PCRxIATFFaseID.ID, xISExCodigo.Numero.ID, xPCRxAnimalLote.Lote.ID, xERPxGenero.Genero.ID, xISExCodigoMae.Numero.ID, xISExItem.ProdutoID.ID, xISExItem.SYSxEstadoID.ID, xISExItem.ISExGrupoID.ID, xISExItem.ISExMarcaID.ID, xISExItem.ISExFabricanteID.ID, xISExItem.ISExTabelaID.ID, xISExItem.ISExLinhaID.ID, xPCRxAnimal.PCRxAnimalEstadoID.ID, xPCRxAnimal.PCRxRacaID.ID, xPCRxAnimal.ERPxGeneroID.ID, xISExItem.ISExItemID.ID, xPCRxAnimalFase.Fase.ID, xPCRxRaca.Raca.ID, xISExItem.Nome.ID, xPCRxMae.Nome.ID, xPCRxPai.Nome.ID, xPCRxAnimalFiliacao.PCRxPaiID.ID, xPCRxAnimalFiliacao.PCRxMaeID.ID, xPCRxAnimal.Nascimento.ID, xSYSxEmpresa.Sigla.ID, xSYSxPessoa.Nome.ID, xPCRxAnimalEstado.AnimalEstado.ID };
            StateField = xISExItem.SYSxEstadoID.ID;
            PKField = xISExItem.ISExItemID.ID;
            ConfigTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            MasterRuleCID = new Guid("23542C87-DFC6-4AD9-8C5E-8D80138D8615");
            XSubServiceItem ssC0B16367779E40DCBA0163237C4AF676 = new XSubServiceItem(EventoSVC.gCID, EventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID, RebanhoSVC.gCID, xISExItem.ISExItemID.ID, true, XSubSeviceType.Default);
            ssC0B16367779E40DCBA0163237C4AF676.Rights = new Int16[] { 1 }; 
            ssC0B16367779E40DCBA0163237C4AF676.LateLoad = false;
            SubServices.Add(ssC0B16367779E40DCBA0163237C4AF676);
            XSubServiceItem ss65CF03DB6B5D4B4E90256691683B7FFF = new XSubServiceItem(FIlhoteSVC.gCID, FIlhoteSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID, RebanhoSVC.gCID, xISExItem.ISExItemID.ID, true, XSubSeviceType.Default);
            ss65CF03DB6B5D4B4E90256691683B7FFF.Rights = new Int16[] { 1 }; 
            ss65CF03DB6B5D4B4E90256691683B7FFF.LateLoad = false;
            SubServices.Add(ss65CF03DB6B5D4B4E90256691683B7FFF);
            ERPxGenero = new xERPxGenero();
            ERPxGenero.IsReadOnly = true;
            AddTable(ERPxGenero);
            ISExCodigo = new xISExCodigo();
            ISExCodigo.IsReadOnly = true;
            AddTable(ISExCodigo);
            ISExCodigoMae = new xISExCodigoMae();
            ISExCodigoMae.IsReadOnly = true;
            AddTable(ISExCodigoMae);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = false;
            AddTable(ISExItem);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = false;
            AddTable(PCRxAnimal);
            PCRxAnimalEstado = new xPCRxAnimalEstado();
            PCRxAnimalEstado.IsReadOnly = true;
            AddTable(PCRxAnimalEstado);
            PCRxAnimalFase = new xPCRxAnimalFase();
            PCRxAnimalFase.IsReadOnly = true;
            AddTable(PCRxAnimalFase);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = false;
            AddTable(PCRxAnimalFiliacao);
            PCRxAnimalLote = new xPCRxAnimalLote();
            PCRxAnimalLote.IsReadOnly = true;
            AddTable(PCRxAnimalLote);
            PCRxMae = new xPCRxMae();
            PCRxMae.IsReadOnly = true;
            AddTable(PCRxMae);
            PCRxPai = new xPCRxPai();
            PCRxPai.IsReadOnly = true;
            AddTable(PCRxPai);
            PCRxRaca = new xPCRxRaca();
            PCRxRaca.IsReadOnly = true;
            AddTable(PCRxRaca);
            SYSxEmpresa = new xSYSxEmpresa();
            SYSxEmpresa.IsReadOnly = true;
            AddTable(SYSxEmpresa);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = ISExItem.ID;
            PCRxPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID = AddReference(new XSVCReference(new Guid("0A34A139-3E63-4887-B9CE-B79A0BF80743"), "FK_0A34A1393E634887B9CEB79A0BF80743", RebanhoSVC.xPCRxPai.gCID, xPCRxPai.ISExItemID.ID, RebanhoSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxPaiID.ID, XJoinType.Inner)); // PCRxPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
            ISExCodigo_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("17A60708-07F4-4A11-B956-6EE4A6376DAC"), "FK_17A6070807F44A11B9566EE4A6376DAC", RebanhoSVC.xISExCodigo.gCID, xISExCodigo.ISExItemID.ID, RebanhoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExCodigo.ISExItemID --> ISExItem.ISExItemID
            ISExCodigoMae_ISExItemID_PCRxMae_ISExItemID = AddReference(new XSVCReference(new Guid("33C2F4A9-CF2C-4647-B566-6E60E9B22313"), "FK_33C2F4A9CF2C4647B5666E60E9B22313", RebanhoSVC.xISExCodigoMae.gCID, xISExCodigoMae.ISExItemID.ID, RebanhoSVC.xPCRxMae.gCID, xPCRxMae.ISExItemID.ID, XJoinType.Left)); // ISExCodigoMae.ISExItemID --> PCRxMae.ISExItemID
            PCRxAnimalFase_PCRxAnimalFaseID_PCRxAnimal_PCRxAnimalFaseID = AddReference(new XSVCReference(new Guid("4517CEF3-B670-4B06-B3A9-A2C89BFA7985"), "FK_4517CEF3B6704B06B3A9A2C89BFA7985", RebanhoSVC.xPCRxAnimalFase.gCID, xPCRxAnimalFase.PCRxAnimalFaseID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalFaseID.ID, XJoinType.Inner)); // PCRxAnimalFase.PCRxAnimalFaseID --> PCRxAnimal.PCRxAnimalFaseID
            PCRxMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID = AddReference(new XSVCReference(new Guid("7FD42A25-13EC-4A25-91A1-EB74319C617A"), "FK_7FD42A2513EC4A2591A1EB74319C617A", RebanhoSVC.xPCRxMae.gCID, xPCRxMae.ISExItemID.ID, RebanhoSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxMaeID.ID, XJoinType.Inner)); // PCRxMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
            SYSxPessoa_SYSxPessoaID_SYSxEmpresa_SYSxEmpresaID = AddReference(new XSVCReference(new Guid("8D3F3001-401A-4E9D-80A8-AE01825CD7D1"), "FK_8D3F3001401A4E9D80A8AE01825CD7D1", RebanhoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, RebanhoSVC.xSYSxEmpresa.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> SYSxEmpresa.SYSxEmpresaID
            ERPxGenero_ERPxGeneroID_PCRxAnimal_ERPxGeneroID = AddReference(new XSVCReference(new Guid("966CE7BB-EAEC-4BFA-B5C0-D130CA8C5F4F"), "FK_966CE7BBEAEC4BFAB5C0D130CA8C5F4F", RebanhoSVC.xERPxGenero.gCID, xERPxGenero.ERPxGeneroID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.ERPxGeneroID.ID, XJoinType.Inner)); // ERPxGenero.ERPxGeneroID --> PCRxAnimal.ERPxGeneroID
            PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID = AddReference(new XSVCReference(new Guid("9CC7BF94-2466-4478-ADDA-45114A099659"), "FK_9CC7BF9424664478ADDA45114A099659", RebanhoSVC.xPCRxRaca.gCID, xPCRxRaca.PCRxRacaID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxRacaID.ID, XJoinType.Inner)); // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
            PCRxAnimalLote_PCRxAnimalLoteID_PCRxAnimal_PCRxAnimalLoteID = AddReference(new XSVCReference(new Guid("ABFF8DAB-4F5A-48DE-BDF8-29A93C7E80AA"), "FK_ABFF8DAB4F5A48DEBDF829A93C7E80AA", RebanhoSVC.xPCRxAnimalLote.gCID, xPCRxAnimalLote.PCRxAnimalLoteID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalLoteID.ID, XJoinType.Inner)); // PCRxAnimalLote.PCRxAnimalLoteID --> PCRxAnimal.PCRxAnimalLoteID
            SYSxEmpresa_SYSxEmpresaID_PCRxAnimal_SYSxEmpresaID = AddReference(new XSVCReference(new Guid("B0F8CFD4-C00E-4C80-8FAD-A77F74A569E9"), "FK_B0F8CFD4C00E4C808FADA77F74A569E9", RebanhoSVC.xSYSxEmpresa.gCID, xSYSxEmpresa.SYSxEmpresaID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.SYSxEmpresaID.ID, XJoinType.Inner)); // SYSxEmpresa.SYSxEmpresaID --> PCRxAnimal.SYSxEmpresaID
            PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("DE58C029-54F1-4859-BC7D-3FBBCC988D90"), "FK_DE58C02954F14859BC7D3FBBCC988D90", RebanhoSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, RebanhoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> ISExItem.ISExItemID
            PCRxAnimal_PCRxAnimalID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("F8A4C340-AFAC-4FCA-9D0A-B2E67FA154C7"), "FK_F8A4C340AFAC4FCA9D0AB2E67FA154C7", RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, RebanhoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // PCRxAnimal.PCRxAnimalID --> ISExItem.ISExItemID
            PCRxAnimalEstado_PCRxAnimalEstadoID_PCRxAnimal_PCRxAnimalEstadoID = AddReference(new XSVCReference(new Guid("FAF28743-FBAA-4C36-B081-F07D0DED5B33"), "FK_FAF28743FBAA4C36B081F07D0DED5B33", RebanhoSVC.xPCRxAnimalEstado.gCID, xPCRxAnimalEstado.PCRxAnimalEstadoID.ID, RebanhoSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalEstadoID.ID, XJoinType.Inner)); // PCRxAnimalEstado.PCRxAnimalEstadoID --> PCRxAnimal.PCRxAnimalEstadoID
            XSVCReference FK_6E4614B861024060B025F39C1BF3D46D = new XSVCReference(new Guid("6E4614B8-6102-4060-B025-F39C1BF3D46D"), "FK_6E4614B861024060B025F39C1BF3D46D", EventoSVC.gCID, EventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID, ISExItem.ID, RebanhoSVC.xISExItem.ISExItemID.ID, XJoinType.SubService); // EventoSVC.PCRxAnimalID --> Rebanho.ISExItemID
            FK_6E4614B861024060B025F39C1BF3D46D.IsLowRelevance = false;
            AddReference(FK_6E4614B861024060B025F39C1BF3D46D);
            XSVCReference FK_DDFB96E0EA5B48D99B4A1DC51876A59E = new XSVCReference(new Guid("DDFB96E0-EA5B-48D9-9B4A-1DC51876A59E"), "FK_DDFB96E0EA5B48D99B4A1DC51876A59E", FIlhoteSVC.gCID, FIlhoteSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID, ISExItem.ID, RebanhoSVC.xISExItem.ISExItemID.ID, XJoinType.SubService); // FIlhoteSVC.PCRxMaeID --> Rebanho.ISExItemID
            FK_DDFB96E0EA5B48D99B4A1DC51876A59E.IsLowRelevance = false;
            AddReference(FK_DDFB96E0EA5B48D99B4A1DC51876A59E);
            xPCRxAnimalEstado.AnimalEstado.IsReadOnly = true;
            xPCRxAnimalEstado.AnimalEstado.IsDataField = true;
            xPCRxAnimalEstado.AnimalEstado.FilterUse = true;
            xPCRxAnimalEstado.AnimalEstado.AllowEmpty = true;
            xPCRxAnimal.ERPxGeneroID.IsDataField = true;
            xPCRxAnimal.ERPxGeneroID.AllowEmpty = true;
            xPCRxAnimalFase.Fase.IsReadOnly = true;
            xPCRxAnimalFase.Fase.Length = 25;
            xPCRxAnimalFase.Fase.IsDataField = true;
            xPCRxAnimalFase.Fase.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.FilterUse = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xERPxGenero.Genero.IsReadOnly = true;
            xERPxGenero.Genero.Length = 15;
            xERPxGenero.Genero.IsDataField = true;
            xERPxGenero.Genero.AllowEmpty = true;
            xISExItem.ISExFabricanteID.IsDataField = true;
            xISExItem.ISExFabricanteID.AllowEmpty = true;
            xISExItem.ISExGrupoID.IsDataField = true;
            xISExItem.ISExGrupoID.AllowEmpty = true;
            xISExItem.ISExItemID.GeneratePK = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExItem.ISExLinhaID.IsDataField = true;
            xISExItem.ISExLinhaID.AllowEmpty = true;
            xISExItem.ISExMarcaID.IsDataField = true;
            xISExItem.ISExMarcaID.AllowEmpty = true;
            xISExItem.ISExTabelaID.IsDataField = true;
            xISExItem.ISExTabelaID.AllowEmpty = true;
            xPCRxAnimalLote.Lote.IsReadOnly = true;
            xPCRxAnimalLote.Lote.Length = 12;
            xPCRxAnimalLote.Lote.IsDataField = true;
            xPCRxAnimalLote.Lote.AllowEmpty = true;
            xPCRxMae.Nome.IsReadOnly = true;
            xPCRxMae.Nome.Length = 60;
            xPCRxMae.Nome.IsDataField = true;
            xPCRxMae.Nome.AllowEmpty = true;
            xPCRxAnimal.Nascimento.Mask = "00/00/0000";
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExCodigo.Numero.IsReadOnly = true;
            xISExCodigo.Numero.Length = 36;
            xISExCodigo.Numero.IsDataField = true;
            xISExCodigo.Numero.FilterUse = true;
            xISExCodigo.Numero.AllowEmpty = true;
            xISExCodigoMae.Numero.IsReadOnly = true;
            xISExCodigoMae.Numero.Length = 36;
            xISExCodigoMae.Numero.IsDataField = true;
            xISExCodigoMae.Numero.AllowEmpty = true;
            xPCRxAnimal.NumeroPartos.IsDataField = true;
            xPCRxAnimal.NumeroPartos.AllowEmpty = true;
            xPCRxPai.Nome.IsReadOnly = true;
            xPCRxPai.Nome.Length = 60;
            xPCRxPai.Nome.IsDataField = true;
            xPCRxPai.Nome.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalEstadoID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalEstadoID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalFaseID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalFaseID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalLoteID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalLoteID.AllowEmpty = true;
            xPCRxAnimal.PCRxEventoReprodutivoID.IsDataField = true;
            xPCRxAnimal.PCRxEventoReprodutivoID.AllowEmpty = true;
            xPCRxAnimal.PCRxIATFFaseID.IsDataField = true;
            xPCRxAnimal.PCRxIATFFaseID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxMaeID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxPaiID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxPaiID.AllowEmpty = true;
            xPCRxAnimal.PCRxRacaID.IsDataField = true;
            xPCRxAnimal.PCRxRacaID.AllowEmpty = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xPCRxRaca.Raca.IsReadOnly = true;
            xPCRxRaca.Raca.Length = 25;
            xPCRxRaca.Raca.IsDataField = true;
            xPCRxRaca.Raca.AllowEmpty = true;
            xSYSxEmpresa.Sigla.IsReadOnly = true;
            xSYSxEmpresa.Sigla.Length = 25;
            xSYSxEmpresa.Sigla.IsDataField = true;
            xSYSxEmpresa.Sigla.AllowEmpty = true;
            xISExItem.SYSxEstadoID.IsDataField = true;
            xISExItem.SYSxEstadoID.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xISExItem.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField AnimalEstado => xPCRxAnimalEstado.AnimalEstado;
        public XORMField ERPxGeneroID => xPCRxAnimal.ERPxGeneroID;
        public XORMField Fase => xPCRxAnimalFase.Fase;
        public XORMField Fazenda => xSYSxPessoa.Nome;
        public XORMField Genero => xERPxGenero.Genero;
        public XORMField ISExFabricanteID => xISExItem.ISExFabricanteID;
        public XORMField ISExGrupoID => xISExItem.ISExGrupoID;
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField ISExLinhaID => xISExItem.ISExLinhaID;
        public XORMField ISExMarcaID => xISExItem.ISExMarcaID;
        public XORMField ISExTabelaID => xISExItem.ISExTabelaID;
        public XORMField Lote => xPCRxAnimalLote.Lote;
        public XORMField Mae => xPCRxMae.Nome;
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField Numero => xISExCodigo.Numero;
        public XORMField NumeroMae => xISExCodigoMae.Numero;
        public XORMField NumeroPartos => xPCRxAnimal.NumeroPartos;
        public XORMField Pai => xPCRxPai.Nome;
        public XORMField PCRxAnimalEstadoID => xPCRxAnimal.PCRxAnimalEstadoID;
        public XORMField PCRxAnimalFaseID => xPCRxAnimal.PCRxAnimalFaseID;
        public XORMField PCRxAnimalLoteID => xPCRxAnimal.PCRxAnimalLoteID;
        public XORMField PCRxEventoReprodutivoID => xPCRxAnimal.PCRxEventoReprodutivoID;
        public XORMField PCRxIATFFaseID => xPCRxAnimal.PCRxIATFFaseID;
        public XORMField PCRxMaeID => xPCRxAnimalFiliacao.PCRxMaeID;
        public XORMField PCRxPaiID => xPCRxAnimalFiliacao.PCRxPaiID;
        public XORMField PCRxRacaID => xPCRxAnimal.PCRxRacaID;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Raca => xPCRxRaca.Raca;
        public XORMField Sigla => xSYSxEmpresa.Sigla;
        public XORMField SYSxEstadoID => xISExItem.SYSxEstadoID;
        }
        #endregion XFields
        #region RebanhoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String AnimalEstado
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxAnimalEstado.AnimalEstado.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalEstado.AnimalEstado.ID] = value;
            }
        }
        public String? oAnimalEstado
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalEstado.AnimalEstado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.ERPxGeneroID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Fase
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxAnimalFase.Fase.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalFase.Fase.ID] = value;
            }
        }
        public String? oFase
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalFase.Fase, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Fazenda
        {
            get
            {
                return (String)Value[RebanhoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oFazenda
        {
            get
            {
                GetOldValue(RebanhoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Genero
        {
            get
            {
                return (String)Value[RebanhoSVC.xERPxGenero.Genero.ID];
            }
            set
            {
                Value[RebanhoSVC.xERPxGenero.Genero.ID] = value;
            }
        }
        public String? oGenero
        {
            get
            {
                GetOldValue(RebanhoSVC.xERPxGenero.Genero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExFabricanteID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xISExItem.ISExFabricanteID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ISExFabricanteID.ID] = value;
            }
        }
        public Guid? oISExFabricanteID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ISExFabricanteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExGrupoID
        {
            get
            {
                return (Int32)Value[RebanhoSVC.xISExItem.ISExGrupoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ISExGrupoID.ID] = value;
            }
        }
        public Int32? oISExGrupoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ISExGrupoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExLinhaID
        {
            get
            {
                return (Int32)Value[RebanhoSVC.xISExItem.ISExLinhaID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ISExLinhaID.ID] = value;
            }
        }
        public Int32? oISExLinhaID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ISExLinhaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExMarcaID
        {
            get
            {
                return (Int32)Value[RebanhoSVC.xISExItem.ISExMarcaID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ISExMarcaID.ID] = value;
            }
        }
        public Int32? oISExMarcaID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ISExMarcaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExTabelaID
        {
            get
            {
                return (Int32)Value[RebanhoSVC.xISExItem.ISExTabelaID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ISExTabelaID.ID] = value;
            }
        }
        public Int32? oISExTabelaID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ISExTabelaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Lote
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxAnimalLote.Lote.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalLote.Lote.ID] = value;
            }
        }
        public String? oLote
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalLote.Lote, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Mae
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxMae.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxMae.Nome.ID] = value;
            }
        }
        public String? oMae
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxMae.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[RebanhoSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExCodigo.Numero.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExCodigo.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExCodigo.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroMae
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExCodigoMae.Numero.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExCodigoMae.Numero.ID] = value;
            }
        }
        public String? oNumeroMae
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExCodigoMae.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 NumeroPartos
        {
            get
            {
                return (Int32)Value[RebanhoSVC.xPCRxAnimal.NumeroPartos.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.NumeroPartos.ID] = value;
            }
        }
        public Int32? oNumeroPartos
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.NumeroPartos, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public String Pai
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxPai.Nome.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxPai.Nome.ID] = value;
            }
        }
        public String? oPai
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxPai.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 PCRxAnimalEstadoID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalEstadoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 PCRxAnimalFaseID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalFaseID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxAnimalLoteID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalLoteID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxEventoReprodutivoID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID] = value;
            }
        }
        public Guid? oPCRxEventoReprodutivoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxEventoReprodutivoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxIATFFaseID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxMaeID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID] = value;
            }
        }
        public Guid? oPCRxMaeID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxPaiID
        {
            get
            {
                return (Guid)Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID] = value;
            }
        }
        public Guid? oPCRxPaiID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxRacaID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xPCRxAnimal.PCRxRacaID.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxAnimal.PCRxRacaID.ID] = value;
            }
        }
        public Int16? oPCRxRacaID
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxAnimal.PCRxRacaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[RebanhoSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[RebanhoSVC.xPCRxRaca.Raca.ID];
            }
            set
            {
                Value[RebanhoSVC.xPCRxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(RebanhoSVC.xPCRxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Sigla
        {
            get
            {
                return (String)Value[RebanhoSVC.xSYSxEmpresa.Sigla.ID];
            }
            set
            {
                Value[RebanhoSVC.xSYSxEmpresa.Sigla.ID] = value;
            }
        }
        public String? oSigla
        {
            get
            {
                GetOldValue(RebanhoSVC.xSYSxEmpresa.Sigla, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[RebanhoSVC.xISExItem.SYSxEstadoID.ID];
            }
            set
            {
                Value[RebanhoSVC.xISExItem.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(RebanhoSVC.xISExItem.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion RebanhoSVC.XTuple

        #region RebanhoSVC.XRule
        public abstract class XRule : XServiceRule<RebanhoSVC.XDataSet, RebanhoSVC, RebanhoSVC.XTuple>
        {
        }
        #endregion RebanhoSVC.XRule

        #region RebanhoSVC.XDataSet

        public class XDataSet : XDataSet<RebanhoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(RebanhoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<RebanhoSVC.XTuple> where T : XDataTuple
        {

            public Guid AnimalEstado => RebanhoSVC.xPCRxAnimalEstado.AnimalEstado.ID;
            public Guid ERPxGeneroID => RebanhoSVC.xPCRxAnimal.ERPxGeneroID.ID;
            public Guid Fase => RebanhoSVC.xPCRxAnimalFase.Fase.ID;
            public Guid Fazenda => RebanhoSVC.xSYSxPessoa.Nome.ID;
            public Guid Genero => RebanhoSVC.xERPxGenero.Genero.ID;
            public Guid ISExFabricanteID => RebanhoSVC.xISExItem.ISExFabricanteID.ID;
            public Guid ISExGrupoID => RebanhoSVC.xISExItem.ISExGrupoID.ID;
            public Guid ISExItemID => RebanhoSVC.xISExItem.ISExItemID.ID;
            public Guid ISExLinhaID => RebanhoSVC.xISExItem.ISExLinhaID.ID;
            public Guid ISExMarcaID => RebanhoSVC.xISExItem.ISExMarcaID.ID;
            public Guid ISExTabelaID => RebanhoSVC.xISExItem.ISExTabelaID.ID;
            public Guid Lote => RebanhoSVC.xPCRxAnimalLote.Lote.ID;
            public Guid Mae => RebanhoSVC.xPCRxMae.Nome.ID;
            public Guid Nascimento => RebanhoSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => RebanhoSVC.xISExItem.Nome.ID;
            public Guid Numero => RebanhoSVC.xISExCodigo.Numero.ID;
            public Guid NumeroMae => RebanhoSVC.xISExCodigoMae.Numero.ID;
            public Guid NumeroPartos => RebanhoSVC.xPCRxAnimal.NumeroPartos.ID;
            public Guid Pai => RebanhoSVC.xPCRxPai.Nome.ID;
            public Guid PCRxAnimalEstadoID => RebanhoSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID;
            public Guid PCRxAnimalFaseID => RebanhoSVC.xPCRxAnimal.PCRxAnimalFaseID.ID;
            public Guid PCRxAnimalLoteID => RebanhoSVC.xPCRxAnimal.PCRxAnimalLoteID.ID;
            public Guid PCRxEventoReprodutivoID => RebanhoSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID;
            public Guid PCRxIATFFaseID => RebanhoSVC.xPCRxAnimal.PCRxIATFFaseID.ID;
            public Guid PCRxMaeID => RebanhoSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID;
            public Guid PCRxPaiID => RebanhoSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID;
            public Guid PCRxRacaID => RebanhoSVC.xPCRxAnimal.PCRxRacaID.ID;
            public Guid ProdutoID => RebanhoSVC.xISExItem.ProdutoID.ID;
            public Guid Raca => RebanhoSVC.xPCRxRaca.Raca.ID;
            public Guid Sigla => RebanhoSVC.xSYSxEmpresa.Sigla.ID;
            public Guid SYSxEstadoID => RebanhoSVC.xISExItem.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(RebanhoSVC.XDataSet);
            }

            private Projecao.Core.PCR.Rebanho.FIlhoteSVC.XDataSet _FIlhoteDataSet;

            public Projecao.Core.PCR.Rebanho.FIlhoteSVC.XDataSet FIlhoteDataSet
            {
                get
                {
                    if (_FIlhoteDataSet == null)
                    {
                        _FIlhoteDataSet.IsReadOnly = true;
                        _FIlhoteDataSet = (Projecao.Core.PCR.Rebanho.FIlhoteSVC.XDataSet)Children.Get(Projecao.Core.PCR.Rebanho.FIlhoteSVC.gCID);
                    }
                    return  _FIlhoteDataSet;
                }
            }

            private Projecao.Core.PCR.Rebanho.EventoSVC.XDataSet _EventoDataSet;

            public Projecao.Core.PCR.Rebanho.EventoSVC.XDataSet EventoDataSet
            {
                get
                {
                    if (_EventoDataSet == null)
                    {
                        _EventoDataSet.IsReadOnly = true;
                        _EventoDataSet = (Projecao.Core.PCR.Rebanho.EventoSVC.XDataSet)Children.Get(Projecao.Core.PCR.Rebanho.EventoSVC.gCID);
                    }
                    return  _EventoDataSet;
                }
            }

        }
        #endregion RebanhoSVC.XDataSet

        [Guid(RebanhoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(RebanhoSVC))]
        protected class _Service : Service<RebanhoSVC, XDataSet, XTuple>
        {
            public const String sCID = "17458C9F-A0F9-4FFE-9895-0557416DA031";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<RebanhoSVC, XDataSet, XTuple>, XService
             where TModel : RebanhoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}