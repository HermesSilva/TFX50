//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Rebanho
{
    [XRegister(typeof(EventoSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Rebanho\Evento.dssvc")]
    public class EventoSVC : XSVCModel
    {
        public const String sCID = "68DC4160-D802-4A50-A2E2-5EAB1C152EEE";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxEventoTipo_PCRxEventoTipoID_PCRxEvento_PCRxEventoTipoID; // PCRxEventoTipo.PCRxEventoTipoID --> PCRxEvento.PCRxEventoTipoID
        public static XSVCReference PCRxIATFFaseTipo_PCRxIATFFaseTipoID_PCRxAnimalEvento_PCRxIATFFaseTipoID; // PCRxIATFFaseTipo.PCRxIATFFaseTipoID --> PCRxAnimalEvento.PCRxIATFFaseTipoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PCRxAnimalEvento_SYSxPessoaID; // SYSxPessoa.SYSxPessoaID --> PCRxAnimalEvento.SYSxPessoaID
        public static XSVCReference PCRxUsuario_SYSxPessoaID_PCRxEvento_CTLxUsuarioID; // PCRxUsuario.SYSxPessoaID --> PCRxEvento.CTLxUsuarioID
        public static XSVCReference PCRxAnimalEstado_PCRxAnimalEstadoID_PCRxAnimalEvento_PCRxAnimalEstadoID; // PCRxAnimalEstado.PCRxAnimalEstadoID --> PCRxAnimalEvento.PCRxAnimalEstadoID
        public static XSVCReference PCRxReprodutor_ISExItemID_PCRxAnimalEvento_PCRxReprodutorID; // PCRxReprodutor.ISExItemID --> PCRxAnimalEvento.PCRxReprodutorID
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimalEvento_ISExItemID; // ISExItem.ISExItemID --> PCRxAnimalEvento.ISExItemID
        public static XSVCReference PCRxEvento_PCRxEventoID_PCRxAnimalEvento_PCRxAnimalEventoID; // PCRxEvento.PCRxEventoID --> PCRxAnimalEvento.PCRxAnimalEventoID

        #region xPCRxReprodutor 
        public class xPCRxReprodutor : XSVCTable
        {

            public static Guid gCID => new Guid("1F17CDBA-577D-4A0F-9664-482FF0E7190A");

            public xPCRxReprodutor()
            {
                Name = "ISExItem";
                Alias = "PCRxReprodutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("38C2FA35-03E5-48DC-AB5C-9A9799E69DBE"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("F767B46A-B2F3-4431-BE73-2D8B6EDE8BCD"), "Nome", "Touro");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("8754F498-7E21-4C17-BD63-6EB1EAE7A48A"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("F2625679-C60E-4113-B396-04E0BE43249A"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("C03A012B-943F-4F09-91BF-6A3EF11B15F2"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("320BFE47-A0CD-4DA4-95B4-8F4596E1CA9C"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("A72690FF-C3F8-4F2B-BC98-5DD076145E71"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("0D10519D-07E2-4C27-889C-F4ED9B073E3A"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("64A1C618-0200-4BB3-A48B-9410369A200D"), "ProdutoID", "CÃ³digo Legado");
        }
        #endregion xPCRxReprodutor 


        #region xPCRxIATFFaseTipo 
        public class xPCRxIATFFaseTipo : XSVCTable
        {

            public static Guid gCID => new Guid("30B136A9-F9F6-4CEA-B91C-CA4481118565");

            public xPCRxIATFFaseTipo()
            {
                Name = "PCRxIATFFaseTipo";
                Alias = "PCRxIATFFaseTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.gCID;

                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "Tipo";
                Items.Add(Operacional, Operacional.ID);
                Operacional.Owner = this;
                Operacional.OwnerID = ID;
                Operacional.TableName = Name;
            }

            public static XORMPKField PCRxIATFFaseTipoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.PCRxIATFFaseTipoID, new Guid("1364E682-E7E7-4AA3-91C7-352FA2F0521A"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Tipo, new Guid("C84F0C7E-EAC4-490D-B2C4-259009837FFA"), "Tipo", "Nome da Fase");
            public static XORMField Operacional = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Operacional, new Guid("3A742441-A89E-4E8C-BC04-2B0ED2EB8284"), "Operacional", "Operacional");
        }
        #endregion xPCRxIATFFaseTipo 


        #region xPCRxAnimalEstado 
        public class xPCRxAnimalEstado : XSVCTable
        {

            public static Guid gCID => new Guid("3ED22A23-24BA-4A60-9A3D-D5B5CB75DF5D");

            public xPCRxAnimalEstado()
            {
                Name = "PCRxAnimalEstado";
                Alias = "PCRxAnimalEstado";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.gCID;

                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(AnimalEstado, AnimalEstado.ID);
                AnimalEstado.Owner = this;
                AnimalEstado.OwnerID = ID;
                AnimalEstado.TableName = Name;
                AnimalEstado.Alias = "AnimalEstado";
            }

            public static XORMPKField PCRxAnimalEstadoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.PCRxAnimalEstadoID, new Guid("919E60C2-FBB5-4664-9058-6E7B394396EB"), "PCRxAnimalEstadoID", "Estado");
            public static XORMFaceField AnimalEstado = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEstado.AnimalEstado, new Guid("9C533B8B-8497-4D05-9FBD-955146C5357A"), "AnimalEstado", "Estado do Animal");
        }
        #endregion xPCRxAnimalEstado 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("57E13EFA-FA44-4E54-9251-39436A648C3E");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "VetNome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("D4CA1ED9-8543-45DE-B830-2C7176BC1CD5"), "Nome", "VeterinÃ¡rio");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("C0C658E3-0468-4EDC-AB27-A9B5A54324C5"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xPCRxAnimalEvento 
        public class xPCRxAnimalEvento : XSVCTable
        {

            public static Guid gCID => new Guid("77AA8709-7ECE-4C8A-B47F-4D45AA7955BA");

            public xPCRxAnimalEvento()
            {
                Name = "PCRxAnimalEvento";
                Alias = "PCRxAnimalEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.gCID;

                Items.Add(PCRxAnimalEventoID, PCRxAnimalEventoID.ID);
                PCRxAnimalEventoID.Owner = this;
                PCRxAnimalEventoID.OwnerID = ID;
                PCRxAnimalEventoID.TableName = Name;
                PCRxAnimalEventoID.Alias = "PCRxAnimalEventoID";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                PCRxAnimalID.Alias = "PCRxAnimalID";
                Items.Add(Valor, Valor.ID);
                Valor.Owner = this;
                Valor.OwnerID = ID;
                Valor.TableName = Name;
                Valor.Alias = "Valor";
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalEventoID, new Guid("8EDC62C4-25AD-4FD0-A439-1AD2A5B62EAD"), "PCRxAnimalEventoID", "Eventos de Animais");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.SYSxPessoaID, new Guid("06315A4E-DCA0-4CEC-896B-2C2B759A23BC"), "SYSxPessoaID", "ResponsÃ¡vel");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.ISExItemID, new Guid("271F995E-2C41-41A2-8E65-814E1D42AE11"), "ISExItemID", "Item");
            public static XORMFKField PCRxReprodutorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxReprodutorID, new Guid("257FFEB9-59FF-45BF-B5DA-ECB9A5C6F75C"), "PCRxReprodutorID", "Reprodutor");
            public static XORMFKField PCRxAnimalID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalID, new Guid("C4ACB759-1EAA-48BC-BC21-554F989DB57B"), "PCRxAnimalID", "Animal");
            public static XORMDecimalField Valor = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.Valor, new Guid("DA112B5C-9933-440C-9F8A-54B63CAB578E"), "Valor", "Valor");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalLoteID, new Guid("6397E45A-EF17-4667-B898-67B512877BCD"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxIATFFaseID, new Guid("75B8C1F8-3967-4DD4-9885-2B457B6692E9"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxAnimalEstadoID, new Guid("06B82C60-53BE-45AC-98C7-ADAAF4DB7D0E"), "PCRxAnimalEstadoID", "Estado");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.PCRxIATFFaseTipoID, new Guid("38A4E6CD-2038-4931-A8D3-97C6E8B234F6"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMField Grupo = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalEvento.Grupo, new Guid("61BC1888-7110-4EAB-BB2E-E12D5AD2EC8B"), "Grupo", "Grupo");
        }
        #endregion xPCRxAnimalEvento 


        #region xPCRxEvento 
        public class xPCRxEvento : XSVCTable
        {

            public static Guid gCID => new Guid("C2F51017-9714-4D92-B536-12D47AF449A9");

            public xPCRxEvento()
            {
                Name = "PCRxEvento";
                Alias = "PCRxEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.gCID;

                Items.Add(PCRxEventoID, PCRxEventoID.ID);
                PCRxEventoID.Owner = this;
                PCRxEventoID.OwnerID = ID;
                PCRxEventoID.TableName = Name;
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Observacao, Observacao.ID);
                Observacao.Owner = this;
                Observacao.OwnerID = ID;
                Observacao.TableName = Name;
                Observacao.Alias = "Observacao";
                Items.Add(PCRxEventoTipoID, PCRxEventoTipoID.ID);
                PCRxEventoTipoID.Owner = this;
                PCRxEventoTipoID.OwnerID = ID;
                PCRxEventoTipoID.TableName = Name;
                PCRxEventoTipoID.Alias = "PCRxEventoTipoID";
                Items.Add(NTRxMobilePontoDestaqueID, NTRxMobilePontoDestaqueID.ID);
                NTRxMobilePontoDestaqueID.Owner = this;
                NTRxMobilePontoDestaqueID.OwnerID = ID;
                NTRxMobilePontoDestaqueID.TableName = Name;
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Items.Add(CTLxUsuarioID, CTLxUsuarioID.ID);
                CTLxUsuarioID.Owner = this;
                CTLxUsuarioID.OwnerID = ID;
                CTLxUsuarioID.TableName = Name;
            }

            public static XORMFaceField PCRxEventoID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoID, new Guid("C570943B-45C1-4AB7-A8CF-7C0A7A0BA072"), "PCRxEventoID", "Evento");
            public static XORMDateField Data = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Data, new Guid("045FB4B3-A2AE-439A-8C27-78CAE57B2D31"), "Data", "Data");
            public static XORMField Observacao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Observacao, new Guid("5A725D5A-970B-4754-B728-8958E876C24E"), "Observacao", "ObservaÃ§Ã£o");
            public static XORMFKField PCRxEventoTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.PCRxEventoTipoID, new Guid("EFA4DA94-A625-4986-AAC9-0EC3CE9374E9"), "PCRxEventoTipoID", "Tipo de Evento");
            public static XORMFKField NTRxMobilePontoDestaqueID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.NTRxMobilePontoDestaqueID, new Guid("23407FD3-938B-4612-9263-C8AD8B854A5B"), "NTRxMobilePontoDestaqueID", "Ponto de Destaque");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Latitude, new Guid("62890C11-50C7-439C-89BF-F6751FA50B6D"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.Longitude, new Guid("94FB035F-FE54-43EA-BAFB-E443D5C76C94"), "Longitude", "Longitude");
            public static XORMFKField CTLxUsuarioID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEvento.CTLxUsuarioID, new Guid("B245DA88-6B4C-45E4-B207-F2ECF2BA9779"), "CTLxUsuarioID", "UsuÃ¡rio");
        }
        #endregion xPCRxEvento 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("CBEC880E-9CF4-4608-8E88-DC4177AD6429");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeProd";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("072BA14E-2031-412A-9F32-45FD3C3F2BF2"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("AB00B85A-3A52-4381-82D3-1CAB7693FCD5"), "Nome", "Produto Usado");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("5C987AD2-AE6F-478F-B325-055A84C0B549"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("FCFC647F-B422-458C-8412-52ED91EFF960"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("FC684B13-EB7C-4091-B51A-6E4F11513B7E"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("45862174-A6C3-44C8-880B-AEA3AB0B7612"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("81258C85-290E-4235-BB0C-FA20C7C9D75C"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("950DC715-A27C-46D4-A2CD-473F50F4DC27"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("E5A5B712-975C-43FD-9E9B-8052EE7A034B"), "ProdutoID", "CÃ³digo Legado");
        }
        #endregion xISExItem 


        #region xPCRxEventoTipo 
        public class xPCRxEventoTipo : XSVCTable
        {

            public static Guid gCID => new Guid("EA6C2B50-A375-4F2E-B0B4-1EF5A1AAC935");

            public xPCRxEventoTipo()
            {
                Name = "PCRxEventoTipo";
                Alias = "PCRxEventoTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.gCID;

                Items.Add(PCRxEventoTipoID, PCRxEventoTipoID.ID);
                PCRxEventoTipoID.Owner = this;
                PCRxEventoTipoID.OwnerID = ID;
                PCRxEventoTipoID.TableName = Name;
                Items.Add(Evento, Evento.ID);
                Evento.Owner = this;
                Evento.OwnerID = ID;
                Evento.TableName = Name;
                Evento.Alias = "Evento";
                Items.Add(Animal, Animal.ID);
                Animal.Owner = this;
                Animal.OwnerID = ID;
                Animal.TableName = Name;
                Items.Add(Reproducao, Reproducao.ID);
                Reproducao.Owner = this;
                Reproducao.OwnerID = ID;
                Reproducao.TableName = Name;
            }

            public static XORMPKField PCRxEventoTipoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.PCRxEventoTipoID, new Guid("2C084A09-D7FB-48A1-BE83-EA8BABAC9E0F"), "PCRxEventoTipoID", "Tipo de Evento");
            public static XORMFaceField Evento = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.Evento, new Guid("B8805B02-6CB2-4333-9CCD-B8821BACAE00"), "Evento", "Evento");
            public static XORMField Animal = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.Animal, new Guid("8CE2CBFA-408A-4F10-83AC-5F69DB1E7CBD"), "Animal", "Animal");
            public static XORMField Reproducao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxEventoTipo.Reproducao, new Guid("B7D30B4E-3366-47B2-A4BB-EE71084FC835"), "Reproducao", "ReproduÃ§Ã£o");
        }
        #endregion xPCRxEventoTipo 


        #region xPCRxUsuario 
        public class xPCRxUsuario : XSVCTable
        {

            public static Guid gCID => new Guid("F8DB9E17-E65C-4837-8A67-E583DC599108");

            public xPCRxUsuario()
            {
                Name = "SYSxPessoa";
                Alias = "PCRxUsuario";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeUsu";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("E561E473-264A-4070-8153-9AE507FBEC66"), "Nome", "UsuÃ¡rio");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("24920341-AF2C-4970-9B78-B65E81110543"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xPCRxUsuario 


        public xISExItem ISExItem;
        public xPCRxAnimalEstado PCRxAnimalEstado;
        public xPCRxAnimalEvento PCRxAnimalEvento;
        public xPCRxEvento PCRxEvento;
        public xPCRxEventoTipo PCRxEventoTipo;
        public xPCRxIATFFaseTipo PCRxIATFFaseTipo;
        public xPCRxReprodutor PCRxReprodutor;
        public xPCRxUsuario PCRxUsuario;
        public xSYSxPessoa SYSxPessoa;
        public static readonly XORMParameterField Unidade = new XORMParameterField(new Guid("B8ED7FF4-B700-4174-A871-3D255982C8D8"), "Unidade", "Unidade", XString.CID, 0, 0, false, gCID, null);

        public EventoSVC()
        {
            TupleType = typeof(EventoSVC.XTuple);
            DataSetType = typeof(EventoSVC.XDataSet);
            ServiceRuleCID = new Guid("0DD9B219-355A-40E2-B9F8-9CDD4195205C");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("68DC4160-D802-4A50-A2E2-5EAB1C152EEE");
            Name = "Evento";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xPCRxEvento.Data.ID, xPCRxEventoTipo.Evento.ID, xPCRxAnimalEvento.Valor.ID, Unidade.ID, xPCRxIATFFaseTipo.Tipo.ID, xPCRxAnimalEstado.AnimalEstado.ID, xPCRxReprodutor.Nome.ID, xSYSxPessoa.Nome.ID, xPCRxUsuario.Nome.ID, xISExItem.Nome.ID };
            OrderByFields = new Guid[] { xPCRxEvento.Data.ID };
            DataSetFields = new Guid[] { xPCRxEventoTipo.Evento.ID, xPCRxEvento.Data.ID, xPCRxEvento.Observacao.ID, xSYSxPessoa.Nome.ID, xISExItem.Nome.ID, xPCRxIATFFaseTipo.Tipo.ID, xPCRxAnimalEvento.PCRxAnimalEventoID.ID, xPCRxReprodutor.Nome.ID, xPCRxUsuario.Nome.ID, xPCRxAnimalEvento.PCRxAnimalID.ID, xPCRxAnimalEstado.AnimalEstado.ID, xPCRxAnimalEvento.Valor.ID, Unidade.ID, xPCRxEvento.PCRxEventoTipoID.ID };
            PKField = xPCRxAnimalEvento.PCRxAnimalEventoID.ID;
            ConfigTableID = new Guid("3D4ED437-A9E9-4775-B2A0-887BE2B192B4");
            MasterRuleCID = new Guid("0DD9B219-355A-40E2-B9F8-9CDD4195205C");
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PCRxAnimalEstado = new xPCRxAnimalEstado();
            PCRxAnimalEstado.IsReadOnly = true;
            AddTable(PCRxAnimalEstado);
            PCRxAnimalEvento = new xPCRxAnimalEvento();
            PCRxAnimalEvento.IsReadOnly = true;
            AddTable(PCRxAnimalEvento);
            PCRxEvento = new xPCRxEvento();
            PCRxEvento.IsReadOnly = true;
            AddTable(PCRxEvento);
            PCRxEventoTipo = new xPCRxEventoTipo();
            PCRxEventoTipo.IsReadOnly = true;
            AddTable(PCRxEventoTipo);
            PCRxIATFFaseTipo = new xPCRxIATFFaseTipo();
            PCRxIATFFaseTipo.IsReadOnly = true;
            AddTable(PCRxIATFFaseTipo);
            PCRxReprodutor = new xPCRxReprodutor();
            PCRxReprodutor.IsReadOnly = true;
            AddTable(PCRxReprodutor);
            PCRxUsuario = new xPCRxUsuario();
            PCRxUsuario.IsReadOnly = true;
            AddTable(PCRxUsuario);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PCRxAnimalEvento.ID;
            PCRxEventoTipo_PCRxEventoTipoID_PCRxEvento_PCRxEventoTipoID = AddReference(new XSVCReference(new Guid("1B6317BE-B959-4407-8569-CF7E6FAC25E7"), "FK_1B6317BEB95944078569CF7E6FAC25E7", EventoSVC.xPCRxEventoTipo.gCID, xPCRxEventoTipo.PCRxEventoTipoID.ID, EventoSVC.xPCRxEvento.gCID, xPCRxEvento.PCRxEventoTipoID.ID, XJoinType.Inner)); // PCRxEventoTipo.PCRxEventoTipoID --> PCRxEvento.PCRxEventoTipoID
            PCRxIATFFaseTipo_PCRxIATFFaseTipoID_PCRxAnimalEvento_PCRxIATFFaseTipoID = AddReference(new XSVCReference(new Guid("4221D544-FBBB-4B88-BB4F-52B9D89EA868"), "FK_4221D544FBBB4B88BB4F52B9D89EA868", EventoSVC.xPCRxIATFFaseTipo.gCID, xPCRxIATFFaseTipo.PCRxIATFFaseTipoID.ID, EventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxIATFFaseTipoID.ID, XJoinType.Inner)); // PCRxIATFFaseTipo.PCRxIATFFaseTipoID --> PCRxAnimalEvento.PCRxIATFFaseTipoID
            SYSxPessoa_SYSxPessoaID_PCRxAnimalEvento_SYSxPessoaID = AddReference(new XSVCReference(new Guid("4FD30885-F64A-4A2B-9D3A-F399B0825AA7"), "FK_4FD30885F64A4A2B9D3AF399B0825AA7", EventoSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, EventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.SYSxPessoaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PCRxAnimalEvento.SYSxPessoaID
            PCRxUsuario_SYSxPessoaID_PCRxEvento_CTLxUsuarioID = AddReference(new XSVCReference(new Guid("5000EBCC-A2F7-4BC2-ABFD-8361DB129208"), "FK_5000EBCCA2F74BC2ABFD8361DB129208", EventoSVC.xPCRxUsuario.gCID, xPCRxUsuario.SYSxPessoaID.ID, EventoSVC.xPCRxEvento.gCID, xPCRxEvento.CTLxUsuarioID.ID, XJoinType.Inner)); // PCRxUsuario.SYSxPessoaID --> PCRxEvento.CTLxUsuarioID
            PCRxAnimalEstado_PCRxAnimalEstadoID_PCRxAnimalEvento_PCRxAnimalEstadoID = AddReference(new XSVCReference(new Guid("6F8F3790-7BB4-4591-866D-B07F8D7DF10D"), "FK_6F8F37907BB44591866DB07F8D7DF10D", EventoSVC.xPCRxAnimalEstado.gCID, xPCRxAnimalEstado.PCRxAnimalEstadoID.ID, EventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxAnimalEstadoID.ID, XJoinType.Inner)); // PCRxAnimalEstado.PCRxAnimalEstadoID --> PCRxAnimalEvento.PCRxAnimalEstadoID
            PCRxReprodutor_ISExItemID_PCRxAnimalEvento_PCRxReprodutorID = AddReference(new XSVCReference(new Guid("AA0CA06A-F770-42B2-AA73-946663FEBC93"), "FK_AA0CA06AF77042B2AA73946663FEBC93", EventoSVC.xPCRxReprodutor.gCID, xPCRxReprodutor.ISExItemID.ID, EventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxReprodutorID.ID, XJoinType.Inner)); // PCRxReprodutor.ISExItemID --> PCRxAnimalEvento.PCRxReprodutorID
            ISExItem_ISExItemID_PCRxAnimalEvento_ISExItemID = AddReference(new XSVCReference(new Guid("B78A8F80-48BF-4A8A-803C-E650378C6CB8"), "FK_B78A8F8048BF4A8A803CE650378C6CB8", EventoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, EventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.ISExItemID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimalEvento.ISExItemID
            PCRxEvento_PCRxEventoID_PCRxAnimalEvento_PCRxAnimalEventoID = AddReference(new XSVCReference(new Guid("CE422AB9-6CA6-4360-8AC3-3E15FDB3784E"), "FK_CE422AB96CA643608AC33E15FDB3784E", EventoSVC.xPCRxEvento.gCID, xPCRxEvento.PCRxEventoID.ID, EventoSVC.xPCRxAnimalEvento.gCID, xPCRxAnimalEvento.PCRxAnimalEventoID.ID, XJoinType.Inner)); // PCRxEvento.PCRxEventoID --> PCRxAnimalEvento.PCRxAnimalEventoID
            AddField(Unidade);
            Unidade.IsParam = true;
            xPCRxAnimalEstado.AnimalEstado.IsReadOnly = true;
            xPCRxAnimalEstado.AnimalEstado.IsDataField = true;
            xPCRxAnimalEstado.AnimalEstado.AllowEmpty = true;
            xPCRxEvento.Data.IsReadOnly = true;
            xPCRxEvento.Data.OrderType = XOrderType.Desc;
            xPCRxEvento.Data.IsDataField = true;
            xPCRxEvento.Data.AllowEmpty = true;
            xPCRxEventoTipo.Evento.IsReadOnly = true;
            xPCRxEventoTipo.Evento.Length = 25;
            xPCRxEventoTipo.Evento.IsDataField = true;
            xPCRxEventoTipo.Evento.AllowEmpty = true;
            xPCRxReprodutor.Nome.IsReadOnly = true;
            xPCRxReprodutor.Nome.Length = 60;
            xPCRxReprodutor.Nome.IsDataField = true;
            xPCRxReprodutor.Nome.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xPCRxUsuario.Nome.IsReadOnly = true;
            xPCRxUsuario.Nome.Length = 256;
            xPCRxUsuario.Nome.IsDataField = true;
            xPCRxUsuario.Nome.AllowEmpty = true;
            xPCRxEvento.Observacao.IsReadOnly = true;
            xPCRxEvento.Observacao.Length = 200;
            xPCRxEvento.Observacao.IsDataField = true;
            xPCRxEvento.Observacao.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxAnimalEventoID.IsReadOnly = true;
            xPCRxAnimalEvento.PCRxAnimalEventoID.IsDataField = true;
            xPCRxAnimalEvento.PCRxAnimalEventoID.AllowEmpty = true;
            xPCRxAnimalEvento.PCRxAnimalID.IsReadOnly = true;
            xPCRxAnimalEvento.PCRxAnimalID.IsDataField = true;
            xPCRxAnimalEvento.PCRxAnimalID.AllowEmpty = true;
            xPCRxEvento.PCRxEventoTipoID.IsReadOnly = true;
            xPCRxEvento.PCRxEventoTipoID.IsDataField = true;
            xPCRxEvento.PCRxEventoTipoID.AllowEmpty = true;
            xPCRxIATFFaseTipo.Tipo.IsReadOnly = true;
            xPCRxIATFFaseTipo.Tipo.Length = 35;
            xPCRxIATFFaseTipo.Tipo.IsDataField = true;
            xPCRxIATFFaseTipo.Tipo.AllowEmpty = true;
            Unidade.IsReadOnly = false;
            Unidade.Length = 0;
            Unidade.Scale = 0;
            Unidade.IsDataField = true;
            Unidade.AllowEmpty = true;
            xPCRxAnimalEvento.Valor.IsReadOnly = true;
            xPCRxAnimalEvento.Valor.Length = 25;
            xPCRxAnimalEvento.Valor.Scale = 2;
            xPCRxAnimalEvento.Valor.IsDataField = true;
            xPCRxAnimalEvento.Valor.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField AnimalEstado => xPCRxAnimalEstado.AnimalEstado;
        public XORMField Data => xPCRxEvento.Data;
        public XORMField Evento => xPCRxEventoTipo.Evento;
        public XORMField Nome => xPCRxReprodutor.Nome;
        public XORMField NomeProd => xISExItem.Nome;
        public XORMField NomeUsu => xPCRxUsuario.Nome;
        public XORMField Observacao => xPCRxEvento.Observacao;
        public XORMField PCRxAnimalEventoID => xPCRxAnimalEvento.PCRxAnimalEventoID;
        public XORMField PCRxAnimalID => xPCRxAnimalEvento.PCRxAnimalID;
        public XORMField PCRxEventoTipoID => xPCRxEvento.PCRxEventoTipoID;
        public XORMField Tipo => xPCRxIATFFaseTipo.Tipo;
        public XORMField Unidade => EventoSVC.Unidade;
        public XORMField Valor => xPCRxAnimalEvento.Valor;
        public XORMField VetNome => xSYSxPessoa.Nome;
        }
        #endregion XFields
        #region EventoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String AnimalEstado
        {
            get
            {
                return (String)Value[EventoSVC.xPCRxAnimalEstado.AnimalEstado.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxAnimalEstado.AnimalEstado.ID] = value;
            }
        }
        public String? oAnimalEstado
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxAnimalEstado.AnimalEstado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[EventoSVC.xPCRxEvento.Data.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxEvento.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxEvento.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Evento
        {
            get
            {
                return (String)Value[EventoSVC.xPCRxEventoTipo.Evento.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxEventoTipo.Evento.ID] = value;
            }
        }
        public String? oEvento
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxEventoTipo.Evento, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[EventoSVC.xPCRxReprodutor.Nome.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxReprodutor.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxReprodutor.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeProd
        {
            get
            {
                return (String)Value[EventoSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[EventoSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNomeProd
        {
            get
            {
                GetOldValue(EventoSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeUsu
        {
            get
            {
                return (String)Value[EventoSVC.xPCRxUsuario.Nome.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxUsuario.Nome.ID] = value;
            }
        }
        public String? oNomeUsu
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxUsuario.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Observacao
        {
            get
            {
                return (String)Value[EventoSVC.xPCRxEvento.Observacao.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxEvento.Observacao.ID] = value;
            }
        }
        public String? oObservacao
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxEvento.Observacao, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PCRxAnimalEventoID
        {
            get
            {
                return (Guid)Value[EventoSVC.xPCRxAnimalEvento.PCRxAnimalEventoID.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxAnimalEvento.PCRxAnimalEventoID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalEventoID
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxAnimalEvento.PCRxAnimalEventoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxAnimalID
        {
            get
            {
                return (Guid)Value[EventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalID
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxAnimalEvento.PCRxAnimalID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxEventoTipoID
        {
            get
            {
                return (Int16)Value[EventoSVC.xPCRxEvento.PCRxEventoTipoID.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxEvento.PCRxEventoTipoID.ID] = value;
            }
        }
        public Int16? oPCRxEventoTipoID
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxEvento.PCRxEventoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Tipo
        {
            get
            {
                return (String)Value[EventoSVC.xPCRxIATFFaseTipo.Tipo.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxIATFFaseTipo.Tipo.ID] = value;
            }
        }
        public String? oTipo
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxIATFFaseTipo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Unidade
        {
            get
            {
                return (String)Value[EventoSVC.Unidade.ID];
            }
            set
            {
                Value[EventoSVC.Unidade.ID] = value;
            }
        }
        public String? oUnidade
        {
            get
            {
                GetOldValue(EventoSVC.Unidade, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[EventoSVC.xPCRxAnimalEvento.Valor.ID];
            }
            set
            {
                Value[EventoSVC.xPCRxAnimalEvento.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(EventoSVC.xPCRxAnimalEvento.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public String VetNome
        {
            get
            {
                return (String)Value[EventoSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[EventoSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oVetNome
        {
            get
            {
                GetOldValue(EventoSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion EventoSVC.XTuple

        #region EventoSVC.XRule
        public abstract class XRule : XServiceRule<EventoSVC.XDataSet, EventoSVC, EventoSVC.XTuple>
        {
        }
        #endregion EventoSVC.XRule

        #region EventoSVC.XDataSet

        public class XDataSet : XDataSet<EventoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(EventoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<EventoSVC.XTuple> where T : XDataTuple
        {

            public Guid AnimalEstado => EventoSVC.xPCRxAnimalEstado.AnimalEstado.ID;
            public Guid Data => EventoSVC.xPCRxEvento.Data.ID;
            public Guid Evento => EventoSVC.xPCRxEventoTipo.Evento.ID;
            public Guid Nome => EventoSVC.xPCRxReprodutor.Nome.ID;
            public Guid NomeProd => EventoSVC.xISExItem.Nome.ID;
            public Guid NomeUsu => EventoSVC.xPCRxUsuario.Nome.ID;
            public Guid Observacao => EventoSVC.xPCRxEvento.Observacao.ID;
            public Guid PCRxAnimalEventoID => EventoSVC.xPCRxAnimalEvento.PCRxAnimalEventoID.ID;
            public Guid PCRxAnimalID => EventoSVC.xPCRxAnimalEvento.PCRxAnimalID.ID;
            public Guid PCRxEventoTipoID => EventoSVC.xPCRxEvento.PCRxEventoTipoID.ID;
            public Guid Tipo => EventoSVC.xPCRxIATFFaseTipo.Tipo.ID;
            public Guid Unidade => EventoSVC.Unidade.ID;
            public Guid Valor => EventoSVC.xPCRxAnimalEvento.Valor.ID;
            public Guid VetNome => EventoSVC.xSYSxPessoa.Nome.ID;

            public XDataSet()
            {
                DataSetType = typeof(EventoSVC.XDataSet);
            }

        }
        #endregion EventoSVC.XDataSet

        [Guid(EventoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(EventoSVC))]
        protected class _Service : Service<EventoSVC, XDataSet, XTuple>
        {
            public const String sCID = "B3E841B5-F0BC-4014-AE15-B1EBEE031A33";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<EventoSVC, XDataSet, XTuple>, XService
             where TModel : EventoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}