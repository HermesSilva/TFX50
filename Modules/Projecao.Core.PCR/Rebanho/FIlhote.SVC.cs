//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Rebanho
{
    [XRegister(typeof(FIlhoteSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Rebanho\FIlhote.dssvc")]
    public class FIlhoteSVC : XSVCModel
    {
        public const String sCID = "F9B8D52D-792A-4C3C-95C3-91E1B8DF1A38";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxAnimal_PCRxAnimalID_PCRxAnimalFiliacao_PCRxAnimalFiliacaoID; // PCRxAnimal.PCRxAnimalID --> PCRxAnimalFiliacao.PCRxAnimalFiliacaoID
        public static XSVCReference ISExItem_ISExItemID_PCRxAnimalFiliacao_PCRxAnimalFiliacaoID; // ISExItem.ISExItemID --> PCRxAnimalFiliacao.PCRxAnimalFiliacaoID
        public static XSVCReference ISExCodigo_ISExItemID_PCRxAnimalFiliacao_PCRxAnimalFiliacaoID; // ISExCodigo.ISExItemID --> PCRxAnimalFiliacao.PCRxAnimalFiliacaoID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("091999C1-C6C7-4125-87D9-6140FC2DD96B");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("8A55639E-EAD3-46AC-A889-78D354C842B3"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("C984C8B7-E674-457D-AA5C-805C6DF8BE7D"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("B0B25A4A-AF52-4AD5-ACCE-307BDFC3114F"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("57FC6F75-88A1-4A00-9610-9D5424E7E6E7"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("DD762348-8E7B-4CF6-A1E0-97490609C8D5"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("327D3EE3-D326-483F-B969-B4EEC8AD0951"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("C8817060-BB29-4FC3-86A9-9BA4548590AC"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("BA2F8101-A416-4C96-932F-0FA777E8BDE2"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("DB712916-521C-4BA2-8887-AB13A74485FB"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("3A4BA75E-FB42-4758-919A-1AA4D448D982");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                PCRxAnimalFiliacaoID.Alias = "PCRxAnimalFiliacaoID";
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                PCRxMaeID.Alias = "PCRxMaeID";
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("23DF7225-5626-40E4-AB54-3F54FBA57D95"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("E829AEFC-D2D0-4DB9-AE8A-BFC938D77DE5"), "PCRxMaeID", "Animal");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("868DFC1B-6E9C-4B81-96EA-9BF67B4BB428"), "PCRxPaiID", "Animal");
        }
        #endregion xPCRxAnimalFiliacao 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("4B7DD743-B87F-46FA-8E41-E8CB6FD5E4A8");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("2D55ABF9-20B9-434C-A8D9-1BB79B23AAFD"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("C4F32858-188B-4D42-A726-BC6546381F10"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("8EFD68BA-9060-475F-AAF0-8B5077B91CD2"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("BD5BEEC9-156E-46AD-B137-639C648FF669"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("45F8C49E-6808-43F8-8B35-3D95A939926B"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("B13B07A1-84F3-4927-BB76-2A5B2EC516EA"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("63A27E44-A465-4A16-9F92-B92ED84C6F3C"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("A7AEA4B5-F633-4CD1-A5B4-72B45ECD78DA"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("9B96145B-CF9D-4272-A213-C23B22FD6A16"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("B7890AA3-E3A2-45AB-A0A4-ACC1C6D82F17"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("A812D26C-5535-407A-97FC-F60012BF3281"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xISExCodigo 
        public class xISExCodigo : XSVCTable
        {

            public static Guid gCID => new Guid("6AA3B54D-62BE-4D95-B1C8-690B771F8414");

            public xISExCodigo()
            {
                Name = "ISExCodigo";
                Alias = "ISExCodigo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.gCID;

                Items.Add(ISExCodigoID, ISExCodigoID.ID);
                ISExCodigoID.Owner = this;
                ISExCodigoID.OwnerID = ID;
                ISExCodigoID.TableName = Name;
                Items.Add(ISExCodigoTipoID, ISExCodigoTipoID.ID);
                ISExCodigoTipoID.Owner = this;
                ISExCodigoTipoID.OwnerID = ID;
                ISExCodigoTipoID.TableName = Name;
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(NumeroCurto, NumeroCurto.ID);
                NumeroCurto.Owner = this;
                NumeroCurto.OwnerID = ID;
                NumeroCurto.TableName = Name;
            }

            public static XORMPKField ISExCodigoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoID, new Guid("4E08A938-24E8-46BB-8F3C-1A4746B5C25B"), "ISExCodigoID", "Tipo de Código");
            public static XORMFKField ISExCodigoTipoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoTipoID, new Guid("2EA04BF3-09D4-4763-80AB-60878F4844D2"), "ISExCodigoTipoID", "Tipo de Código");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.Numero, new Guid("B1FDFF3C-94B8-4554-A5F1-B0F543586AD7"), "Numero", "Número");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExItemID, new Guid("EC41E7B1-939F-4D28-86CC-1F0263DDE9D5"), "ISExItemID", "Item");
            public static XORMField NumeroCurto = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.NumeroCurto, new Guid("B23E30C0-A301-4832-BF34-5D190912BD15"), "NumeroCurto", "Número Curto");
        }
        #endregion xISExCodigo 


        public xISExCodigo ISExCodigo;
        public xISExItem ISExItem;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;

        public FIlhoteSVC()
        {
            TupleType = typeof(FIlhoteSVC.XTuple);
            DataSetType = typeof(FIlhoteSVC.XDataSet);
            ServiceRuleCID = new Guid("15BFFE3A-7F49-45B9-9F74-C83E43E67D42");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F9B8D52D-792A-4C3C-95C3-91E1B8DF1A38");
            Name = "FIlhote";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xISExCodigo.Numero.ID, xPCRxAnimal.Nascimento.ID };
            OrderByFields = new Guid[] { xPCRxAnimal.Nascimento.ID };
            DataSetFields = new Guid[] { xPCRxAnimalFiliacao.PCRxMaeID.ID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, xISExCodigo.Numero.ID, xISExItem.Nome.ID, xPCRxAnimal.Nascimento.ID };
            PKField = xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID;
            ConfigTableID = new Guid("E38A3583-0F50-4223-9C50-9F5E3786A591");
            MasterRuleCID = new Guid("15BFFE3A-7F49-45B9-9F74-C83E43E67D42");
            ISExCodigo = new xISExCodigo();
            ISExCodigo.IsReadOnly = true;
            AddTable(ISExCodigo);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = true;
            AddTable(PCRxAnimal);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = true;
            AddTable(PCRxAnimalFiliacao);
            MasterTableID = PCRxAnimalFiliacao.ID;
            AttachmentTableID = new Guid("E38A3583-0F50-4223-9C50-9F5E3786A591");
            AttachmentType = XAttachmentType.Guid;
            PCRxAnimal_PCRxAnimalID_PCRxAnimalFiliacao_PCRxAnimalFiliacaoID = AddReference(new XSVCReference(new Guid("197ED6E5-46A3-4691-850A-A7CAE61EF4DE"), "FK_197ED6E546A34691850AA7CAE61EF4DE", FIlhoteSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, FIlhoteSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, XJoinType.Inner)); // PCRxAnimal.PCRxAnimalID --> PCRxAnimalFiliacao.PCRxAnimalFiliacaoID
            ISExItem_ISExItemID_PCRxAnimalFiliacao_PCRxAnimalFiliacaoID = AddReference(new XSVCReference(new Guid("8417AEC5-B169-426E-AC92-712C62D2A1A8"), "FK_8417AEC5B169426EAC92712C62D2A1A8", FIlhoteSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, FIlhoteSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> PCRxAnimalFiliacao.PCRxAnimalFiliacaoID
            ISExCodigo_ISExItemID_PCRxAnimalFiliacao_PCRxAnimalFiliacaoID = AddReference(new XSVCReference(new Guid("CBFB1F44-675C-4765-A660-F53E6B4C5FE8"), "FK_CBFB1F44675C4765A660F53E6B4C5FE8", FIlhoteSVC.xISExCodigo.gCID, xISExCodigo.ISExItemID.ID, FIlhoteSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, XJoinType.Inner)); // ISExCodigo.ISExItemID --> PCRxAnimalFiliacao.PCRxAnimalFiliacaoID
            xPCRxAnimal.Nascimento.IsReadOnly = true;
            xPCRxAnimal.Nascimento.OrderType = XOrderType.Desc;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExCodigo.Numero.IsReadOnly = true;
            xISExCodigo.Numero.Length = 36;
            xISExCodigo.Numero.IsDataField = true;
            xISExCodigo.Numero.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.IsReadOnly = true;
            xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsReadOnly = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxMaeID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField Numero => xISExCodigo.Numero;
        public XORMField PCRxAnimalFiliacaoID => xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID;
        public XORMField PCRxMaeID => xPCRxAnimalFiliacao.PCRxMaeID;
        }
        #endregion XFields
        #region FIlhoteSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[FIlhoteSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[FIlhoteSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(FIlhoteSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[FIlhoteSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[FIlhoteSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(FIlhoteSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[FIlhoteSVC.xISExCodigo.Numero.ID];
            }
            set
            {
                Value[FIlhoteSVC.xISExCodigo.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(FIlhoteSVC.xISExCodigo.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid PCRxAnimalFiliacaoID
        {
            get
            {
                return (Guid)Value[FIlhoteSVC.xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID];
            }
            set
            {
                Value[FIlhoteSVC.xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalFiliacaoID
        {
            get
            {
                GetOldValue(FIlhoteSVC.xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxMaeID
        {
            get
            {
                return (Guid)Value[FIlhoteSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID];
            }
            set
            {
                Value[FIlhoteSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID] = value;
            }
        }
        public Guid? oPCRxMaeID
        {
            get
            {
                GetOldValue(FIlhoteSVC.xPCRxAnimalFiliacao.PCRxMaeID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion FIlhoteSVC.XTuple

        #region FIlhoteSVC.XRule
        public abstract class XRule : XServiceRule<FIlhoteSVC.XDataSet, FIlhoteSVC, FIlhoteSVC.XTuple>
        {
        }
        #endregion FIlhoteSVC.XRule

        #region FIlhoteSVC.XDataSet

        public class XDataSet : XDataSet<FIlhoteSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(FIlhoteSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<FIlhoteSVC.XTuple> where T : XDataTuple
        {

            public Guid Nascimento => FIlhoteSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => FIlhoteSVC.xISExItem.Nome.ID;
            public Guid Numero => FIlhoteSVC.xISExCodigo.Numero.ID;
            public Guid PCRxAnimalFiliacaoID => FIlhoteSVC.xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID;
            public Guid PCRxMaeID => FIlhoteSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID;

            public XDataSet()
            {
                DataSetType = typeof(FIlhoteSVC.XDataSet);
            }

        }
        #endregion FIlhoteSVC.XDataSet

        [Guid(FIlhoteSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(FIlhoteSVC))]
        protected class _Service : Service<FIlhoteSVC, XDataSet, XTuple>
        {
            public const String sCID = "203D0CB1-D056-4234-BBBA-FFE757005BBD";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<FIlhoteSVC, XDataSet, XTuple>, XService
             where TModel : FIlhoteSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}