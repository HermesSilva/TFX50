//<auto-generated/>
using System;
using TFX.Core.Data;
using System.Drawing;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.DIC;
using TFX.Core.Reflections;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;

namespace Projecao.Core.PCR.Reprodutor
{
    [XRegister(typeof(ReprodutorSAM), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Reprodutor\Reprodutor.dssam")]
    public class ReprodutorSAM : XAPPModel
    {
        #region xReprodutorACT

        [XRegister(typeof(xReprodutorACT), sCID)]
        public class xReprodutorACT : XAPPStep
        {
            public const String sCID = "A61165D0-DAEC-49F1-88A3-E969B229A163";
            public static Guid gCID = new Guid(sCID);
            public xReprodutorACT(Guid pID, String pName, String pTitle, Guid pFormID, Guid pDataSourceID)
              :base(pID, pName, pTitle, pFormID, pDataSourceID)
            {
            }
        }

        #endregion xReprodutorACT

        #region ReprodutorFRM

        [XRegister(typeof(ReprodutorFRM), sCID)]
        public class ReprodutorFRM : XFRMModel
        {
            public const String sCID = "D82B4BAA-6585-435F-A080-358456F6D1CD";
            static ReprodutorFRM()
            {
                gCID = new Guid(sCID);
            }
            public ReprodutorFRM()
            {
                ID = gCID;
                Name = "Reprodutor";
                Title = "";
                MinRows = 11;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 13;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 13;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 60;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
                AddItem(Numero);
                Numero.CanInsert = true;
                Numero.CanUpdate = true;
                Numero.RowCount = 1;
                Numero.ColCount = 4;
                Numero.RowCountSmall = 1;
                Numero.ColCountSmall = 4;
                Numero.IsHidden = false;
                Numero.IsHiddenSmall = false;
                Numero.AdditionalTitle = "";
                Numero.Location = 2;
                Numero.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Numero.FormImplace = true;
                Numero.Operator = XOperator.EqualTo;
                Numero.JustifyHeight = false;
                Numero.AllowEmpty = true;
                Numero.FontColor = "#000000";
                Numero.FontStyle = XFontStyle.Normal;
                Numero.ShowFooter = false;
                Numero.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.Scale = 0;
                Numero.Length = 36;
                Numero.SearchAction = XSearchAction.Default;
                Numero.TypeID = XString.CID;
                Numero.AdditionalFieldsID = new Guid[] {  };
                Numero.AdditionalDataFieldsID = new Guid[] {  };
                Numero.TargetFilterFieldID = new Guid[] {  };
                Numero.SourceFilterFieldID = new Guid[] {  };
                Numero.TargetDisplayFieldID = new Guid[] {  };
                Numero.SourceDisplayFieldID = new Guid[] {  };
                Numero.AutoLoad = false;
                Numero.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.FilterInative = true;
                Numero.IsAnswer = false;
                Numero.AllowMultiSelect = false;
                AddItem(PCRxRacaID);
                PCRxRacaID.CanInsert = true;
                PCRxRacaID.CanUpdate = true;
                PCRxRacaID.RowCount = 1;
                PCRxRacaID.ColCount = 6;
                PCRxRacaID.RowCountSmall = 1;
                PCRxRacaID.ColCountSmall = 6;
                PCRxRacaID.IsHidden = false;
                PCRxRacaID.IsHiddenSmall = false;
                PCRxRacaID.AdditionalTitle = "";
                PCRxRacaID.DataSourceID = global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;
                PCRxRacaID.Location = 3;
                PCRxRacaID.EditorCID = new Guid("AC111493-AD7B-4F74-A0E8-DF0E0BB6B74A");
                PCRxRacaID.FormImplace = true;
                PCRxRacaID.Operator = XOperator.EqualTo;
                PCRxRacaID.JustifyHeight = false;
                PCRxRacaID.AllowEmpty = true;
                PCRxRacaID.FontColor = "#000000";
                PCRxRacaID.FontStyle = XFontStyle.Normal;
                PCRxRacaID.ShowFooter = false;
                PCRxRacaID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxRacaID.Scale = 0;
                PCRxRacaID.Length = 0;
                PCRxRacaID.SearchAction = XSearchAction.Default;
                PCRxRacaID.TypeID = XInt16.CID;
                PCRxRacaID.AdditionalFieldsID = new Guid[] {  };
                PCRxRacaID.AdditionalDataFieldsID = new Guid[] {  };
                PCRxRacaID.TargetFilterFieldID = new Guid[] {  };
                PCRxRacaID.SourceFilterFieldID = new Guid[] {  };
                PCRxRacaID.TargetDisplayFieldID = new Guid[] { new Guid("42D1D6E3-50C0-4DB5-80C5-B4D717817E8F") };
                PCRxRacaID.SourceDisplayFieldID = new Guid[] { new Guid("E7887B37-DA1A-4A3B-98E1-6434906A1E27") };
                PCRxRacaID.DataSourceID = global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;
                PCRxRacaID.AutoLoad = false;
                PCRxRacaID.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxRacaID.FilterInative = true;
                PCRxRacaID.IsAnswer = false;
                PCRxRacaID.AllowMultiSelect = false;
                AddItem(Nascimento);
                Nascimento.CanInsert = true;
                Nascimento.CanUpdate = true;
                Nascimento.RowCount = 1;
                Nascimento.ColCount = 5;
                Nascimento.RowCountSmall = 1;
                Nascimento.ColCountSmall = 5;
                Nascimento.IsHidden = false;
                Nascimento.IsHiddenSmall = false;
                Nascimento.AdditionalTitle = "";
                Nascimento.Location = 4;
                Nascimento.EditorCID = new Guid("00292032-E4A9-4A74-8B31-BF42D90A137A");
                Nascimento.FormImplace = true;
                Nascimento.Operator = XOperator.EqualTo;
                Nascimento.JustifyHeight = false;
                Nascimento.AllowEmpty = true;
                Nascimento.FontColor = "#000000";
                Nascimento.FontStyle = XFontStyle.Normal;
                Nascimento.ShowFooter = false;
                Nascimento.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nascimento.Scale = 0;
                Nascimento.Length = 0;
                Nascimento.SearchAction = XSearchAction.Default;
                Nascimento.TypeID = XDate.CID;
                Nascimento.AdditionalFieldsID = new Guid[] {  };
                Nascimento.AdditionalDataFieldsID = new Guid[] {  };
                Nascimento.TargetFilterFieldID = new Guid[] {  };
                Nascimento.SourceFilterFieldID = new Guid[] {  };
                Nascimento.TargetDisplayFieldID = new Guid[] {  };
                Nascimento.SourceDisplayFieldID = new Guid[] {  };
                Nascimento.AutoLoad = false;
                Nascimento.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nascimento.FilterInative = true;
                Nascimento.IsAnswer = false;
                Nascimento.AllowMultiSelect = false;
                AddItem(ApenasSemem);
                ApenasSemem.CanInsert = true;
                ApenasSemem.CanUpdate = true;
                ApenasSemem.RowCount = 1;
                ApenasSemem.ColCount = 4;
                ApenasSemem.RowCountSmall = 1;
                ApenasSemem.ColCountSmall = 4;
                ApenasSemem.IsHidden = false;
                ApenasSemem.IsHiddenSmall = false;
                ApenasSemem.AdditionalTitle = "";
                ApenasSemem.Location = 5;
                ApenasSemem.EditorCID = new Guid("8165BCEE-65D3-4BDA-80AF-B4EF0B1590F0");
                ApenasSemem.FormImplace = true;
                ApenasSemem.Operator = XOperator.EqualTo;
                ApenasSemem.JustifyHeight = false;
                ApenasSemem.AllowEmpty = true;
                ApenasSemem.FontColor = "#000000";
                ApenasSemem.FontStyle = XFontStyle.Normal;
                ApenasSemem.ShowFooter = false;
                ApenasSemem.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                ApenasSemem.Scale = 0;
                ApenasSemem.Length = 0;
                ApenasSemem.SearchAction = XSearchAction.Default;
                ApenasSemem.TypeID = XBoolean.CID;
                ApenasSemem.AdditionalFieldsID = new Guid[] {  };
                ApenasSemem.AdditionalDataFieldsID = new Guid[] {  };
                ApenasSemem.TargetFilterFieldID = new Guid[] {  };
                ApenasSemem.SourceFilterFieldID = new Guid[] {  };
                ApenasSemem.TargetDisplayFieldID = new Guid[] {  };
                ApenasSemem.SourceDisplayFieldID = new Guid[] {  };
                ApenasSemem.AutoLoad = false;
                ApenasSemem.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                ApenasSemem.FilterInative = true;
                ApenasSemem.IsAnswer = false;
                ApenasSemem.AllowMultiSelect = false;
                AddItem(PCRxPaiID);
                PCRxPaiID.CanInsert = true;
                PCRxPaiID.CanUpdate = true;
                PCRxPaiID.RowCount = 1;
                PCRxPaiID.ColCount = 16;
                PCRxPaiID.RowCountSmall = 1;
                PCRxPaiID.ColCountSmall = 16;
                PCRxPaiID.IsHidden = false;
                PCRxPaiID.IsHiddenSmall = false;
                PCRxPaiID.AdditionalTitle = "";
                PCRxPaiID.Location = 6;
                PCRxPaiID.EditorCID = new Guid("66290387-F0AD-4746-A1F7-B0D8D4C5C2EE");
                PCRxPaiID.FormImplace = true;
                PCRxPaiID.Operator = XOperator.EqualTo;
                PCRxPaiID.JustifyHeight = false;
                PCRxPaiID.AllowEmpty = true;
                PCRxPaiID.FontColor = "#000000";
                PCRxPaiID.FontStyle = XFontStyle.Normal;
                PCRxPaiID.ShowFooter = false;
                PCRxPaiID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxPaiID.Scale = 0;
                PCRxPaiID.Length = 0;
                PCRxPaiID.SearchAction = XSearchAction.Default;
                PCRxPaiID.TypeID = XGuid.CID;
                PCRxPaiID.AdditionalFieldsID = new Guid[] {  };
                PCRxPaiID.AdditionalDataFieldsID = new Guid[] {  };
                PCRxPaiID.TargetFilterFieldID = new Guid[] {  };
                PCRxPaiID.SourceFilterFieldID = new Guid[] {  };
                PCRxPaiID.TargetDisplayFieldID = new Guid[] { new Guid("1F145A04-BEFF-4FCE-94D3-7D28CF206E66") };
                PCRxPaiID.SourceDisplayFieldID = new Guid[] { new Guid("E158F4A4-6458-4E5D-BAAB-43E842ADF61D") };
                PCRxPaiID.DataSourceID = global::Projecao.Core.PCR.ReadOnly.TouroSVC.gCID;
                PCRxPaiID.AutoLoad = false;
                PCRxPaiID.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxPaiID.FilterInative = true;
                PCRxPaiID.IsAnswer = false;
                PCRxPaiID.AllowMultiSelect = false;
                AddItem(PCRxMaeID);
                PCRxMaeID.CanInsert = true;
                PCRxMaeID.CanUpdate = true;
                PCRxMaeID.RowCount = 1;
                PCRxMaeID.ColCount = 16;
                PCRxMaeID.RowCountSmall = 1;
                PCRxMaeID.ColCountSmall = 16;
                PCRxMaeID.IsHidden = false;
                PCRxMaeID.IsHiddenSmall = false;
                PCRxMaeID.AdditionalTitle = "";
                PCRxMaeID.Location = 7;
                PCRxMaeID.EditorCID = new Guid("66290387-F0AD-4746-A1F7-B0D8D4C5C2EE");
                PCRxMaeID.FormImplace = true;
                PCRxMaeID.Operator = XOperator.EqualTo;
                PCRxMaeID.JustifyHeight = false;
                PCRxMaeID.AllowEmpty = true;
                PCRxMaeID.FontColor = "#000000";
                PCRxMaeID.FontStyle = XFontStyle.Normal;
                PCRxMaeID.ShowFooter = false;
                PCRxMaeID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxMaeID.Scale = 0;
                PCRxMaeID.Length = 0;
                PCRxMaeID.SearchAction = XSearchAction.Default;
                PCRxMaeID.TypeID = XGuid.CID;
                PCRxMaeID.AdditionalFieldsID = new Guid[] {  };
                PCRxMaeID.AdditionalDataFieldsID = new Guid[] {  };
                PCRxMaeID.TargetFilterFieldID = new Guid[] {  };
                PCRxMaeID.SourceFilterFieldID = new Guid[] {  };
                PCRxMaeID.TargetDisplayFieldID = new Guid[] { new Guid("ADBCDDC1-0C55-49C3-9424-ECC8DCCE7035") };
                PCRxMaeID.SourceDisplayFieldID = new Guid[] { new Guid("028B79B3-F736-43A4-B770-099CE4B9AA2D") };
                PCRxMaeID.DataSourceID = global::Projecao.Core.PCR.ReadOnly.VacasSVC.gCID;
                PCRxMaeID.AutoLoad = false;
                PCRxMaeID.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                PCRxMaeID.FilterInative = true;
                PCRxMaeID.IsAnswer = false;
                PCRxMaeID.AllowMultiSelect = false;
                AddItem(Certificado);
                Certificado.CanInsert = true;
                Certificado.CanUpdate = true;
                Certificado.RowCount = 9;
                Certificado.ColCount = 32;
                Certificado.RowCountSmall = 9;
                Certificado.ColCountSmall = 32;
                Certificado.IsHidden = false;
                Certificado.IsHiddenSmall = false;
                Certificado.AdditionalTitle = "";
                Certificado.Location = 8;
                Certificado.EditorCID = new Guid("BE361BF6-973B-44F4-AFB4-81CED3E1F848");
                Certificado.FormImplace = true;
                Certificado.Operator = XOperator.EqualTo;
                Certificado.JustifyHeight = false;
                Certificado.AllowEmpty = true;
                Certificado.FontColor = "#000000";
                Certificado.FontStyle = XFontStyle.Normal;
                Certificado.ShowFooter = false;
                Certificado.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Certificado.Scale = 0;
                Certificado.Length = 0;
                Certificado.SearchAction = XSearchAction.Default;
                Certificado.TypeID = XBinary.CID;
                Certificado.AdditionalFieldsID = new Guid[] {  };
                Certificado.AdditionalDataFieldsID = new Guid[] {  };
                Certificado.TargetFilterFieldID = new Guid[] {  };
                Certificado.SourceFilterFieldID = new Guid[] {  };
                Certificado.TargetDisplayFieldID = new Guid[] {  };
                Certificado.SourceDisplayFieldID = new Guid[] {  };
                Certificado.AutoLoad = false;
                Certificado.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Certificado.FilterInative = true;
                Certificado.IsAnswer = false;
                Certificado.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("AF8263AB-C8AC-4B6C-B1AD-AEDFD8A31C51"), "Nome", "Nome", XString.CID, 1, 13, false, gCID, null, new Guid("5F529BCC-2FB9-44CF-BC6F-27BD7864B476")); // String;
            public XFRMField Numero = new XFRMField(new Guid("A98089C5-8A85-4B70-84AC-2950DAA607F5"), "Numero", "Brinco", XString.CID, 1, 4, true, gCID, null, new Guid("014E1679-06FB-4530-A2BF-1AA24CB3E923")); // String;
            public XFRMField PCRxRacaID = new XFRMField(new Guid("EC0EB253-565C-41C0-8A4D-EC49087125BC"), "PCRxRacaID", "Raça", XInt16.CID, 1, 6, false, gCID, null, new Guid("D1E08ADA-2D59-4A47-95AB-7DA72B0B53B6")); // Int16;
            public XFRMField Nascimento = new XFRMField(new Guid("E20632E2-C4FD-449B-9333-45FAF3FC0D91"), "Nascimento", "Nascimento", XDateTime.CID, 1, 5, false, gCID, null, new Guid("AE3785D0-CA6C-431B-A010-665C898CD1CF")); // DateTime;
            public XFRMField ApenasSemem = new XFRMField(new Guid("1EA8F8CE-CC40-423D-943F-0BD2281BF9FF"), "ApenasSemem", "Apenas Sêmem", XBoolean.CID, 1, 4, false, gCID, null, new Guid("E4DD13B2-B0F5-42F2-9161-DE0B511F2848")); // Boolean;
            public XFRMField PCRxPaiID = new XFRMField(new Guid("174E449D-51C4-4465-9692-709C2B38F559"), "PCRxPaiID", "Nome da Pai", XGuid.CID, 1, 16, false, gCID, null, new Guid("9F451D61-CA1A-4010-B491-8795D256500D")); // Guid;
            public XFRMField PCRxMaeID = new XFRMField(new Guid("5A295C18-8E7C-436E-BA25-AFE58AFE0C0B"), "PCRxMaeID", "Nome do Mãe", XGuid.CID, 1, 16, false, gCID, null, new Guid("1C1178A6-756A-4528-B530-66A26BCB9037")); // Guid;
            public XFRMField Certificado = new XFRMField(new Guid("07C17543-5C74-4285-92C3-386D227B728B"), "Certificado", "Certificado", XBinary.CID, 9, 32, true, gCID, null, new Guid("37173AA9-C56A-42DA-89F6-F922FE46305F")); // Byte[];
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("AF8263AB-C8AC-4B6C-B1AD-AEDFD8A31C51"), "Nome", "Nome", typeof(String));
                public static XFieldInfo Numero = new XFieldInfo(new Guid("A98089C5-8A85-4B70-84AC-2950DAA607F5"), "Numero", "Brinco", typeof(String));
                public static XFieldInfo PCRxRacaID = new XFieldInfo(new Guid("EC0EB253-565C-41C0-8A4D-EC49087125BC"), "PCRxRacaID", "Raça", typeof(Int16));
                public static XFieldInfo Nascimento = new XFieldInfo(new Guid("E20632E2-C4FD-449B-9333-45FAF3FC0D91"), "Nascimento", "Nascimento", typeof(DateTime));
                public static XFieldInfo ApenasSemem = new XFieldInfo(new Guid("1EA8F8CE-CC40-423D-943F-0BD2281BF9FF"), "ApenasSemem", "Apenas Sêmem", typeof(Boolean));
                public static XFieldInfo PCRxPaiID = new XFieldInfo(new Guid("174E449D-51C4-4465-9692-709C2B38F559"), "PCRxPaiID", "Nome da Pai", typeof(Guid));
                public static XFieldInfo PCRxMaeID = new XFieldInfo(new Guid("5A295C18-8E7C-436E-BA25-AFE58AFE0C0B"), "PCRxMaeID", "Nome do Mãe", typeof(Guid));
                public static XFieldInfo Certificado = new XFieldInfo(new Guid("07C17543-5C74-4285-92C3-386D227B728B"), "Certificado", "Certificado", typeof(Byte[]));
            }
        }

        #endregion ReprodutorFRM

        public const String sCID = "A4ADEFD6-11B5-440C-8945-2D303FB9EBA2";
        public static Guid gCID = new Guid(sCID);
        public static readonly xReprodutorACT ReprodutorACT;

        static ReprodutorSAM()
        {
            ReprodutorACT = new xReprodutorACT(new Guid("A61165D0-DAEC-49F1-88A3-E969B229A163"), "ReprodutorACT", "", new Guid("D82B4BAA-6585-435F-A080-358456F6D1CD"), new Guid("00000000-0000-0000-0000-000000000000"));
        }

        public ReprodutorSAM()
        {
            ID = new Guid("A4ADEFD6-11B5-440C-8945-2D303FB9EBA2");
            Name = "Reprodutor";
            Title = "Cadastro de Reprodutores";
            AppTypeID = XAppType.SAM;
            Userlevel = XUserlevel.UserCloud;
            UseTypeID = new Int16[] { 1, 2 };
            Rights = new Int16[] { 3, 6, 4, 1, 5, 2 }; 
            IsDisabled = false;
            StartAction = XStartAction.DataGrid;
            ClientScript = "Projecao.Core.PCR.js";
            Size = new Size(345, 150);
            DataSourceID = global::Projecao.Core.PCR.Reprodutor.ReprodutorSVC.gCID;
            AppModulesID = new [] { (Int16)19 };
            AppGroupsID = new [] { (Int16)2 };
            ReprodutorACT.FormID = new Guid("D82B4BAA-6585-435F-A080-358456F6D1CD"); 
            ReprodutorACT.Type = XActivityType.UserActivity;
            AddItem(ReprodutorACT);
        }
    }
}