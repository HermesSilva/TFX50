//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.ISE.DB;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Reprodutor
{
    [XRegister(typeof(ReprodutorSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Reprodutor\Reprodutor.dssvc")]
    public class ReprodutorSVC : XSVCModel
    {
        #region ReprodutorFilterFRM

        [XRegister(typeof(ReprodutorFilterFRM), sCID)]
        public class ReprodutorFilterFRM : XFRMModel
        {
            public const String sCID = "ECA78A58-DD71-4F1D-8222-68A93643BDC6";
            static ReprodutorFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ReprodutorFilterFRM()
            {
                ID = gCID;
                Name = "ReprodutorFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Numero);
                Numero.ForceRW = true;
                Numero.CanInsert = true;
                Numero.CanUpdate = true;
                Numero.RowCount = 1;
                Numero.ColCount = 6;
                Numero.RowCountSmall = 1;
                Numero.ColCountSmall = 6;
                Numero.IsHidden = false;
                Numero.IsHiddenSmall = false;
                Numero.AdditionalTitle = "";
                Numero.Location = 1;
                Numero.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Numero.FormImplace = true;
                Numero.Operator = XOperator.EqualTo;
                Numero.JustifyHeight = false;
                Numero.AllowEmpty = true;
                Numero.FontColor = "#000000";
                Numero.FontStyle = XFontStyle.Normal;
                Numero.ShowFooter = false;
                Numero.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.Scale = 0;
                Numero.Length = 36;
                Numero.SearchAction = XSearchAction.Default;
                Numero.TypeID = XString.CID;
                Numero.AdditionalFieldsID = new Guid[] {  };
                Numero.AdditionalDataFieldsID = new Guid[] {  };
                Numero.TargetFilterFieldID = new Guid[] {  };
                Numero.SourceFilterFieldID = new Guid[] {  };
                Numero.TargetDisplayFieldID = new Guid[] {  };
                Numero.SourceDisplayFieldID = new Guid[] {  };
                Numero.AutoLoad = false;
                Numero.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Numero.FilterInative = true;
                Numero.IsAnswer = false;
                Numero.AllowMultiSelect = false;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 20;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 20;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 2;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 60;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
                AddItem(ApenasSemem);
                ApenasSemem.ForceRW = true;
                ApenasSemem.CanInsert = true;
                ApenasSemem.CanUpdate = true;
                ApenasSemem.RowCount = 1;
                ApenasSemem.ColCount = 6;
                ApenasSemem.RowCountSmall = 1;
                ApenasSemem.ColCountSmall = 6;
                ApenasSemem.IsHidden = false;
                ApenasSemem.IsHiddenSmall = false;
                ApenasSemem.AdditionalTitle = "";
                ApenasSemem.Location = 3;
                ApenasSemem.EditorCID = new Guid("8165BCEE-65D3-4BDA-80AF-B4EF0B1590F0");
                ApenasSemem.FormImplace = true;
                ApenasSemem.Operator = XOperator.EqualTo;
                ApenasSemem.JustifyHeight = false;
                ApenasSemem.AllowEmpty = true;
                ApenasSemem.FontColor = "#000000";
                ApenasSemem.FontStyle = XFontStyle.Normal;
                ApenasSemem.ShowFooter = false;
                ApenasSemem.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                ApenasSemem.Scale = 0;
                ApenasSemem.Length = 0;
                ApenasSemem.SearchAction = XSearchAction.Default;
                ApenasSemem.TypeID = XBoolean.CID;
                ApenasSemem.AdditionalFieldsID = new Guid[] {  };
                ApenasSemem.AdditionalDataFieldsID = new Guid[] {  };
                ApenasSemem.TargetFilterFieldID = new Guid[] {  };
                ApenasSemem.SourceFilterFieldID = new Guid[] {  };
                ApenasSemem.TargetDisplayFieldID = new Guid[] {  };
                ApenasSemem.SourceDisplayFieldID = new Guid[] {  };
                ApenasSemem.AutoLoad = false;
                ApenasSemem.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                ApenasSemem.FilterInative = true;
                ApenasSemem.IsAnswer = false;
                ApenasSemem.AllowMultiSelect = false;
            }
            public XFRMField Numero = new XFRMField(new Guid("B653AD72-C0F5-4A52-8711-11D4D917823F"), "Numero", "Número do Brinco", XString.CID, 1, 6, true, gCID, null, new Guid("014E1679-06FB-4530-A2BF-1AA24CB3E923")); // String;
            public XFRMField Nome = new XFRMField(new Guid("37A1A99E-D764-4149-9BE0-B7BE2653C960"), "Nome", "Pesquisa Livre", XString.CID, 1, 20, false, gCID, null, new Guid("5F529BCC-2FB9-44CF-BC6F-27BD7864B476")); // String;
            public XFRMField ApenasSemem = new XFRMField(new Guid("0CC47C9F-0168-4535-8FD0-5358706249B1"), "ApenasSemem", "Apenas Sêmem", XBoolean.CID, 1, 6, false, gCID, null, new Guid("E4DD13B2-B0F5-42F2-9161-DE0B511F2848")); // Boolean;
            public static class Fields
            {
                public static XFieldInfo Numero = new XFieldInfo(new Guid("B653AD72-C0F5-4A52-8711-11D4D917823F"), "Numero", "Número do Brinco", typeof(String));
                public static XFieldInfo Nome = new XFieldInfo(new Guid("37A1A99E-D764-4149-9BE0-B7BE2653C960"), "Nome", "Pesquisa Livre", typeof(String));
                public static XFieldInfo ApenasSemem = new XFieldInfo(new Guid("0CC47C9F-0168-4535-8FD0-5358706249B1"), "ApenasSemem", "Apenas Sêmem", typeof(Boolean));
            }
        }

        #endregion ReprodutorFilterFRM

        public const String sCID = "BC85446A-15EE-473A-B90B-C22FC97443FA";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxDocumento_PCRxDocumentoID_PCRxReprodutor_PCRxReprodutorID; // PCRxDocumento.PCRxDocumentoID --> PCRxReprodutor.PCRxReprodutorID
        public static XSVCReference ISExItemCategoria_ISExItemID_ISExItem_ISExItemID; // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
        public static XSVCReference ISExCodigo_ISExItemID_ISExItem_ISExItemID; // ISExCodigo.ISExItemID --> ISExItem.ISExItemID
        public static XSVCReference ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID; // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
        public static XSVCReference PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_ISExItem_ISExItemID; // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> ISExItem.ISExItemID
        public static XSVCReference PCRxAnimal_PCRxAnimalID_ISExItem_ISExItemID; // PCRxAnimal.PCRxAnimalID --> ISExItem.ISExItemID
        public static XSVCReference ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID; // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
        public static XSVCReference PCRxReprodutor_PCRxReprodutorID_ISExItem_ISExItemID; // PCRxReprodutor.PCRxReprodutorID --> ISExItem.ISExItemID
        public static XSVCReference PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID; // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID

        #region xPCRxDocumento 
        public class xPCRxDocumento : XSVCTable
        {

            public static Guid gCID => new Guid("06C73174-E7BC-4817-8EEA-36F74B53B9CF");

            public xPCRxDocumento()
            {
                Name = "PCRxDocumento";
                Alias = "PCRxDocumento";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxDocumento.gCID;

                Items.Add(PCRxDocumentoID, PCRxDocumentoID.ID);
                PCRxDocumentoID.Owner = this;
                PCRxDocumentoID.OwnerID = ID;
                PCRxDocumentoID.TableName = Name;
                Items.Add(Certificado, Certificado.ID);
                Certificado.Owner = this;
                Certificado.OwnerID = ID;
                Certificado.TableName = Name;
                Certificado.Alias = "Certificado";
            }

            public static XORMPKField PCRxDocumentoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxDocumento.PCRxDocumentoID, new Guid("98A00839-DA9B-479A-B8D4-1EB81E868D77"), "PCRxDocumentoID", "Documento");
            public static XORMField Certificado = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxDocumento.Certificado, new Guid("37173AA9-C56A-42DA-89F6-F922FE46305F"), "Certificado", "Certificado");
        }
        #endregion xPCRxDocumento 


        #region xPCRxReprodutor 
        public class xPCRxReprodutor : XSVCTable
        {

            public static Guid gCID => new Guid("1B413742-1D34-4A8C-A8D9-F7EAD108FAE4");

            public xPCRxReprodutor()
            {
                Name = "PCRxReprodutor";
                Alias = "PCRxReprodutor";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.gCID;

                Items.Add(PCRxReprodutorID, PCRxReprodutorID.ID);
                PCRxReprodutorID.Owner = this;
                PCRxReprodutorID.OwnerID = ID;
                PCRxReprodutorID.TableName = Name;
                Items.Add(ApenasSemem, ApenasSemem.ID);
                ApenasSemem.Owner = this;
                ApenasSemem.OwnerID = ID;
                ApenasSemem.TableName = Name;
                ApenasSemem.Alias = "ApenasSemem";
            }

            public static XORMFaceField PCRxReprodutorID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.PCRxReprodutorID, new Guid("FA48E634-2281-4D64-8547-5A74DCDDAC18"), "PCRxReprodutorID", "Reprodutor");
            public static XORMField ApenasSemem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxReprodutor.ApenasSemem, new Guid("E4DD13B2-B0F5-42F2-9161-DE0B511F2848"), "ApenasSemem", "Apenas Sêmem");
        }
        #endregion xPCRxReprodutor 


        #region xPCRxAnimal 
        public class xPCRxAnimal : XSVCTable
        {

            public static Guid gCID => new Guid("1C1DF52A-120E-4B36-9466-12437AC08A9C");

            public xPCRxAnimal()
            {
                Name = "PCRxAnimal";
                Alias = "PCRxAnimal";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.gCID;

                Items.Add(PCRxAnimalID, PCRxAnimalID.ID);
                PCRxAnimalID.Owner = this;
                PCRxAnimalID.OwnerID = ID;
                PCRxAnimalID.TableName = Name;
                Items.Add(ERPxGeneroID, ERPxGeneroID.ID);
                ERPxGeneroID.Owner = this;
                ERPxGeneroID.OwnerID = ID;
                ERPxGeneroID.TableName = Name;
                ERPxGeneroID.Alias = "ERPxGeneroID";
                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                PCRxRacaID.Alias = "PCRxRacaID";
                Items.Add(PCRxAnimalFaseID, PCRxAnimalFaseID.ID);
                PCRxAnimalFaseID.Owner = this;
                PCRxAnimalFaseID.OwnerID = ID;
                PCRxAnimalFaseID.TableName = Name;
                PCRxAnimalFaseID.Alias = "PCRxAnimalFaseID";
                Items.Add(Nascimento, Nascimento.ID);
                Nascimento.Owner = this;
                Nascimento.OwnerID = ID;
                Nascimento.TableName = Name;
                Nascimento.Alias = "Nascimento";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                Items.Add(PCRxAnimalEstadoID, PCRxAnimalEstadoID.ID);
                PCRxAnimalEstadoID.Owner = this;
                PCRxAnimalEstadoID.OwnerID = ID;
                PCRxAnimalEstadoID.TableName = Name;
                PCRxAnimalEstadoID.Alias = "PCRxAnimalEstadoID";
                Items.Add(NumeroPartos, NumeroPartos.ID);
                NumeroPartos.Owner = this;
                NumeroPartos.OwnerID = ID;
                NumeroPartos.TableName = Name;
                NumeroPartos.Alias = "NumeroPartos";
                Items.Add(PCRxEventoReprodutivoID, PCRxEventoReprodutivoID.ID);
                PCRxEventoReprodutivoID.Owner = this;
                PCRxEventoReprodutivoID.OwnerID = ID;
                PCRxEventoReprodutivoID.TableName = Name;
                PCRxEventoReprodutivoID.Alias = "PCRxEventoReprodutivoID";
                Items.Add(PCRxAnimalLoteID, PCRxAnimalLoteID.ID);
                PCRxAnimalLoteID.Owner = this;
                PCRxAnimalLoteID.OwnerID = ID;
                PCRxAnimalLoteID.TableName = Name;
                PCRxAnimalLoteID.Alias = "PCRxAnimalLoteID";
                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                PCRxIATFFaseID.Alias = "PCRxIATFFaseID";
            }

            public static XORMFaceField PCRxAnimalID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalID, new Guid("43AB91B5-B3A6-4517-AA67-BAB3F6EC1357"), "PCRxAnimalID", "Animal");
            public static XORMFKField ERPxGeneroID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.ERPxGeneroID, new Guid("0F3AB909-8A54-461E-B42F-E11C08CA714C"), "ERPxGeneroID", "Sexo");
            public static XORMFKField PCRxRacaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxRacaID, new Guid("D1E08ADA-2D59-4A47-95AB-7DA72B0B53B6"), "PCRxRacaID", "Raça");
            public static XORMFKField PCRxAnimalFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalFaseID, new Guid("C80A5B0C-0538-4237-A51F-34299CB365BA"), "PCRxAnimalFaseID", "Fase do Animal");
            public static XORMDateField Nascimento = new XORMDateField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.Nascimento, new Guid("AE3785D0-CA6C-431B-A010-665C898CD1CF"), "Nascimento", "Nascimento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.SYSxEmpresaID, new Guid("9D9EFE1A-9281-4242-85F5-5CBA35CEAA4B"), "SYSxEmpresaID", "Empresa");
            public static XORMFKField PCRxAnimalEstadoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalEstadoID, new Guid("61ED917A-2C50-4859-B646-4D812064D48D"), "PCRxAnimalEstadoID", "Estado");
            public static XORMField NumeroPartos = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.NumeroPartos, new Guid("B77EB75C-B348-469F-9D36-184D423FFDE8"), "NumeroPartos", "Número de Partos");
            public static XORMFKField PCRxEventoReprodutivoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxEventoReprodutivoID, new Guid("403945CA-92A5-4DE5-92CA-DFA201C98DE4"), "PCRxEventoReprodutivoID", "Eventos de Animais");
            public static XORMFKField PCRxAnimalLoteID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxAnimalLoteID, new Guid("1EE12F77-DBA6-4AC7-AF25-DDE09FB3A7D7"), "PCRxAnimalLoteID", "Lote de Animais");
            public static XORMFKField PCRxIATFFaseID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimal.PCRxIATFFaseID, new Guid("68774851-76A8-4629-B060-69062A9484A9"), "PCRxIATFFaseID", "Fases da IATF");
        }
        #endregion xPCRxAnimal 


        #region xPCRxRaca 
        public class xPCRxRaca : XSVCTable
        {

            public static Guid gCID => new Guid("2134D0A4-8F5A-459A-B918-8BFF365CC6CE");

            public xPCRxRaca()
            {
                Name = "PCRxRaca";
                Alias = "PCRxRaca";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.gCID;

                Items.Add(PCRxRacaID, PCRxRacaID.ID);
                PCRxRacaID.Owner = this;
                PCRxRacaID.OwnerID = ID;
                PCRxRacaID.TableName = Name;
                Items.Add(Raca, Raca.ID);
                Raca.Owner = this;
                Raca.OwnerID = ID;
                Raca.TableName = Name;
                Raca.Alias = "Raca";
            }

            public static XORMPKField PCRxRacaID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.PCRxRacaID, new Guid("0D4ED4AC-6A2F-4615-9029-4B66F3507A2B"), "PCRxRacaID", "Raça");
            public static XORMFaceField Raca = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxRaca.Raca, new Guid("42D1D6E3-50C0-4DB5-80C5-B4D717817E8F"), "Raca", "Raça");
        }
        #endregion xPCRxRaca 


        #region xPCRxAnimalFiliacao 
        public class xPCRxAnimalFiliacao : XSVCTable
        {

            public static Guid gCID => new Guid("3D283977-9CCB-48B7-B938-7A2FB8D3EDF7");

            public xPCRxAnimalFiliacao()
            {
                Name = "PCRxAnimalFiliacao";
                Alias = "PCRxAnimalFiliacao";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.gCID;

                Items.Add(PCRxAnimalFiliacaoID, PCRxAnimalFiliacaoID.ID);
                PCRxAnimalFiliacaoID.Owner = this;
                PCRxAnimalFiliacaoID.OwnerID = ID;
                PCRxAnimalFiliacaoID.TableName = Name;
                Items.Add(PCRxMaeID, PCRxMaeID.ID);
                PCRxMaeID.Owner = this;
                PCRxMaeID.OwnerID = ID;
                PCRxMaeID.TableName = Name;
                PCRxMaeID.Alias = "PCRxMaeID";
                Items.Add(PCRxPaiID, PCRxPaiID.ID);
                PCRxPaiID.Owner = this;
                PCRxPaiID.OwnerID = ID;
                PCRxPaiID.TableName = Name;
                PCRxPaiID.Alias = "PCRxPaiID";
            }

            public static XORMPKField PCRxAnimalFiliacaoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxAnimalFiliacaoID, new Guid("D9B2F779-136A-4FDD-83C8-5FD5716A0CE7"), "PCRxAnimalFiliacaoID", "Filiação");
            public static XORMFKField PCRxMaeID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxMaeID, new Guid("1C1178A6-756A-4528-B530-66A26BCB9037"), "PCRxMaeID", "Nome do Mãe");
            public static XORMFKField PCRxPaiID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxAnimalFiliacao.PCRxPaiID, new Guid("9F451D61-CA1A-4010-B491-8795D256500D"), "PCRxPaiID", "Nome da Pai");
        }
        #endregion xPCRxAnimalFiliacao 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("7C6ECBAB-F06A-477A-9CD1-32470973C5B9");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("E332DC27-39D6-4328-AA70-41159F286C6D"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("73B30B3C-0D1B-4616-9022-9D9E30469972"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("BD614B05-330B-484D-89A2-016A53B4BE78"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("155B20B8-4971-4FBE-98A5-2872AD8E837A"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        #region xISExItemMae 
        public class xISExItemMae : XSVCTable
        {

            public static Guid gCID => new Guid("A19DA57F-11EC-49C7-98D1-7652172884A2");

            public xISExItemMae()
            {
                Name = "ISExItem";
                Alias = "ISExItemMae";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeMae";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("B3CE5092-2163-4F27-BC7B-431CBE578E74"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("ADBCDDC1-0C55-49C3-9424-ECC8DCCE7035"), "Nome", "Nome da Mãe");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("80A11A7C-60B0-448F-9B1D-1EAB4B0C192E"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("6A0F8238-135F-46B9-93A3-C96360B75BB8"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("A335AF51-B6BD-42EC-AAFD-41436DC239AF"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("516AA884-C6C3-42D7-8E9C-283C2637FF6D"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("C07044F8-8C75-4238-846A-D48980C3A8B8"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("42722CB5-BDA4-4190-AAD3-84A3D1B9E894"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("459FCBA9-F3BE-43E5-81E4-1F13F1BFCC08"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemMae 


        #region xISExCodigo 
        public class xISExCodigo : XSVCTable
        {

            public static Guid gCID => new Guid("AE0E81C1-9EF3-42E2-B3B3-F6C138BB0267");

            public xISExCodigo()
            {
                Name = "ISExCodigo";
                Alias = "ISExCodigo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.gCID;

                Items.Add(ISExCodigoID, ISExCodigoID.ID);
                ISExCodigoID.Owner = this;
                ISExCodigoID.OwnerID = ID;
                ISExCodigoID.TableName = Name;
                ISExCodigoID.Alias = "ISExCodigoID";
                Items.Add(ISExCodigoTipoID, ISExCodigoTipoID.ID);
                ISExCodigoTipoID.Owner = this;
                ISExCodigoTipoID.OwnerID = ID;
                ISExCodigoTipoID.TableName = Name;
                ISExCodigoTipoID.Alias = "ISExCodigoTipoID";
                Items.Add(Numero, Numero.ID);
                Numero.Owner = this;
                Numero.OwnerID = ID;
                Numero.TableName = Name;
                Numero.Alias = "Numero";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(NumeroCurto, NumeroCurto.ID);
                NumeroCurto.Owner = this;
                NumeroCurto.OwnerID = ID;
                NumeroCurto.TableName = Name;
                NumeroCurto.Alias = "NumeroCurto";
            }

            public static XORMPKField ISExCodigoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoID, new Guid("B53FC176-DD5C-41CF-955F-6C22912B4C85"), "ISExCodigoID", "Tipo de Código");
            public static XORMFKField ISExCodigoTipoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExCodigoTipoID, new Guid("6878AB12-B38D-4EFB-A1C0-7D86677786CC"), "ISExCodigoTipoID", "Tipo de Código");
            public static XORMField Numero = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.Numero, new Guid("014E1679-06FB-4530-A2BF-1AA24CB3E923"), "Numero", "Número");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.ISExItemID, new Guid("8EEB97C9-B9B1-453E-835E-B708BA89FD58"), "ISExItemID", "Item");
            public static XORMField NumeroCurto = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExCodigo.NumeroCurto, new Guid("E7BF6E67-B3D9-477B-9BC8-0FE5F199B1ED"), "NumeroCurto", "Número Curto");
        }
        #endregion xISExCodigo 


        #region xISExItemPai 
        public class xISExItemPai : XSVCTable
        {

            public static Guid gCID => new Guid("F92F467B-A9EE-463B-80EB-3CD920ADD38B");

            public xISExItemPai()
            {
                Name = "ISExItem";
                Alias = "ISExItemPai";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomePai";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("83889B08-4B52-4CD5-A535-0ADD78FDE640"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("1F145A04-BEFF-4FCE-94D3-7D28CF206E66"), "Nome", "Nome do Pai");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("C508179C-536A-46B3-BFE0-5095A8E908C4"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("A14FE1CA-46DE-405E-AE9A-308CD2E57369"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("098CE357-D23C-4218-8A65-D36C8D744C42"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("EEA090FF-142F-445E-8B1C-AC45CD0A13CE"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("F8D42BEE-1021-4CEA-AB55-403A356192F4"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("6E9F4F97-A020-4DE7-B173-00C9B72C7586"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("BF85E11E-7150-45F3-BD24-A559D08CAB72"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItemPai 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("FFBDF6DA-BE39-4159-9DB6-859E585BEF9C");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                ISExLinhaID.Alias = "ISExLinhaID";
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                ISExTabelaID.Alias = "ISExTabelaID";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                ISExFabricanteID.Alias = "ISExFabricanteID";
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                ISExMarcaID.Alias = "ISExMarcaID";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                ISExGrupoID.Alias = "ISExGrupoID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("92D3D39A-BFC7-4074-9813-CA6FBF9A8644"), "ISExItemID", "Item de Estoque");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("5F529BCC-2FB9-44CF-BC6F-27BD7864B476"), "Nome", "Nome");
            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("1ED0300B-E829-4090-A463-0880B829C985"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("718EB832-D1AB-49BE-9B32-BC16EB0FE385"), "ISExTabelaID", "Tabela");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("2CE74768-BF92-4F47-9045-42A5C20AAEE0"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("3A3FEAF9-BDF5-46A3-B1D6-64150E9D3376"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("845719D2-C567-4C5B-A253-1BFB2EED9031"), "ISExGrupoID", "Grupo");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("CDAA5ED8-ABB3-436E-AD00-0ABC35B1C2B2"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("DC20A908-24DC-41BF-AF2D-E400D6F77D70"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        public xISExCodigo ISExCodigo;
        public xISExItem ISExItem;
        public xISExItemCategoria ISExItemCategoria;
        public xISExItemMae ISExItemMae;
        public xISExItemPai ISExItemPai;
        public xPCRxAnimal PCRxAnimal;
        public xPCRxAnimalFiliacao PCRxAnimalFiliacao;
        public xPCRxDocumento PCRxDocumento;
        public xPCRxRaca PCRxRaca;
        public xPCRxReprodutor PCRxReprodutor;

        public ReprodutorSVC()
        {
            TupleType = typeof(ReprodutorSVC.XTuple);
            DataSetType = typeof(ReprodutorSVC.XDataSet);
            ServiceRuleCID = new Guid("4F017DD9-786B-4FED-8ED2-BCDC0B2128A6");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("BC85446A-15EE-473A-B90B-C22FC97443FA");
            Name = "Reprodutor";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("ECA78A58-DD71-4F1D-8222-68A93643BDC6");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xISExItem.Nome.ID, xISExCodigo.Numero.ID, xPCRxRaca.Raca.ID, xPCRxReprodutor.ApenasSemem.ID, xPCRxAnimal.Nascimento.ID, xISExItemPai.Nome.ID, xISExItemMae.Nome.ID, xISExItem.SYSxEstadoID.ID };
            DataSetFields = new Guid[] { xPCRxReprodutor.ApenasSemem.ID, xPCRxAnimal.ERPxGeneroID.ID, xPCRxAnimal.PCRxRacaID.ID, xPCRxAnimal.PCRxAnimalFaseID.ID, xPCRxAnimal.Nascimento.ID, xPCRxAnimalFiliacao.PCRxPaiID.ID, xPCRxAnimalFiliacao.PCRxMaeID.ID, xISExItem.ISExItemID.ID, xISExItem.Nome.ID, xISExItemMae.Nome.ID, xISExItemPai.Nome.ID, xPCRxRaca.Raca.ID, xPCRxAnimal.PCRxAnimalEstadoID.ID, xPCRxAnimal.NumeroPartos.ID, xPCRxAnimal.PCRxEventoReprodutivoID.ID, xPCRxAnimal.PCRxAnimalLoteID.ID, xPCRxAnimal.PCRxIATFFaseID.ID, xPCRxDocumento.Certificado.ID, xISExCodigo.Numero.ID, xISExCodigo.ISExCodigoTipoID.ID, xISExCodigo.ISExCodigoID.ID, xISExCodigo.NumeroCurto.ID, xISExItem.ProdutoID.ID, xISExItem.SYSxEstadoID.ID, xISExItem.ISExGrupoID.ID, xISExItem.ISExMarcaID.ID, xISExItem.ISExFabricanteID.ID, xISExItem.ISExTabelaID.ID, xISExItem.ISExLinhaID.ID };
            PKField = xISExItem.ISExItemID.ID;
            ConfigTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            StateField = xISExItem.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("4F017DD9-786B-4FED-8ED2-BCDC0B2128A6");
            ISExCodigo = new xISExCodigo();
            ISExCodigo.IsReadOnly = false;
            AddTable(ISExCodigo);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = false;
            AddTable(ISExItem);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = true;
            AddTable(ISExItemCategoria);
            ISExItemMae = new xISExItemMae();
            ISExItemMae.IsReadOnly = true;
            AddTable(ISExItemMae);
            ISExItemPai = new xISExItemPai();
            ISExItemPai.IsReadOnly = true;
            AddTable(ISExItemPai);
            PCRxAnimal = new xPCRxAnimal();
            PCRxAnimal.IsReadOnly = false;
            AddTable(PCRxAnimal);
            PCRxAnimalFiliacao = new xPCRxAnimalFiliacao();
            PCRxAnimalFiliacao.IsReadOnly = false;
            AddTable(PCRxAnimalFiliacao);
            PCRxDocumento = new xPCRxDocumento();
            PCRxDocumento.IsReadOnly = false;
            AddTable(PCRxDocumento);
            PCRxRaca = new xPCRxRaca();
            PCRxRaca.IsReadOnly = true;
            AddTable(PCRxRaca);
            PCRxReprodutor = new xPCRxReprodutor();
            PCRxReprodutor.IsReadOnly = false;
            AddTable(PCRxReprodutor);
            MasterTableID = ISExItem.ID;
            PCRxDocumento_PCRxDocumentoID_PCRxReprodutor_PCRxReprodutorID = AddReference(new XSVCReference(new Guid("01542562-546C-442C-89C2-F376EAA65BEA"), "FK_01542562546C442C89C2F376EAA65BEA", ReprodutorSVC.xPCRxDocumento.gCID, xPCRxDocumento.PCRxDocumentoID.ID, ReprodutorSVC.xPCRxReprodutor.gCID, xPCRxReprodutor.PCRxReprodutorID.ID, XJoinType.Inner)); // PCRxDocumento.PCRxDocumentoID --> PCRxReprodutor.PCRxReprodutorID
            ISExItemCategoria_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("13F558FA-1EBA-40D1-9055-21BC35F23E08"), "FK_13F558FA1EBA40D1905521BC35F23E08", ReprodutorSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExItemID.ID, ReprodutorSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExItemCategoria.ISExItemID --> ISExItem.ISExItemID
            ISExCodigo_ISExItemID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("3C6C3293-1367-441D-9B26-BA2050DCAEF8"), "FK_3C6C32931367441D9B26BA2050DCAEF8", ReprodutorSVC.xISExCodigo.gCID, xISExCodigo.ISExItemID.ID, ReprodutorSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExCodigo.ISExItemID --> ISExItem.ISExItemID
            ISExItemMae_ISExItemID_PCRxAnimalFiliacao_PCRxMaeID = AddReference(new XSVCReference(new Guid("71769ECF-B461-432B-8216-DD198682B488"), "FK_71769ECFB461432B8216DD198682B488", ReprodutorSVC.xISExItemMae.gCID, xISExItemMae.ISExItemID.ID, ReprodutorSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxMaeID.ID, XJoinType.Inner)); // ISExItemMae.ISExItemID --> PCRxAnimalFiliacao.PCRxMaeID
            PCRxAnimalFiliacao_PCRxAnimalFiliacaoID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("8A49B3F8-6833-4ABA-8C72-E3BD861935BA"), "FK_8A49B3F868334ABA8C72E3BD861935BA", ReprodutorSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxAnimalFiliacaoID.ID, ReprodutorSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // PCRxAnimalFiliacao.PCRxAnimalFiliacaoID --> ISExItem.ISExItemID
            PCRxAnimal_PCRxAnimalID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("8D4AC4D9-C34F-41E4-B9E4-E95D194D6757"), "FK_8D4AC4D9C34F41E4B9E4E95D194D6757", ReprodutorSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxAnimalID.ID, ReprodutorSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // PCRxAnimal.PCRxAnimalID --> ISExItem.ISExItemID
            ISExItemPai_ISExItemID_PCRxAnimalFiliacao_PCRxPaiID = AddReference(new XSVCReference(new Guid("C264C9EC-5CD3-41EF-8CA1-D282ABBA43A3"), "FK_C264C9EC5CD341EF8CA1D282ABBA43A3", ReprodutorSVC.xISExItemPai.gCID, xISExItemPai.ISExItemID.ID, ReprodutorSVC.xPCRxAnimalFiliacao.gCID, xPCRxAnimalFiliacao.PCRxPaiID.ID, XJoinType.Inner)); // ISExItemPai.ISExItemID --> PCRxAnimalFiliacao.PCRxPaiID
            PCRxReprodutor_PCRxReprodutorID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("C5354D3F-EBF1-4F1F-9978-A11ABDBDCF1D"), "FK_C5354D3FEBF14F1F9978A11ABDBDCF1D", ReprodutorSVC.xPCRxReprodutor.gCID, xPCRxReprodutor.PCRxReprodutorID.ID, ReprodutorSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // PCRxReprodutor.PCRxReprodutorID --> ISExItem.ISExItemID
            PCRxRaca_PCRxRacaID_PCRxAnimal_PCRxRacaID = AddReference(new XSVCReference(new Guid("EC292052-C4A9-4E1D-822C-BDB6331BCA12"), "FK_EC292052C4A94E1D822CBDB6331BCA12", ReprodutorSVC.xPCRxRaca.gCID, xPCRxRaca.PCRxRacaID.ID, ReprodutorSVC.xPCRxAnimal.gCID, xPCRxAnimal.PCRxRacaID.ID, XJoinType.Inner)); // PCRxRaca.PCRxRacaID --> PCRxAnimal.PCRxRacaID
            xPCRxReprodutor.ApenasSemem.IsDataField = true;
            xPCRxReprodutor.ApenasSemem.AllowEmpty = true;
            xPCRxDocumento.Certificado.IsDataField = true;
            xPCRxDocumento.Certificado.AllowEmpty = true;
            xPCRxAnimal.ERPxGeneroID.IsDataField = true;
            xPCRxAnimal.ERPxGeneroID.AllowEmpty = true;
            xISExCodigo.ISExCodigoID.GeneratePK = true;
            xISExCodigo.ISExCodigoID.IsDataField = true;
            xISExCodigo.ISExCodigoID.AllowEmpty = true;
            xISExCodigo.ISExCodigoTipoID.IsDataField = true;
            xISExCodigo.ISExCodigoTipoID.AllowEmpty = true;
            xISExItem.ISExFabricanteID.IsDataField = true;
            xISExItem.ISExFabricanteID.AllowEmpty = true;
            xISExItem.ISExGrupoID.IsDataField = true;
            xISExItem.ISExGrupoID.AllowEmpty = true;
            xISExItem.ISExItemID.GeneratePK = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExItem.ISExLinhaID.IsDataField = true;
            xISExItem.ISExLinhaID.AllowEmpty = true;
            xISExItem.ISExMarcaID.IsDataField = true;
            xISExItem.ISExMarcaID.AllowEmpty = true;
            xISExItem.ISExTabelaID.IsDataField = true;
            xISExItem.ISExTabelaID.AllowEmpty = true;
            xPCRxAnimal.Nascimento.IsDataField = true;
            xPCRxAnimal.Nascimento.AllowEmpty = true;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItemMae.Nome.IsReadOnly = true;
            xISExItemMae.Nome.Length = 60;
            xISExItemMae.Nome.IsDataField = true;
            xISExItemMae.Nome.FilterUse = true;
            xISExItemMae.Nome.AllowEmpty = true;
            xISExItemPai.Nome.IsReadOnly = true;
            xISExItemPai.Nome.Length = 60;
            xISExItemPai.Nome.IsDataField = true;
            xISExItemPai.Nome.FilterUse = true;
            xISExItemPai.Nome.AllowEmpty = true;
            xISExCodigo.Numero.Length = 36;
            xISExCodigo.Numero.IsDataField = true;
            xISExCodigo.Numero.AllowEmpty = true;
            xISExCodigo.NumeroCurto.Length = 10;
            xISExCodigo.NumeroCurto.IsDataField = true;
            xISExCodigo.NumeroCurto.AllowEmpty = true;
            xPCRxAnimal.NumeroPartos.IsDataField = true;
            xPCRxAnimal.NumeroPartos.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalEstadoID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalEstadoID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalFaseID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalFaseID.AllowEmpty = true;
            xPCRxAnimal.PCRxAnimalLoteID.IsDataField = true;
            xPCRxAnimal.PCRxAnimalLoteID.AllowEmpty = true;
            xPCRxAnimal.PCRxEventoReprodutivoID.IsDataField = true;
            xPCRxAnimal.PCRxEventoReprodutivoID.AllowEmpty = true;
            xPCRxAnimal.PCRxIATFFaseID.IsDataField = true;
            xPCRxAnimal.PCRxIATFFaseID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxMaeID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxMaeID.AllowEmpty = true;
            xPCRxAnimalFiliacao.PCRxPaiID.IsDataField = true;
            xPCRxAnimalFiliacao.PCRxPaiID.AllowEmpty = true;
            xPCRxAnimal.PCRxRacaID.IsDataField = true;
            xPCRxAnimal.PCRxRacaID.AllowEmpty = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xPCRxRaca.Raca.IsReadOnly = true;
            xPCRxRaca.Raca.Length = 25;
            xPCRxRaca.Raca.IsDataField = true;
            xPCRxRaca.Raca.AllowEmpty = true;
            xISExItem.SYSxEstadoID.IsDataField = true;
            xISExItem.SYSxEstadoID.AllowEmpty = true;
            xPCRxDocumento.Certificado.DefaultValue = null;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xISExItem.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField ApenasSemem => xPCRxReprodutor.ApenasSemem;
        public XORMField Certificado => xPCRxDocumento.Certificado;
        public XORMField ERPxGeneroID => xPCRxAnimal.ERPxGeneroID;
        public XORMField ISExCodigoID => xISExCodigo.ISExCodigoID;
        public XORMField ISExCodigoTipoID => xISExCodigo.ISExCodigoTipoID;
        public XORMField ISExFabricanteID => xISExItem.ISExFabricanteID;
        public XORMField ISExGrupoID => xISExItem.ISExGrupoID;
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField ISExLinhaID => xISExItem.ISExLinhaID;
        public XORMField ISExMarcaID => xISExItem.ISExMarcaID;
        public XORMField ISExTabelaID => xISExItem.ISExTabelaID;
        public XORMField Nascimento => xPCRxAnimal.Nascimento;
        public XORMField Nome => xISExItem.Nome;
        public XORMField NomeMae => xISExItemMae.Nome;
        public XORMField NomePai => xISExItemPai.Nome;
        public XORMField Numero => xISExCodigo.Numero;
        public XORMField NumeroCurto => xISExCodigo.NumeroCurto;
        public XORMField NumeroPartos => xPCRxAnimal.NumeroPartos;
        public XORMField PCRxAnimalEstadoID => xPCRxAnimal.PCRxAnimalEstadoID;
        public XORMField PCRxAnimalFaseID => xPCRxAnimal.PCRxAnimalFaseID;
        public XORMField PCRxAnimalLoteID => xPCRxAnimal.PCRxAnimalLoteID;
        public XORMField PCRxEventoReprodutivoID => xPCRxAnimal.PCRxEventoReprodutivoID;
        public XORMField PCRxIATFFaseID => xPCRxAnimal.PCRxIATFFaseID;
        public XORMField PCRxMaeID => xPCRxAnimalFiliacao.PCRxMaeID;
        public XORMField PCRxPaiID => xPCRxAnimalFiliacao.PCRxPaiID;
        public XORMField PCRxRacaID => xPCRxAnimal.PCRxRacaID;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Raca => xPCRxRaca.Raca;
        public XORMField SYSxEstadoID => xISExItem.SYSxEstadoID;
        }
        #endregion XFields
        #region ReprodutorSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Boolean ApenasSemem
        {
            get
            {
                return (Boolean)Value[ReprodutorSVC.xPCRxReprodutor.ApenasSemem.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxReprodutor.ApenasSemem.ID] = value;
            }
        }
        public Boolean? oApenasSemem
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxReprodutor.ApenasSemem, out Object ovlr);
                return (Boolean?)ovlr;
            }
        }

        public Byte[] Certificado
        {
            get
            {
                return (Byte[])Value[ReprodutorSVC.xPCRxDocumento.Certificado.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxDocumento.Certificado.ID] = value;
            }
        }
        public Byte[]? oCertificado
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxDocumento.Certificado, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public Int16 ERPxGeneroID
        {
            get
            {
                return (Int16)Value[ReprodutorSVC.xPCRxAnimal.ERPxGeneroID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.ERPxGeneroID.ID] = value;
            }
        }
        public Int16? oERPxGeneroID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.ERPxGeneroID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid ISExCodigoID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xISExCodigo.ISExCodigoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExCodigo.ISExCodigoID.ID] = value;
            }
        }
        public Guid? oISExCodigoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExCodigo.ISExCodigoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 ISExCodigoTipoID
        {
            get
            {
                return (Int16)Value[ReprodutorSVC.xISExCodigo.ISExCodigoTipoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExCodigo.ISExCodigoTipoID.ID] = value;
            }
        }
        public Int16? oISExCodigoTipoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExCodigo.ISExCodigoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid ISExFabricanteID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xISExItem.ISExFabricanteID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ISExFabricanteID.ID] = value;
            }
        }
        public Guid? oISExFabricanteID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ISExFabricanteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExGrupoID
        {
            get
            {
                return (Int32)Value[ReprodutorSVC.xISExItem.ISExGrupoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ISExGrupoID.ID] = value;
            }
        }
        public Int32? oISExGrupoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ISExGrupoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int32 ISExLinhaID
        {
            get
            {
                return (Int32)Value[ReprodutorSVC.xISExItem.ISExLinhaID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ISExLinhaID.ID] = value;
            }
        }
        public Int32? oISExLinhaID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ISExLinhaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExMarcaID
        {
            get
            {
                return (Int32)Value[ReprodutorSVC.xISExItem.ISExMarcaID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ISExMarcaID.ID] = value;
            }
        }
        public Int32? oISExMarcaID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ISExMarcaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 ISExTabelaID
        {
            get
            {
                return (Int32)Value[ReprodutorSVC.xISExItem.ISExTabelaID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ISExTabelaID.ID] = value;
            }
        }
        public Int32? oISExTabelaID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ISExTabelaID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public DateTime Nascimento
        {
            get
            {
                return (DateTime)Value[ReprodutorSVC.xPCRxAnimal.Nascimento.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.Nascimento.ID] = value;
            }
        }
        public DateTime? oNascimento
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.Nascimento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeMae
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExItemMae.Nome.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItemMae.Nome.ID] = value;
            }
        }
        public String? oNomeMae
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItemMae.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomePai
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExItemPai.Nome.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItemPai.Nome.ID] = value;
            }
        }
        public String? oNomePai
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItemPai.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Numero
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExCodigo.Numero.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExCodigo.Numero.ID] = value;
            }
        }
        public String? oNumero
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExCodigo.Numero, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NumeroCurto
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExCodigo.NumeroCurto.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExCodigo.NumeroCurto.ID] = value;
            }
        }
        public String? oNumeroCurto
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExCodigo.NumeroCurto, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 NumeroPartos
        {
            get
            {
                return (Int32)Value[ReprodutorSVC.xPCRxAnimal.NumeroPartos.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.NumeroPartos.ID] = value;
            }
        }
        public Int32? oNumeroPartos
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.NumeroPartos, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 PCRxAnimalEstadoID
        {
            get
            {
                return (Int16)Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalEstadoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxAnimalEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 PCRxAnimalFaseID
        {
            get
            {
                return (Int16)Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalFaseID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalFaseID.ID] = value;
            }
        }
        public Int16? oPCRxAnimalFaseID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxAnimalFaseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxAnimalLoteID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalLoteID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxAnimalLoteID.ID] = value;
            }
        }
        public Guid? oPCRxAnimalLoteID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxAnimalLoteID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxEventoReprodutivoID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID] = value;
            }
        }
        public Guid? oPCRxEventoReprodutivoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxEventoReprodutivoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxIATFFaseID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xPCRxAnimal.PCRxIATFFaseID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxIATFFaseID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxIATFFaseID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxMaeID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID] = value;
            }
        }
        public Guid? oPCRxMaeID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimalFiliacao.PCRxMaeID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxPaiID
        {
            get
            {
                return (Guid)Value[ReprodutorSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID] = value;
            }
        }
        public Guid? oPCRxPaiID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimalFiliacao.PCRxPaiID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxRacaID
        {
            get
            {
                return (Int16)Value[ReprodutorSVC.xPCRxAnimal.PCRxRacaID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxAnimal.PCRxRacaID.ID] = value;
            }
        }
        public Int16? oPCRxRacaID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxAnimal.PCRxRacaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[ReprodutorSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Raca
        {
            get
            {
                return (String)Value[ReprodutorSVC.xPCRxRaca.Raca.ID];
            }
            set
            {
                Value[ReprodutorSVC.xPCRxRaca.Raca.ID] = value;
            }
        }
        public String? oRaca
        {
            get
            {
                GetOldValue(ReprodutorSVC.xPCRxRaca.Raca, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ReprodutorSVC.xISExItem.SYSxEstadoID.ID];
            }
            set
            {
                Value[ReprodutorSVC.xISExItem.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ReprodutorSVC.xISExItem.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ReprodutorSVC.XTuple

        #region ReprodutorSVC.XRule
        public abstract class XRule : XServiceRule<ReprodutorSVC.XDataSet, ReprodutorSVC, ReprodutorSVC.XTuple>
        {
        }
        #endregion ReprodutorSVC.XRule

        #region ReprodutorSVC.XDataSet

        public class XDataSet : XDataSet<ReprodutorSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ReprodutorSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ReprodutorSVC.XTuple> where T : XDataTuple
        {

            public Guid ApenasSemem => ReprodutorSVC.xPCRxReprodutor.ApenasSemem.ID;
            public Guid Certificado => ReprodutorSVC.xPCRxDocumento.Certificado.ID;
            public Guid ERPxGeneroID => ReprodutorSVC.xPCRxAnimal.ERPxGeneroID.ID;
            public Guid ISExCodigoID => ReprodutorSVC.xISExCodigo.ISExCodigoID.ID;
            public Guid ISExCodigoTipoID => ReprodutorSVC.xISExCodigo.ISExCodigoTipoID.ID;
            public Guid ISExFabricanteID => ReprodutorSVC.xISExItem.ISExFabricanteID.ID;
            public Guid ISExGrupoID => ReprodutorSVC.xISExItem.ISExGrupoID.ID;
            public Guid ISExItemID => ReprodutorSVC.xISExItem.ISExItemID.ID;
            public Guid ISExLinhaID => ReprodutorSVC.xISExItem.ISExLinhaID.ID;
            public Guid ISExMarcaID => ReprodutorSVC.xISExItem.ISExMarcaID.ID;
            public Guid ISExTabelaID => ReprodutorSVC.xISExItem.ISExTabelaID.ID;
            public Guid Nascimento => ReprodutorSVC.xPCRxAnimal.Nascimento.ID;
            public Guid Nome => ReprodutorSVC.xISExItem.Nome.ID;
            public Guid NomeMae => ReprodutorSVC.xISExItemMae.Nome.ID;
            public Guid NomePai => ReprodutorSVC.xISExItemPai.Nome.ID;
            public Guid Numero => ReprodutorSVC.xISExCodigo.Numero.ID;
            public Guid NumeroCurto => ReprodutorSVC.xISExCodigo.NumeroCurto.ID;
            public Guid NumeroPartos => ReprodutorSVC.xPCRxAnimal.NumeroPartos.ID;
            public Guid PCRxAnimalEstadoID => ReprodutorSVC.xPCRxAnimal.PCRxAnimalEstadoID.ID;
            public Guid PCRxAnimalFaseID => ReprodutorSVC.xPCRxAnimal.PCRxAnimalFaseID.ID;
            public Guid PCRxAnimalLoteID => ReprodutorSVC.xPCRxAnimal.PCRxAnimalLoteID.ID;
            public Guid PCRxEventoReprodutivoID => ReprodutorSVC.xPCRxAnimal.PCRxEventoReprodutivoID.ID;
            public Guid PCRxIATFFaseID => ReprodutorSVC.xPCRxAnimal.PCRxIATFFaseID.ID;
            public Guid PCRxMaeID => ReprodutorSVC.xPCRxAnimalFiliacao.PCRxMaeID.ID;
            public Guid PCRxPaiID => ReprodutorSVC.xPCRxAnimalFiliacao.PCRxPaiID.ID;
            public Guid PCRxRacaID => ReprodutorSVC.xPCRxAnimal.PCRxRacaID.ID;
            public Guid ProdutoID => ReprodutorSVC.xISExItem.ProdutoID.ID;
            public Guid Raca => ReprodutorSVC.xPCRxRaca.Raca.ID;
            public Guid SYSxEstadoID => ReprodutorSVC.xISExItem.SYSxEstadoID.ID;

            public XDataSet()
            {
                DataSetType = typeof(ReprodutorSVC.XDataSet);
            }

        }
        #endregion ReprodutorSVC.XDataSet

        [Guid(ReprodutorSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ReprodutorSVC))]
        protected class _Service : Service<ReprodutorSVC, XDataSet, XTuple>
        {
            public const String sCID = "534479C1-6DC4-4B7C-A4CD-81BA110B4874";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ReprodutorSVC, XDataSet, XTuple>, XService
             where TModel : ReprodutorSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}