//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;
using TFX.Core.Model.Services;
using Projecao.Core.PCR.Pasto;
using TFX.Core.Model.DIC.Types;
using Projecao.Core.PCR.Retiro;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.Retiro
{
    [XRegister(typeof(RetiroSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Retiro\Retiro.dssvc")]
    public class RetiroSVC : XSVCModel
    {
        #region RetiroFilterFRM

        [XRegister(typeof(RetiroFilterFRM), sCID)]
        public class RetiroFilterFRM : XFRMModel
        {
            public const String sCID = "FF89F5EB-DD7A-4CD0-A414-391E2AAC2433";
            static RetiroFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public RetiroFilterFRM()
            {
                ID = gCID;
                Name = "RetiroFilter";
                Title = "";
                MinRows = 1;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                Rect = new XRect(20, 20, 965, 678);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 1;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 1;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.FormImplace = true;
                Nome.Operator = XOperator.EqualTo;
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Scale = 0;
                Nome.Length = 30;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.ApplicationID = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("908D75EA-C03D-4746-97A3-04FCC7846DAC"), "Nome", "Nome", XString.CID, 1, 32, false, gCID, null, new Guid("F5A4BA97-86CB-4309-8166-C4F470D8CE01")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("908D75EA-C03D-4746-97A3-04FCC7846DAC"), "Nome", "Nome", typeof(String));
            }
        }

        #endregion RetiroFilterFRM

        public const String sCID = "47BD90D4-F382-4D08-90E2-559EFC6598CE";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference SYSxPessoa_SYSxPessoaID_PCRxRetiro_SYSxEmpresaID; // SYSxPessoa.SYSxPessoaID --> PCRxRetiro.SYSxEmpresaID

        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("4889857F-8679-45F6-B08B-D2E8EBF48340");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "NomeFazenda";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("D592F702-4DA7-4459-8D92-814AAB41D2FC"), "Nome", "Nome da Fazenda");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("FA0AC1B4-CC61-4735-ACA9-5844D0AF88F7"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xPCRxRetiro 
        public class xPCRxRetiro : XSVCTable
        {

            public static Guid gCID => new Guid("B605C548-AFC2-4566-A048-DE487B0952E0");

            public xPCRxRetiro()
            {
                Name = "PCRxRetiro";
                Alias = "PCRxRetiro";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.gCID;

                Items.Add(PCRxRetiroID, PCRxRetiroID.ID);
                PCRxRetiroID.Owner = this;
                PCRxRetiroID.OwnerID = ID;
                PCRxRetiroID.TableName = Name;
                PCRxRetiroID.Alias = "PCRxRetiroID";
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(Latitude, Latitude.ID);
                Latitude.Owner = this;
                Latitude.OwnerID = ID;
                Latitude.TableName = Name;
                Latitude.Alias = "Latitude";
                Items.Add(Longitude, Longitude.ID);
                Longitude.Owner = this;
                Longitude.OwnerID = ID;
                Longitude.TableName = Name;
                Longitude.Alias = "Longitude";
                Items.Add(CoordenadasArea, CoordenadasArea.ID);
                CoordenadasArea.Owner = this;
                CoordenadasArea.OwnerID = ID;
                CoordenadasArea.TableName = Name;
                CoordenadasArea.Alias = "CoordenadasArea";
            }

            public static XORMPKField PCRxRetiroID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.PCRxRetiroID, new Guid("A3A20DC7-7B49-48F3-8D1E-9A1E33FF5E2F"), "PCRxRetiroID", "Retiro");
            public static XORMField Nome = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.Nome, new Guid("F5A4BA97-86CB-4309-8166-C4F470D8CE01"), "Nome", "Nome");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.SYSxEmpresaID, new Guid("5E60EB06-4BD9-4B87-8126-D8FB6189575B"), "SYSxEmpresaID", "Empresa");
            public static XORMDecimalField Latitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.Latitude, new Guid("C1022452-39D6-4BD7-828D-F9099A1858C3"), "Latitude", "Latitude");
            public static XORMDecimalField Longitude = new XORMDecimalField(global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.Longitude, new Guid("9AB5DEC5-6130-47B4-9664-9CCA45F8C899"), "Longitude", "Longitude");
            public static XORMField CoordenadasArea = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxRetiro.CoordenadasArea, new Guid("703BAFE8-7A5B-4A5D-AC3C-BAD78FD8B73E"), "CoordenadasArea", "Coordenadas da √Årea");
        }
        #endregion xPCRxRetiro 


        public xPCRxRetiro PCRxRetiro;
        public xSYSxPessoa SYSxPessoa;

        public RetiroSVC()
        {
            TupleType = typeof(RetiroSVC.XTuple);
            DataSetType = typeof(RetiroSVC.XDataSet);
            ServiceRuleCID = new Guid("092B04F0-FED5-4806-BB5A-9793F84F2E82");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("47BD90D4-F382-4D08-90E2-559EFC6598CE");
            Name = "Retiro";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("FF89F5EB-DD7A-4CD0-A414-391E2AAC2433");
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xSYSxPessoa.Nome.ID, xPCRxRetiro.Nome.ID };
            OrderByFields = new Guid[] { xSYSxPessoa.Nome.ID, xPCRxRetiro.Nome.ID };
            DataSetFields = new Guid[] { xPCRxRetiro.PCRxRetiroID.ID, xPCRxRetiro.Nome.ID, xPCRxRetiro.SYSxEmpresaID.ID, xSYSxPessoa.Nome.ID, xPCRxRetiro.Longitude.ID, xPCRxRetiro.Latitude.ID, xPCRxRetiro.CoordenadasArea.ID };
            PKField = xPCRxRetiro.PCRxRetiroID.ID;
            ConfigTableID = new Guid("9D362636-A0DF-402C-8691-C3A229AC7935");
            MasterRuleCID = new Guid("092B04F0-FED5-4806-BB5A-9793F84F2E82");
            XSubServiceItem ss76488451506C4F9394211E3CA3327DBD = new XSubServiceItem(PastoSVC.gCID, PastoSVC.xPCRxPasto.PCRxRetiroID.ID, RetiroSVC.gCID, xPCRxRetiro.PCRxRetiroID.ID, true, XSubSeviceType.Default);
            ss76488451506C4F9394211E3CA3327DBD.Rights = new Int16[] { 1 }; 
            ss76488451506C4F9394211E3CA3327DBD.LateLoad = false;
            SubServices.Add(ss76488451506C4F9394211E3CA3327DBD);
            PCRxRetiro = new xPCRxRetiro();
            PCRxRetiro.IsReadOnly = false;
            AddTable(PCRxRetiro);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = PCRxRetiro.ID;
            SYSxPessoa_SYSxPessoaID_PCRxRetiro_SYSxEmpresaID = AddReference(new XSVCReference(new Guid("74FBD3B7-292E-4A95-BCD2-13C18D37262C"), "FK_74FBD3B7292E4A95BCD213C18D37262C", RetiroSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, RetiroSVC.xPCRxRetiro.gCID, xPCRxRetiro.SYSxEmpresaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> PCRxRetiro.SYSxEmpresaID
            XSVCReference FK_68C7355F9A87424BBE6BC713D917D533 = new XSVCReference(new Guid("68C7355F-9A87-424B-BE6B-C713D917D533"), "FK_68C7355F9A87424BBE6BC713D917D533", PastoSVC.gCID, PastoSVC.xPCRxPasto.PCRxRetiroID.ID, PCRxRetiro.ID, RetiroSVC.xPCRxRetiro.PCRxRetiroID.ID, XJoinType.SubService); // PastoSVC.PCRxRetiroID --> Retiro.PCRxRetiroID
            FK_68C7355F9A87424BBE6BC713D917D533.IsLowRelevance = false;
            AddReference(FK_68C7355F9A87424BBE6BC713D917D533);
            xPCRxRetiro.CoordenadasArea.IsDataField = true;
            xPCRxRetiro.CoordenadasArea.AllowEmpty = true;
            xPCRxRetiro.Latitude.Length = 20;
            xPCRxRetiro.Latitude.Scale = 10;
            xPCRxRetiro.Latitude.IsDataField = true;
            xPCRxRetiro.Latitude.AllowEmpty = true;
            xPCRxRetiro.Longitude.Length = 20;
            xPCRxRetiro.Longitude.Scale = 10;
            xPCRxRetiro.Longitude.IsDataField = true;
            xPCRxRetiro.Longitude.AllowEmpty = true;
            xPCRxRetiro.Nome.OrderType = XOrderType.Asc;
            xPCRxRetiro.Nome.Length = 30;
            xPCRxRetiro.Nome.IsDataField = true;
            xPCRxRetiro.Nome.FilterUse = true;
            xPCRxRetiro.Nome.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.OrderType = XOrderType.Asc;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xPCRxRetiro.PCRxRetiroID.GeneratePK = true;
            xPCRxRetiro.PCRxRetiroID.IsDataField = true;
            xPCRxRetiro.PCRxRetiroID.AllowEmpty = true;
            xPCRxRetiro.SYSxEmpresaID.IsDataField = true;
            xPCRxRetiro.SYSxEmpresaID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField CoordenadasArea => xPCRxRetiro.CoordenadasArea;
        public XORMField Latitude => xPCRxRetiro.Latitude;
        public XORMField Longitude => xPCRxRetiro.Longitude;
        public XORMField Nome => xPCRxRetiro.Nome;
        public XORMField NomeFazenda => xSYSxPessoa.Nome;
        public XORMField PCRxRetiroID => xPCRxRetiro.PCRxRetiroID;
        public XORMField SYSxEmpresaID => xPCRxRetiro.SYSxEmpresaID;
        }
        #endregion XFields
        #region RetiroSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String CoordenadasArea
        {
            get
            {
                return (String)Value[RetiroSVC.xPCRxRetiro.CoordenadasArea.ID];
            }
            set
            {
                Value[RetiroSVC.xPCRxRetiro.CoordenadasArea.ID] = value;
            }
        }
        public String? oCoordenadasArea
        {
            get
            {
                GetOldValue(RetiroSVC.xPCRxRetiro.CoordenadasArea, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Latitude
        {
            get
            {
                return (Decimal)Value[RetiroSVC.xPCRxRetiro.Latitude.ID];
            }
            set
            {
                Value[RetiroSVC.xPCRxRetiro.Latitude.ID] = value;
            }
        }
        public Decimal? oLatitude
        {
            get
            {
                GetOldValue(RetiroSVC.xPCRxRetiro.Latitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Decimal Longitude
        {
            get
            {
                return (Decimal)Value[RetiroSVC.xPCRxRetiro.Longitude.ID];
            }
            set
            {
                Value[RetiroSVC.xPCRxRetiro.Longitude.ID] = value;
            }
        }
        public Decimal? oLongitude
        {
            get
            {
                GetOldValue(RetiroSVC.xPCRxRetiro.Longitude, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[RetiroSVC.xPCRxRetiro.Nome.ID];
            }
            set
            {
                Value[RetiroSVC.xPCRxRetiro.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(RetiroSVC.xPCRxRetiro.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String NomeFazenda
        {
            get
            {
                return (String)Value[RetiroSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[RetiroSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNomeFazenda
        {
            get
            {
                GetOldValue(RetiroSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 PCRxRetiroID
        {
            get
            {
                return (Int32)Value[RetiroSVC.xPCRxRetiro.PCRxRetiroID.ID];
            }
            set
            {
                Value[RetiroSVC.xPCRxRetiro.PCRxRetiroID.ID] = value;
            }
        }
        public Int32? oPCRxRetiroID
        {
            get
            {
                GetOldValue(RetiroSVC.xPCRxRetiro.PCRxRetiroID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[RetiroSVC.xPCRxRetiro.SYSxEmpresaID.ID];
            }
            set
            {
                Value[RetiroSVC.xPCRxRetiro.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(RetiroSVC.xPCRxRetiro.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion RetiroSVC.XTuple

        #region RetiroSVC.XRule
        public abstract class XRule : XServiceRule<RetiroSVC.XDataSet, RetiroSVC, RetiroSVC.XTuple>
        {
        }
        #endregion RetiroSVC.XRule

        #region RetiroSVC.XDataSet

        public class XDataSet : XDataSet<RetiroSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(RetiroSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<RetiroSVC.XTuple> where T : XDataTuple
        {

            public Guid CoordenadasArea => RetiroSVC.xPCRxRetiro.CoordenadasArea.ID;
            public Guid Latitude => RetiroSVC.xPCRxRetiro.Latitude.ID;
            public Guid Longitude => RetiroSVC.xPCRxRetiro.Longitude.ID;
            public Guid Nome => RetiroSVC.xPCRxRetiro.Nome.ID;
            public Guid NomeFazenda => RetiroSVC.xSYSxPessoa.Nome.ID;
            public Guid PCRxRetiroID => RetiroSVC.xPCRxRetiro.PCRxRetiroID.ID;
            public Guid SYSxEmpresaID => RetiroSVC.xPCRxRetiro.SYSxEmpresaID.ID;

            public XDataSet()
            {
                DataSetType = typeof(RetiroSVC.XDataSet);
            }

            private Projecao.Core.PCR.Pasto.PastoSVC.XDataSet _PastoDataSet;

            public Projecao.Core.PCR.Pasto.PastoSVC.XDataSet PastoDataSet
            {
                get
                {
                    if (_PastoDataSet == null)
                    {
                        _PastoDataSet.IsReadOnly = true;
                        _PastoDataSet = (Projecao.Core.PCR.Pasto.PastoSVC.XDataSet)Children.Get(Projecao.Core.PCR.Pasto.PastoSVC.gCID);
                    }
                    return  _PastoDataSet;
                }
            }

        }
        #endregion RetiroSVC.XDataSet

        [Guid(RetiroSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(RetiroSVC))]
        protected class _Service : Service<RetiroSVC, XDataSet, XTuple>
        {
            public const String sCID = "E7F2C0F8-548B-4E66-99BE-469DDDF0AFC4";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<RetiroSVC, XDataSet, XTuple>, XService
             where TModel : RetiroSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}