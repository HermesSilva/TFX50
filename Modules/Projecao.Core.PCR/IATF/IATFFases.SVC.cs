//<auto-generated/>
using System;
using System.Linq;
using Newtonsoft.Json;
using TFX.Core.Objects;
using TFX.Core.Model.Data;
using TFX.Core.Model.Cache;
using TFX.Core.Reflections;
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
using Projecao.Core.PCR.DB;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.Services;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Projecao.Core.PCR.IATF
{
    [XRegister(typeof(IATFFasesSVC), sCID)]
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\Projecao.Core.PCR.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.PCR\IATF\IATFFases.dssvc")]
    public class IATFFasesSVC : XSVCModel
    {
        public const String sCID = "5C424640-C449-43DF-9817-6AFF33975BA9";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference PCRxIATFFaseTipoAnterior_PCRxIATFFaseTipoID_PCRxIATFFaseAnterior_PCRxIATFFaseTipoID; // PCRxIATFFaseTipoAnterior.PCRxIATFFaseTipoID --> PCRxIATFFaseAnterior.PCRxIATFFaseTipoID
        public static XSVCReference PCRxIATFFase_PCRxIATFFaseAnteriorID_PCRxIATFFaseAnterior_PCRxIATFFaseID; // PCRxIATFFase.PCRxIATFFaseAnteriorID --> PCRxIATFFaseAnterior.PCRxIATFFaseID
        public static XSVCReference PCRxIATFFaseProxima_PCRxIATFFaseTipoID_PCRxIATFFaseTipoProximo_PCRxIATFFaseTipoID; // PCRxIATFFaseProxima.PCRxIATFFaseTipoID --> PCRxIATFFaseTipoProximo.PCRxIATFFaseTipoID
        public static XSVCReference PCRxIATFFaseTipo_PCRxIATFFaseTipoID_PCRxIATFFase_PCRxIATFFaseTipoID; // PCRxIATFFaseTipo.PCRxIATFFaseTipoID --> PCRxIATFFase.PCRxIATFFaseTipoID
        public static XSVCReference PCRxIATFFase_PCRxIATFFaseProximaID_PCRxIATFFaseProxima_PCRxIATFFaseID; // PCRxIATFFase.PCRxIATFFaseProximaID --> PCRxIATFFaseProxima.PCRxIATFFaseID

        #region xPCRxIATFFaseProxima 
        public class xPCRxIATFFaseProxima : XSVCTable
        {

            public static Guid gCID => new Guid("0D093C02-F1F7-4968-88B3-9BFDD3F389AB");

            public xPCRxIATFFaseProxima()
            {
                Name = "PCRxIATFFase";
                Alias = "PCRxIATFFaseProxima";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.gCID;

                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                Items.Add(PCRxIATFID, PCRxIATFID.ID);
                PCRxIATFID.Owner = this;
                PCRxIATFID.OwnerID = ID;
                PCRxIATFID.TableName = Name;
                Items.Add(Ordem, Ordem.ID);
                Ordem.Owner = this;
                Ordem.OwnerID = ID;
                Ordem.TableName = Name;
                Items.Add(PCRxIATFFaseAnteriorID, PCRxIATFFaseAnteriorID.ID);
                PCRxIATFFaseAnteriorID.Owner = this;
                PCRxIATFFaseAnteriorID.OwnerID = ID;
                PCRxIATFFaseAnteriorID.TableName = Name;
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(PCRxIATFFaseProximaID, PCRxIATFFaseProximaID.ID);
                PCRxIATFFaseProximaID.Owner = this;
                PCRxIATFFaseProximaID.OwnerID = ID;
                PCRxIATFFaseProximaID.TableName = Name;
                Items.Add(Duracao, Duracao.ID);
                Duracao.Owner = this;
                Duracao.OwnerID = ID;
                Duracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField PCRxIATFFaseID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseID, new Guid("1F8E869F-3B3C-42EF-B2DD-FA30D4919F18"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxIATFID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFID, new Guid("ADCE8B0B-38FF-42D7-BD1B-D15B4CE50183"), "PCRxIATFID", "Inseminação Artificial em Tempo Fixo");
            public static XORMField Ordem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Ordem, new Guid("16EFF215-DBF7-4832-81E6-498E5ACD98AF"), "Ordem", "Ordem");
            public static XORMFKField PCRxIATFFaseAnteriorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseAnteriorID, new Guid("C3314A6A-7438-42E7-ADA1-7F143020EB7C"), "PCRxIATFFaseAnteriorID", "Fase Anterior da IATF");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseTipoID, new Guid("F2970744-2ED7-4492-A1E1-DC52F57DFF99"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFKField PCRxIATFFaseProximaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseProximaID, new Guid("7F835EDE-5A98-433E-B881-C6189E65AB04"), "PCRxIATFFaseProximaID", "Próxima Fases da IATF");
            public static XORMField Duracao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Duracao, new Guid("C26E3293-7900-4999-A04A-51307A1D4A4D"), "Duracao", "Duração (dias)");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.SYSxEstadoID, new Guid("5E15114D-A2EC-4150-92AF-AF26D55FBCA7"), "SYSxEstadoID", "Estado");
        }
        #endregion xPCRxIATFFaseProxima 


        #region xPCRxIATFFase 
        public class xPCRxIATFFase : XSVCTable
        {

            public static Guid gCID => new Guid("30B723DF-6764-4919-8249-94C9A53C71AA");

            public xPCRxIATFFase()
            {
                Name = "PCRxIATFFase";
                Alias = "PCRxIATFFase";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.gCID;

                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                PCRxIATFFaseID.Alias = "PCRxIATFFaseID";
                Items.Add(PCRxIATFID, PCRxIATFID.ID);
                PCRxIATFID.Owner = this;
                PCRxIATFID.OwnerID = ID;
                PCRxIATFID.TableName = Name;
                PCRxIATFID.Alias = "PCRxIATFID";
                Items.Add(Ordem, Ordem.ID);
                Ordem.Owner = this;
                Ordem.OwnerID = ID;
                Ordem.TableName = Name;
                Ordem.Alias = "Ordem";
                Items.Add(PCRxIATFFaseAnteriorID, PCRxIATFFaseAnteriorID.ID);
                PCRxIATFFaseAnteriorID.Owner = this;
                PCRxIATFFaseAnteriorID.OwnerID = ID;
                PCRxIATFFaseAnteriorID.TableName = Name;
                PCRxIATFFaseAnteriorID.Alias = "PCRxIATFFaseAnteriorID";
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                PCRxIATFFaseTipoID.Alias = "PCRxIATFFaseTipoID";
                Items.Add(PCRxIATFFaseProximaID, PCRxIATFFaseProximaID.ID);
                PCRxIATFFaseProximaID.Owner = this;
                PCRxIATFFaseProximaID.OwnerID = ID;
                PCRxIATFFaseProximaID.TableName = Name;
                PCRxIATFFaseProximaID.Alias = "PCRxIATFFaseProximaID";
                Items.Add(Duracao, Duracao.ID);
                Duracao.Owner = this;
                Duracao.OwnerID = ID;
                Duracao.TableName = Name;
                Duracao.Alias = "Duracao";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMFaceField PCRxIATFFaseID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseID, new Guid("29CDD0CD-0C0B-429B-A5D7-AE6878018E54"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxIATFID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFID, new Guid("C04EBF0A-245F-4E6E-AA8B-C8782BD832CA"), "PCRxIATFID", "Inseminação Artificial em Tempo Fixo");
            public static XORMField Ordem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Ordem, new Guid("18B7A089-5BB4-4C7C-BD91-6BEAB46F7AAE"), "Ordem", "Ordem");
            public static XORMFKField PCRxIATFFaseAnteriorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseAnteriorID, new Guid("4771F2DF-07AE-4E0A-8BE6-050AE15B1C34"), "PCRxIATFFaseAnteriorID", "Fase Anterior da IATF");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseTipoID, new Guid("7D348D16-68D3-4C9C-9C18-79DF82F763D4"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFKField PCRxIATFFaseProximaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseProximaID, new Guid("27543F54-0432-473D-9969-76EBE8659A71"), "PCRxIATFFaseProximaID", "Próxima Fases da IATF");
            public static XORMField Duracao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Duracao, new Guid("E123DA65-461A-4786-AF86-3C067B1EE1A4"), "Duracao", "Duração (dias)");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.SYSxEstadoID, new Guid("AD6E7D5A-B0AD-4E3C-B9FA-F2D6DEF9E6A0"), "SYSxEstadoID", "Estado");
        }
        #endregion xPCRxIATFFase 


        #region xPCRxIATFFaseAnterior 
        public class xPCRxIATFFaseAnterior : XSVCTable
        {

            public static Guid gCID => new Guid("5DB54DA2-DA93-46FB-8966-D36C4A87175C");

            public xPCRxIATFFaseAnterior()
            {
                Name = "PCRxIATFFase";
                Alias = "PCRxIATFFaseAnterior";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.gCID;

                Items.Add(PCRxIATFFaseID, PCRxIATFFaseID.ID);
                PCRxIATFFaseID.Owner = this;
                PCRxIATFFaseID.OwnerID = ID;
                PCRxIATFFaseID.TableName = Name;
                Items.Add(PCRxIATFID, PCRxIATFID.ID);
                PCRxIATFID.Owner = this;
                PCRxIATFID.OwnerID = ID;
                PCRxIATFID.TableName = Name;
                Items.Add(Ordem, Ordem.ID);
                Ordem.Owner = this;
                Ordem.OwnerID = ID;
                Ordem.TableName = Name;
                Items.Add(PCRxIATFFaseAnteriorID, PCRxIATFFaseAnteriorID.ID);
                PCRxIATFFaseAnteriorID.Owner = this;
                PCRxIATFFaseAnteriorID.OwnerID = ID;
                PCRxIATFFaseAnteriorID.TableName = Name;
                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(PCRxIATFFaseProximaID, PCRxIATFFaseProximaID.ID);
                PCRxIATFFaseProximaID.Owner = this;
                PCRxIATFFaseProximaID.OwnerID = ID;
                PCRxIATFFaseProximaID.TableName = Name;
                Items.Add(Duracao, Duracao.ID);
                Duracao.Owner = this;
                Duracao.OwnerID = ID;
                Duracao.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
            }

            public static XORMFaceField PCRxIATFFaseID = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseID, new Guid("D9D3A05F-378B-40C5-82B8-891D803EDBEC"), "PCRxIATFFaseID", "Fases da IATF");
            public static XORMFKField PCRxIATFID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFID, new Guid("CF53666B-22B5-45D6-A3D2-449D923A36B6"), "PCRxIATFID", "Inseminação Artificial em Tempo Fixo");
            public static XORMField Ordem = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Ordem, new Guid("465AE6D3-097E-4328-AA2C-D158720CB743"), "Ordem", "Ordem");
            public static XORMFKField PCRxIATFFaseAnteriorID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseAnteriorID, new Guid("D9D47214-E62A-4182-9D71-941765BF9FA5"), "PCRxIATFFaseAnteriorID", "Fase Anterior da IATF");
            public static XORMFKField PCRxIATFFaseTipoID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseTipoID, new Guid("77B799FF-D527-4B18-B9E7-F0EDBDED9FF9"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFKField PCRxIATFFaseProximaID = new XORMFKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.PCRxIATFFaseProximaID, new Guid("D762BE35-C729-4E62-ACE1-3EB1AF4A5E9F"), "PCRxIATFFaseProximaID", "Próxima Fases da IATF");
            public static XORMField Duracao = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.Duracao, new Guid("F35CBAB3-26B1-4A4F-BA8D-08A266DACE73"), "Duracao", "Duração (dias)");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFase.SYSxEstadoID, new Guid("74EBFE97-FA2B-4EE4-9B6E-476052741373"), "SYSxEstadoID", "Estado");
        }
        #endregion xPCRxIATFFaseAnterior 


        #region xPCRxIATFFaseTipo 
        public class xPCRxIATFFaseTipo : XSVCTable
        {

            public static Guid gCID => new Guid("76976C3E-9D98-4FED-86BC-61741F1E13ED");

            public xPCRxIATFFaseTipo()
            {
                Name = "PCRxIATFFaseTipo";
                Alias = "PCRxIATFFaseTipo";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.gCID;

                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "Tipo";
                Items.Add(Operacional, Operacional.ID);
                Operacional.Owner = this;
                Operacional.OwnerID = ID;
                Operacional.TableName = Name;
            }

            public static XORMPKField PCRxIATFFaseTipoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.PCRxIATFFaseTipoID, new Guid("3EC8F718-8826-4529-BA13-78540D25C8B5"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Tipo, new Guid("509FD2AF-6C73-40FB-ACA7-0C5C63EBD3CF"), "Tipo", "Nome da Fase");
            public static XORMField Operacional = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Operacional, new Guid("181A2AB6-43D8-4BD9-88CA-C5969E0F82FA"), "Operacional", "Operacional");
        }
        #endregion xPCRxIATFFaseTipo 


        #region xPCRxIATFFaseTipoAnterior 
        public class xPCRxIATFFaseTipoAnterior : XSVCTable
        {

            public static Guid gCID => new Guid("89EDED19-0F3F-4A42-8DAC-D7C15792E6F0");

            public xPCRxIATFFaseTipoAnterior()
            {
                Name = "PCRxIATFFaseTipo";
                Alias = "PCRxIATFFaseTipoAnterior";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.gCID;

                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "TipoAnterior";
                Items.Add(Operacional, Operacional.ID);
                Operacional.Owner = this;
                Operacional.OwnerID = ID;
                Operacional.TableName = Name;
            }

            public static XORMPKField PCRxIATFFaseTipoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.PCRxIATFFaseTipoID, new Guid("EB0E4162-4E3F-41EB-8D63-5A1C786D4FB1"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Tipo, new Guid("C02C4668-4032-490F-A0A5-AEEE8B8774C9"), "Tipo", "Fase Anterior");
            public static XORMField Operacional = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Operacional, new Guid("2221F6AE-1685-44D3-929C-C82375D6EF26"), "Operacional", "Operacional");
        }
        #endregion xPCRxIATFFaseTipoAnterior 


        #region xPCRxIATFFaseTipoProximo 
        public class xPCRxIATFFaseTipoProximo : XSVCTable
        {

            public static Guid gCID => new Guid("F9CE42A0-B037-4C7D-A2E6-61980D918639");

            public xPCRxIATFFaseTipoProximo()
            {
                Name = "PCRxIATFFaseTipo";
                Alias = "PCRxIATFFaseTipoProximo";
                ID = gCID;
                ParentID =  global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.gCID;

                Items.Add(PCRxIATFFaseTipoID, PCRxIATFFaseTipoID.ID);
                PCRxIATFFaseTipoID.Owner = this;
                PCRxIATFFaseTipoID.OwnerID = ID;
                PCRxIATFFaseTipoID.TableName = Name;
                Items.Add(Tipo, Tipo.ID);
                Tipo.Owner = this;
                Tipo.OwnerID = ID;
                Tipo.TableName = Name;
                Tipo.Alias = "TipoProxima";
                Items.Add(Operacional, Operacional.ID);
                Operacional.Owner = this;
                Operacional.OwnerID = ID;
                Operacional.TableName = Name;
            }

            public static XORMPKField PCRxIATFFaseTipoID = new XORMPKField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.PCRxIATFFaseTipoID, new Guid("5DAEF44C-1D49-453A-8E1B-807B4E3E5745"), "PCRxIATFFaseTipoID", "Tipo de Fase");
            public static XORMFaceField Tipo = new XORMFaceField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Tipo, new Guid("ABC02F3D-54E9-41F7-B155-8E1A129B564C"), "Tipo", "Próxima Fase");
            public static XORMField Operacional = new XORMField(global::Projecao.Core.PCR.DB.PCRx.PCRxIATFFaseTipo.Operacional, new Guid("A3E9EE98-7870-4092-A36E-8EEA9D123AC4"), "Operacional", "Operacional");
        }
        #endregion xPCRxIATFFaseTipoProximo 


        public xPCRxIATFFase PCRxIATFFase;
        public xPCRxIATFFaseAnterior PCRxIATFFaseAnterior;
        public xPCRxIATFFaseProxima PCRxIATFFaseProxima;
        public xPCRxIATFFaseTipo PCRxIATFFaseTipo;
        public xPCRxIATFFaseTipoAnterior PCRxIATFFaseTipoAnterior;
        public xPCRxIATFFaseTipoProximo PCRxIATFFaseTipoProximo;

        public IATFFasesSVC()
        {
            TupleType = typeof(IATFFasesSVC.XTuple);
            DataSetType = typeof(IATFFasesSVC.XDataSet);
            ServiceRuleCID = new Guid("420E5BFF-F29D-4ADB-889E-F995767FA55B");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("5C424640-C449-43DF-9817-6AFF33975BA9");
            Name = "IATFFases";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            JobType = XJobType.Default;
            CanExport = false;
            ModuleID = new Guid("02C4E7C5-1B4F-43DB-AC6C-CD36BBE428B7");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ClientScript = "Projecao.Core.PCR.js";
            GridFields = new Guid[] { xPCRxIATFFaseTipo.Tipo.ID, xPCRxIATFFase.Duracao.ID, xPCRxIATFFase.Ordem.ID, xPCRxIATFFaseTipoAnterior.Tipo.ID, xPCRxIATFFaseTipoProximo.Tipo.ID, xPCRxIATFFase.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xPCRxIATFFase.Ordem.ID };
            DataSetFields = new Guid[] { xPCRxIATFFase.Ordem.ID, xPCRxIATFFase.Duracao.ID, xPCRxIATFFase.PCRxIATFFaseProximaID.ID, xPCRxIATFFase.PCRxIATFFaseAnteriorID.ID, xPCRxIATFFase.PCRxIATFFaseTipoID.ID, xPCRxIATFFase.PCRxIATFID.ID, xPCRxIATFFase.PCRxIATFFaseID.ID, xPCRxIATFFase.SYSxEstadoID.ID, xPCRxIATFFaseTipo.Tipo.ID, xPCRxIATFFaseTipoProximo.Tipo.ID, xPCRxIATFFaseTipoAnterior.Tipo.ID };
            PKField = xPCRxIATFFase.PCRxIATFFaseID.ID;
            ConfigTableID = new Guid("670F813A-9295-4E31-B597-EDB9EFCC29BC");
            StateField = xPCRxIATFFase.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("420E5BFF-F29D-4ADB-889E-F995767FA55B");
            PCRxIATFFase = new xPCRxIATFFase();
            PCRxIATFFase.IsReadOnly = false;
            AddTable(PCRxIATFFase);
            PCRxIATFFaseAnterior = new xPCRxIATFFaseAnterior();
            PCRxIATFFaseAnterior.IsReadOnly = true;
            AddTable(PCRxIATFFaseAnterior);
            PCRxIATFFaseProxima = new xPCRxIATFFaseProxima();
            PCRxIATFFaseProxima.IsReadOnly = true;
            AddTable(PCRxIATFFaseProxima);
            PCRxIATFFaseTipo = new xPCRxIATFFaseTipo();
            PCRxIATFFaseTipo.IsReadOnly = true;
            AddTable(PCRxIATFFaseTipo);
            PCRxIATFFaseTipoAnterior = new xPCRxIATFFaseTipoAnterior();
            PCRxIATFFaseTipoAnterior.IsReadOnly = true;
            AddTable(PCRxIATFFaseTipoAnterior);
            PCRxIATFFaseTipoProximo = new xPCRxIATFFaseTipoProximo();
            PCRxIATFFaseTipoProximo.IsReadOnly = true;
            AddTable(PCRxIATFFaseTipoProximo);
            MasterTableID = PCRxIATFFase.ID;
            PCRxIATFFaseTipoAnterior_PCRxIATFFaseTipoID_PCRxIATFFaseAnterior_PCRxIATFFaseTipoID = AddReference(new XSVCReference(new Guid("49719E41-0C06-47D4-8367-5DF3408050C2"), "FK_49719E410C0647D483675DF3408050C2", IATFFasesSVC.xPCRxIATFFaseTipoAnterior.gCID, xPCRxIATFFaseTipoAnterior.PCRxIATFFaseTipoID.ID, IATFFasesSVC.xPCRxIATFFaseAnterior.gCID, xPCRxIATFFaseAnterior.PCRxIATFFaseTipoID.ID, XJoinType.Inner)); // PCRxIATFFaseTipoAnterior.PCRxIATFFaseTipoID --> PCRxIATFFaseAnterior.PCRxIATFFaseTipoID
            PCRxIATFFase_PCRxIATFFaseAnteriorID_PCRxIATFFaseAnterior_PCRxIATFFaseID = AddReference(new XSVCReference(new Guid("522F52A6-CFA0-4D5F-B659-24CB18EB1DDE"), "FK_522F52A6CFA04D5FB65924CB18EB1DDE", IATFFasesSVC.xPCRxIATFFase.gCID, xPCRxIATFFase.PCRxIATFFaseAnteriorID.ID, IATFFasesSVC.xPCRxIATFFaseAnterior.gCID, xPCRxIATFFaseAnterior.PCRxIATFFaseID.ID, XJoinType.Inner)); // PCRxIATFFase.PCRxIATFFaseAnteriorID --> PCRxIATFFaseAnterior.PCRxIATFFaseID
            PCRxIATFFaseProxima_PCRxIATFFaseTipoID_PCRxIATFFaseTipoProximo_PCRxIATFFaseTipoID = AddReference(new XSVCReference(new Guid("553EA9B4-8003-4071-B240-4147ACFE96D4"), "FK_553EA9B480034071B2404147ACFE96D4", IATFFasesSVC.xPCRxIATFFaseProxima.gCID, xPCRxIATFFaseProxima.PCRxIATFFaseTipoID.ID, IATFFasesSVC.xPCRxIATFFaseTipoProximo.gCID, xPCRxIATFFaseTipoProximo.PCRxIATFFaseTipoID.ID, XJoinType.Inner)); // PCRxIATFFaseProxima.PCRxIATFFaseTipoID --> PCRxIATFFaseTipoProximo.PCRxIATFFaseTipoID
            PCRxIATFFaseTipo_PCRxIATFFaseTipoID_PCRxIATFFase_PCRxIATFFaseTipoID = AddReference(new XSVCReference(new Guid("72D26E0B-7659-411F-8B56-266E41B88C96"), "FK_72D26E0B7659411F8B56266E41B88C96", IATFFasesSVC.xPCRxIATFFaseTipo.gCID, xPCRxIATFFaseTipo.PCRxIATFFaseTipoID.ID, IATFFasesSVC.xPCRxIATFFase.gCID, xPCRxIATFFase.PCRxIATFFaseTipoID.ID, XJoinType.Inner)); // PCRxIATFFaseTipo.PCRxIATFFaseTipoID --> PCRxIATFFase.PCRxIATFFaseTipoID
            PCRxIATFFase_PCRxIATFFaseProximaID_PCRxIATFFaseProxima_PCRxIATFFaseID = AddReference(new XSVCReference(new Guid("831A6DE0-856C-4AAF-AAC7-DEB22D621179"), "FK_831A6DE0856C4AAFAAC7DEB22D621179", IATFFasesSVC.xPCRxIATFFase.gCID, xPCRxIATFFase.PCRxIATFFaseProximaID.ID, IATFFasesSVC.xPCRxIATFFaseProxima.gCID, xPCRxIATFFaseProxima.PCRxIATFFaseID.ID, XJoinType.Inner)); // PCRxIATFFase.PCRxIATFFaseProximaID --> PCRxIATFFaseProxima.PCRxIATFFaseID
            xPCRxIATFFase.Duracao.IsDataField = true;
            xPCRxIATFFase.Duracao.AllowEmpty = true;
            xPCRxIATFFase.Ordem.OrderType = XOrderType.Asc;
            xPCRxIATFFase.Ordem.IsDataField = true;
            xPCRxIATFFase.Ordem.AllowEmpty = true;
            xPCRxIATFFase.PCRxIATFFaseAnteriorID.IsDataField = true;
            xPCRxIATFFase.PCRxIATFFaseAnteriorID.AllowEmpty = true;
            xPCRxIATFFase.PCRxIATFFaseID.GeneratePK = true;
            xPCRxIATFFase.PCRxIATFFaseID.IsDataField = true;
            xPCRxIATFFase.PCRxIATFFaseID.AllowEmpty = true;
            xPCRxIATFFase.PCRxIATFFaseProximaID.IsDataField = true;
            xPCRxIATFFase.PCRxIATFFaseProximaID.AllowEmpty = true;
            xPCRxIATFFase.PCRxIATFFaseTipoID.IsDataField = true;
            xPCRxIATFFase.PCRxIATFFaseTipoID.AllowEmpty = true;
            xPCRxIATFFase.PCRxIATFID.IsDataField = true;
            xPCRxIATFFase.PCRxIATFID.AllowEmpty = true;
            xPCRxIATFFase.SYSxEstadoID.IsDataField = true;
            xPCRxIATFFase.SYSxEstadoID.AllowEmpty = true;
            xPCRxIATFFaseTipo.Tipo.IsReadOnly = true;
            xPCRxIATFFaseTipo.Tipo.Length = 35;
            xPCRxIATFFaseTipo.Tipo.IsDataField = true;
            xPCRxIATFFaseTipo.Tipo.AllowEmpty = true;
            xPCRxIATFFaseTipoAnterior.Tipo.IsReadOnly = true;
            xPCRxIATFFaseTipoAnterior.Tipo.Length = 35;
            xPCRxIATFFaseTipoAnterior.Tipo.IsDataField = true;
            xPCRxIATFFaseTipoAnterior.Tipo.AllowEmpty = true;
            xPCRxIATFFaseTipoProximo.Tipo.IsReadOnly = true;
            xPCRxIATFFaseTipoProximo.Tipo.Length = 35;
            xPCRxIATFFaseTipoProximo.Tipo.IsDataField = true;
            xPCRxIATFFaseTipoProximo.Tipo.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Duracao => xPCRxIATFFase.Duracao;
        public XORMField Ordem => xPCRxIATFFase.Ordem;
        public XORMField PCRxIATFFaseAnteriorID => xPCRxIATFFase.PCRxIATFFaseAnteriorID;
        public XORMField PCRxIATFFaseID => xPCRxIATFFase.PCRxIATFFaseID;
        public XORMField PCRxIATFFaseProximaID => xPCRxIATFFase.PCRxIATFFaseProximaID;
        public XORMField PCRxIATFFaseTipoID => xPCRxIATFFase.PCRxIATFFaseTipoID;
        public XORMField PCRxIATFID => xPCRxIATFFase.PCRxIATFID;
        public XORMField SYSxEstadoID => xPCRxIATFFase.SYSxEstadoID;
        public XORMField Tipo => xPCRxIATFFaseTipo.Tipo;
        public XORMField TipoAnterior => xPCRxIATFFaseTipoAnterior.Tipo;
        public XORMField TipoProxima => xPCRxIATFFaseTipoProximo.Tipo;
        }
        #endregion XFields
        #region IATFFasesSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Int32 Duracao
        {
            get
            {
                return (Int32)Value[IATFFasesSVC.xPCRxIATFFase.Duracao.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.Duracao.ID] = value;
            }
        }
        public Int32? oDuracao
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.Duracao, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 Ordem
        {
            get
            {
                return (Int16)Value[IATFFasesSVC.xPCRxIATFFase.Ordem.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.Ordem.ID] = value;
            }
        }
        public Int16? oOrdem
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.Ordem, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid PCRxIATFFaseAnteriorID
        {
            get
            {
                return (Guid)Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseAnteriorID.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseAnteriorID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseAnteriorID
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseAnteriorID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxIATFFaseID
        {
            get
            {
                return (Guid)Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseID.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseID
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid PCRxIATFFaseProximaID
        {
            get
            {
                return (Guid)Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseProximaID.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseProximaID.ID] = value;
            }
        }
        public Guid? oPCRxIATFFaseProximaID
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseProximaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 PCRxIATFFaseTipoID
        {
            get
            {
                return (Int16)Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseTipoID.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseTipoID.ID] = value;
            }
        }
        public Int16? oPCRxIATFFaseTipoID
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int32 PCRxIATFID
        {
            get
            {
                return (Int32)Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFID.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.PCRxIATFID.ID] = value;
            }
        }
        public Int32? oPCRxIATFID
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.PCRxIATFID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[IATFFasesSVC.xPCRxIATFFase.SYSxEstadoID.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFase.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFase.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Tipo
        {
            get
            {
                return (String)Value[IATFFasesSVC.xPCRxIATFFaseTipo.Tipo.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFaseTipo.Tipo.ID] = value;
            }
        }
        public String? oTipo
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFaseTipo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String TipoAnterior
        {
            get
            {
                return (String)Value[IATFFasesSVC.xPCRxIATFFaseTipoAnterior.Tipo.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFaseTipoAnterior.Tipo.ID] = value;
            }
        }
        public String? oTipoAnterior
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFaseTipoAnterior.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String TipoProxima
        {
            get
            {
                return (String)Value[IATFFasesSVC.xPCRxIATFFaseTipoProximo.Tipo.ID];
            }
            set
            {
                Value[IATFFasesSVC.xPCRxIATFFaseTipoProximo.Tipo.ID] = value;
            }
        }
        public String? oTipoProxima
        {
            get
            {
                GetOldValue(IATFFasesSVC.xPCRxIATFFaseTipoProximo.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion IATFFasesSVC.XTuple

        #region IATFFasesSVC.XRule
        public abstract class XRule : XServiceRule<IATFFasesSVC.XDataSet, IATFFasesSVC, IATFFasesSVC.XTuple>
        {
        }
        #endregion IATFFasesSVC.XRule

        #region IATFFasesSVC.XDataSet

        public class XDataSet : XDataSet<IATFFasesSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(IATFFasesSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<IATFFasesSVC.XTuple> where T : XDataTuple
        {

            public Guid Duracao => IATFFasesSVC.xPCRxIATFFase.Duracao.ID;
            public Guid Ordem => IATFFasesSVC.xPCRxIATFFase.Ordem.ID;
            public Guid PCRxIATFFaseAnteriorID => IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseAnteriorID.ID;
            public Guid PCRxIATFFaseID => IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseID.ID;
            public Guid PCRxIATFFaseProximaID => IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseProximaID.ID;
            public Guid PCRxIATFFaseTipoID => IATFFasesSVC.xPCRxIATFFase.PCRxIATFFaseTipoID.ID;
            public Guid PCRxIATFID => IATFFasesSVC.xPCRxIATFFase.PCRxIATFID.ID;
            public Guid SYSxEstadoID => IATFFasesSVC.xPCRxIATFFase.SYSxEstadoID.ID;
            public Guid Tipo => IATFFasesSVC.xPCRxIATFFaseTipo.Tipo.ID;
            public Guid TipoAnterior => IATFFasesSVC.xPCRxIATFFaseTipoAnterior.Tipo.ID;
            public Guid TipoProxima => IATFFasesSVC.xPCRxIATFFaseTipoProximo.Tipo.ID;

            public XDataSet()
            {
                DataSetType = typeof(IATFFasesSVC.XDataSet);
            }

        }
        #endregion IATFFasesSVC.XDataSet

        [Guid(IATFFasesSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(IATFFasesSVC))]
        protected class _Service : Service<IATFFasesSVC, XDataSet, XTuple>
        {
            public const String sCID = "CDFE46F5-7C60-4BCE-92C7-D57109D5E267";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<IATFFasesSVC, XDataSet, XTuple>, XService
             where TModel : IATFFasesSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
    }

}