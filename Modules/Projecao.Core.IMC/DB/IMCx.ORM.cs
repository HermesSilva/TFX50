//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using TFX.Core.Cache;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Reflections;
using TFX.Core.Model.DIC;
#if !OnlyDef
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Service.Apps;

namespace Projecao.Core.IMC.DB
{
    [XRegister(typeof(IMCx), "67E32D5C-5C76-4FD4-BF10-409F9E155039")]
    public class IMCx : XModelDictionary
    {
        #region IMCxAgendaMensagem

        [XRegister(typeof(IMCxAgendaMensagem), sCID)]
        public class IMCxAgendaMensagem : XORMTable
        {
            public const String sCID = "72826E01-88E3-4472-B2DF-301F6CD14775";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid IMCxAgendaMensagemID
                {
                    get
                    {
                        return (Guid)Value[IMCxAgendaMensagem.IMCxAgendaMensagemID];
                    }
                    set
                    {
                        this[IMCxAgendaMensagem.IMCxAgendaMensagemID] = value;
                    }
                }
                public Guid? oIMCxAgendaMensagemID
                {
                    get
                    {
                        GetOldValue(IMCxAgendaMensagem.IMCxAgendaMensagemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 IMCxEventoID
                {
                    get
                    {
                        return (Int16)Value[IMCxAgendaMensagem.IMCxEventoID];
                    }
                    set
                    {
                        this[IMCxAgendaMensagem.IMCxEventoID] = value;
                    }
                }
                public Int16? oIMCxEventoID
                {
                    get
                    {
                        GetOldValue(IMCxAgendaMensagem.IMCxEventoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid SYSxEmpresaID
                {
                    get
                    {
                        return (Guid)Value[IMCxAgendaMensagem.SYSxEmpresaID];
                    }
                    set
                    {
                        this[IMCxAgendaMensagem.SYSxEmpresaID] = value;
                    }
                }
                public Guid? oSYSxEmpresaID
                {
                    get
                    {
                        GetOldValue(IMCxAgendaMensagem.SYSxEmpresaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Texto
                {
                    get
                    {
                        return (String)Value[IMCxAgendaMensagem.Texto];
                    }
                    set
                    {
                        this[IMCxAgendaMensagem.Texto] = value;
                    }
                }
                public String? oTexto
                {
                    get
                    {
                        GetOldValue(IMCxAgendaMensagem.Texto, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public String Titulo
                {
                    get
                    {
                        return (String)Value[IMCxAgendaMensagem.Titulo];
                    }
                    set
                    {
                        this[IMCxAgendaMensagem.Titulo] = value;
                    }
                }
                public String? oTitulo
                {
                    get
                    {
                        GetOldValue(IMCxAgendaMensagem.Titulo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static IMCxAgendaMensagem _Instance;
            public static IMCxAgendaMensagem Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<IMCxAgendaMensagem>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField IMCxAgendaMensagemID = new XORMPKField(new Guid("DCC26278-4A63-42F1-87AF-B5A72E5B9D51"), "IMCxAgendaMensagemID", "Mensagens", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField IMCxEventoID = new XORMFKField(new Guid("8FA1F2C1-D5EA-4296-A355-9F4B376EA0B0"), "IMCxEventoID", "Evento", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFKField SYSxEmpresaID = new XORMFKField(new Guid("473C517E-7DDB-4FC2-ACEC-7B06298A9DC1"), "SYSxEmpresaID", "Empresa", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Texto = new XORMField(new Guid("CB761D4C-F5B1-4527-9CCB-A61E7F64D228"), "Texto", "Texto", XString.CID, 0, 0, false, gCID, null);
            public static XORMField Titulo = new XORMField(new Guid("C5733273-ABBF-4E5F-A454-75F0CD6CB585"), "Titulo", "TÃ­tulo", XString.CID, 50, 0, false, gCID, null);
            public static readonly XORMReference FK_605C9EB90D72436DAAEC7781CAD49BFA = new XORMReference(new Guid("605C9EB9-0D72-436D-AAEC-7781CAD49BFA"), "FK_605C9EB90D72436DAAEC7781CAD49BFA", gCID, IMCxEventoID.ID, IMCxEvento.gCID, IMCxEvento.IMCxEventoID.ID);
            public static readonly XORMReference FK_D8692C9367B14264A70894765E397F8F = new XORMReference(new Guid("D8692C93-67B1-4264-A708-94765E397F8F"), "FK_D8692C9367B14264A70894765E397F8F", gCID, SYSxEmpresaID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID.ID);
            public static readonly XORMIndex IX_605C9EB90D72436DAAEC7781CAD49BFA = new XORMIndex();
            public static readonly XORMIndex IX_D8692C9367B14264A70894765E397F8F = new XORMIndex();
            static IMCxAgendaMensagem()
            {
                IMCxAgendaMensagemID.PKID = new Guid("9913BA5A8F964CB7B3B9D8525F21554B");
                IMCxAgendaMensagemID.UpdateStatic = true;
                IMCxAgendaMensagemID.InsertOnly = false;
                IMCxAgendaMensagemID.TableName = "IMCxAgendaMensagem";
                IMCxAgendaMensagemID.SourceTableID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
                IMCxAgendaMensagemID.Index = 0;
                Titulo.UpdateStatic = true;
                Titulo.InsertOnly = false;
                Titulo.TableName = "IMCxAgendaMensagem";
                Titulo.SourceTableID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
                Titulo.Index = 1;
                Texto.UpdateStatic = true;
                Texto.InsertOnly = false;
                Texto.TableName = "IMCxAgendaMensagem";
                Texto.SourceTableID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
                Texto.Index = 2;
                IMCxEventoID.UpdateStatic = true;
                IMCxEventoID.InsertOnly = false;
                IMCxEventoID.TableName = "IMCxAgendaMensagem";
                IMCxEventoID.SourceTableID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
                IMCxEventoID.Index = 3;
                SYSxEmpresaID.UpdateStatic = true;
                SYSxEmpresaID.InsertOnly = false;
                SYSxEmpresaID.TableName = "IMCxAgendaMensagem";
                SYSxEmpresaID.SourceTableID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
                SYSxEmpresaID.Index = 4;
                IX_605C9EB90D72436DAAEC7781CAD49BFA.Name = "IX_605C9EB90D72436DAAEC7781CAD49BFA";
                IX_605C9EB90D72436DAAEC7781CAD49BFA.ID = new Guid("0AEFEB00-22FC-4C53-B2D4-C2E18A575646");
                IX_605C9EB90D72436DAAEC7781CAD49BFA.IsUnique = false;
                IX_605C9EB90D72436DAAEC7781CAD49BFA.Description = "";
                IX_605C9EB90D72436DAAEC7781CAD49BFA.AddItem(IMCxEventoID);
                IX_D8692C9367B14264A70894765E397F8F.Name = "IX_D8692C9367B14264A70894765E397F8F";
                IX_D8692C9367B14264A70894765E397F8F.ID = new Guid("8C83B6C1-CB53-47F2-A12F-BF155BF1EE0E");
                IX_D8692C9367B14264A70894765E397F8F.IsUnique = false;
                IX_D8692C9367B14264A70894765E397F8F.Description = "";
                IX_D8692C9367B14264A70894765E397F8F.AddItem(SYSxEmpresaID);
                IMCxEventoID.AllowZero = false;
                FK_605C9EB90D72436DAAEC7781CAD49BFA.AllowZero = false;
                SYSxEmpresaID.AllowZero = true;
                FK_D8692C9367B14264A70894765E397F8F.AllowZero = true;
            }
            protected IMCxAgendaMensagem()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__IMCxAgendaMensagem);
            #endif
                ID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
                Name = "IMCxAgendaMensagem";
                Title = "Mensagens";
                CompanyControlType = XCompanyControlType.CurrentCompany;
                ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
                DeleteOnDeactivate = false;
                PKName = "PK_DCC262784A6342F187AFB5A72E5B9D51";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion IMCxAgendaMensagem

        #region IMCxBuscaMensagem

        [XRegister(typeof(IMCxBuscaMensagem), sCID)]
        public class IMCxBuscaMensagem : XORMTable
        {
            public const String sCID = "CFA96672-96BB-40C5-A7B6-2FA172367AF0";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_00000000000000000000000000000000 => _Titles[new Guid("00000000-0000-0000-0000-000000000000")];
                public static Guid _00000000000000000000000000000000 = new Guid("00000000-0000-0000-0000-000000000000");
                private static Dictionary<Guid, String> _Titles = new Dictionary<Guid, String>()
                {
                [new Guid("00000000-0000-0000-0000-000000000000")] = "00000000-0000-0000-0000-000000000000"
                };
                public static String GetTitle(Guid pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid IMCxBuscaMensagemID
                {
                    get
                    {
                        return (Guid)Value[IMCxBuscaMensagem.IMCxBuscaMensagemID];
                    }
                    set
                    {
                        this[IMCxBuscaMensagem.IMCxBuscaMensagemID] = value;
                    }
                }
                public Guid? oIMCxBuscaMensagemID
                {
                    get
                    {
                        GetOldValue(IMCxBuscaMensagem.IMCxBuscaMensagemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public DateTime UltimaChamada
                {
                    get
                    {
                        return (DateTime)Value[IMCxBuscaMensagem.UltimaChamada];
                    }
                    set
                    {
                        this[IMCxBuscaMensagem.UltimaChamada] = value;
                    }
                }
                public DateTime? oUltimaChamada
                {
                    get
                    {
                        GetOldValue(IMCxBuscaMensagem.UltimaChamada, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static IMCxBuscaMensagem _Instance;
            public static IMCxBuscaMensagem Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<IMCxBuscaMensagem>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField IMCxBuscaMensagemID = new XORMPKField(new Guid("30465444-9569-4F39-A226-613481BB634B"), "IMCxBuscaMensagemID", "BuscaMensagem", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMDateTimeField UltimaChamada = new XORMDateTimeField(new Guid("4CB47AC2-8670-4993-B073-BC1723693CBE"), "UltimaChamada", "Ãltima Chamada", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            static IMCxBuscaMensagem()
            {
                IMCxBuscaMensagemID.PKID = new Guid("E528546008D7460298039D032700D30B");
                IMCxBuscaMensagemID.UpdateStatic = true;
                IMCxBuscaMensagemID.InsertOnly = false;
                IMCxBuscaMensagemID.TableName = "IMCxBuscaMensagem";
                IMCxBuscaMensagemID.SourceTableID = new Guid("CFA96672-96BB-40C5-A7B6-2FA172367AF0");
                IMCxBuscaMensagemID.Index = 0;
                IMCxBuscaMensagemID.IsFaceField = true;
                UltimaChamada.UpdateStatic = true;
                UltimaChamada.InsertOnly = false;
                UltimaChamada.TableName = "IMCxBuscaMensagem";
                UltimaChamada.SourceTableID = new Guid("CFA96672-96BB-40C5-A7B6-2FA172367AF0");
                UltimaChamada.Index = 1;
            }
            protected IMCxBuscaMensagem()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__IMCxBuscaMensagem);
            #endif
                ID = new Guid("CFA96672-96BB-40C5-A7B6-2FA172367AF0");
                Name = "IMCxBuscaMensagem";
                Title = "BuscaMensagem";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
                DeleteOnDeactivate = false;
                PKName = "PK_3046544495694F39A226613481BB634B";
                FaceField = IMCxBuscaMensagemID;
                DisplayField = IMCxBuscaMensagemID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {new Guid("00000000-0000-0000-0000-000000000000"), TFX.Core.XDefault.NullDateTime}), new Guid("00000000-0000-0000-0000-000000000000"));
            }
        }

        #endregion IMCxBuscaMensagem

        #region IMCxClasse

        [XRegister(typeof(IMCxClasse), sCID)]
        public class IMCxClasse : XORMTable
        {
            public const String sCID = "2BE09B92-7AFA-47D1-895A-112295333AC3";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sEntrada => _Titles[(Int16)0];
                public const Int16 Entrada = (Int16)0;
                public static String sSaida_Automatica => _Titles[(Int16)2];
                public const Int16 Saida_Automatica = (Int16)2;
                public static String sSaida_Chat => _Titles[(Int16)1];
                public const Int16 Saida_Chat = (Int16)1;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)0] = "Entrada",
                [(Int16)2] = "SaÃ­da AutomÃ¡tica",
                [(Int16)1] = "SaÃ­da Chat"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Classe
                {
                    get
                    {
                        return (String)Value[IMCxClasse.Classe];
                    }
                    set
                    {
                        this[IMCxClasse.Classe] = value;
                    }
                }
                public String? oClasse
                {
                    get
                    {
                        GetOldValue(IMCxClasse.Classe, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 IMCxClasseID
                {
                    get
                    {
                        return (Int16)Value[IMCxClasse.IMCxClasseID];
                    }
                    set
                    {
                        this[IMCxClasse.IMCxClasseID] = value;
                    }
                }
                public Int16? oIMCxClasseID
                {
                    get
                    {
                        GetOldValue(IMCxClasse.IMCxClasseID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static IMCxClasse _Instance;
            public static IMCxClasse Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<IMCxClasse>(gCID);
                    return _Instance;
                }
            }
            public static XORMFaceField Classe = new XORMFaceField(new Guid("0C2E6DCB-6BE0-4B6B-8C82-072C93D8B5D3"), "Classe", "Classe", XString.CID, 20, 0, false, gCID, null);
            public static XORMPKField IMCxClasseID = new XORMPKField(new Guid("ECE110D2-BDAC-4B50-BB0B-57D974B122EB"), "IMCxClasseID", "Classe", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static IMCxClasse()
            {
                IMCxClasseID.PKID = new Guid("A4E9C2E6F1C24AAEBB7243587EBE7832");
                IMCxClasseID.UpdateStatic = true;
                IMCxClasseID.InsertOnly = false;
                IMCxClasseID.TableName = "IMCxClasse";
                IMCxClasseID.SourceTableID = new Guid("2BE09B92-7AFA-47D1-895A-112295333AC3");
                IMCxClasseID.Index = 0;
                Classe.UpdateStatic = true;
                Classe.InsertOnly = false;
                Classe.TableName = "IMCxClasse";
                Classe.SourceTableID = new Guid("2BE09B92-7AFA-47D1-895A-112295333AC3");
                Classe.Index = 1;
                Classe.IsFaceField = true;
            }
            protected IMCxClasse()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__IMCxClasse);
            #endif
                ID = new Guid("2BE09B92-7AFA-47D1-895A-112295333AC3");
                Name = "IMCxClasse";
                Title = "Classe";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
                DeleteOnDeactivate = false;
                PKName = "PK_ECE110D2BDAC4B50BB0B57D974B122EB";
                FaceField = Classe;
                IsCached = true;
                DisplayField = Classe;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)0, @"Entrada"}), (Int16)0);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)2, @"SaÃ­da AutomÃ¡tica"}), (Int16)2);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)1, @"SaÃ­da Chat"}), (Int16)1);
            }
        }

        #endregion IMCxClasse

        #region IMCxEstado

        [XRegister(typeof(IMCxEstado), sCID)]
        public class IMCxEstado : XORMTable
        {
            public const String sCID = "2926E484-A846-4012-AA4D-08FF2A387450";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sLida => _Titles[(Int16)3];
                public const Int16 Lida = (Int16)3;
                public static String sEnviada => _Titles[(Int16)1];
                public const Int16 Enviada = (Int16)1;
                public static String sNao_Enviada => _Titles[(Int16)0];
                public const Int16 Nao_Enviada = (Int16)0;
                public static String sRecebida => _Titles[(Int16)2];
                public const Int16 Recebida = (Int16)2;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)3] = "Lida",
                [(Int16)1] = "Enviada",
                [(Int16)0] = "NÃ£o Enviada",
                [(Int16)2] = "Recebida"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Estado
                {
                    get
                    {
                        return (String)Value[IMCxEstado.Estado];
                    }
                    set
                    {
                        this[IMCxEstado.Estado] = value;
                    }
                }
                public String? oEstado
                {
                    get
                    {
                        GetOldValue(IMCxEstado.Estado, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 IMCxEstadoID
                {
                    get
                    {
                        return (Int16)Value[IMCxEstado.IMCxEstadoID];
                    }
                    set
                    {
                        this[IMCxEstado.IMCxEstadoID] = value;
                    }
                }
                public Int16? oIMCxEstadoID
                {
                    get
                    {
                        GetOldValue(IMCxEstado.IMCxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static IMCxEstado _Instance;
            public static IMCxEstado Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<IMCxEstado>(gCID);
                    return _Instance;
                }
            }
            public static XORMFaceField Estado = new XORMFaceField(new Guid("5F3791E5-C8BA-47FD-A34B-4DB24D1998A4"), "Estado", "Estado", XString.CID, 20, 0, false, gCID, null);
            public static XORMPKField IMCxEstadoID = new XORMPKField(new Guid("7721A5C5-0FC6-42F0-ADF5-92C9FAB2EBF7"), "IMCxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static IMCxEstado()
            {
                IMCxEstadoID.PKID = new Guid("3EE15D949FF44A449B4D863C0060F433");
                IMCxEstadoID.UpdateStatic = true;
                IMCxEstadoID.InsertOnly = false;
                IMCxEstadoID.TableName = "IMCxEstado";
                IMCxEstadoID.SourceTableID = new Guid("2926E484-A846-4012-AA4D-08FF2A387450");
                IMCxEstadoID.Index = 0;
                Estado.UpdateStatic = true;
                Estado.InsertOnly = false;
                Estado.TableName = "IMCxEstado";
                Estado.SourceTableID = new Guid("2926E484-A846-4012-AA4D-08FF2A387450");
                Estado.Index = 1;
                Estado.IsFaceField = true;
            }
            protected IMCxEstado()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__IMCxEstado);
            #endif
                ID = new Guid("2926E484-A846-4012-AA4D-08FF2A387450");
                Name = "IMCxEstado";
                Title = "Estado";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
                DeleteOnDeactivate = false;
                PKName = "PK_7721A5C50FC642F0ADF592C9FAB2EBF7";
                FaceField = Estado;
                IsCached = true;
                DisplayField = Estado;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)3, @"Lida"}), (Int16)3);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)1, @"Enviada"}), (Int16)1);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)0, @"NÃ£o Enviada"}), (Int16)0);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)2, @"Recebida"}), (Int16)2);
            }
        }

        #endregion IMCxEstado

        #region IMCxEvento

        [XRegister(typeof(IMCxEvento), sCID)]
        public class IMCxEvento : XORMTable
        {
            public const String sCID = "331B1460-E3D9-44B3-AE90-30DCEBA40458";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sFinalizacao_do_Atendimento => _Titles[(Int16)2];
                public const Int16 Finalizacao_do_Atendimento = (Int16)2;
                public static String sEntrada_para_Atendimento => _Titles[(Int16)1];
                public const Int16 Entrada_para_Atendimento = (Int16)1;
                public static String sSaida_para_Entrega => _Titles[(Int16)3];
                public const Int16 Saida_para_Entrega = (Int16)3;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)2] = "FinalizaÃ§Ã£o do Atendimento",
                [(Int16)1] = "Entrada para Atendimento",
                [(Int16)3] = "SaÃ­da para Entrega"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Evento
                {
                    get
                    {
                        return (String)Value[IMCxEvento.Evento];
                    }
                    set
                    {
                        this[IMCxEvento.Evento] = value;
                    }
                }
                public String? oEvento
                {
                    get
                    {
                        GetOldValue(IMCxEvento.Evento, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 IMCxEventoID
                {
                    get
                    {
                        return (Int16)Value[IMCxEvento.IMCxEventoID];
                    }
                    set
                    {
                        this[IMCxEvento.IMCxEventoID] = value;
                    }
                }
                public Int16? oIMCxEventoID
                {
                    get
                    {
                        GetOldValue(IMCxEvento.IMCxEventoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static IMCxEvento _Instance;
            public static IMCxEvento Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<IMCxEvento>(gCID);
                    return _Instance;
                }
            }
            public static XORMFaceField Evento = new XORMFaceField(new Guid("6782835C-30C7-4359-917B-BFF405805332"), "Evento", "Evento", XString.CID, 30, 0, false, gCID, null);
            public static XORMPKField IMCxEventoID = new XORMPKField(new Guid("3D97CF26-BF21-4AF3-9F42-5B2259F944D8"), "IMCxEventoID", "Evento", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static IMCxEvento()
            {
                IMCxEventoID.PKID = new Guid("7A5DFBBD22FC4FA0AA0F9BE2C9D6D2A8");
                IMCxEventoID.UpdateStatic = true;
                IMCxEventoID.InsertOnly = false;
                IMCxEventoID.TableName = "IMCxEvento";
                IMCxEventoID.SourceTableID = new Guid("331B1460-E3D9-44B3-AE90-30DCEBA40458");
                IMCxEventoID.Index = 0;
                Evento.UpdateStatic = true;
                Evento.InsertOnly = false;
                Evento.TableName = "IMCxEvento";
                Evento.SourceTableID = new Guid("331B1460-E3D9-44B3-AE90-30DCEBA40458");
                Evento.Index = 1;
                Evento.IsFaceField = true;
            }
            protected IMCxEvento()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__IMCxEvento);
            #endif
                ID = new Guid("331B1460-E3D9-44B3-AE90-30DCEBA40458");
                Name = "IMCxEvento";
                Title = "Evento";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
                DeleteOnDeactivate = false;
                PKName = "PK_3D97CF26BF214AF39F425B2259F944D8";
                FaceField = Evento;
                IsCached = true;
                DisplayField = Evento;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)2, @"FinalizaÃ§Ã£o do Atendimento"}), (Int16)2);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)1, @"Entrada para Atendimento"}), (Int16)1);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)3, @"SaÃ­da para Entrega"}), (Int16)3);
            }
        }

        #endregion IMCxEvento

        #region IMCxMensagem

        [XRegister(typeof(IMCxMensagem), sCID)]
        public class IMCxMensagem : XORMTable
        {
            public const String sCID = "D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Codigo
                {
                    get
                    {
                        return (String)Value[IMCxMensagem.Codigo];
                    }
                    set
                    {
                        this[IMCxMensagem.Codigo] = value;
                    }
                }
                public String? oCodigo
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.Codigo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public DateTime Data
                {
                    get
                    {
                        return (DateTime)Value[IMCxMensagem.Data];
                    }
                    set
                    {
                        this[IMCxMensagem.Data] = value;
                    }
                }
                public DateTime? oData
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.Data, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public String Destino
                {
                    get
                    {
                        return (String)Value[IMCxMensagem.Destino];
                    }
                    set
                    {
                        this[IMCxMensagem.Destino] = value;
                    }
                }
                public String? oDestino
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.Destino, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 IMCxClasseID
                {
                    get
                    {
                        return (Int16)Value[IMCxMensagem.IMCxClasseID];
                    }
                    set
                    {
                        this[IMCxMensagem.IMCxClasseID] = value;
                    }
                }
                public Int16? oIMCxClasseID
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.IMCxClasseID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Int16 IMCxEstadoID
                {
                    get
                    {
                        return (Int16)Value[IMCxMensagem.IMCxEstadoID];
                    }
                    set
                    {
                        this[IMCxMensagem.IMCxEstadoID] = value;
                    }
                }
                public Int16? oIMCxEstadoID
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.IMCxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid IMCxMensagemID
                {
                    get
                    {
                        return (Guid)Value[IMCxMensagem.IMCxMensagemID];
                    }
                    set
                    {
                        this[IMCxMensagem.IMCxMensagemID] = value;
                    }
                }
                public Guid? oIMCxMensagemID
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.IMCxMensagemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Boolean Integrado
                {
                    get
                    {
                        return (Boolean)Value[IMCxMensagem.Integrado];
                    }
                    set
                    {
                        this[IMCxMensagem.Integrado] = value;
                    }
                }
                public Boolean? oIntegrado
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.Integrado, out Object ovlr);
                        return (Boolean?)ovlr;
                    }
                }
                public Byte[] Mensagem
                {
                    get
                    {
                        return (Byte[])Value[IMCxMensagem.Mensagem];
                    }
                    set
                    {
                        this[IMCxMensagem.Mensagem] = value;
                    }
                }
                public Byte[]? oMensagem
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.Mensagem, out Object ovlr);
                        return (Byte[]?)ovlr;
                    }
                }
                public String Origem
                {
                    get
                    {
                        return (String)Value[IMCxMensagem.Origem];
                    }
                    set
                    {
                        this[IMCxMensagem.Origem] = value;
                    }
                }
                public String? oOrigem
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.Origem, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Guid SYSxEmpresaID
                {
                    get
                    {
                        return (Guid)Value[IMCxMensagem.SYSxEmpresaID];
                    }
                    set
                    {
                        this[IMCxMensagem.SYSxEmpresaID] = value;
                    }
                }
                public Guid? oSYSxEmpresaID
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.SYSxEmpresaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid SYSxEmpresaOrigemID
                {
                    get
                    {
                        return (Guid)Value[IMCxMensagem.SYSxEmpresaOrigemID];
                    }
                    set
                    {
                        this[IMCxMensagem.SYSxEmpresaOrigemID] = value;
                    }
                }
                public Guid? oSYSxEmpresaOrigemID
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.SYSxEmpresaOrigemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid SYSxPessoaID
                {
                    get
                    {
                        return (Guid)Value[IMCxMensagem.SYSxPessoaID];
                    }
                    set
                    {
                        this[IMCxMensagem.SYSxPessoaID] = value;
                    }
                }
                public Guid? oSYSxPessoaID
                {
                    get
                    {
                        GetOldValue(IMCxMensagem.SYSxPessoaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static IMCxMensagem _Instance;
            public static IMCxMensagem Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<IMCxMensagem>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Codigo = new XORMField(new Guid("B1AA640E-E333-401C-AF8B-CAA1A4CF5EDF"), "Codigo", "CÃ³digo", XString.CID, 50, 0, true, gCID, null);
            public static XORMDateTimeField Data = new XORMDateTimeField(new Guid("83C85E6D-79C0-41B0-8E0F-2DE7CCC50650"), "Data", "Data", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMField Destino = new XORMField(new Guid("9EEF2084-9E9A-43DC-A4B4-900B210CB874"), "Destino", "Destino", XString.CID, 50, 0, false, gCID, null);
            public static XORMFKField IMCxClasseID = new XORMFKField(new Guid("2587C95F-DE63-476E-A3DA-7F21DB02B584"), "IMCxClasseID", "Classe", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFKField IMCxEstadoID = new XORMFKField(new Guid("B04BFF4D-0F01-4456-87BE-7A4A3EB1FA9D"), "IMCxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMPKField IMCxMensagemID = new XORMPKField(new Guid("A0D0F8ED-2C97-44B7-AB3F-1953D01C3F13"), "IMCxMensagemID", "Mensagem", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Integrado = new XORMField(new Guid("D9A5A525-10E3-4D21-B07A-5BD304699701"), "Integrado", "Integrado", XBoolean.CID, 0, 0, false, gCID, false);
            public static XORMField Mensagem = new XORMField(new Guid("ACC8978C-5033-45DB-A9A1-55E157D100D1"), "Mensagem", "Mensagem", XBinary.CID, 0, 0, false, gCID, null);
            public static XORMField Origem = new XORMField(new Guid("D08E44EE-A02F-4815-898E-ACDCE4BF411A"), "Origem", "Origem", XString.CID, 50, 0, false, gCID, null);
            public static XORMFKField SYSxEmpresaID = new XORMFKField(new Guid("5902D249-FD6A-4C13-B673-BF89A9082E9C"), "SYSxEmpresaID", "Empresa", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField SYSxEmpresaOrigemID = new XORMFKField(new Guid("0DF68FC2-9985-47D2-9074-C23BF78254EF"), "SYSxEmpresaOrigemID", "Empresa", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField SYSxPessoaID = new XORMFKField(new Guid("9B015382-AAA7-4E70-9577-962556AAC464"), "SYSxPessoaID", "Contato", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_B047560C4EB54E41BC73EBC647256419 = new XORMReference(new Guid("B047560C-4EB5-4E41-BC73-EBC647256419"), "FK_B047560C4EB54E41BC73EBC647256419", gCID, IMCxEstadoID.ID, IMCxEstado.gCID, IMCxEstado.IMCxEstadoID.ID);
            public static readonly XORMReference FK_01372F7ECFA74007BCA92EBD6928D0BB = new XORMReference(new Guid("01372F7E-CFA7-4007-BCA9-2EBD6928D0BB"), "FK_01372F7ECFA74007BCA92EBD6928D0BB", gCID, IMCxClasseID.ID, IMCxClasse.gCID, IMCxClasse.IMCxClasseID.ID);
            public static readonly XORMReference FK_214AA1F39C034678B975FC259F76C312 = new XORMReference(new Guid("214AA1F3-9C03-4678-B975-FC259F76C312"), "FK_214AA1F39C034678B975FC259F76C312", gCID, SYSxEmpresaOrigemID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID.ID);
            public static readonly XORMReference FK_A560611C1EC94F23835F5C186EB7A5B4 = new XORMReference(new Guid("A560611C-1EC9-4F23-835F-5C186EB7A5B4"), "FK_A560611C1EC94F23835F5C186EB7A5B4", gCID, SYSxEmpresaID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID.ID);
            public static readonly XORMReference FK_BAAF6B9ECA444032B1760F0872D4DD58 = new XORMReference(new Guid("BAAF6B9E-CA44-4032-B176-0F0872D4DD58"), "FK_BAAF6B9ECA444032B1760F0872D4DD58", gCID, SYSxPessoaID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID.ID);
            public static readonly XORMIndex IX_170831BBB09B40D9918F78045EBD639D = new XORMIndex();
            public static readonly XORMIndex IX_B047560C4EB54E41BC73EBC647256419 = new XORMIndex();
            public static readonly XORMIndex IX_01372F7ECFA74007BCA92EBD6928D0BB = new XORMIndex();
            public static readonly XORMIndex IX_214AA1F39C034678B975FC259F76C312 = new XORMIndex();
            public static readonly XORMIndex IX_A560611C1EC94F23835F5C186EB7A5B4 = new XORMIndex();
            public static readonly XORMIndex IX_BAAF6B9ECA444032B1760F0872D4DD58 = new XORMIndex();
            static IMCxMensagem()
            {
                IMCxMensagemID.PKID = new Guid("14C7FE3E91264B398C2BCC5E78CC3A14");
                IMCxMensagemID.UpdateStatic = true;
                IMCxMensagemID.InsertOnly = false;
                IMCxMensagemID.TableName = "IMCxMensagem";
                IMCxMensagemID.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                IMCxMensagemID.Index = 0;
                SYSxPessoaID.UpdateStatic = true;
                SYSxPessoaID.InsertOnly = false;
                SYSxPessoaID.TableName = "IMCxMensagem";
                SYSxPessoaID.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                SYSxPessoaID.Index = 1;
                IMCxClasseID.UpdateStatic = true;
                IMCxClasseID.InsertOnly = false;
                IMCxClasseID.TableName = "IMCxMensagem";
                IMCxClasseID.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                IMCxClasseID.Index = 2;
                Data.UpdateStatic = true;
                Data.InsertOnly = false;
                Data.TableName = "IMCxMensagem";
                Data.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Data.Index = 3;
                Mensagem.UpdateStatic = true;
                Mensagem.InsertOnly = false;
                Mensagem.TableName = "IMCxMensagem";
                Mensagem.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Mensagem.Index = 4;
                IMCxEstadoID.UpdateStatic = true;
                IMCxEstadoID.InsertOnly = false;
                IMCxEstadoID.TableName = "IMCxMensagem";
                IMCxEstadoID.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                IMCxEstadoID.Index = 5;
                Codigo.UpdateStatic = true;
                Codigo.InsertOnly = false;
                Codigo.TableName = "IMCxMensagem";
                Codigo.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Codigo.Index = 6;
                Destino.UpdateStatic = true;
                Destino.InsertOnly = false;
                Destino.TableName = "IMCxMensagem";
                Destino.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Destino.Index = 7;
                Origem.UpdateStatic = true;
                Origem.InsertOnly = false;
                Origem.TableName = "IMCxMensagem";
                Origem.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Origem.Index = 8;
                SYSxEmpresaID.UpdateStatic = true;
                SYSxEmpresaID.InsertOnly = false;
                SYSxEmpresaID.TableName = "IMCxMensagem";
                SYSxEmpresaID.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                SYSxEmpresaID.Index = 9;
                SYSxEmpresaOrigemID.UpdateStatic = true;
                SYSxEmpresaOrigemID.InsertOnly = false;
                SYSxEmpresaOrigemID.TableName = "IMCxMensagem";
                SYSxEmpresaOrigemID.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                SYSxEmpresaOrigemID.Index = 10;
                Integrado.UpdateStatic = true;
                Integrado.InsertOnly = false;
                Integrado.TableName = "IMCxMensagem";
                Integrado.SourceTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Integrado.Index = 11;
                IX_170831BBB09B40D9918F78045EBD639D.Name = "IX_170831BBB09B40D9918F78045EBD639D";
                IX_170831BBB09B40D9918F78045EBD639D.ID = new Guid("170831BB-B09B-40D9-918F-78045EBD639D");
                IX_170831BBB09B40D9918F78045EBD639D.IsUnique = true;
                IX_170831BBB09B40D9918F78045EBD639D.Description = "";
                IX_170831BBB09B40D9918F78045EBD639D.AddItem(Codigo);
                IX_170831BBB09B40D9918F78045EBD639D.NullDuplicate.Add(Codigo);
                IX_B047560C4EB54E41BC73EBC647256419.Name = "IX_B047560C4EB54E41BC73EBC647256419";
                IX_B047560C4EB54E41BC73EBC647256419.ID = new Guid("B19E6A59-8E32-4DA7-AF61-F5C12C0C9E76");
                IX_B047560C4EB54E41BC73EBC647256419.IsUnique = false;
                IX_B047560C4EB54E41BC73EBC647256419.Description = "";
                IX_B047560C4EB54E41BC73EBC647256419.AddItem(IMCxEstadoID);
                IX_01372F7ECFA74007BCA92EBD6928D0BB.Name = "IX_01372F7ECFA74007BCA92EBD6928D0BB";
                IX_01372F7ECFA74007BCA92EBD6928D0BB.ID = new Guid("23344A2D-8702-4BA1-9C37-528035998368");
                IX_01372F7ECFA74007BCA92EBD6928D0BB.IsUnique = false;
                IX_01372F7ECFA74007BCA92EBD6928D0BB.Description = "";
                IX_01372F7ECFA74007BCA92EBD6928D0BB.AddItem(IMCxClasseID);
                IX_214AA1F39C034678B975FC259F76C312.Name = "IX_214AA1F39C034678B975FC259F76C312";
                IX_214AA1F39C034678B975FC259F76C312.ID = new Guid("3A600AB4-0EFD-4E55-BBD0-AA0397229D5F");
                IX_214AA1F39C034678B975FC259F76C312.IsUnique = false;
                IX_214AA1F39C034678B975FC259F76C312.Description = "";
                IX_214AA1F39C034678B975FC259F76C312.AddItem(SYSxEmpresaOrigemID);
                IX_A560611C1EC94F23835F5C186EB7A5B4.Name = "IX_A560611C1EC94F23835F5C186EB7A5B4";
                IX_A560611C1EC94F23835F5C186EB7A5B4.ID = new Guid("C72FEFAC-540F-47DA-A7DB-109E7D587EFD");
                IX_A560611C1EC94F23835F5C186EB7A5B4.IsUnique = false;
                IX_A560611C1EC94F23835F5C186EB7A5B4.Description = "";
                IX_A560611C1EC94F23835F5C186EB7A5B4.AddItem(SYSxEmpresaID);
                IX_BAAF6B9ECA444032B1760F0872D4DD58.Name = "IX_BAAF6B9ECA444032B1760F0872D4DD58";
                IX_BAAF6B9ECA444032B1760F0872D4DD58.ID = new Guid("439289AD-30B8-4163-A5E1-D569BF26F3C5");
                IX_BAAF6B9ECA444032B1760F0872D4DD58.IsUnique = false;
                IX_BAAF6B9ECA444032B1760F0872D4DD58.Description = "";
                IX_BAAF6B9ECA444032B1760F0872D4DD58.AddItem(SYSxPessoaID);
                IMCxEstadoID.AllowZero = true;
                FK_B047560C4EB54E41BC73EBC647256419.AllowZero = true;
                IMCxClasseID.AllowZero = true;
                FK_01372F7ECFA74007BCA92EBD6928D0BB.AllowZero = true;
                SYSxEmpresaOrigemID.AllowZero = true;
                FK_214AA1F39C034678B975FC259F76C312.AllowZero = true;
                SYSxEmpresaID.AllowZero = true;
                FK_A560611C1EC94F23835F5C186EB7A5B4.AllowZero = true;
                SYSxPessoaID.AllowZero = true;
                FK_BAAF6B9ECA444032B1760F0872D4DD58.AllowZero = true;
            }
            protected IMCxMensagem()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__IMCxMensagem);
            #endif
                ID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
                Name = "IMCxMensagem";
                Title = "Mensagem";
                CompanyControlType = XCompanyControlType.CurrentCompany;
                ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
                DeleteOnDeactivate = false;
                PKName = "PK_A0D0F8ED2C9744B7AB3F1953D01C3F13";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion IMCxMensagem

        #region _IMCxAgendaMensagem

            #if !OnlyDef
        [Guid(__IMCxAgendaMensagem.sCID)]
        public interface _IMCxAgendaMensagem : XIBasePersistence, IEnumerable<IMCxAgendaMensagem.XTuple>
        {
            IMCxAgendaMensagem.XTuple NewTuple();

            new IMCxAgendaMensagem.XTuple NewTuple(Object pPKValue);

            new IMCxAgendaMensagem.XTuple FindTuple(params Object[] pFieldValuePar);

            new IMCxAgendaMensagem.XTuple FindTupleByPK(Object pPKValue);

            IMCxAgendaMensagem.XTuple this[Int32 pInex]
            {
                get;
            }


            new IMCxAgendaMensagem.XTuple Current
            {
                get;
            }

            IEnumerable<IMCxAgendaMensagem.XTuple> Tuples
            {
                get;
            }

            IMCxAgendaMensagem.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _IMCxAgendaMensagem

        #region _IMCxAgendaMensagem<TModel, TTuple>

            #if !OnlyDef
        public class _IMCxAgendaMensagem<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _IMCxAgendaMensagem where TModel : IMCxAgendaMensagem where TTuple : IMCxAgendaMensagem.XTuple 
        {
            protected _IMCxAgendaMensagem()
            {
            }
            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.this[Int32 pInex] => (IMCxAgendaMensagem.XTuple)base[pInex];

            IEnumerable<IMCxAgendaMensagem.XTuple> _IMCxAgendaMensagem.Tuples => (IEnumerable<IMCxAgendaMensagem.XTuple>)base.Tuples;

            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (IMCxAgendaMensagem.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.FindTuple(params Object[] pFieldValuePar)
            {
                return (IMCxAgendaMensagem.XTuple)base.FindTuple(pFieldValuePar);
            }

            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.FindTupleByPK(Object pPKValue)
            {
                return (IMCxAgendaMensagem.XTuple)base.FindTupleByPK(pPKValue);
            }

            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.NewTuple()
            {
                return (IMCxAgendaMensagem.XTuple)NewTuple();
            }

            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.NewTuple(Object pPKValue)
            {
                return (IMCxAgendaMensagem.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<IMCxAgendaMensagem.XTuple> IEnumerable<IMCxAgendaMensagem.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            IMCxAgendaMensagem.XTuple _IMCxAgendaMensagem.Current => base.Current;
        }
            #endif

        #endregion _IMCxAgendaMensagem<TModel, TTuple>

        #region __IMCxAgendaMensagem

            #if !OnlyDef
        [XRegister(typeof(__IMCxAgendaMensagem), sCID, typeof(IMCxAgendaMensagem))]
        public class __IMCxAgendaMensagem : _IMCxAgendaMensagem<IMCxAgendaMensagem, IMCxAgendaMensagem.XTuple>
        {
            public const String sCID = "8ED3D3E3-5D92-4204-86CE-CFF1B64F2A73";
            public static Guid gCID = new Guid(sCID);
            protected __IMCxAgendaMensagem()
            {
                TupleType = typeof(IMCxAgendaMensagem.XTuple);
            }
        }
            #endif

        #endregion __IMCxAgendaMensagem

        #region _IMCxBuscaMensagem

            #if !OnlyDef
        [Guid(__IMCxBuscaMensagem.sCID)]
        public interface _IMCxBuscaMensagem : XIBasePersistence, IEnumerable<IMCxBuscaMensagem.XTuple>
        {
            IMCxBuscaMensagem.XTuple NewTuple();

            new IMCxBuscaMensagem.XTuple NewTuple(Object pPKValue);

            new IMCxBuscaMensagem.XTuple FindTuple(params Object[] pFieldValuePar);

            new IMCxBuscaMensagem.XTuple FindTupleByPK(Object pPKValue);

            IMCxBuscaMensagem.XTuple this[Int32 pInex]
            {
                get;
            }


            new IMCxBuscaMensagem.XTuple Current
            {
                get;
            }

            IEnumerable<IMCxBuscaMensagem.XTuple> Tuples
            {
                get;
            }

            IMCxBuscaMensagem.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _IMCxBuscaMensagem

        #region _IMCxBuscaMensagem<TModel, TTuple>

            #if !OnlyDef
        public class _IMCxBuscaMensagem<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _IMCxBuscaMensagem where TModel : IMCxBuscaMensagem where TTuple : IMCxBuscaMensagem.XTuple 
        {
            protected _IMCxBuscaMensagem()
            {
            }
            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.this[Int32 pInex] => (IMCxBuscaMensagem.XTuple)base[pInex];

            IEnumerable<IMCxBuscaMensagem.XTuple> _IMCxBuscaMensagem.Tuples => (IEnumerable<IMCxBuscaMensagem.XTuple>)base.Tuples;

            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (IMCxBuscaMensagem.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.FindTuple(params Object[] pFieldValuePar)
            {
                return (IMCxBuscaMensagem.XTuple)base.FindTuple(pFieldValuePar);
            }

            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.FindTupleByPK(Object pPKValue)
            {
                return (IMCxBuscaMensagem.XTuple)base.FindTupleByPK(pPKValue);
            }

            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.NewTuple()
            {
                return (IMCxBuscaMensagem.XTuple)NewTuple();
            }

            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.NewTuple(Object pPKValue)
            {
                return (IMCxBuscaMensagem.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<IMCxBuscaMensagem.XTuple> IEnumerable<IMCxBuscaMensagem.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            IMCxBuscaMensagem.XTuple _IMCxBuscaMensagem.Current => base.Current;
        }
            #endif

        #endregion _IMCxBuscaMensagem<TModel, TTuple>

        #region __IMCxBuscaMensagem

            #if !OnlyDef
        [XRegister(typeof(__IMCxBuscaMensagem), sCID, typeof(IMCxBuscaMensagem))]
        public class __IMCxBuscaMensagem : _IMCxBuscaMensagem<IMCxBuscaMensagem, IMCxBuscaMensagem.XTuple>
        {
            public const String sCID = "7F320EB1-7083-435B-A524-B0B6F37CCCC7";
            public static Guid gCID = new Guid(sCID);
            protected __IMCxBuscaMensagem()
            {
                TupleType = typeof(IMCxBuscaMensagem.XTuple);
            }
        }
            #endif

        #endregion __IMCxBuscaMensagem

        #region _IMCxClasse

            #if !OnlyDef
        [Guid(__IMCxClasse.sCID)]
        public interface _IMCxClasse : XIBasePersistence, IEnumerable<IMCxClasse.XTuple>
        {
            IMCxClasse.XTuple NewTuple();

            new IMCxClasse.XTuple NewTuple(Object pPKValue);

            new IMCxClasse.XTuple FindTuple(params Object[] pFieldValuePar);

            new IMCxClasse.XTuple FindTupleByPK(Object pPKValue);

            IMCxClasse.XTuple this[Int32 pInex]
            {
                get;
            }


            new IMCxClasse.XTuple Current
            {
                get;
            }

            IEnumerable<IMCxClasse.XTuple> Tuples
            {
                get;
            }

            IMCxClasse.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _IMCxClasse

        #region _IMCxClasse<TModel, TTuple>

            #if !OnlyDef
        public class _IMCxClasse<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _IMCxClasse where TModel : IMCxClasse where TTuple : IMCxClasse.XTuple 
        {
            protected _IMCxClasse()
            {
            }
            IMCxClasse.XTuple _IMCxClasse.this[Int32 pInex] => (IMCxClasse.XTuple)base[pInex];

            IEnumerable<IMCxClasse.XTuple> _IMCxClasse.Tuples => (IEnumerable<IMCxClasse.XTuple>)base.Tuples;

            IMCxClasse.XTuple _IMCxClasse.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (IMCxClasse.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            IMCxClasse.XTuple _IMCxClasse.FindTuple(params Object[] pFieldValuePar)
            {
                return (IMCxClasse.XTuple)base.FindTuple(pFieldValuePar);
            }

            IMCxClasse.XTuple _IMCxClasse.FindTupleByPK(Object pPKValue)
            {
                return (IMCxClasse.XTuple)base.FindTupleByPK(pPKValue);
            }

            IMCxClasse.XTuple _IMCxClasse.NewTuple()
            {
                return (IMCxClasse.XTuple)NewTuple();
            }

            IMCxClasse.XTuple _IMCxClasse.NewTuple(Object pPKValue)
            {
                return (IMCxClasse.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<IMCxClasse.XTuple> IEnumerable<IMCxClasse.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            IMCxClasse.XTuple _IMCxClasse.Current => base.Current;
        }
            #endif

        #endregion _IMCxClasse<TModel, TTuple>

        #region __IMCxClasse

            #if !OnlyDef
        [XRegister(typeof(__IMCxClasse), sCID, typeof(IMCxClasse))]
        public class __IMCxClasse : _IMCxClasse<IMCxClasse, IMCxClasse.XTuple>
        {
            public const String sCID = "0A48F053-7DC2-40EE-BDFC-6E97F1656460";
            public static Guid gCID = new Guid(sCID);
            protected __IMCxClasse()
            {
                TupleType = typeof(IMCxClasse.XTuple);
            }
        }
            #endif

        #endregion __IMCxClasse

        #region _IMCxEstado

            #if !OnlyDef
        [Guid(__IMCxEstado.sCID)]
        public interface _IMCxEstado : XIBasePersistence, IEnumerable<IMCxEstado.XTuple>
        {
            IMCxEstado.XTuple NewTuple();

            new IMCxEstado.XTuple NewTuple(Object pPKValue);

            new IMCxEstado.XTuple FindTuple(params Object[] pFieldValuePar);

            new IMCxEstado.XTuple FindTupleByPK(Object pPKValue);

            IMCxEstado.XTuple this[Int32 pInex]
            {
                get;
            }


            new IMCxEstado.XTuple Current
            {
                get;
            }

            IEnumerable<IMCxEstado.XTuple> Tuples
            {
                get;
            }

            IMCxEstado.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _IMCxEstado

        #region _IMCxEstado<TModel, TTuple>

            #if !OnlyDef
        public class _IMCxEstado<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _IMCxEstado where TModel : IMCxEstado where TTuple : IMCxEstado.XTuple 
        {
            protected _IMCxEstado()
            {
            }
            IMCxEstado.XTuple _IMCxEstado.this[Int32 pInex] => (IMCxEstado.XTuple)base[pInex];

            IEnumerable<IMCxEstado.XTuple> _IMCxEstado.Tuples => (IEnumerable<IMCxEstado.XTuple>)base.Tuples;

            IMCxEstado.XTuple _IMCxEstado.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (IMCxEstado.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            IMCxEstado.XTuple _IMCxEstado.FindTuple(params Object[] pFieldValuePar)
            {
                return (IMCxEstado.XTuple)base.FindTuple(pFieldValuePar);
            }

            IMCxEstado.XTuple _IMCxEstado.FindTupleByPK(Object pPKValue)
            {
                return (IMCxEstado.XTuple)base.FindTupleByPK(pPKValue);
            }

            IMCxEstado.XTuple _IMCxEstado.NewTuple()
            {
                return (IMCxEstado.XTuple)NewTuple();
            }

            IMCxEstado.XTuple _IMCxEstado.NewTuple(Object pPKValue)
            {
                return (IMCxEstado.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<IMCxEstado.XTuple> IEnumerable<IMCxEstado.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            IMCxEstado.XTuple _IMCxEstado.Current => base.Current;
        }
            #endif

        #endregion _IMCxEstado<TModel, TTuple>

        #region __IMCxEstado

            #if !OnlyDef
        [XRegister(typeof(__IMCxEstado), sCID, typeof(IMCxEstado))]
        public class __IMCxEstado : _IMCxEstado<IMCxEstado, IMCxEstado.XTuple>
        {
            public const String sCID = "AD01B01A-D78B-433B-BFDD-9DBE86D3E248";
            public static Guid gCID = new Guid(sCID);
            protected __IMCxEstado()
            {
                TupleType = typeof(IMCxEstado.XTuple);
            }
        }
            #endif

        #endregion __IMCxEstado

        #region _IMCxEvento

            #if !OnlyDef
        [Guid(__IMCxEvento.sCID)]
        public interface _IMCxEvento : XIBasePersistence, IEnumerable<IMCxEvento.XTuple>
        {
            IMCxEvento.XTuple NewTuple();

            new IMCxEvento.XTuple NewTuple(Object pPKValue);

            new IMCxEvento.XTuple FindTuple(params Object[] pFieldValuePar);

            new IMCxEvento.XTuple FindTupleByPK(Object pPKValue);

            IMCxEvento.XTuple this[Int32 pInex]
            {
                get;
            }


            new IMCxEvento.XTuple Current
            {
                get;
            }

            IEnumerable<IMCxEvento.XTuple> Tuples
            {
                get;
            }

            IMCxEvento.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _IMCxEvento

        #region _IMCxEvento<TModel, TTuple>

            #if !OnlyDef
        public class _IMCxEvento<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _IMCxEvento where TModel : IMCxEvento where TTuple : IMCxEvento.XTuple 
        {
            protected _IMCxEvento()
            {
            }
            IMCxEvento.XTuple _IMCxEvento.this[Int32 pInex] => (IMCxEvento.XTuple)base[pInex];

            IEnumerable<IMCxEvento.XTuple> _IMCxEvento.Tuples => (IEnumerable<IMCxEvento.XTuple>)base.Tuples;

            IMCxEvento.XTuple _IMCxEvento.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (IMCxEvento.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            IMCxEvento.XTuple _IMCxEvento.FindTuple(params Object[] pFieldValuePar)
            {
                return (IMCxEvento.XTuple)base.FindTuple(pFieldValuePar);
            }

            IMCxEvento.XTuple _IMCxEvento.FindTupleByPK(Object pPKValue)
            {
                return (IMCxEvento.XTuple)base.FindTupleByPK(pPKValue);
            }

            IMCxEvento.XTuple _IMCxEvento.NewTuple()
            {
                return (IMCxEvento.XTuple)NewTuple();
            }

            IMCxEvento.XTuple _IMCxEvento.NewTuple(Object pPKValue)
            {
                return (IMCxEvento.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<IMCxEvento.XTuple> IEnumerable<IMCxEvento.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            IMCxEvento.XTuple _IMCxEvento.Current => base.Current;
        }
            #endif

        #endregion _IMCxEvento<TModel, TTuple>

        #region __IMCxEvento

            #if !OnlyDef
        [XRegister(typeof(__IMCxEvento), sCID, typeof(IMCxEvento))]
        public class __IMCxEvento : _IMCxEvento<IMCxEvento, IMCxEvento.XTuple>
        {
            public const String sCID = "888156E6-4042-46DE-8A47-55914D8B54A2";
            public static Guid gCID = new Guid(sCID);
            protected __IMCxEvento()
            {
                TupleType = typeof(IMCxEvento.XTuple);
            }
        }
            #endif

        #endregion __IMCxEvento

        #region _IMCxMensagem

            #if !OnlyDef
        [Guid(__IMCxMensagem.sCID)]
        public interface _IMCxMensagem : XIBasePersistence, IEnumerable<IMCxMensagem.XTuple>
        {
            IMCxMensagem.XTuple NewTuple();

            new IMCxMensagem.XTuple NewTuple(Object pPKValue);

            new IMCxMensagem.XTuple FindTuple(params Object[] pFieldValuePar);

            new IMCxMensagem.XTuple FindTupleByPK(Object pPKValue);

            IMCxMensagem.XTuple this[Int32 pInex]
            {
                get;
            }


            new IMCxMensagem.XTuple Current
            {
                get;
            }

            IEnumerable<IMCxMensagem.XTuple> Tuples
            {
                get;
            }

            IMCxMensagem.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _IMCxMensagem

        #region _IMCxMensagem<TModel, TTuple>

            #if !OnlyDef
        public class _IMCxMensagem<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _IMCxMensagem where TModel : IMCxMensagem where TTuple : IMCxMensagem.XTuple 
        {
            protected _IMCxMensagem()
            {
            }
            IMCxMensagem.XTuple _IMCxMensagem.this[Int32 pInex] => (IMCxMensagem.XTuple)base[pInex];

            IEnumerable<IMCxMensagem.XTuple> _IMCxMensagem.Tuples => (IEnumerable<IMCxMensagem.XTuple>)base.Tuples;

            IMCxMensagem.XTuple _IMCxMensagem.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (IMCxMensagem.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            IMCxMensagem.XTuple _IMCxMensagem.FindTuple(params Object[] pFieldValuePar)
            {
                return (IMCxMensagem.XTuple)base.FindTuple(pFieldValuePar);
            }

            IMCxMensagem.XTuple _IMCxMensagem.FindTupleByPK(Object pPKValue)
            {
                return (IMCxMensagem.XTuple)base.FindTupleByPK(pPKValue);
            }

            IMCxMensagem.XTuple _IMCxMensagem.NewTuple()
            {
                return (IMCxMensagem.XTuple)NewTuple();
            }

            IMCxMensagem.XTuple _IMCxMensagem.NewTuple(Object pPKValue)
            {
                return (IMCxMensagem.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<IMCxMensagem.XTuple> IEnumerable<IMCxMensagem.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            IMCxMensagem.XTuple _IMCxMensagem.Current => base.Current;
        }
            #endif

        #endregion _IMCxMensagem<TModel, TTuple>

        #region __IMCxMensagem

            #if !OnlyDef
        [XRegister(typeof(__IMCxMensagem), sCID, typeof(IMCxMensagem))]
        public class __IMCxMensagem : _IMCxMensagem<IMCxMensagem, IMCxMensagem.XTuple>
        {
            public const String sCID = "5C6D8338-A7DE-457D-A7D3-852D879ED091";
            public static Guid gCID = new Guid(sCID);
            protected __IMCxMensagem()
            {
                TupleType = typeof(IMCxMensagem.XTuple);
            }
        }
            #endif

        #endregion __IMCxMensagem

        static IMCx()
        {
        }

        public IMCx(XModelCache pInstance)
            :base(pInstance)
        {
            ID = new Guid("67E32D5C-5C76-4FD4-BF10-409F9E155039");
            Solution = "Projecao.Core.IMC";
            Project = "Projecao.Core.IMC";
            Name = "IMCx";
            Title = "";
            AddTable(IMCxAgendaMensagem.Instance);
            AddTable(IMCxBuscaMensagem.Instance);
            AddTable(IMCxClasse.Instance);
            AddTable(IMCxEstado.Instance);
            AddTable(IMCxEvento.Instance);
            AddTable(IMCxMensagem.Instance);
        }

        public override Int32 SortedBy
        {
            get
            {
                return 0;
            }
        }
    }
}