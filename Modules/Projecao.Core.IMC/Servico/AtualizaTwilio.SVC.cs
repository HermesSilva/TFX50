//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;

namespace Projecao.Core.IMC.Servico
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Projecao.Core.IMC.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Servico\AtualizaTwilio.dssvc")]
    [XRegister(typeof(AtualizaTwilioSVC), sCID)]
    public class AtualizaTwilioSVC : XSVCModel
    {
        #region XCFGTuple

    //<auto-generated/>
        [XRegister(typeof(XCFGTuple), sCID, typeof(AtualizaTwilioSVC))]
        public class XCFGTuple : XCFGDataTuple
        {
            public const String sCID = "7AF8DB46-C1B7-4E41-AC8D-B5B9A9B72050";
            public static Guid gCID = new Guid(sCID);
            public XCFGTuple()
            {
                FormID = new Guid("029CF6F1-B805-443C-A0B3-0F6583735C01");
                AutoApply = false;
                CompanyFilter = false;
                ConfigPKFilter = false;
                Title = "";
                Delay = 0;
            }
            public Int32 Delay
            {
                get
                {
                    return GetValue<Int32>("Delay");
                }
                set
                {
                    SetValue<Int32>("Delay", value);
                }
            }
            public String SID
            {
                get
                {
                    return GetValue<String>("SID");
                }
                set
                {
                    SetValue<String>("SID", value);
                }
            }
            public String Token
            {
                get
                {
                    return GetValue<String>("Token");
                }
                set
                {
                    SetValue<String>("Token", value);
                }
            }
        }

        #endregion XCFGTuple

        #region AtualizaTwilioConfigFRM

        [XRegister(typeof(AtualizaTwilioConfigFRM), sCID)]
        public class AtualizaTwilioConfigFRM : XFRMModel
        {
            public const String sCID = "029CF6F1-B805-443C-A0B3-0F6583735C01";
            public static new readonly Guid gCID = new Guid(sCID);
            static AtualizaTwilioConfigFRM()
            {
                gCID = new Guid(sCID);
            }
            public AtualizaTwilioConfigFRM()
            {
                ID = gCID;
                Name = "AtualizaTwilioConfig";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Delay);
                Delay.CanInsert = true;
                Delay.CanUpdate = true;
                Delay.RowCount = 2;
                Delay.ColCount = 6;
                Delay.RowCountSmall = 2;
                Delay.ColCountSmall = 6;
                Delay.IsHidden = false;
                Delay.IsHiddenSmall = false;
                Delay.AdditionalTitle = "";
                Delay.Icon = "";
                Delay.Location = 1;
                Delay.EditorCID = new Guid("B45FBE87-40A0-44EF-B2EC-CD6A3000DA3A");
                Delay.Operator = XOperator.EqualTo;
                Delay.ShowSpin = false;
                Delay.HotkeyChar = "";
                Delay.JustifyHeight = false;
                Delay.AllowEmpty = true;
                Delay.FontColor = "#000000";
                Delay.FontStyle = XFontStyle.Normal;
                Delay.ShowFooter = false;
                Delay.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Delay.Order = 1;
                Delay.Scale = -1;
                Delay.Length = -1;
                Delay.SearchAction = XSearchAction.Default;
                Delay.TypeID = XInt32.CID;
                Delay.AdditionalFieldsID = new Guid[] {  };
                Delay.AdditionalDataFieldsID = new Guid[] {  };
                Delay.TargetFilterFieldID = new Guid[] {  };
                Delay.SourceFilterFieldID = new Guid[] {  };
                Delay.TargetDisplayFieldID = new Guid[] {  };
                Delay.SourceDisplayFieldID = new Guid[] {  };
                Delay.AutoLoad = false;
                Delay.FilterInative = true;
                Delay.IsAnswer = false;
                Delay.AllowMultiSelect = false;
                AddItem(SID);
                SID.CanInsert = true;
                SID.CanUpdate = true;
                SID.RowCount = 2;
                SID.ColCount = 6;
                SID.RowCountSmall = 2;
                SID.ColCountSmall = 6;
                SID.IsHidden = false;
                SID.IsHiddenSmall = false;
                SID.AdditionalTitle = "";
                SID.Icon = "";
                SID.Location = 2;
                SID.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                SID.Operator = XOperator.EqualTo;
                SID.ShowSpin = false;
                SID.HotkeyChar = "";
                SID.JustifyHeight = false;
                SID.AllowEmpty = true;
                SID.FontColor = "#000000";
                SID.FontStyle = XFontStyle.Normal;
                SID.ShowFooter = false;
                SID.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                SID.Order = 2;
                SID.Scale = -1;
                SID.Length = -1;
                SID.SearchAction = XSearchAction.Default;
                SID.TypeID = XString.CID;
                SID.AdditionalFieldsID = new Guid[] {  };
                SID.AdditionalDataFieldsID = new Guid[] {  };
                SID.TargetFilterFieldID = new Guid[] {  };
                SID.SourceFilterFieldID = new Guid[] {  };
                SID.TargetDisplayFieldID = new Guid[] {  };
                SID.SourceDisplayFieldID = new Guid[] {  };
                SID.AutoLoad = false;
                SID.FilterInative = true;
                SID.IsAnswer = false;
                SID.AllowMultiSelect = false;
                AddItem(Token);
                Token.CanInsert = true;
                Token.CanUpdate = true;
                Token.RowCount = 2;
                Token.ColCount = 6;
                Token.RowCountSmall = 2;
                Token.ColCountSmall = 6;
                Token.IsHidden = false;
                Token.IsHiddenSmall = false;
                Token.AdditionalTitle = "";
                Token.Icon = "";
                Token.Location = 3;
                Token.EditorCID = new Guid("5CD44E65-DDA1-43A6-899D-19B08032044E");
                Token.Operator = XOperator.EqualTo;
                Token.ShowSpin = false;
                Token.HotkeyChar = "";
                Token.JustifyHeight = false;
                Token.AllowEmpty = true;
                Token.FontColor = "#000000";
                Token.FontStyle = XFontStyle.Normal;
                Token.ShowFooter = false;
                Token.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Token.Order = 3;
                Token.Scale = -1;
                Token.Length = -1;
                Token.SearchAction = XSearchAction.Default;
                Token.TypeID = XString.CID;
                Token.AdditionalFieldsID = new Guid[] {  };
                Token.AdditionalDataFieldsID = new Guid[] {  };
                Token.TargetFilterFieldID = new Guid[] {  };
                Token.SourceFilterFieldID = new Guid[] {  };
                Token.TargetDisplayFieldID = new Guid[] {  };
                Token.SourceDisplayFieldID = new Guid[] {  };
                Token.AutoLoad = false;
                Token.FilterInative = true;
                Token.IsAnswer = false;
                Token.AllowMultiSelect = false;
            }
            public XFRMField Delay = new XFRMField(new Guid("BAFCBB2F-1D2C-453F-B485-5298B5BEA3D3"), "Delay", "Intervalo de Envio", XInt32.CID, 2, 6, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // Int32;
            public XFRMField SID = new XFRMField(new Guid("2062AB65-2DEA-4500-9EB8-8D5A5FD7873A"), "SID", "Conta (SID)", XString.CID, 2, 6, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField Token = new XFRMField(new Guid("EB37B539-761C-4BCD-898E-B5BE3ED58B2D"), "Token", "Autitenticação (Token)", XString.CID, 2, 6, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public static class Fields
            {
                public static XFieldInfo Delay = new XFieldInfo(new Guid("BAFCBB2F-1D2C-453F-B485-5298B5BEA3D3"), "Delay", "Intervalo de Envio", typeof(Int32), false, "");
                public static XFieldInfo SID = new XFieldInfo(new Guid("2062AB65-2DEA-4500-9EB8-8D5A5FD7873A"), "SID", "Conta (SID)", typeof(String), false, "");
                public static XFieldInfo Token = new XFieldInfo(new Guid("EB37B539-761C-4BCD-898E-B5BE3ED58B2D"), "Token", "Autitenticação (Token)", typeof(String), false, "");
            }
        }

        #endregion AtualizaTwilioConfigFRM

        public const String sCID = "D88454F8-1F83-40CF-B3F9-DD61C8F32832";
        public static Guid gCID = new Guid(sCID);

        #region xSYSxJobLog 
        public class xSYSxJobLog : XSVCTable
        {

            public static Guid gCID => new Guid("BB9671B1-AAE6-41D9-AEC4-100FB25F300E");

            public xSYSxJobLog()
            {
                Name = "SYSxJobLog";
                Alias = "SYSxJobLog";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.gCID;

                Items.Add(SYSxJobLogTipoID, SYSxJobLogTipoID.ID);
                SYSxJobLogTipoID.Owner = this;
                SYSxJobLogTipoID.OwnerID = ID;
                SYSxJobLogTipoID.TableName = Name;
                SYSxJobLogTipoID.Alias = "SYSxJobLogTipoID";
                Items.Add(SYSxJobLogEstadoID, SYSxJobLogEstadoID.ID);
                SYSxJobLogEstadoID.Owner = this;
                SYSxJobLogEstadoID.OwnerID = ID;
                SYSxJobLogEstadoID.TableName = Name;
                SYSxJobLogEstadoID.Alias = "SYSxJobLogEstadoID";
                Items.Add(SYSxJobID, SYSxJobID.ID);
                SYSxJobID.Owner = this;
                SYSxJobID.OwnerID = ID;
                SYSxJobID.TableName = Name;
                SYSxJobID.Alias = "SYSxJobID";
                Items.Add(SYSxJobLogID, SYSxJobLogID.ID);
                SYSxJobLogID.Owner = this;
                SYSxJobLogID.OwnerID = ID;
                SYSxJobLogID.TableName = Name;
                SYSxJobLogID.Alias = "SYSxJobLogID";
                Items.Add(Relatorio, Relatorio.ID);
                Relatorio.Owner = this;
                Relatorio.OwnerID = ID;
                Relatorio.TableName = Name;
                Relatorio.Alias = "Relatorio";
                Items.Add(Momento, Momento.ID);
                Momento.Owner = this;
                Momento.OwnerID = ID;
                Momento.TableName = Name;
                Momento.Alias = "Momento";
            }

            public static XORMFKField SYSxJobLogTipoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogTipoID, new Guid("329B3DF9-6E09-4A85-9C37-750C0A84D129"), "SYSxJobLogTipoID", "Tabela");
            public static XORMFKField SYSxJobLogEstadoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogEstadoID, new Guid("697D9C46-E63C-43AF-802C-42BBA1817847"), "SYSxJobLogEstadoID", "Tabela");
            public static XORMFKField SYSxJobID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobID, new Guid("5548286A-22D2-4E89-8EF8-AA6BF55931CE"), "SYSxJobID", "Tabela");
            public static XORMPKField SYSxJobLogID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogID, new Guid("625336BD-0A12-4A48-908C-850F2D2159E6"), "SYSxJobLogID", "Tabela");
            public static XORMField Relatorio = new XORMField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Relatorio, new Guid("DA0EBE7E-910F-4979-97CF-062F5DA6917A"), "Relatorio", "Relatório");
            public static XORMDateTimeField Momento = new XORMDateTimeField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Momento, new Guid("4F7BBCDC-1BBF-4587-A1D1-F327710A754D"), "Momento", "Momento");
        }
        #endregion xSYSxJobLog 


        public xSYSxJobLog SYSxJobLog;

        public AtualizaTwilioSVC()
        {
            TupleType = typeof(AtualizaTwilioSVC.XTuple);
            DataSetType = typeof(AtualizaTwilioSVC.XDataSet);
            ServiceRuleCID = new Guid("60DB65A2-5C98-4C38-9A3E-178C176E0990");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Job;
            ID = new Guid("D88454F8-1F83-40CF-B3F9-DD61C8F32832");
            Name = "AtualizaTwilio";
            Title = "Mensagens WhatsApp via Twilio";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = true;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
            Rights = new Int16[] { 1 }; 
            ConfigFormID = new Guid("029CF6F1-B805-443C-A0B3-0F6583735C01");
            ConfigPKFilter = false;
            IsReadOnly = true;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
            DataSetFields = new Guid[] { xSYSxJobLog.SYSxJobLogEstadoID.ID, xSYSxJobLog.SYSxJobLogTipoID.ID, xSYSxJobLog.SYSxJobID.ID, xSYSxJobLog.SYSxJobLogID.ID, xSYSxJobLog.Relatorio.ID, xSYSxJobLog.Momento.ID };
            PKField = xSYSxJobLog.SYSxJobLogID.ID;
            ConfigTableID = new Guid("88D46CC5-6549-43BB-9076-50A4B84BBA23");
            MasterRuleCID = new Guid("60DB65A2-5C98-4C38-9A3E-178C176E0990");
            SYSxJobLog = new xSYSxJobLog();
            SYSxJobLog.IsReadOnly = true;
            AddTable(SYSxJobLog);
            MasterTableID = SYSxJobLog.ID;
            xSYSxJobLog.Momento.IsReadOnly = true;
            xSYSxJobLog.Momento.IsDataField = true;
            xSYSxJobLog.Momento.AllowEmpty = true;
            xSYSxJobLog.Relatorio.IsReadOnly = true;
            xSYSxJobLog.Relatorio.IsDataField = true;
            xSYSxJobLog.Relatorio.AllowEmpty = true;
            xSYSxJobLog.SYSxJobID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobID.IsDataField = true;
            xSYSxJobLog.SYSxJobID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogEstadoID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobLogEstadoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogEstadoID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobLogID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogTipoID.IsReadOnly = true;
            xSYSxJobLog.SYSxJobLogTipoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogTipoID.AllowEmpty = true;
            xSYSxJobLog.Relatorio.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Momento => xSYSxJobLog.Momento;
        public XORMField Relatorio => xSYSxJobLog.Relatorio;
        public XORMField SYSxJobID => xSYSxJobLog.SYSxJobID;
        public XORMField SYSxJobLogEstadoID => xSYSxJobLog.SYSxJobLogEstadoID;
        public XORMField SYSxJobLogID => xSYSxJobLog.SYSxJobLogID;
        public XORMField SYSxJobLogTipoID => xSYSxJobLog.SYSxJobLogTipoID;
        }
        #endregion XFields
        #region AtualizaTwilioSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Momento
        {
            get
            {
                return (DateTime)Value[AtualizaTwilioSVC.xSYSxJobLog.Momento.ID];
            }
            set
            {
                Value[AtualizaTwilioSVC.xSYSxJobLog.Momento.ID] = value;
            }
        }
        public DateTime? oMomento
        {
            get
            {
                GetOldValue(AtualizaTwilioSVC.xSYSxJobLog.Momento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Byte[] Relatorio
        {
            get
            {
                return (Byte[])Value[AtualizaTwilioSVC.xSYSxJobLog.Relatorio.ID];
            }
            set
            {
                Value[AtualizaTwilioSVC.xSYSxJobLog.Relatorio.ID] = value;
            }
        }
        public Byte[]? oRelatorio
        {
            get
            {
                GetOldValue(AtualizaTwilioSVC.xSYSxJobLog.Relatorio, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public Guid SYSxJobID
        {
            get
            {
                return (Guid)Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobID.ID];
            }
            set
            {
                Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobID.ID] = value;
            }
        }
        public Guid? oSYSxJobID
        {
            get
            {
                GetOldValue(AtualizaTwilioSVC.xSYSxJobLog.SYSxJobID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxJobLogEstadoID
        {
            get
            {
                return (Int16)Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID];
            }
            set
            {
                Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogEstadoID
        {
            get
            {
                GetOldValue(AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxJobLogID
        {
            get
            {
                return (Guid)Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogID.ID];
            }
            set
            {
                Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogID.ID] = value;
            }
        }
        public Guid? oSYSxJobLogID
        {
            get
            {
                GetOldValue(AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxJobLogTipoID
        {
            get
            {
                return (Int16)Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogTipoID.ID];
            }
            set
            {
                Value[AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogTipoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogTipoID
        {
            get
            {
                GetOldValue(AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion AtualizaTwilioSVC.XTuple

        #region AtualizaTwilioSVC.XDataSet

        public class XDataSet : XDataSet<AtualizaTwilioSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(AtualizaTwilioSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<AtualizaTwilioSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Momento => AtualizaTwilioSVC.xSYSxJobLog.Momento.ID;
                public Guid Relatorio => AtualizaTwilioSVC.xSYSxJobLog.Relatorio.ID;
                public Guid SYSxJobID => AtualizaTwilioSVC.xSYSxJobLog.SYSxJobID.ID;
                public Guid SYSxJobLogEstadoID => AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID;
                public Guid SYSxJobLogID => AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogID.ID;
                public Guid SYSxJobLogTipoID => AtualizaTwilioSVC.xSYSxJobLog.SYSxJobLogTipoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(AtualizaTwilioSVC.XDataSet);
            }

        }
        #endregion AtualizaTwilioSVC.XDataSet
        #if !OnlyDef
        #region AtualizaTwilioSVC.XRule
        public abstract class XRule : XServiceJobRule<AtualizaTwilioSVC.XCFGTuple, AtualizaTwilioSVC.XDataSet, AtualizaTwilioSVC, AtualizaTwilioSVC.XTuple>
        {
        }
        #endregion AtualizaTwilioSVC.XRule

        [Guid(AtualizaTwilioSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(AtualizaTwilioSVC))]
        protected class _Service : Service<AtualizaTwilioSVC, XDataSet, XTuple>
        {
            public const String sCID = "42F18FFB-4EEA-4B1C-AE83-2FF30F561C9B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<AtualizaTwilioSVC, XDataSet, XTuple>, XService
             where TModel : AtualizaTwilioSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}