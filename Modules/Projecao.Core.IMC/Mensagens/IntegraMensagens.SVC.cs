//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.IMC.DB;

namespace Projecao.Core.IMC.Mensagens
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Projecao.Core.IMC.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Mensagens\IntegraMensagens.dssvc")]
    [XRegister(typeof(IntegraMensagensSVC), sCID)]
    public class IntegraMensagensSVC : XSVCModel
    {
        #region IntegraMensagensFilterFRM

        [XRegister(typeof(IntegraMensagensFilterFRM), sCID)]
        public class IntegraMensagensFilterFRM : XFRMModel
        {
            public const String sCID = "6121FE6A-139B-4D1A-8636-532AB86117F6";
            public static new readonly Guid gCID = new Guid(sCID);
            static IntegraMensagensFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public IntegraMensagensFilterFRM()
            {
                ID = gCID;
                Name = "IntegraMensagensFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Codigo);
                Codigo.ForceRW = true;
                Codigo.CanInsert = true;
                Codigo.CanUpdate = true;
                Codigo.RowCount = 2;
                Codigo.ColCount = 8;
                Codigo.RowCountSmall = 2;
                Codigo.ColCountSmall = 8;
                Codigo.IsHidden = false;
                Codigo.IsHiddenSmall = false;
                Codigo.AdditionalTitle = "";
                Codigo.Icon = "";
                Codigo.Location = 1;
                Codigo.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Codigo.Operator = XOperator.EqualTo;
                Codigo.ShowSpin = false;
                Codigo.HotkeyChar = "";
                Codigo.JustifyHeight = false;
                Codigo.AllowEmpty = true;
                Codigo.FontColor = "#000000";
                Codigo.FontStyle = XFontStyle.Normal;
                Codigo.ShowFooter = false;
                Codigo.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Codigo.Order = 1;
                Codigo.Scale = -1;
                Codigo.Length = -1;
                Codigo.SearchAction = XSearchAction.Default;
                Codigo.TypeID = XString.CID;
                Codigo.AdditionalFieldsID = new Guid[] {  };
                Codigo.AdditionalDataFieldsID = new Guid[] {  };
                Codigo.TargetFilterFieldID = new Guid[] {  };
                Codigo.SourceFilterFieldID = new Guid[] {  };
                Codigo.TargetDisplayFieldID = new Guid[] {  };
                Codigo.SourceDisplayFieldID = new Guid[] {  };
                Codigo.AutoLoad = false;
                Codigo.FilterInative = true;
                Codigo.IsAnswer = false;
                Codigo.AllowMultiSelect = false;
            }
            public XFRMField Codigo = new XFRMField(new Guid("2B6E6472-107E-4031-8501-53525F82DA81"), "Codigo", "Código", XString.CID, 2, 8, true, gCID, null, new Guid("7A0A6C79-1EF5-4BA7-8E65-ADC7DA559D19")); // String;
            public static class Fields
            {
                public static XFieldInfo Codigo = new XFieldInfo(new Guid("2B6E6472-107E-4031-8501-53525F82DA81"), "Codigo", "Código", typeof(String), false, "");
            }
        }

        #endregion IntegraMensagensFilterFRM

        public const String sCID = "F696C2B0-698A-4855-93CD-A356C0C6444C";
        public static Guid gCID = new Guid(sCID);

        #region xIMCxMensagem 
        public class xIMCxMensagem : XSVCTable
        {

            public static Guid gCID => new Guid("0EE84537-920F-4B8D-A228-6BF20C66FFC2");

            public xIMCxMensagem()
            {
                Name = "IMCxMensagem";
                Alias = "IMCxMensagem";
                ID = gCID;
                ParentID =  global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.gCID;

                Items.Add(IMCxMensagemID, IMCxMensagemID.ID);
                IMCxMensagemID.Owner = this;
                IMCxMensagemID.OwnerID = ID;
                IMCxMensagemID.TableName = Name;
                IMCxMensagemID.Alias = "IMCxMensagemID";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Mensagem.Alias = "Mensagem";
                Items.Add(IMCxEstadoID, IMCxEstadoID.ID);
                IMCxEstadoID.Owner = this;
                IMCxEstadoID.OwnerID = ID;
                IMCxEstadoID.TableName = Name;
                IMCxEstadoID.Alias = "IMCxEstadoID";
                Items.Add(IMCxClasseID, IMCxClasseID.ID);
                IMCxClasseID.Owner = this;
                IMCxClasseID.OwnerID = ID;
                IMCxClasseID.TableName = Name;
                IMCxClasseID.Alias = "IMCxClasseID";
                Items.Add(Codigo, Codigo.ID);
                Codigo.Owner = this;
                Codigo.OwnerID = ID;
                Codigo.TableName = Name;
                Codigo.Alias = "Codigo";
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Origem.Alias = "Origem";
                Items.Add(Destino, Destino.ID);
                Destino.Owner = this;
                Destino.OwnerID = ID;
                Destino.TableName = Name;
                Destino.Alias = "Destino";
                Items.Add(SYSxEmpresaOrigemID, SYSxEmpresaOrigemID.ID);
                SYSxEmpresaOrigemID.Owner = this;
                SYSxEmpresaOrigemID.OwnerID = ID;
                SYSxEmpresaOrigemID.TableName = Name;
                SYSxEmpresaOrigemID.Alias = "SYSxEmpresaOrigemID";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(Integrado, Integrado.ID);
                Integrado.Owner = this;
                Integrado.OwnerID = ID;
                Integrado.TableName = Name;
                Integrado.Alias = "Integrado";
            }

            public static XORMPKField IMCxMensagemID = new XORMPKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.IMCxMensagemID, new Guid("80BEFE81-3743-47FA-B96A-CEE1733440D0"), "IMCxMensagemID", "Mensagem");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.SYSxPessoaID, new Guid("C12674AB-57F9-4E49-A10D-F2FAA7D4C274"), "SYSxPessoaID", "Contato");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Data, new Guid("907B86AA-6936-43B2-BD84-41D95A1644EA"), "Data", "Data");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Mensagem, new Guid("ED2717B4-0D1F-40E0-AE30-5D038B91175F"), "Mensagem", "Mensagem");
            public static XORMFKField IMCxEstadoID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.IMCxEstadoID, new Guid("D430B73C-8DFA-417F-80AF-B85246856A14"), "IMCxEstadoID", "Estado");
            public static XORMFKField IMCxClasseID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.IMCxClasseID, new Guid("0DB71BEB-F5BA-443C-B529-9EB800E24A4A"), "IMCxClasseID", "Classe");
            public static XORMField Codigo = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Codigo, new Guid("7A0A6C79-1EF5-4BA7-8E65-ADC7DA559D19"), "Codigo", "Código");
            public static XORMField Origem = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Origem, new Guid("872A220A-11B5-4B14-8AE3-106002EF53A1"), "Origem", "Origem");
            public static XORMField Destino = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Destino, new Guid("C93871D8-652F-4A23-9769-D1E525C6490D"), "Destino", "Destino");
            public static XORMFKField SYSxEmpresaOrigemID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.SYSxEmpresaOrigemID, new Guid("C3E333F3-F86B-4DF7-9F46-ADBCF62638E2"), "SYSxEmpresaOrigemID", "Empresa");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.SYSxEmpresaID, new Guid("93F54C2F-AD2D-4A0B-909A-3093F4BF0F3B"), "SYSxEmpresaID", "Empresa");
            public static XORMField Integrado = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Integrado, new Guid("E1246315-AC30-4D02-96F5-CDD0F8505869"), "Integrado", "Integrado");
        }
        #endregion xIMCxMensagem 


        public xIMCxMensagem IMCxMensagem;

        public IntegraMensagensSVC()
        {
            TupleType = typeof(IntegraMensagensSVC.XTuple);
            DataSetType = typeof(IntegraMensagensSVC.XDataSet);
            ServiceRuleCID = new Guid("5552882D-024F-42EA-A9CA-EDDDC14FE455");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F696C2B0-698A-4855-93CD-A356C0C6444C");
            Name = "IntegraMensagens";
            Title = "";
            IsCacheable = false;
            CompanyControl = true;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("6121FE6A-139B-4D1A-8636-532AB86117F6");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
            DataSetFields = new Guid[] { xIMCxMensagem.Integrado.ID, xIMCxMensagem.SYSxEmpresaID.ID, xIMCxMensagem.SYSxEmpresaOrigemID.ID, xIMCxMensagem.Destino.ID, xIMCxMensagem.Origem.ID, xIMCxMensagem.Codigo.ID, xIMCxMensagem.IMCxClasseID.ID, xIMCxMensagem.IMCxEstadoID.ID, xIMCxMensagem.Mensagem.ID, xIMCxMensagem.Data.ID, xIMCxMensagem.SYSxPessoaID.ID, xIMCxMensagem.IMCxMensagemID.ID };
            PKField = xIMCxMensagem.IMCxMensagemID.ID;
            ConfigTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
            MasterRuleCID = new Guid("5552882D-024F-42EA-A9CA-EDDDC14FE455");
            IMCxMensagem = new xIMCxMensagem();
            IMCxMensagem.IsReadOnly = false;
            AddTable(IMCxMensagem);
            MasterTableID = IMCxMensagem.ID;
            xIMCxMensagem.Codigo.Length = 50;
            xIMCxMensagem.Codigo.IsDataField = true;
            xIMCxMensagem.Codigo.AllowEmpty = true;
            xIMCxMensagem.Data.IsDataField = true;
            xIMCxMensagem.Data.AllowEmpty = true;
            xIMCxMensagem.Destino.Length = 50;
            xIMCxMensagem.Destino.IsDataField = true;
            xIMCxMensagem.Destino.AllowEmpty = true;
            xIMCxMensagem.IMCxClasseID.IsDataField = true;
            xIMCxMensagem.IMCxClasseID.AllowEmpty = true;
            xIMCxMensagem.IMCxEstadoID.IsDataField = true;
            xIMCxMensagem.IMCxEstadoID.AllowEmpty = true;
            xIMCxMensagem.IMCxMensagemID.GeneratePK = true;
            xIMCxMensagem.IMCxMensagemID.IsDataField = true;
            xIMCxMensagem.IMCxMensagemID.AllowEmpty = true;
            xIMCxMensagem.Integrado.IsDataField = true;
            xIMCxMensagem.Integrado.AllowEmpty = true;
            xIMCxMensagem.Mensagem.IsDataField = true;
            xIMCxMensagem.Mensagem.AllowEmpty = true;
            xIMCxMensagem.Origem.Length = 50;
            xIMCxMensagem.Origem.IsDataField = true;
            xIMCxMensagem.Origem.AllowEmpty = true;
            xIMCxMensagem.SYSxEmpresaID.IsDataField = true;
            xIMCxMensagem.SYSxEmpresaID.AllowEmpty = true;
            xIMCxMensagem.SYSxEmpresaOrigemID.IsDataField = true;
            xIMCxMensagem.SYSxEmpresaOrigemID.AllowEmpty = true;
            xIMCxMensagem.SYSxPessoaID.IsDataField = true;
            xIMCxMensagem.SYSxPessoaID.AllowEmpty = true;
            xIMCxMensagem.Mensagem.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Codigo => xIMCxMensagem.Codigo;
        public XORMField Data => xIMCxMensagem.Data;
        public XORMField Destino => xIMCxMensagem.Destino;
        public XORMField IMCxClasseID => xIMCxMensagem.IMCxClasseID;
        public XORMField IMCxEstadoID => xIMCxMensagem.IMCxEstadoID;
        public XORMField IMCxMensagemID => xIMCxMensagem.IMCxMensagemID;
        public XORMField Integrado => xIMCxMensagem.Integrado;
        public XORMField Mensagem => xIMCxMensagem.Mensagem;
        public XORMField Origem => xIMCxMensagem.Origem;
        public XORMField SYSxEmpresaID => xIMCxMensagem.SYSxEmpresaID;
        public XORMField SYSxEmpresaOrigemID => xIMCxMensagem.SYSxEmpresaOrigemID;
        public XORMField SYSxPessoaID => xIMCxMensagem.SYSxPessoaID;
        }
        #endregion XFields
        #region IntegraMensagensSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Codigo
        {
            get
            {
                return (String)Value[IntegraMensagensSVC.xIMCxMensagem.Codigo.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.Codigo.ID] = value;
            }
        }
        public String? oCodigo
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.Codigo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[IntegraMensagensSVC.xIMCxMensagem.Data.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Destino
        {
            get
            {
                return (String)Value[IntegraMensagensSVC.xIMCxMensagem.Destino.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.Destino.ID] = value;
            }
        }
        public String? oDestino
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.Destino, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 IMCxClasseID
        {
            get
            {
                return (Int16)Value[IntegraMensagensSVC.xIMCxMensagem.IMCxClasseID.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.IMCxClasseID.ID] = value;
            }
        }
        public Int16? oIMCxClasseID
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.IMCxClasseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 IMCxEstadoID
        {
            get
            {
                return (Int16)Value[IntegraMensagensSVC.xIMCxMensagem.IMCxEstadoID.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.IMCxEstadoID.ID] = value;
            }
        }
        public Int16? oIMCxEstadoID
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.IMCxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid IMCxMensagemID
        {
            get
            {
                return (Guid)Value[IntegraMensagensSVC.xIMCxMensagem.IMCxMensagemID.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.IMCxMensagemID.ID] = value;
            }
        }
        public Guid? oIMCxMensagemID
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.IMCxMensagemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Boolean Integrado
        {
            get
            {
                return (Boolean)Value[IntegraMensagensSVC.xIMCxMensagem.Integrado.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.Integrado.ID] = value;
            }
        }
        public Boolean? oIntegrado
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.Integrado, out Object ovlr);
                return (Boolean?)ovlr;
            }
        }

        public Byte[] Mensagem
        {
            get
            {
                return (Byte[])Value[IntegraMensagensSVC.xIMCxMensagem.Mensagem.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.Mensagem.ID] = value;
            }
        }
        public Byte[]? oMensagem
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.Mensagem, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public String Origem
        {
            get
            {
                return (String)Value[IntegraMensagensSVC.xIMCxMensagem.Origem.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.Origem.ID] = value;
            }
        }
        public String? oOrigem
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.Origem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaID.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxEmpresaOrigemID
        {
            get
            {
                return (Guid)Value[IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaOrigemID.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaOrigemID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaOrigemID
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaOrigemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[IntegraMensagensSVC.xIMCxMensagem.SYSxPessoaID.ID];
            }
            set
            {
                Value[IntegraMensagensSVC.xIMCxMensagem.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(IntegraMensagensSVC.xIMCxMensagem.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion IntegraMensagensSVC.XTuple

        #region IntegraMensagensSVC.XDataSet

        public class XDataSet : XDataSet<IntegraMensagensSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(IntegraMensagensSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<IntegraMensagensSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Codigo => IntegraMensagensSVC.xIMCxMensagem.Codigo.ID;
                public Guid Data => IntegraMensagensSVC.xIMCxMensagem.Data.ID;
                public Guid Destino => IntegraMensagensSVC.xIMCxMensagem.Destino.ID;
                public Guid IMCxClasseID => IntegraMensagensSVC.xIMCxMensagem.IMCxClasseID.ID;
                public Guid IMCxEstadoID => IntegraMensagensSVC.xIMCxMensagem.IMCxEstadoID.ID;
                public Guid IMCxMensagemID => IntegraMensagensSVC.xIMCxMensagem.IMCxMensagemID.ID;
                public Guid Integrado => IntegraMensagensSVC.xIMCxMensagem.Integrado.ID;
                public Guid Mensagem => IntegraMensagensSVC.xIMCxMensagem.Mensagem.ID;
                public Guid Origem => IntegraMensagensSVC.xIMCxMensagem.Origem.ID;
                public Guid SYSxEmpresaID => IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaID.ID;
                public Guid SYSxEmpresaOrigemID => IntegraMensagensSVC.xIMCxMensagem.SYSxEmpresaOrigemID.ID;
                public Guid SYSxPessoaID => IntegraMensagensSVC.xIMCxMensagem.SYSxPessoaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(IntegraMensagensSVC.XDataSet);
            }

        }
        #endregion IntegraMensagensSVC.XDataSet
        #if !OnlyDef
        #region IntegraMensagensSVC.XRule
        public abstract class XRule : XServiceRule<IntegraMensagensSVC.XDataSet, IntegraMensagensSVC, IntegraMensagensSVC.XTuple>
        {
        }
        #endregion IntegraMensagensSVC.XRule

        [Guid(IntegraMensagensSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(IntegraMensagensSVC))]
        protected class _Service : Service<IntegraMensagensSVC, XDataSet, XTuple>
        {
            public const String sCID = "653DB95D-DD60-4E5C-889B-D9B37D65D06B";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<IntegraMensagensSVC, XDataSet, XTuple>, XService
             where TModel : IntegraMensagensSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}