//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.IMC.DB;
using TFX.Core.Service.Apps;

namespace Projecao.Core.IMC.Mensagens
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Projecao.Core.IMC.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Mensagens\Mensagens.dssvc")]
    [XRegister(typeof(MensagensSVC), sCID)]
    public class MensagensSVC : XSVCModel
    {
        #region MensagensFilterFRM

        [XRegister(typeof(MensagensFilterFRM), sCID)]
        public class MensagensFilterFRM : XFRMModel
        {
            public const String sCID = "96F3D372-C6F6-4B66-B338-01F2C6B59199";
            public static new readonly Guid gCID = new Guid(sCID);
            static MensagensFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public MensagensFilterFRM()
            {
                ID = gCID;
                Name = "MensagensFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Titulo);
                Titulo.ForceRW = true;
                Titulo.CanInsert = true;
                Titulo.CanUpdate = true;
                Titulo.RowCount = 2;
                Titulo.ColCount = 32;
                Titulo.RowCountSmall = 2;
                Titulo.ColCountSmall = 32;
                Titulo.IsHidden = false;
                Titulo.IsHiddenSmall = false;
                Titulo.AdditionalTitle = "";
                Titulo.Icon = "";
                Titulo.Location = 1;
                Titulo.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Titulo.Operator = XOperator.EqualTo;
                Titulo.ShowSpin = false;
                Titulo.HotkeyChar = "";
                Titulo.JustifyHeight = false;
                Titulo.AllowEmpty = true;
                Titulo.FontColor = "#000000";
                Titulo.FontStyle = XFontStyle.Normal;
                Titulo.ShowFooter = false;
                Titulo.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Titulo.Order = 1;
                Titulo.Scale = -1;
                Titulo.Length = -1;
                Titulo.SearchAction = XSearchAction.Default;
                Titulo.TypeID = XString.CID;
                Titulo.AdditionalFieldsID = new Guid[] {  };
                Titulo.AdditionalDataFieldsID = new Guid[] {  };
                Titulo.TargetFilterFieldID = new Guid[] {  };
                Titulo.SourceFilterFieldID = new Guid[] {  };
                Titulo.TargetDisplayFieldID = new Guid[] {  };
                Titulo.SourceDisplayFieldID = new Guid[] {  };
                Titulo.AutoLoad = false;
                Titulo.FilterInative = true;
                Titulo.IsAnswer = false;
                Titulo.AllowMultiSelect = false;
            }
            public XFRMField Titulo = new XFRMField(new Guid("ADC73B8B-DBFA-4734-ADA7-0C80FDCFBCF2"), "Titulo", "Buscar Mensagens", XString.CID, 2, 32, false, gCID, null, new Guid("20B47E29-4E5B-4ECB-AF93-159805C332F6")); // String;
            public static class Fields
            {
                public static XFieldInfo Titulo = new XFieldInfo(new Guid("ADC73B8B-DBFA-4734-ADA7-0C80FDCFBCF2"), "Titulo", "Buscar Mensagens", typeof(String), false, "");
            }
        }

        #endregion MensagensFilterFRM

        public const String sCID = "014DC44C-E484-4CE3-9EA4-01EBDCEB97CF";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference IMCxEvento_IMCxEventoID_IMCxAgendaMensagem_IMCxEventoID; // IMCxEvento.IMCxEventoID --> IMCxAgendaMensagem.IMCxEventoID
        public static XSVCReference SYSxPessoa_SYSxPessoaID_IMCxAgendaMensagem_SYSxEmpresaID; // SYSxPessoa.SYSxPessoaID --> IMCxAgendaMensagem.SYSxEmpresaID

        #region xIMCxEvento 
        public class xIMCxEvento : XSVCTable
        {

            public static Guid gCID => new Guid("4CB493D3-E36B-49E0-9C13-6C59CE13F8D1");

            public xIMCxEvento()
            {
                Name = "IMCxEvento";
                Alias = "IMCxEvento";
                ID = gCID;
                ParentID =  global::Projecao.Core.IMC.DB.IMCx.IMCxEvento.gCID;

                Items.Add(IMCxEventoID, IMCxEventoID.ID);
                IMCxEventoID.Owner = this;
                IMCxEventoID.OwnerID = ID;
                IMCxEventoID.TableName = Name;
                Items.Add(Evento, Evento.ID);
                Evento.Owner = this;
                Evento.OwnerID = ID;
                Evento.TableName = Name;
                Evento.Alias = "Evento";
            }

            public static XORMPKField IMCxEventoID = new XORMPKField(global::Projecao.Core.IMC.DB.IMCx.IMCxEvento.IMCxEventoID, new Guid("5D448796-E819-4876-97B8-C32A179787F3"), "IMCxEventoID", "Evento");
            public static XORMFaceField Evento = new XORMFaceField(global::Projecao.Core.IMC.DB.IMCx.IMCxEvento.Evento, new Guid("615F8B2E-B0E4-4F54-A199-8741E4C6F944"), "Evento", "Evento");
        }
        #endregion xIMCxEvento 


        #region xSYSxPessoa 
        public class xSYSxPessoa : XSVCTable
        {

            public static Guid gCID => new Guid("771929B0-FB31-452F-AB40-9CC82A7BBD09");

            public xSYSxPessoa()
            {
                Name = "SYSxPessoa";
                Alias = "SYSxPessoa";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID;

                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
            }

            public static XORMFaceField Nome = new XORMFaceField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.Nome, new Guid("10CFD234-249A-4CC3-B546-A39BEA0B0849"), "Nome", "Nome");
            public static XORMPKField SYSxPessoaID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID, new Guid("BF77F2CA-0CCA-48BC-BDA6-AB69F58CBD43"), "SYSxPessoaID", "Pessoas");
        }
        #endregion xSYSxPessoa 


        #region xIMCxAgendaMensagem 
        public class xIMCxAgendaMensagem : XSVCTable
        {

            public static Guid gCID => new Guid("9AFDA31F-112D-42FD-82B8-9463E92EB037");

            public xIMCxAgendaMensagem()
            {
                Name = "IMCxAgendaMensagem";
                Alias = "IMCxAgendaMensagem";
                ID = gCID;
                ParentID =  global::Projecao.Core.IMC.DB.IMCx.IMCxAgendaMensagem.gCID;

                Items.Add(IMCxAgendaMensagemID, IMCxAgendaMensagemID.ID);
                IMCxAgendaMensagemID.Owner = this;
                IMCxAgendaMensagemID.OwnerID = ID;
                IMCxAgendaMensagemID.TableName = Name;
                IMCxAgendaMensagemID.Alias = "IMCxAgendaMensagemID";
                Items.Add(Titulo, Titulo.ID);
                Titulo.Owner = this;
                Titulo.OwnerID = ID;
                Titulo.TableName = Name;
                Titulo.Alias = "Titulo";
                Items.Add(Texto, Texto.ID);
                Texto.Owner = this;
                Texto.OwnerID = ID;
                Texto.TableName = Name;
                Texto.Alias = "Texto";
                Items.Add(IMCxEventoID, IMCxEventoID.ID);
                IMCxEventoID.Owner = this;
                IMCxEventoID.OwnerID = ID;
                IMCxEventoID.TableName = Name;
                IMCxEventoID.Alias = "IMCxEventoID";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
            }

            public static XORMPKField IMCxAgendaMensagemID = new XORMPKField(global::Projecao.Core.IMC.DB.IMCx.IMCxAgendaMensagem.IMCxAgendaMensagemID, new Guid("7AB15854-5BFB-444A-86DE-AB3721C89021"), "IMCxAgendaMensagemID", "Mensagens");
            public static XORMField Titulo = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxAgendaMensagem.Titulo, new Guid("20B47E29-4E5B-4ECB-AF93-159805C332F6"), "Titulo", "TÃ­tulo");
            public static XORMField Texto = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxAgendaMensagem.Texto, new Guid("084E2F76-7E38-4B70-B77F-1ACCA1BA6F0F"), "Texto", "Texto");
            public static XORMFKField IMCxEventoID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxAgendaMensagem.IMCxEventoID, new Guid("95254D0C-1BAF-49FB-8D85-AC2CC9E1D319"), "IMCxEventoID", "Evento");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxAgendaMensagem.SYSxEmpresaID, new Guid("13EBB52A-7066-4521-B788-9E304D5A63CF"), "SYSxEmpresaID", "Empresa");
        }
        #endregion xIMCxAgendaMensagem 


        public xIMCxAgendaMensagem IMCxAgendaMensagem;
        public xIMCxEvento IMCxEvento;
        public xSYSxPessoa SYSxPessoa;

        public MensagensSVC()
        {
            TupleType = typeof(MensagensSVC.XTuple);
            DataSetType = typeof(MensagensSVC.XDataSet);
            ServiceRuleCID = new Guid("2B09C2AB-C288-4BA3-B2AA-26C12A4A4CF0");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("014DC44C-E484-4CE3-9EA4-01EBDCEB97CF");
            Name = "Mensagens";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("96F3D372-C6F6-4B66-B338-01F2C6B59199");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
            GridFields = new Guid[] { xIMCxAgendaMensagem.Titulo.ID, xSYSxPessoa.Nome.ID };
            OrderByFields = new Guid[] { xIMCxAgendaMensagem.Titulo.ID };
            DataSetFields = new Guid[] { xIMCxAgendaMensagem.IMCxAgendaMensagemID.ID, xIMCxAgendaMensagem.Titulo.ID, xIMCxAgendaMensagem.Texto.ID, xSYSxPessoa.Nome.ID, xIMCxAgendaMensagem.IMCxEventoID.ID, xIMCxEvento.Evento.ID, xIMCxAgendaMensagem.SYSxEmpresaID.ID };
            PKField = xIMCxAgendaMensagem.IMCxAgendaMensagemID.ID;
            ConfigTableID = new Guid("72826E01-88E3-4472-B2DF-301F6CD14775");
            MasterRuleCID = new Guid("2B09C2AB-C288-4BA3-B2AA-26C12A4A4CF0");
            IMCxAgendaMensagem = new xIMCxAgendaMensagem();
            IMCxAgendaMensagem.IsReadOnly = false;
            AddTable(IMCxAgendaMensagem);
            IMCxEvento = new xIMCxEvento();
            IMCxEvento.IsReadOnly = true;
            AddTable(IMCxEvento);
            SYSxPessoa = new xSYSxPessoa();
            SYSxPessoa.IsReadOnly = true;
            AddTable(SYSxPessoa);
            MasterTableID = IMCxAgendaMensagem.ID;
            IMCxEvento_IMCxEventoID_IMCxAgendaMensagem_IMCxEventoID = AddReference(new XSVCReference(new Guid("07F73171-CD50-416E-B383-6DDE92A2A0CC"), "FK_07F73171CD50416EB3836DDE92A2A0CC", MensagensSVC.xIMCxEvento.gCID, xIMCxEvento.IMCxEventoID.ID, MensagensSVC.xIMCxAgendaMensagem.gCID, xIMCxAgendaMensagem.IMCxEventoID.ID, XJoinType.Inner)); // IMCxEvento.IMCxEventoID --> IMCxAgendaMensagem.IMCxEventoID
            SYSxPessoa_SYSxPessoaID_IMCxAgendaMensagem_SYSxEmpresaID = AddReference(new XSVCReference(new Guid("BBF82C6B-B8D8-452C-AD74-F987E24599B8"), "FK_BBF82C6BB8D8452CAD74F987E24599B8", MensagensSVC.xSYSxPessoa.gCID, xSYSxPessoa.SYSxPessoaID.ID, MensagensSVC.xIMCxAgendaMensagem.gCID, xIMCxAgendaMensagem.SYSxEmpresaID.ID, XJoinType.Inner)); // SYSxPessoa.SYSxPessoaID --> IMCxAgendaMensagem.SYSxEmpresaID
            xIMCxEvento.Evento.IsReadOnly = true;
            xIMCxEvento.Evento.Length = 30;
            xIMCxEvento.Evento.IsDataField = true;
            xIMCxEvento.Evento.AllowEmpty = true;
            xIMCxAgendaMensagem.IMCxAgendaMensagemID.GeneratePK = true;
            xIMCxAgendaMensagem.IMCxAgendaMensagemID.IsDataField = true;
            xIMCxAgendaMensagem.IMCxAgendaMensagemID.AllowEmpty = true;
            xIMCxAgendaMensagem.IMCxEventoID.IsDataField = true;
            xIMCxAgendaMensagem.IMCxEventoID.AllowEmpty = true;
            xSYSxPessoa.Nome.IsReadOnly = true;
            xSYSxPessoa.Nome.Length = 256;
            xSYSxPessoa.Nome.IsDataField = true;
            xSYSxPessoa.Nome.AllowEmpty = true;
            xIMCxAgendaMensagem.SYSxEmpresaID.IsDataField = true;
            xIMCxAgendaMensagem.SYSxEmpresaID.AllowEmpty = true;
            xIMCxAgendaMensagem.Texto.IsDataField = true;
            xIMCxAgendaMensagem.Texto.AllowEmpty = true;
            xIMCxAgendaMensagem.Titulo.OrderType = XOrderType.Asc;
            xIMCxAgendaMensagem.Titulo.Length = 50;
            xIMCxAgendaMensagem.Titulo.IsDataField = true;
            xIMCxAgendaMensagem.Titulo.FilterUse = true;
            xIMCxAgendaMensagem.Titulo.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Evento => xIMCxEvento.Evento;
        public XORMField IMCxAgendaMensagemID => xIMCxAgendaMensagem.IMCxAgendaMensagemID;
        public XORMField IMCxEventoID => xIMCxAgendaMensagem.IMCxEventoID;
        public XORMField Nome => xSYSxPessoa.Nome;
        public XORMField SYSxEmpresaID => xIMCxAgendaMensagem.SYSxEmpresaID;
        public XORMField Texto => xIMCxAgendaMensagem.Texto;
        public XORMField Titulo => xIMCxAgendaMensagem.Titulo;
        }
        #endregion XFields
        #region MensagensSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Evento
        {
            get
            {
                return (String)Value[MensagensSVC.xIMCxEvento.Evento.ID];
            }
            set
            {
                Value[MensagensSVC.xIMCxEvento.Evento.ID] = value;
            }
        }
        public String? oEvento
        {
            get
            {
                GetOldValue(MensagensSVC.xIMCxEvento.Evento, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid IMCxAgendaMensagemID
        {
            get
            {
                return (Guid)Value[MensagensSVC.xIMCxAgendaMensagem.IMCxAgendaMensagemID.ID];
            }
            set
            {
                Value[MensagensSVC.xIMCxAgendaMensagem.IMCxAgendaMensagemID.ID] = value;
            }
        }
        public Guid? oIMCxAgendaMensagemID
        {
            get
            {
                GetOldValue(MensagensSVC.xIMCxAgendaMensagem.IMCxAgendaMensagemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 IMCxEventoID
        {
            get
            {
                return (Int16)Value[MensagensSVC.xIMCxAgendaMensagem.IMCxEventoID.ID];
            }
            set
            {
                Value[MensagensSVC.xIMCxAgendaMensagem.IMCxEventoID.ID] = value;
            }
        }
        public Int16? oIMCxEventoID
        {
            get
            {
                GetOldValue(MensagensSVC.xIMCxAgendaMensagem.IMCxEventoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[MensagensSVC.xSYSxPessoa.Nome.ID];
            }
            set
            {
                Value[MensagensSVC.xSYSxPessoa.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(MensagensSVC.xSYSxPessoa.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[MensagensSVC.xIMCxAgendaMensagem.SYSxEmpresaID.ID];
            }
            set
            {
                Value[MensagensSVC.xIMCxAgendaMensagem.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(MensagensSVC.xIMCxAgendaMensagem.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Texto
        {
            get
            {
                return (String)Value[MensagensSVC.xIMCxAgendaMensagem.Texto.ID];
            }
            set
            {
                Value[MensagensSVC.xIMCxAgendaMensagem.Texto.ID] = value;
            }
        }
        public String? oTexto
        {
            get
            {
                GetOldValue(MensagensSVC.xIMCxAgendaMensagem.Texto, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Titulo
        {
            get
            {
                return (String)Value[MensagensSVC.xIMCxAgendaMensagem.Titulo.ID];
            }
            set
            {
                Value[MensagensSVC.xIMCxAgendaMensagem.Titulo.ID] = value;
            }
        }
        public String? oTitulo
        {
            get
            {
                GetOldValue(MensagensSVC.xIMCxAgendaMensagem.Titulo, out Object ovlr);
                return (String?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion MensagensSVC.XTuple

        #region MensagensSVC.XDataSet

        public class XDataSet : XDataSet<MensagensSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(MensagensSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<MensagensSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Evento => MensagensSVC.xIMCxEvento.Evento.ID;
                public Guid IMCxAgendaMensagemID => MensagensSVC.xIMCxAgendaMensagem.IMCxAgendaMensagemID.ID;
                public Guid IMCxEventoID => MensagensSVC.xIMCxAgendaMensagem.IMCxEventoID.ID;
                public Guid Nome => MensagensSVC.xSYSxPessoa.Nome.ID;
                public Guid SYSxEmpresaID => MensagensSVC.xIMCxAgendaMensagem.SYSxEmpresaID.ID;
                public Guid Texto => MensagensSVC.xIMCxAgendaMensagem.Texto.ID;
                public Guid Titulo => MensagensSVC.xIMCxAgendaMensagem.Titulo.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(MensagensSVC.XDataSet);
            }

        }
        #endregion MensagensSVC.XDataSet
        #if !OnlyDef
        #region MensagensSVC.XRule
        public abstract class XRule : XServiceRule<MensagensSVC.XDataSet, MensagensSVC, MensagensSVC.XTuple>
        {
        }
        #endregion MensagensSVC.XRule

        [Guid(MensagensSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(MensagensSVC))]
        protected class _Service : Service<MensagensSVC, XDataSet, XTuple>
        {
            public const String sCID = "E4A4C29A-E7F0-4A54-809F-94DF8C0D0288";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<MensagensSVC, XDataSet, XTuple>, XService
             where TModel : MensagensSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}