//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.IMC.DB;

namespace Projecao.Core.IMC.Chat
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Projecao.Core.IMC.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.IMC\Chat\Chat.dssvc")]
    [XRegister(typeof(ChatSVC), sCID)]
    public class ChatSVC : XSVCModel
    {
        public const String sCID = "12F1B660-0DF4-4D73-BEC3-BF2D5D0DE262";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference IMCxMensagem_IMCxEstadoID_IMCxEstado_IMCxEstadoID; // IMCxMensagem.IMCxEstadoID --> IMCxEstado.IMCxEstadoID
        public static XSVCReference IMCxMensagem_IMCxClasseID_IMCxClasse_IMCxClasseID; // IMCxMensagem.IMCxClasseID --> IMCxClasse.IMCxClasseID

        #region xIMCxEstado 
        public class xIMCxEstado : XSVCTable
        {

            public static Guid gCID => new Guid("24795F12-C7D4-42BF-B2A8-BA78D8C16C95");

            public xIMCxEstado()
            {
                Name = "IMCxEstado";
                Alias = "IMCxEstado";
                ID = gCID;
                ParentID =  global::Projecao.Core.IMC.DB.IMCx.IMCxEstado.gCID;

                Items.Add(IMCxEstadoID, IMCxEstadoID.ID);
                IMCxEstadoID.Owner = this;
                IMCxEstadoID.OwnerID = ID;
                IMCxEstadoID.TableName = Name;
                Items.Add(Estado, Estado.ID);
                Estado.Owner = this;
                Estado.OwnerID = ID;
                Estado.TableName = Name;
                Estado.Alias = "Estado";
            }

            public static XORMPKField IMCxEstadoID = new XORMPKField(global::Projecao.Core.IMC.DB.IMCx.IMCxEstado.IMCxEstadoID, new Guid("29DF98C7-80DD-4891-9DF1-03A234E6F1A4"), "IMCxEstadoID", "Estado");
            public static XORMFaceField Estado = new XORMFaceField(global::Projecao.Core.IMC.DB.IMCx.IMCxEstado.Estado, new Guid("D880A8F3-8B51-4619-BDAE-B0D7DBA446C5"), "Estado", "Estado");
        }
        #endregion xIMCxEstado 


        #region xIMCxClasse 
        public class xIMCxClasse : XSVCTable
        {

            public static Guid gCID => new Guid("37DE4605-CEF5-4E7D-8591-AEAD34328C20");

            public xIMCxClasse()
            {
                Name = "IMCxClasse";
                Alias = "IMCxClasse";
                ID = gCID;
                ParentID =  global::Projecao.Core.IMC.DB.IMCx.IMCxClasse.gCID;

                Items.Add(IMCxClasseID, IMCxClasseID.ID);
                IMCxClasseID.Owner = this;
                IMCxClasseID.OwnerID = ID;
                IMCxClasseID.TableName = Name;
                Items.Add(Classe, Classe.ID);
                Classe.Owner = this;
                Classe.OwnerID = ID;
                Classe.TableName = Name;
                Classe.Alias = "Classe";
            }

            public static XORMPKField IMCxClasseID = new XORMPKField(global::Projecao.Core.IMC.DB.IMCx.IMCxClasse.IMCxClasseID, new Guid("E53BC6CD-AE33-4CE3-97EA-C70E50C4CAF7"), "IMCxClasseID", "Classe");
            public static XORMFaceField Classe = new XORMFaceField(global::Projecao.Core.IMC.DB.IMCx.IMCxClasse.Classe, new Guid("7582D124-1CC0-4761-B7FC-41C6E92F4437"), "Classe", "Classe");
        }
        #endregion xIMCxClasse 


        #region xIMCxMensagem 
        public class xIMCxMensagem : XSVCTable
        {

            public static Guid gCID => new Guid("D5AFA0AA-A804-43BE-A139-52B326F9CC5E");

            public xIMCxMensagem()
            {
                Name = "IMCxMensagem";
                Alias = "IMCxMensagem";
                ID = gCID;
                ParentID =  global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.gCID;

                Items.Add(IMCxMensagemID, IMCxMensagemID.ID);
                IMCxMensagemID.Owner = this;
                IMCxMensagemID.OwnerID = ID;
                IMCxMensagemID.TableName = Name;
                IMCxMensagemID.Alias = "IMCxMensagemID";
                Items.Add(SYSxPessoaID, SYSxPessoaID.ID);
                SYSxPessoaID.Owner = this;
                SYSxPessoaID.OwnerID = ID;
                SYSxPessoaID.TableName = Name;
                SYSxPessoaID.Alias = "SYSxPessoaID";
                Items.Add(Data, Data.ID);
                Data.Owner = this;
                Data.OwnerID = ID;
                Data.TableName = Name;
                Data.Alias = "Data";
                Items.Add(Mensagem, Mensagem.ID);
                Mensagem.Owner = this;
                Mensagem.OwnerID = ID;
                Mensagem.TableName = Name;
                Mensagem.Alias = "Mensagem";
                Items.Add(IMCxEstadoID, IMCxEstadoID.ID);
                IMCxEstadoID.Owner = this;
                IMCxEstadoID.OwnerID = ID;
                IMCxEstadoID.TableName = Name;
                IMCxEstadoID.Alias = "IMCxEstadoID";
                Items.Add(IMCxClasseID, IMCxClasseID.ID);
                IMCxClasseID.Owner = this;
                IMCxClasseID.OwnerID = ID;
                IMCxClasseID.TableName = Name;
                IMCxClasseID.Alias = "IMCxClasseID";
                Items.Add(Codigo, Codigo.ID);
                Codigo.Owner = this;
                Codigo.OwnerID = ID;
                Codigo.TableName = Name;
                Codigo.Alias = "Codigo";
                Items.Add(Origem, Origem.ID);
                Origem.Owner = this;
                Origem.OwnerID = ID;
                Origem.TableName = Name;
                Origem.Alias = "Origem";
                Items.Add(Destino, Destino.ID);
                Destino.Owner = this;
                Destino.OwnerID = ID;
                Destino.TableName = Name;
                Destino.Alias = "Destino";
                Items.Add(SYSxEmpresaOrigemID, SYSxEmpresaOrigemID.ID);
                SYSxEmpresaOrigemID.Owner = this;
                SYSxEmpresaOrigemID.OwnerID = ID;
                SYSxEmpresaOrigemID.TableName = Name;
                SYSxEmpresaOrigemID.Alias = "SYSxEmpresaOrigemID";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
                Items.Add(Integrado, Integrado.ID);
                Integrado.Owner = this;
                Integrado.OwnerID = ID;
                Integrado.TableName = Name;
            }

            public static XORMPKField IMCxMensagemID = new XORMPKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.IMCxMensagemID, new Guid("E4C7E1B6-CB96-4324-8683-6B1EFFAC0F17"), "IMCxMensagemID", "Mensagem");
            public static XORMFKField SYSxPessoaID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.SYSxPessoaID, new Guid("1AC9CD64-FA73-46FD-AFE0-27D71723D7B5"), "SYSxPessoaID", "Contato");
            public static XORMDateTimeField Data = new XORMDateTimeField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Data, new Guid("AB41AB45-1643-4647-BBB6-650C5B0FBB30"), "Data", "Data");
            public static XORMField Mensagem = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Mensagem, new Guid("F5FC5F05-D529-47E4-AEDD-1034AABD5631"), "Mensagem", "Mensagem");
            public static XORMFKField IMCxEstadoID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.IMCxEstadoID, new Guid("1A2E9B61-BBC7-43E5-8109-B591DCB19C51"), "IMCxEstadoID", "Estado");
            public static XORMFKField IMCxClasseID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.IMCxClasseID, new Guid("132F0306-0ED4-4BAC-A8F6-2E001D042FF5"), "IMCxClasseID", "Classe");
            public static XORMField Codigo = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Codigo, new Guid("4A409103-A21D-433C-A8AB-B2D33DC2A659"), "Codigo", "CÃ³digo");
            public static XORMField Origem = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Origem, new Guid("1F71A3A3-18AA-4B8E-A4F3-76CC04DF1D7F"), "Origem", "Origem");
            public static XORMField Destino = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Destino, new Guid("A1B82A9B-B437-47D1-817F-0B99EF0CD2EB"), "Destino", "Destino");
            public static XORMFKField SYSxEmpresaOrigemID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.SYSxEmpresaOrigemID, new Guid("3F12EF79-A0FF-44AB-BD77-B9AD40CF43FF"), "SYSxEmpresaOrigemID", "Empresa");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.SYSxEmpresaID, new Guid("823847B5-109F-44F6-81CF-10E8380F6BF0"), "SYSxEmpresaID", "Empresa");
            public static XORMField Integrado = new XORMField(global::Projecao.Core.IMC.DB.IMCx.IMCxMensagem.Integrado, new Guid("3F7EFC54-5138-4BA5-BEA0-105DE138B91C"), "Integrado", "Integrado");
        }
        #endregion xIMCxMensagem 


        public xIMCxClasse IMCxClasse;
        public xIMCxEstado IMCxEstado;
        public xIMCxMensagem IMCxMensagem;
        public static readonly XORMParameterField Retorno = new XORMParameterField(new Guid("05C3C8D0-6B90-40AD-B6ED-9315F973084C"), "Retorno", "Retorno", XBoolean.CID, 0, 0, false, gCID, null);

        public ChatSVC()
        {
            TupleType = typeof(ChatSVC.XTuple);
            DataSetType = typeof(ChatSVC.XDataSet);
            ServiceRuleCID = new Guid("083E5497-3FF9-4BD5-BFBC-B2A424BA9947");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("12F1B660-0DF4-4D73-BEC3-BF2D5D0DE262");
            Name = "Chat";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("C748CC17-9283-4C3D-8C4F-8665A3D6CC36");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js" };
            GridFields = new Guid[] { xIMCxMensagem.Data.ID, xIMCxEstado.Estado.ID, xIMCxClasse.Classe.ID };
            OrderByFields = new Guid[] { xIMCxMensagem.Data.ID };
            DataSetFields = new Guid[] { xIMCxMensagem.IMCxMensagemID.ID, xIMCxMensagem.SYSxPessoaID.ID, xIMCxMensagem.Data.ID, xIMCxMensagem.Mensagem.ID, xIMCxMensagem.IMCxEstadoID.ID, xIMCxMensagem.IMCxClasseID.ID, xIMCxClasse.Classe.ID, xIMCxEstado.Estado.ID, xIMCxMensagem.Codigo.ID, Retorno.ID, xIMCxMensagem.Origem.ID, xIMCxMensagem.Destino.ID, xIMCxMensagem.SYSxEmpresaOrigemID.ID, xIMCxMensagem.SYSxEmpresaID.ID };
            PKField = xIMCxMensagem.IMCxMensagemID.ID;
            ConfigTableID = new Guid("D04E95F5-E6D6-4C68-B78F-1E22EFAE8CF5");
            MasterRuleCID = new Guid("083E5497-3FF9-4BD5-BFBC-B2A424BA9947");
            IMCxClasse = new xIMCxClasse();
            IMCxClasse.IsReadOnly = true;
            AddTable(IMCxClasse);
            IMCxEstado = new xIMCxEstado();
            IMCxEstado.IsReadOnly = true;
            AddTable(IMCxEstado);
            IMCxMensagem = new xIMCxMensagem();
            IMCxMensagem.IsReadOnly = false;
            AddTable(IMCxMensagem);
            MasterTableID = IMCxMensagem.ID;
            IMCxMensagem_IMCxEstadoID_IMCxEstado_IMCxEstadoID = AddReference(new XSVCReference(new Guid("18DA8011-AABC-4424-9784-79245DC6478D"), "FK_18DA8011AABC4424978479245DC6478D", ChatSVC.xIMCxMensagem.gCID, xIMCxMensagem.IMCxEstadoID.ID, ChatSVC.xIMCxEstado.gCID, xIMCxEstado.IMCxEstadoID.ID, XJoinType.Inner)); // IMCxMensagem.IMCxEstadoID --> IMCxEstado.IMCxEstadoID
            IMCxMensagem_IMCxClasseID_IMCxClasse_IMCxClasseID = AddReference(new XSVCReference(new Guid("EC202341-7BA0-4DBE-89B8-03698F7F7F9C"), "FK_EC2023417BA04DBE89B803698F7F7F9C", ChatSVC.xIMCxMensagem.gCID, xIMCxMensagem.IMCxClasseID.ID, ChatSVC.xIMCxClasse.gCID, xIMCxClasse.IMCxClasseID.ID, XJoinType.Inner)); // IMCxMensagem.IMCxClasseID --> IMCxClasse.IMCxClasseID
            AddField(Retorno);
            Retorno.IsParam = true;
            xIMCxClasse.Classe.IsReadOnly = true;
            xIMCxClasse.Classe.Length = 20;
            xIMCxClasse.Classe.IsDataField = true;
            xIMCxClasse.Classe.AllowEmpty = true;
            xIMCxMensagem.Codigo.Length = 50;
            xIMCxMensagem.Codigo.IsDataField = true;
            xIMCxMensagem.Codigo.AllowEmpty = true;
            xIMCxMensagem.Data.OrderType = XOrderType.Asc;
            xIMCxMensagem.Data.IsDataField = true;
            xIMCxMensagem.Data.AllowEmpty = true;
            xIMCxMensagem.Destino.Length = 50;
            xIMCxMensagem.Destino.IsDataField = true;
            xIMCxMensagem.Destino.AllowEmpty = true;
            xIMCxEstado.Estado.IsReadOnly = true;
            xIMCxEstado.Estado.Length = 20;
            xIMCxEstado.Estado.IsDataField = true;
            xIMCxEstado.Estado.AllowEmpty = true;
            xIMCxMensagem.IMCxClasseID.IsDataField = true;
            xIMCxMensagem.IMCxClasseID.AllowEmpty = true;
            xIMCxMensagem.IMCxEstadoID.IsDataField = true;
            xIMCxMensagem.IMCxEstadoID.AllowEmpty = true;
            xIMCxMensagem.IMCxMensagemID.GeneratePK = true;
            xIMCxMensagem.IMCxMensagemID.IsDataField = true;
            xIMCxMensagem.IMCxMensagemID.AllowEmpty = true;
            xIMCxMensagem.Mensagem.IsDataField = true;
            xIMCxMensagem.Mensagem.AllowEmpty = true;
            xIMCxMensagem.Origem.Length = 50;
            xIMCxMensagem.Origem.IsDataField = true;
            xIMCxMensagem.Origem.AllowEmpty = true;
            Retorno.IsReadOnly = false;
            Retorno.Length = 0;
            Retorno.Scale = 0;
            Retorno.IsDataField = true;
            Retorno.AllowEmpty = true;
            xIMCxMensagem.SYSxEmpresaID.IsDataField = true;
            xIMCxMensagem.SYSxEmpresaID.AllowEmpty = true;
            xIMCxMensagem.SYSxEmpresaOrigemID.IsDataField = true;
            xIMCxMensagem.SYSxEmpresaOrigemID.AllowEmpty = true;
            xIMCxMensagem.SYSxPessoaID.IsDataField = true;
            xIMCxMensagem.SYSxPessoaID.AllowEmpty = true;
            xIMCxMensagem.Mensagem.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Classe => xIMCxClasse.Classe;
        public XORMField Codigo => xIMCxMensagem.Codigo;
        public XORMField Data => xIMCxMensagem.Data;
        public XORMField Destino => xIMCxMensagem.Destino;
        public XORMField Estado => xIMCxEstado.Estado;
        public XORMField IMCxClasseID => xIMCxMensagem.IMCxClasseID;
        public XORMField IMCxEstadoID => xIMCxMensagem.IMCxEstadoID;
        public XORMField IMCxMensagemID => xIMCxMensagem.IMCxMensagemID;
        public XORMField Mensagem => xIMCxMensagem.Mensagem;
        public XORMField Origem => xIMCxMensagem.Origem;
        public XORMField Retorno => ChatSVC.Retorno;
        public XORMField SYSxEmpresaID => xIMCxMensagem.SYSxEmpresaID;
        public XORMField SYSxEmpresaOrigemID => xIMCxMensagem.SYSxEmpresaOrigemID;
        public XORMField SYSxPessoaID => xIMCxMensagem.SYSxPessoaID;
        }
        #endregion XFields
        #region ChatSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Classe
        {
            get
            {
                return (String)Value[ChatSVC.xIMCxClasse.Classe.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxClasse.Classe.ID] = value;
            }
        }
        public String? oClasse
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxClasse.Classe, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Codigo
        {
            get
            {
                return (String)Value[ChatSVC.xIMCxMensagem.Codigo.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.Codigo.ID] = value;
            }
        }
        public String? oCodigo
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.Codigo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public DateTime Data
        {
            get
            {
                return (DateTime)Value[ChatSVC.xIMCxMensagem.Data.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.Data.ID] = value;
            }
        }
        public DateTime? oData
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.Data, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public String Destino
        {
            get
            {
                return (String)Value[ChatSVC.xIMCxMensagem.Destino.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.Destino.ID] = value;
            }
        }
        public String? oDestino
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.Destino, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Estado
        {
            get
            {
                return (String)Value[ChatSVC.xIMCxEstado.Estado.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxEstado.Estado.ID] = value;
            }
        }
        public String? oEstado
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxEstado.Estado, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 IMCxClasseID
        {
            get
            {
                return (Int16)Value[ChatSVC.xIMCxMensagem.IMCxClasseID.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.IMCxClasseID.ID] = value;
            }
        }
        public Int16? oIMCxClasseID
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.IMCxClasseID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Int16 IMCxEstadoID
        {
            get
            {
                return (Int16)Value[ChatSVC.xIMCxMensagem.IMCxEstadoID.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.IMCxEstadoID.ID] = value;
            }
        }
        public Int16? oIMCxEstadoID
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.IMCxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid IMCxMensagemID
        {
            get
            {
                return (Guid)Value[ChatSVC.xIMCxMensagem.IMCxMensagemID.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.IMCxMensagemID.ID] = value;
            }
        }
        public Guid? oIMCxMensagemID
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.IMCxMensagemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Byte[] Mensagem
        {
            get
            {
                return (Byte[])Value[ChatSVC.xIMCxMensagem.Mensagem.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.Mensagem.ID] = value;
            }
        }
        public Byte[]? oMensagem
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.Mensagem, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public String Origem
        {
            get
            {
                return (String)Value[ChatSVC.xIMCxMensagem.Origem.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.Origem.ID] = value;
            }
        }
        public String? oOrigem
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.Origem, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Boolean Retorno
        {
            get
            {
                return (Boolean)Value[ChatSVC.Retorno.ID];
            }
            set
            {
                Value[ChatSVC.Retorno.ID] = value;
            }
        }
        public Boolean? oRetorno
        {
            get
            {
                GetOldValue(ChatSVC.Retorno, out Object ovlr);
                return (Boolean?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[ChatSVC.xIMCxMensagem.SYSxEmpresaID.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxEmpresaOrigemID
        {
            get
            {
                return (Guid)Value[ChatSVC.xIMCxMensagem.SYSxEmpresaOrigemID.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.SYSxEmpresaOrigemID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaOrigemID
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.SYSxEmpresaOrigemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxPessoaID
        {
            get
            {
                return (Guid)Value[ChatSVC.xIMCxMensagem.SYSxPessoaID.ID];
            }
            set
            {
                Value[ChatSVC.xIMCxMensagem.SYSxPessoaID.ID] = value;
            }
        }
        public Guid? oSYSxPessoaID
        {
            get
            {
                GetOldValue(ChatSVC.xIMCxMensagem.SYSxPessoaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ChatSVC.XTuple

        #region ChatSVC.XDataSet

        public class XDataSet : XDataSet<ChatSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ChatSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ChatSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Classe => ChatSVC.xIMCxClasse.Classe.ID;
                public Guid Codigo => ChatSVC.xIMCxMensagem.Codigo.ID;
                public Guid Data => ChatSVC.xIMCxMensagem.Data.ID;
                public Guid Destino => ChatSVC.xIMCxMensagem.Destino.ID;
                public Guid Estado => ChatSVC.xIMCxEstado.Estado.ID;
                public Guid IMCxClasseID => ChatSVC.xIMCxMensagem.IMCxClasseID.ID;
                public Guid IMCxEstadoID => ChatSVC.xIMCxMensagem.IMCxEstadoID.ID;
                public Guid IMCxMensagemID => ChatSVC.xIMCxMensagem.IMCxMensagemID.ID;
                public Guid Mensagem => ChatSVC.xIMCxMensagem.Mensagem.ID;
                public Guid Origem => ChatSVC.xIMCxMensagem.Origem.ID;
                public Guid Retorno => ChatSVC.Retorno.ID;
                public Guid SYSxEmpresaID => ChatSVC.xIMCxMensagem.SYSxEmpresaID.ID;
                public Guid SYSxEmpresaOrigemID => ChatSVC.xIMCxMensagem.SYSxEmpresaOrigemID.ID;
                public Guid SYSxPessoaID => ChatSVC.xIMCxMensagem.SYSxPessoaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ChatSVC.XDataSet);
            }

        }
        #endregion ChatSVC.XDataSet
        #if !OnlyDef
        #region ChatSVC.XRule
        public abstract class XRule : XServiceRule<ChatSVC.XDataSet, ChatSVC, ChatSVC.XTuple>
        {
        }
        #endregion ChatSVC.XRule

        [Guid(ChatSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ChatSVC))]
        protected class _Service : Service<ChatSVC, XDataSet, XTuple>
        {
            public const String sCID = "81E2C12B-4262-41D2-9677-C4984E9CAEE0";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ChatSVC, XDataSet, XTuple>, XService
             where TModel : ChatSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}