//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using TFX.Core.Service.Apps;

namespace Projecao.Core.ITG.Jobs
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ITG\Projecao.Core.ITG.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ITG\Jobs\IntegracaoLegado.dssvc")]
    [XRegister(typeof(IntegracaoLegadoSVC), sCID)]
    public class IntegracaoLegadoSVC : XSVCModel
    {
        #region IntegracaoLegadoFilterFRM

        [XRegister(typeof(IntegracaoLegadoFilterFRM), sCID)]
        public class IntegracaoLegadoFilterFRM : XFRMModel
        {
            public const String sCID = "64A642EB-6372-4E93-9105-71F58779EE94";
            public static new readonly Guid gCID = new Guid(sCID);
            static IntegracaoLegadoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public IntegracaoLegadoFilterFRM()
            {
                ID = gCID;
                Name = "IntegracaoLegadoFilter";
                Title = "";
                MinRows = 0;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.LGC.js", "Projecao.Core.PET.js", "Projecao.Core.ITG.js" };
                Rect = new XRect(0, 0, 250, 50);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
            }
            public static class Fields
            {
            }
        }

        #endregion IntegracaoLegadoFilterFRM

        #region XCFGTuple

    //<auto-generated/>
        [XRegister(typeof(XCFGTuple), sCID, typeof(IntegracaoLegadoSVC))]
        public class XCFGTuple : XCFGDataTuple
        {
            public const String sCID = "B745E678-3AAB-4085-96FB-6B44D0645BAF";
            public static Guid gCID = new Guid(sCID);
            public XCFGTuple()
            {
                FormID = new Guid("EEE2B85B-598B-4C4A-8901-DF9FE9C200B9");
                AutoApply = false;
                CompanyFilter = false;
                ConfigPKFilter = false;
                Title = "";
                CNPJ = @"58.375.887/0001-82";
                Host = @"192.168.3.249";
                Porta = 0;
                Instancia = @"orcl";
                Usuario = @"AGROPOP_URIAS";
                Senha = @"TESTE";
                GrupoServico = @"016.000";
                GrupoVacina = @"013.000";
                GrupoExame = @"002.000";
            }
            public String CNPJ
            {
                get
                {
                    return GetValue<String>("CNPJ");
                }
                set
                {
                    SetValue<String>("CNPJ", value);
                }
            }
            public String GrupoExame
            {
                get
                {
                    return GetValue<String>("GrupoExame");
                }
                set
                {
                    SetValue<String>("GrupoExame", value);
                }
            }
            public String GrupoServico
            {
                get
                {
                    return GetValue<String>("GrupoServico");
                }
                set
                {
                    SetValue<String>("GrupoServico", value);
                }
            }
            public String GrupoVacina
            {
                get
                {
                    return GetValue<String>("GrupoVacina");
                }
                set
                {
                    SetValue<String>("GrupoVacina", value);
                }
            }
            public String Host
            {
                get
                {
                    return GetValue<String>("Host");
                }
                set
                {
                    SetValue<String>("Host", value);
                }
            }
            public String Instancia
            {
                get
                {
                    return GetValue<String>("Instancia");
                }
                set
                {
                    SetValue<String>("Instancia", value);
                }
            }
            public String PastaIntegracao
            {
                get
                {
                    return GetValue<String>("PastaIntegracao");
                }
                set
                {
                    SetValue<String>("PastaIntegracao", value);
                }
            }
            public Int32 Porta
            {
                get
                {
                    return GetValue<Int32>("Porta");
                }
                set
                {
                    SetValue<Int32>("Porta", value);
                }
            }
            public String Senha
            {
                get
                {
                    return GetValue<String>("Senha");
                }
                set
                {
                    SetValue<String>("Senha", value);
                }
            }
            public String Usuario
            {
                get
                {
                    return GetValue<String>("Usuario");
                }
                set
                {
                    SetValue<String>("Usuario", value);
                }
            }
        }

        #endregion XCFGTuple

        #region IntegracaoLegadoConfigFRM

        [XRegister(typeof(IntegracaoLegadoConfigFRM), sCID)]
        public class IntegracaoLegadoConfigFRM : XFRMModel
        {
            public const String sCID = "EEE2B85B-598B-4C4A-8901-DF9FE9C200B9";
            public static new readonly Guid gCID = new Guid(sCID);
            static IntegracaoLegadoConfigFRM()
            {
                gCID = new Guid(sCID);
            }
            public IntegracaoLegadoConfigFRM()
            {
                ID = gCID;
                Name = "IntegracaoLegadoConfig";
                Title = "";
                MinRows = 4;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.LGC.js", "Projecao.Core.PET.js", "Projecao.Core.ITG.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(CNPJ);
                CNPJ.Mask = "00.000.000/0000-00";
                CNPJ.CanInsert = true;
                CNPJ.CanUpdate = true;
                CNPJ.RowCount = 2;
                CNPJ.ColCount = 5;
                CNPJ.RowCountSmall = 2;
                CNPJ.ColCountSmall = 5;
                CNPJ.IsHidden = false;
                CNPJ.IsHiddenSmall = false;
                CNPJ.AdditionalTitle = "";
                CNPJ.Icon = "";
                CNPJ.Location = 1;
                CNPJ.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                CNPJ.Operator = XOperator.EqualTo;
                CNPJ.DefaultValue = @"58.375.887/0001-82";
                CNPJ.ShowSpin = false;
                CNPJ.HotkeyChar = "";
                CNPJ.JustifyHeight = false;
                CNPJ.AllowEmpty = true;
                CNPJ.FontColor = "#000000";
                CNPJ.FontStyle = XFontStyle.Normal;
                CNPJ.ShowFooter = false;
                CNPJ.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                CNPJ.Order = 1;
                CNPJ.Scale = -1;
                CNPJ.Length = -1;
                CNPJ.SearchAction = XSearchAction.Default;
                CNPJ.TypeID = XString.CID;
                CNPJ.AdditionalFieldsID = new Guid[] {  };
                CNPJ.AdditionalDataFieldsID = new Guid[] {  };
                CNPJ.TargetFilterFieldID = new Guid[] {  };
                CNPJ.SourceFilterFieldID = new Guid[] {  };
                CNPJ.TargetDisplayFieldID = new Guid[] {  };
                CNPJ.SourceDisplayFieldID = new Guid[] {  };
                CNPJ.AutoLoad = false;
                CNPJ.FilterInative = true;
                CNPJ.IsAnswer = false;
                CNPJ.AllowMultiSelect = false;
                AddItem(Host);
                Host.CanInsert = true;
                Host.CanUpdate = true;
                Host.RowCount = 2;
                Host.ColCount = 7;
                Host.RowCountSmall = 2;
                Host.ColCountSmall = 7;
                Host.IsHidden = false;
                Host.IsHiddenSmall = false;
                Host.AdditionalTitle = "";
                Host.Icon = "";
                Host.Location = 2;
                Host.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Host.Operator = XOperator.EqualTo;
                Host.DefaultValue = @"192.168.3.249";
                Host.ShowSpin = false;
                Host.HotkeyChar = "";
                Host.JustifyHeight = false;
                Host.AllowEmpty = true;
                Host.FontColor = "#000000";
                Host.FontStyle = XFontStyle.Normal;
                Host.ShowFooter = false;
                Host.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Host.Order = 2;
                Host.Scale = -1;
                Host.Length = -1;
                Host.SearchAction = XSearchAction.Default;
                Host.TypeID = XString.CID;
                Host.AdditionalFieldsID = new Guid[] {  };
                Host.AdditionalDataFieldsID = new Guid[] {  };
                Host.TargetFilterFieldID = new Guid[] {  };
                Host.SourceFilterFieldID = new Guid[] {  };
                Host.TargetDisplayFieldID = new Guid[] {  };
                Host.SourceDisplayFieldID = new Guid[] {  };
                Host.AutoLoad = false;
                Host.FilterInative = true;
                Host.IsAnswer = false;
                Host.AllowMultiSelect = false;
                AddItem(Porta);
                Porta.CanInsert = true;
                Porta.CanUpdate = true;
                Porta.RowCount = 2;
                Porta.ColCount = 3;
                Porta.RowCountSmall = 2;
                Porta.ColCountSmall = 3;
                Porta.IsHidden = false;
                Porta.IsHiddenSmall = false;
                Porta.AdditionalTitle = "";
                Porta.Icon = "";
                Porta.Location = 3;
                Porta.EditorCID = new Guid("B45FBE87-40A0-44EF-B2EC-CD6A3000DA3A");
                Porta.Operator = XOperator.EqualTo;
                Porta.ShowSpin = false;
                Porta.HotkeyChar = "";
                Porta.JustifyHeight = false;
                Porta.AllowEmpty = true;
                Porta.FontColor = "#000000";
                Porta.FontStyle = XFontStyle.Normal;
                Porta.ShowFooter = false;
                Porta.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Porta.Order = 3;
                Porta.Scale = -1;
                Porta.Length = -1;
                Porta.SearchAction = XSearchAction.Default;
                Porta.TypeID = XInt32.CID;
                Porta.AdditionalFieldsID = new Guid[] {  };
                Porta.AdditionalDataFieldsID = new Guid[] {  };
                Porta.TargetFilterFieldID = new Guid[] {  };
                Porta.SourceFilterFieldID = new Guid[] {  };
                Porta.TargetDisplayFieldID = new Guid[] {  };
                Porta.SourceDisplayFieldID = new Guid[] {  };
                Porta.AutoLoad = false;
                Porta.FilterInative = true;
                Porta.IsAnswer = false;
                Porta.AllowMultiSelect = false;
                AddItem(Instancia);
                Instancia.CanInsert = true;
                Instancia.CanUpdate = true;
                Instancia.RowCount = 2;
                Instancia.ColCount = 4;
                Instancia.RowCountSmall = 2;
                Instancia.ColCountSmall = 4;
                Instancia.IsHidden = false;
                Instancia.IsHiddenSmall = false;
                Instancia.AdditionalTitle = "";
                Instancia.Icon = "";
                Instancia.Location = 4;
                Instancia.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Instancia.Operator = XOperator.EqualTo;
                Instancia.DefaultValue = @"orcl";
                Instancia.ShowSpin = false;
                Instancia.HotkeyChar = "";
                Instancia.JustifyHeight = false;
                Instancia.AllowEmpty = true;
                Instancia.FontColor = "#000000";
                Instancia.FontStyle = XFontStyle.Normal;
                Instancia.ShowFooter = false;
                Instancia.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Instancia.Order = 4;
                Instancia.Scale = -1;
                Instancia.Length = -1;
                Instancia.SearchAction = XSearchAction.Default;
                Instancia.TypeID = XString.CID;
                Instancia.AdditionalFieldsID = new Guid[] {  };
                Instancia.AdditionalDataFieldsID = new Guid[] {  };
                Instancia.TargetFilterFieldID = new Guid[] {  };
                Instancia.SourceFilterFieldID = new Guid[] {  };
                Instancia.TargetDisplayFieldID = new Guid[] {  };
                Instancia.SourceDisplayFieldID = new Guid[] {  };
                Instancia.AutoLoad = false;
                Instancia.FilterInative = true;
                Instancia.IsAnswer = false;
                Instancia.AllowMultiSelect = false;
                AddItem(Usuario);
                Usuario.CanInsert = true;
                Usuario.CanUpdate = true;
                Usuario.RowCount = 2;
                Usuario.ColCount = 6;
                Usuario.RowCountSmall = 2;
                Usuario.ColCountSmall = 6;
                Usuario.IsHidden = false;
                Usuario.IsHiddenSmall = false;
                Usuario.AdditionalTitle = "";
                Usuario.Icon = "";
                Usuario.Location = 5;
                Usuario.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                Usuario.Operator = XOperator.EqualTo;
                Usuario.DefaultValue = @"AGROPOP_URIAS";
                Usuario.ShowSpin = false;
                Usuario.HotkeyChar = "";
                Usuario.JustifyHeight = false;
                Usuario.AllowEmpty = true;
                Usuario.FontColor = "#000000";
                Usuario.FontStyle = XFontStyle.Normal;
                Usuario.ShowFooter = false;
                Usuario.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Usuario.Order = 5;
                Usuario.Scale = -1;
                Usuario.Length = -1;
                Usuario.SearchAction = XSearchAction.Default;
                Usuario.TypeID = XString.CID;
                Usuario.AdditionalFieldsID = new Guid[] {  };
                Usuario.AdditionalDataFieldsID = new Guid[] {  };
                Usuario.TargetFilterFieldID = new Guid[] {  };
                Usuario.SourceFilterFieldID = new Guid[] {  };
                Usuario.TargetDisplayFieldID = new Guid[] {  };
                Usuario.SourceDisplayFieldID = new Guid[] {  };
                Usuario.AutoLoad = false;
                Usuario.FilterInative = true;
                Usuario.IsAnswer = false;
                Usuario.AllowMultiSelect = false;
                AddItem(Senha);
                Senha.CanInsert = true;
                Senha.CanUpdate = true;
                Senha.RowCount = 2;
                Senha.ColCount = 7;
                Senha.RowCountSmall = 2;
                Senha.ColCountSmall = 7;
                Senha.IsHidden = false;
                Senha.IsHiddenSmall = false;
                Senha.AdditionalTitle = "";
                Senha.Icon = "";
                Senha.Location = 6;
                Senha.EditorCID = new Guid("5CD44E65-DDA1-43A6-899D-19B08032044E");
                Senha.Operator = XOperator.EqualTo;
                Senha.DefaultValue = @"TESTE";
                Senha.ShowSpin = false;
                Senha.HotkeyChar = "";
                Senha.JustifyHeight = false;
                Senha.AllowEmpty = true;
                Senha.FontColor = "#000000";
                Senha.FontStyle = XFontStyle.Normal;
                Senha.ShowFooter = false;
                Senha.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Senha.Order = 6;
                Senha.Scale = -1;
                Senha.Length = -1;
                Senha.SearchAction = XSearchAction.Default;
                Senha.TypeID = XString.CID;
                Senha.AdditionalFieldsID = new Guid[] {  };
                Senha.AdditionalDataFieldsID = new Guid[] {  };
                Senha.TargetFilterFieldID = new Guid[] {  };
                Senha.SourceFilterFieldID = new Guid[] {  };
                Senha.TargetDisplayFieldID = new Guid[] {  };
                Senha.SourceDisplayFieldID = new Guid[] {  };
                Senha.AutoLoad = false;
                Senha.FilterInative = true;
                Senha.IsAnswer = false;
                Senha.AllowMultiSelect = false;
                AddItem(GrupoServico);
                GrupoServico.CanInsert = true;
                GrupoServico.CanUpdate = true;
                GrupoServico.RowCount = 2;
                GrupoServico.ColCount = 8;
                GrupoServico.RowCountSmall = 2;
                GrupoServico.ColCountSmall = 8;
                GrupoServico.IsHidden = false;
                GrupoServico.IsHiddenSmall = false;
                GrupoServico.AdditionalTitle = "";
                GrupoServico.Icon = "";
                GrupoServico.Location = 7;
                GrupoServico.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                GrupoServico.Operator = XOperator.EqualTo;
                GrupoServico.DefaultValue = @"016.000";
                GrupoServico.ShowSpin = false;
                GrupoServico.HotkeyChar = "";
                GrupoServico.JustifyHeight = false;
                GrupoServico.AllowEmpty = true;
                GrupoServico.FontColor = "#000000";
                GrupoServico.FontStyle = XFontStyle.Normal;
                GrupoServico.ShowFooter = false;
                GrupoServico.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                GrupoServico.Order = 7;
                GrupoServico.Scale = -1;
                GrupoServico.Length = -1;
                GrupoServico.SearchAction = XSearchAction.Default;
                GrupoServico.TypeID = XString.CID;
                GrupoServico.AdditionalFieldsID = new Guid[] {  };
                GrupoServico.AdditionalDataFieldsID = new Guid[] {  };
                GrupoServico.TargetFilterFieldID = new Guid[] {  };
                GrupoServico.SourceFilterFieldID = new Guid[] {  };
                GrupoServico.TargetDisplayFieldID = new Guid[] {  };
                GrupoServico.SourceDisplayFieldID = new Guid[] {  };
                GrupoServico.AutoLoad = false;
                GrupoServico.FilterInative = true;
                GrupoServico.IsAnswer = false;
                GrupoServico.AllowMultiSelect = false;
                AddItem(GrupoVacina);
                GrupoVacina.CanInsert = true;
                GrupoVacina.CanUpdate = true;
                GrupoVacina.RowCount = 2;
                GrupoVacina.ColCount = 8;
                GrupoVacina.RowCountSmall = 2;
                GrupoVacina.ColCountSmall = 8;
                GrupoVacina.IsHidden = false;
                GrupoVacina.IsHiddenSmall = false;
                GrupoVacina.AdditionalTitle = "";
                GrupoVacina.Icon = "";
                GrupoVacina.Location = 8;
                GrupoVacina.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                GrupoVacina.Operator = XOperator.EqualTo;
                GrupoVacina.DefaultValue = @"013.000";
                GrupoVacina.ShowSpin = false;
                GrupoVacina.HotkeyChar = "";
                GrupoVacina.JustifyHeight = false;
                GrupoVacina.AllowEmpty = true;
                GrupoVacina.FontColor = "#000000";
                GrupoVacina.FontStyle = XFontStyle.Normal;
                GrupoVacina.ShowFooter = false;
                GrupoVacina.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                GrupoVacina.Order = 8;
                GrupoVacina.Scale = -1;
                GrupoVacina.Length = -1;
                GrupoVacina.SearchAction = XSearchAction.Default;
                GrupoVacina.TypeID = XString.CID;
                GrupoVacina.AdditionalFieldsID = new Guid[] {  };
                GrupoVacina.AdditionalDataFieldsID = new Guid[] {  };
                GrupoVacina.TargetFilterFieldID = new Guid[] {  };
                GrupoVacina.SourceFilterFieldID = new Guid[] {  };
                GrupoVacina.TargetDisplayFieldID = new Guid[] {  };
                GrupoVacina.SourceDisplayFieldID = new Guid[] {  };
                GrupoVacina.AutoLoad = false;
                GrupoVacina.FilterInative = true;
                GrupoVacina.IsAnswer = false;
                GrupoVacina.AllowMultiSelect = false;
                AddItem(GrupoExame);
                GrupoExame.CanInsert = true;
                GrupoExame.CanUpdate = true;
                GrupoExame.RowCount = 2;
                GrupoExame.ColCount = 8;
                GrupoExame.RowCountSmall = 2;
                GrupoExame.ColCountSmall = 8;
                GrupoExame.IsHidden = false;
                GrupoExame.IsHiddenSmall = false;
                GrupoExame.AdditionalTitle = "";
                GrupoExame.Icon = "";
                GrupoExame.Location = 9;
                GrupoExame.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                GrupoExame.Operator = XOperator.EqualTo;
                GrupoExame.DefaultValue = @"002.000";
                GrupoExame.ShowSpin = false;
                GrupoExame.HotkeyChar = "";
                GrupoExame.JustifyHeight = false;
                GrupoExame.AllowEmpty = true;
                GrupoExame.FontColor = "#000000";
                GrupoExame.FontStyle = XFontStyle.Normal;
                GrupoExame.ShowFooter = false;
                GrupoExame.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                GrupoExame.Order = 9;
                GrupoExame.Scale = -1;
                GrupoExame.Length = -1;
                GrupoExame.SearchAction = XSearchAction.Default;
                GrupoExame.TypeID = XString.CID;
                GrupoExame.AdditionalFieldsID = new Guid[] {  };
                GrupoExame.AdditionalDataFieldsID = new Guid[] {  };
                GrupoExame.TargetFilterFieldID = new Guid[] {  };
                GrupoExame.SourceFilterFieldID = new Guid[] {  };
                GrupoExame.TargetDisplayFieldID = new Guid[] {  };
                GrupoExame.SourceDisplayFieldID = new Guid[] {  };
                GrupoExame.AutoLoad = false;
                GrupoExame.FilterInative = true;
                GrupoExame.IsAnswer = false;
                GrupoExame.AllowMultiSelect = false;
                AddItem(PastaIntegracao);
                PastaIntegracao.CanInsert = true;
                PastaIntegracao.CanUpdate = true;
                PastaIntegracao.RowCount = 2;
                PastaIntegracao.ColCount = 8;
                PastaIntegracao.RowCountSmall = 2;
                PastaIntegracao.ColCountSmall = 8;
                PastaIntegracao.IsHidden = false;
                PastaIntegracao.IsHiddenSmall = false;
                PastaIntegracao.AdditionalTitle = "";
                PastaIntegracao.Icon = "";
                PastaIntegracao.Location = 10;
                PastaIntegracao.EditorCID = new Guid("F5982E79-BA45-40FB-85E1-9F2C8B90B6EF");
                PastaIntegracao.FormImplace = true;
                PastaIntegracao.Operator = XOperator.EqualTo;
                PastaIntegracao.ShowSpin = false;
                PastaIntegracao.HotkeyChar = "";
                PastaIntegracao.JustifyHeight = false;
                PastaIntegracao.AllowEmpty = true;
                PastaIntegracao.FontColor = "#000000";
                PastaIntegracao.FontStyle = XFontStyle.Normal;
                PastaIntegracao.ShowFooter = false;
                PastaIntegracao.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                PastaIntegracao.Order = 10;
                PastaIntegracao.Scale = -1;
                PastaIntegracao.Length = -1;
                PastaIntegracao.SearchAction = XSearchAction.Default;
                PastaIntegracao.TypeID = XString.CID;
                PastaIntegracao.AdditionalFieldsID = new Guid[] {  };
                PastaIntegracao.AdditionalDataFieldsID = new Guid[] {  };
                PastaIntegracao.TargetFilterFieldID = new Guid[] {  };
                PastaIntegracao.SourceFilterFieldID = new Guid[] {  };
                PastaIntegracao.TargetDisplayFieldID = new Guid[] {  };
                PastaIntegracao.SourceDisplayFieldID = new Guid[] {  };
                PastaIntegracao.AutoLoad = false;
                PastaIntegracao.FilterInative = true;
                PastaIntegracao.IsAnswer = false;
                PastaIntegracao.AllowMultiSelect = false;
            }
            public XFRMField CNPJ = new XFRMField(new Guid("DA52787D-21BB-48D3-AB40-C08BC823BC1B"), "CNPJ", "CNPJ Para Extração de Dados", XString.CID, 2, 5, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField Host = new XFRMField(new Guid("E50CC308-6B7E-4017-B1C5-16CDF4F1D667"), "Host", "Host", XString.CID, 2, 7, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField Porta = new XFRMField(new Guid("8D07EDB5-CB00-41D2-9CED-A4FDD3BCBCE0"), "Porta", "Porta", XInt32.CID, 2, 3, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // Int32;
            public XFRMField Instancia = new XFRMField(new Guid("67C9D4FE-1937-4A20-8642-5374CB5E0B15"), "Instancia", "Instância", XString.CID, 2, 4, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField Usuario = new XFRMField(new Guid("F91F85D8-0C9F-4A04-9E76-58D44569E0DB"), "Usuario", "Usuário", XString.CID, 2, 6, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField Senha = new XFRMField(new Guid("D1E4907F-BCF4-4EFE-B11A-8E4EE1F351B2"), "Senha", "Senha", XString.CID, 2, 7, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField GrupoServico = new XFRMField(new Guid("4E1BC910-F0CB-4151-AE7A-36D5DA7E3F4B"), "GrupoServico", "Grupo de Serviços", XString.CID, 2, 8, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField GrupoVacina = new XFRMField(new Guid("9C0821A5-C31A-4DCE-AE7F-C5081941EF5D"), "GrupoVacina", "Grupo de Vacinas", XString.CID, 2, 8, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField GrupoExame = new XFRMField(new Guid("7F935721-48E1-4B29-9085-52CF4EFBD81E"), "GrupoExame", "Grupo de Exames", XString.CID, 2, 8, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public XFRMField PastaIntegracao = new XFRMField(new Guid("EC569D05-16C4-43D5-9BB7-44163711CCFD"), "PastaIntegracao", "Pasta Integração", XString.CID, 2, 8, false, gCID, null, new Guid("00000000-0000-0000-0000-000000000000")); // String;
            public static class Fields
            {
                public static XFieldInfo CNPJ = new XFieldInfo(new Guid("DA52787D-21BB-48D3-AB40-C08BC823BC1B"), "CNPJ", "CNPJ Para Extração de Dados", typeof(String), false, "00.000.000/0000-00");
                public static XFieldInfo Host = new XFieldInfo(new Guid("E50CC308-6B7E-4017-B1C5-16CDF4F1D667"), "Host", "Host", typeof(String), false, "");
                public static XFieldInfo Porta = new XFieldInfo(new Guid("8D07EDB5-CB00-41D2-9CED-A4FDD3BCBCE0"), "Porta", "Porta", typeof(Int32), false, "");
                public static XFieldInfo Instancia = new XFieldInfo(new Guid("67C9D4FE-1937-4A20-8642-5374CB5E0B15"), "Instancia", "Instância", typeof(String), false, "");
                public static XFieldInfo Usuario = new XFieldInfo(new Guid("F91F85D8-0C9F-4A04-9E76-58D44569E0DB"), "Usuario", "Usuário", typeof(String), false, "");
                public static XFieldInfo Senha = new XFieldInfo(new Guid("D1E4907F-BCF4-4EFE-B11A-8E4EE1F351B2"), "Senha", "Senha", typeof(String), false, "");
                public static XFieldInfo GrupoServico = new XFieldInfo(new Guid("4E1BC910-F0CB-4151-AE7A-36D5DA7E3F4B"), "GrupoServico", "Grupo de Serviços", typeof(String), false, "");
                public static XFieldInfo GrupoVacina = new XFieldInfo(new Guid("9C0821A5-C31A-4DCE-AE7F-C5081941EF5D"), "GrupoVacina", "Grupo de Vacinas", typeof(String), false, "");
                public static XFieldInfo GrupoExame = new XFieldInfo(new Guid("7F935721-48E1-4B29-9085-52CF4EFBD81E"), "GrupoExame", "Grupo de Exames", typeof(String), false, "");
                public static XFieldInfo PastaIntegracao = new XFieldInfo(new Guid("EC569D05-16C4-43D5-9BB7-44163711CCFD"), "PastaIntegracao", "Pasta Integração", typeof(String), false, "");
            }
        }

        #endregion IntegracaoLegadoConfigFRM

        public const String sCID = "D813C3CB-D0AE-4A29-8887-31164ACAB022";
        public static Guid gCID = new Guid(sCID);

        #region xSYSxJobLog 
        public class xSYSxJobLog : XSVCTable
        {

            public static Guid gCID => new Guid("B95B5C2D-5782-44A8-80BC-C3D3CF67AC93");

            public xSYSxJobLog()
            {
                Name = "SYSxJobLog";
                Alias = "SYSxJobLog";
                ID = gCID;
                ParentID =  global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.gCID;

                Items.Add(SYSxJobLogTipoID, SYSxJobLogTipoID.ID);
                SYSxJobLogTipoID.Owner = this;
                SYSxJobLogTipoID.OwnerID = ID;
                SYSxJobLogTipoID.TableName = Name;
                SYSxJobLogTipoID.Alias = "SYSxJobLogTipoID";
                Items.Add(SYSxJobLogEstadoID, SYSxJobLogEstadoID.ID);
                SYSxJobLogEstadoID.Owner = this;
                SYSxJobLogEstadoID.OwnerID = ID;
                SYSxJobLogEstadoID.TableName = Name;
                SYSxJobLogEstadoID.Alias = "SYSxJobLogEstadoID";
                Items.Add(SYSxJobID, SYSxJobID.ID);
                SYSxJobID.Owner = this;
                SYSxJobID.OwnerID = ID;
                SYSxJobID.TableName = Name;
                SYSxJobID.Alias = "SYSxJobID";
                Items.Add(SYSxJobLogID, SYSxJobLogID.ID);
                SYSxJobLogID.Owner = this;
                SYSxJobLogID.OwnerID = ID;
                SYSxJobLogID.TableName = Name;
                SYSxJobLogID.Alias = "SYSxJobLogID";
                Items.Add(Relatorio, Relatorio.ID);
                Relatorio.Owner = this;
                Relatorio.OwnerID = ID;
                Relatorio.TableName = Name;
                Relatorio.Alias = "Relatorio";
                Items.Add(Momento, Momento.ID);
                Momento.Owner = this;
                Momento.OwnerID = ID;
                Momento.TableName = Name;
                Momento.Alias = "Momento";
            }

            public static XORMFKField SYSxJobLogTipoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogTipoID, new Guid("713610A1-100B-4F45-9745-5DA9008648B2"), "SYSxJobLogTipoID", "Tabela");
            public static XORMFKField SYSxJobLogEstadoID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogEstadoID, new Guid("8D24086C-9797-4B24-8D64-4ED6B02EC58F"), "SYSxJobLogEstadoID", "Tabela");
            public static XORMFKField SYSxJobID = new XORMFKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobID, new Guid("5520EED3-3546-4585-A0B0-C6D149C237AC"), "SYSxJobID", "Tabela");
            public static XORMPKField SYSxJobLogID = new XORMPKField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.SYSxJobLogID, new Guid("BA47AD34-7068-407C-B537-473CFE201052"), "SYSxJobLogID", "Tabela");
            public static XORMField Relatorio = new XORMField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Relatorio, new Guid("526C6546-34CC-47F9-899C-F5706F3EA42C"), "Relatorio", "Relatório");
            public static XORMDateTimeField Momento = new XORMDateTimeField(global::TFX.Core.Service.Apps.SYSx.SYSxJobLog.Momento, new Guid("9DE7E3D9-47D3-4BB9-B245-23436516A7E0"), "Momento", "Momento");
        }
        #endregion xSYSxJobLog 


        public xSYSxJobLog SYSxJobLog;

        public IntegracaoLegadoSVC()
        {
            TupleType = typeof(IntegracaoLegadoSVC.XTuple);
            DataSetType = typeof(IntegracaoLegadoSVC.XDataSet);
            ServiceRuleCID = new Guid("460F1233-CEA8-4742-9217-DCEE9122F028");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Job;
            ID = new Guid("D813C3CB-D0AE-4A29-8887-31164ACAB022");
            Name = "IntegracaoLegado";
            Title = "Integração com Legado";
            IsCacheable = false;
            CompanyControl = true;
            IsJob = true;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("FA1F36E1-A70A-40D3-B312-D11EFDE16118");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            ConfigFormID = new Guid("EEE2B85B-598B-4C4A-8901-DF9FE9C200B9");
            ConfigPKFilter = false;
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.IMC.js", "Projecao.Core.ISE.js", "Projecao.Core.LGC.js", "Projecao.Core.PET.js", "Projecao.Core.ITG.js" };
            DataSetFields = new Guid[] { xSYSxJobLog.Momento.ID, xSYSxJobLog.Relatorio.ID, xSYSxJobLog.SYSxJobID.ID, xSYSxJobLog.SYSxJobLogEstadoID.ID, xSYSxJobLog.SYSxJobLogID.ID, xSYSxJobLog.SYSxJobLogTipoID.ID };
            PKField = xSYSxJobLog.SYSxJobLogID.ID;
            ConfigTableID = new Guid("88D46CC5-6549-43BB-9076-50A4B84BBA23");
            MasterRuleCID = new Guid("460F1233-CEA8-4742-9217-DCEE9122F028");
            SYSxJobLog = new xSYSxJobLog();
            SYSxJobLog.IsReadOnly = false;
            AddTable(SYSxJobLog);
            MasterTableID = SYSxJobLog.ID;
            xSYSxJobLog.Momento.IsDataField = true;
            xSYSxJobLog.Momento.AllowEmpty = true;
            xSYSxJobLog.Relatorio.IsDataField = true;
            xSYSxJobLog.Relatorio.AllowEmpty = true;
            xSYSxJobLog.SYSxJobID.IsDataField = true;
            xSYSxJobLog.SYSxJobID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogEstadoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogEstadoID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogID.GeneratePK = true;
            xSYSxJobLog.SYSxJobLogID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogID.AllowEmpty = true;
            xSYSxJobLog.SYSxJobLogTipoID.IsDataField = true;
            xSYSxJobLog.SYSxJobLogTipoID.AllowEmpty = true;
            xSYSxJobLog.Relatorio.DefaultValue = null;
        }

        #region XFields

        public class XFields
        {
        public XORMField Momento => xSYSxJobLog.Momento;
        public XORMField Relatorio => xSYSxJobLog.Relatorio;
        public XORMField SYSxJobID => xSYSxJobLog.SYSxJobID;
        public XORMField SYSxJobLogEstadoID => xSYSxJobLog.SYSxJobLogEstadoID;
        public XORMField SYSxJobLogID => xSYSxJobLog.SYSxJobLogID;
        public XORMField SYSxJobLogTipoID => xSYSxJobLog.SYSxJobLogTipoID;
        }
        #endregion XFields
        #region IntegracaoLegadoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public DateTime Momento
        {
            get
            {
                return (DateTime)Value[IntegracaoLegadoSVC.xSYSxJobLog.Momento.ID];
            }
            set
            {
                Value[IntegracaoLegadoSVC.xSYSxJobLog.Momento.ID] = value;
            }
        }
        public DateTime? oMomento
        {
            get
            {
                GetOldValue(IntegracaoLegadoSVC.xSYSxJobLog.Momento, out Object ovlr);
                return (DateTime?)ovlr;
            }
        }

        public Byte[] Relatorio
        {
            get
            {
                return (Byte[])Value[IntegracaoLegadoSVC.xSYSxJobLog.Relatorio.ID];
            }
            set
            {
                Value[IntegracaoLegadoSVC.xSYSxJobLog.Relatorio.ID] = value;
            }
        }
        public Byte[]? oRelatorio
        {
            get
            {
                GetOldValue(IntegracaoLegadoSVC.xSYSxJobLog.Relatorio, out Object ovlr);
                return (Byte[]?)ovlr;
            }
        }

        public Guid SYSxJobID
        {
            get
            {
                return (Guid)Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobID.ID];
            }
            set
            {
                Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobID.ID] = value;
            }
        }
        public Guid? oSYSxJobID
        {
            get
            {
                GetOldValue(IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxJobLogEstadoID
        {
            get
            {
                return (Int16)Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID];
            }
            set
            {
                Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogEstadoID
        {
            get
            {
                GetOldValue(IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid SYSxJobLogID
        {
            get
            {
                return (Guid)Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogID.ID];
            }
            set
            {
                Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogID.ID] = value;
            }
        }
        public Guid? oSYSxJobLogID
        {
            get
            {
                GetOldValue(IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxJobLogTipoID
        {
            get
            {
                return (Int16)Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogTipoID.ID];
            }
            set
            {
                Value[IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogTipoID.ID] = value;
            }
        }
        public Int16? oSYSxJobLogTipoID
        {
            get
            {
                GetOldValue(IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion IntegracaoLegadoSVC.XTuple

        #region IntegracaoLegadoSVC.XDataSet

        public class XDataSet : XDataSet<IntegracaoLegadoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(IntegracaoLegadoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<IntegracaoLegadoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Momento => IntegracaoLegadoSVC.xSYSxJobLog.Momento.ID;
                public Guid Relatorio => IntegracaoLegadoSVC.xSYSxJobLog.Relatorio.ID;
                public Guid SYSxJobID => IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobID.ID;
                public Guid SYSxJobLogEstadoID => IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogEstadoID.ID;
                public Guid SYSxJobLogID => IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogID.ID;
                public Guid SYSxJobLogTipoID => IntegracaoLegadoSVC.xSYSxJobLog.SYSxJobLogTipoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(IntegracaoLegadoSVC.XDataSet);
            }

        }
        #endregion IntegracaoLegadoSVC.XDataSet
        #if !OnlyDef
        #region IntegracaoLegadoSVC.XRule
        public abstract class XRule : XServiceJobRule<IntegracaoLegadoSVC.XCFGTuple, IntegracaoLegadoSVC.XDataSet, IntegracaoLegadoSVC, IntegracaoLegadoSVC.XTuple>
        {
        }
        #endregion IntegracaoLegadoSVC.XRule

        [Guid(IntegracaoLegadoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(IntegracaoLegadoSVC))]
        protected class _Service : Service<IntegracaoLegadoSVC, XDataSet, XTuple>
        {
            public const String sCID = "1EBE1D9D-A0AB-42D3-8D47-D681F5A5B9D2";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<IntegracaoLegadoSVC, XDataSet, XTuple>, XService
             where TModel : IntegracaoLegadoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}