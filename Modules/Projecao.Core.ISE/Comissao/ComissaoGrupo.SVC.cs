//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;

namespace Projecao.Core.ISE.Comissao
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Projecao.Core.ISE.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Comissao\ComissaoGrupo.dssvc")]
    [XRegister(typeof(ComissaoGrupoSVC), sCID)]
    public class ComissaoGrupoSVC : XSVCModel
    {
        #region ComissaoGrupoFilterFRM

        [XRegister(typeof(ComissaoGrupoFilterFRM), sCID)]
        public class ComissaoGrupoFilterFRM : XFRMModel
        {
            public const String sCID = "DFB5CD1D-74C2-4229-8DB4-AAB6D5EF4DDA";
            public static new readonly Guid gCID = new Guid(sCID);
            static ComissaoGrupoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ComissaoGrupoFilterFRM()
            {
                ID = gCID;
                Name = "ComissaoGrupoFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Grupo);
                Grupo.ForceRW = true;
                Grupo.CanInsert = true;
                Grupo.CanUpdate = true;
                Grupo.RowCount = 2;
                Grupo.ColCount = 32;
                Grupo.RowCountSmall = 2;
                Grupo.ColCountSmall = 32;
                Grupo.IsHidden = false;
                Grupo.IsHiddenSmall = false;
                Grupo.AdditionalTitle = "";
                Grupo.Icon = "";
                Grupo.Location = 1;
                Grupo.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Grupo.Operator = XOperator.EqualTo;
                Grupo.ShowSpin = false;
                Grupo.HotkeyChar = "";
                Grupo.JustifyHeight = false;
                Grupo.AllowEmpty = true;
                Grupo.FontColor = "#000000";
                Grupo.FontStyle = XFontStyle.Normal;
                Grupo.ShowFooter = false;
                Grupo.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Grupo.Order = 1;
                Grupo.Scale = -1;
                Grupo.Length = -1;
                Grupo.SearchAction = XSearchAction.Default;
                Grupo.TypeID = XString.CID;
                Grupo.AdditionalFieldsID = new Guid[] {  };
                Grupo.AdditionalDataFieldsID = new Guid[] {  };
                Grupo.TargetFilterFieldID = new Guid[] {  };
                Grupo.SourceFilterFieldID = new Guid[] {  };
                Grupo.TargetDisplayFieldID = new Guid[] {  };
                Grupo.SourceDisplayFieldID = new Guid[] {  };
                Grupo.AutoLoad = false;
                Grupo.FilterInative = true;
                Grupo.IsAnswer = false;
                Grupo.AllowMultiSelect = false;
            }
            public XFRMField Grupo = new XFRMField(new Guid("F2BD24DA-24AA-4C05-A8E2-F108BC21ABF9"), "Grupo", "Grupo", XString.CID, 2, 32, false, gCID, null, new Guid("481DE143-08D5-4FAF-A515-ADADF968C14B")); // String;
            public static class Fields
            {
                public static XFieldInfo Grupo = new XFieldInfo(new Guid("F2BD24DA-24AA-4C05-A8E2-F108BC21ABF9"), "Grupo", "Grupo", typeof(String), false, "");
            }
        }

        #endregion ComissaoGrupoFilterFRM

        public const String sCID = "F43122D8-2E8A-42C5-8756-3EC689FA8EAE";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID; // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("2A0DE5A3-48BB-4465-A9F7-A2F83B90E34E");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "Quantidade";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("81551562-AF11-493C-AC67-C45EA1EB499B"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("2EB1F024-5FEF-4FDF-B134-F376680CA327"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("2212801A-62C9-40E7-972B-0D032470CD35"), "ISExItemID", "Quantidade no Grupo");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("F5E4A8D0-AF25-4A8B-A39B-6598A6FF14C9"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("C7B57994-01C7-48EF-96F5-F9E4298147BA"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("9E4917A4-E84C-4D98-A2EB-BED2F016DD95"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("67DDECF2-FBC6-467B-970A-DE933FF4CBC5"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("4BFA78AF-5530-4FA8-B9A6-6E562F32FF49"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("A68AE332-6148-4F76-9378-A8FE16C2F391"), "ProdutoID", "CÃ³digo Legado");
        }
        #endregion xISExItem 


        #region xISExGrupo 
        public class xISExGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("C3530AD7-BA3D-486D-8E3E-6FE75A01F45E");

            public xISExGrupo()
            {
                Name = "ISExGrupo";
                Alias = "ISExGrupo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.gCID;

                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                ISExGrupoID.Alias = "ISExGrupoID";
                Items.Add(GrupoID, GrupoID.ID);
                GrupoID.Owner = this;
                GrupoID.OwnerID = ID;
                GrupoID.TableName = Name;
                GrupoID.Alias = "GrupoID";
            }

            public static XORMField Grupo = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.Grupo, new Guid("481DE143-08D5-4FAF-A515-ADADF968C14B"), "Grupo", "Grupo");
            public static XORMFaceField ISExGrupoID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.ISExGrupoID, new Guid("2286C89F-DE90-4AD4-8240-5E5940B2FF8A"), "ISExGrupoID", "Grupo");
            public static XORMField GrupoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.GrupoID, new Guid("12139CD3-FBAF-4673-BA66-F83083DAC548"), "GrupoID", "CÃ³digo Legado");
        }
        #endregion xISExGrupo 


        public xISExGrupo ISExGrupo;
        public xISExItem ISExItem;
        public static readonly XORMParameterField Comissao = new XORMParameterField(new Guid("C6AA8662-CB14-4367-BFA2-AEC926C06C44"), "Comissao", "Valor da ComissÃ£o", XDecimal.CID, 25, 2, false, gCID, null);

        public ComissaoGrupoSVC()
        {
            TupleType = typeof(ComissaoGrupoSVC.XTuple);
            DataSetType = typeof(ComissaoGrupoSVC.XDataSet);
            ServiceRuleCID = new Guid("D46A2E01-4FEF-4277-B7C3-08D56CB76F03");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("F43122D8-2E8A-42C5-8756-3EC689FA8EAE");
            Name = "ComissaoGrupo";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("DFB5CD1D-74C2-4229-8DB4-AAB6D5EF4DDA");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
            GridFields = new Guid[] { xISExGrupo.Grupo.ID, xISExItem.ISExItemID.ID };
            OrderByFields = new Guid[] { xISExGrupo.Grupo.ID };
            DataSetFields = new Guid[] { xISExGrupo.Grupo.ID, Comissao.ID, xISExGrupo.ISExGrupoID.ID, xISExGrupo.GrupoID.ID, xISExItem.ISExItemID.ID };
            PKField = xISExGrupo.ISExGrupoID.ID;
            ConfigTableID = new Guid("EE759945-8A0B-4CC2-AD54-D08E6A49A0A1");
            MasterRuleCID = new Guid("D46A2E01-4FEF-4277-B7C3-08D56CB76F03");
            ISExGrupo = new xISExGrupo();
            ISExGrupo.IsReadOnly = true;
            AddTable(ISExGrupo);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            MasterTableID = ISExGrupo.ID;
            ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID = AddReference(new XSVCReference(new Guid("2B02B8BB-17B1-44A8-A550-FBCA52CA9305"), "FK_2B02B8BB17B144A8A550FBCA52CA9305", ComissaoGrupoSVC.xISExGrupo.gCID, xISExGrupo.ISExGrupoID.ID, ComissaoGrupoSVC.xISExItem.gCID, xISExItem.ISExGrupoID.ID, XJoinType.Inner)); // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID
            AddField(Comissao);
            Comissao.IsParam = true;
            Comissao.IsReadOnly = false;
            Comissao.Length = 25;
            Comissao.Scale = 2;
            Comissao.IsDataField = true;
            Comissao.AllowEmpty = true;
            xISExGrupo.Grupo.IsReadOnly = true;
            xISExGrupo.Grupo.OrderType = XOrderType.Asc;
            xISExGrupo.Grupo.Length = 40;
            xISExGrupo.Grupo.IsDataField = true;
            xISExGrupo.Grupo.FilterUse = true;
            xISExGrupo.Grupo.AllowEmpty = true;
            xISExGrupo.GrupoID.IsReadOnly = true;
            xISExGrupo.GrupoID.Length = 8;
            xISExGrupo.GrupoID.IsDataField = true;
            xISExGrupo.GrupoID.AllowEmpty = true;
            xISExGrupo.ISExGrupoID.IsReadOnly = true;
            xISExGrupo.ISExGrupoID.IsDataField = true;
            xISExGrupo.ISExGrupoID.AllowEmpty = true;
            xISExItem.ISExItemID.IsReadOnly = true;
            xISExItem.ISExItemID.TypeID = XInt32.CID;
            xISExItem.ISExItemID.DefaultValue = default(Int32);
            xISExItem.ISExItemID.DBFunctionID = new Guid("7AA76D22-B9AF-477A-A15B-6018CFA7BD4D");
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExGrupo.GrupoID.DefaultValue = @"NA";
        }

        #region XFields

        public class XFields
        {
        public XORMField Comissao => ComissaoGrupoSVC.Comissao;
        public XORMField Grupo => xISExGrupo.Grupo;
        public XORMField GrupoID => xISExGrupo.GrupoID;
        public XORMField ISExGrupoID => xISExGrupo.ISExGrupoID;
        public XORMField Quantidade => xISExItem.ISExItemID;
        }
        #endregion XFields
        #region ComissaoGrupoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Decimal Comissao
        {
            get
            {
                return (Decimal)Value[ComissaoGrupoSVC.Comissao.ID];
            }
            set
            {
                Value[ComissaoGrupoSVC.Comissao.ID] = value;
            }
        }
        public Decimal? oComissao
        {
            get
            {
                GetOldValue(ComissaoGrupoSVC.Comissao, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public String Grupo
        {
            get
            {
                return (String)Value[ComissaoGrupoSVC.xISExGrupo.Grupo.ID];
            }
            set
            {
                Value[ComissaoGrupoSVC.xISExGrupo.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(ComissaoGrupoSVC.xISExGrupo.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String GrupoID
        {
            get
            {
                return (String)Value[ComissaoGrupoSVC.xISExGrupo.GrupoID.ID];
            }
            set
            {
                Value[ComissaoGrupoSVC.xISExGrupo.GrupoID.ID] = value;
            }
        }
        public String? oGrupoID
        {
            get
            {
                GetOldValue(ComissaoGrupoSVC.xISExGrupo.GrupoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int32 ISExGrupoID
        {
            get
            {
                return (Int32)Value[ComissaoGrupoSVC.xISExGrupo.ISExGrupoID.ID];
            }
            set
            {
                Value[ComissaoGrupoSVC.xISExGrupo.ISExGrupoID.ID] = value;
            }
        }
        public Int32? oISExGrupoID
        {
            get
            {
                GetOldValue(ComissaoGrupoSVC.xISExGrupo.ISExGrupoID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

        public Int32 Quantidade
        {
            get
            {
                return (Int32)Value[ComissaoGrupoSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[ComissaoGrupoSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Int32? oQuantidade
        {
            get
            {
                GetOldValue(ComissaoGrupoSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Int32?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ComissaoGrupoSVC.XTuple

        #region ComissaoGrupoSVC.XDataSet

        public class XDataSet : XDataSet<ComissaoGrupoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ComissaoGrupoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ComissaoGrupoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Comissao => ComissaoGrupoSVC.Comissao.ID;
                public Guid Grupo => ComissaoGrupoSVC.xISExGrupo.Grupo.ID;
                public Guid GrupoID => ComissaoGrupoSVC.xISExGrupo.GrupoID.ID;
                public Guid ISExGrupoID => ComissaoGrupoSVC.xISExGrupo.ISExGrupoID.ID;
                public Guid Quantidade => ComissaoGrupoSVC.xISExItem.ISExItemID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ComissaoGrupoSVC.XDataSet);
            }

        }
        #endregion ComissaoGrupoSVC.XDataSet
        #if !OnlyDef
        #region ComissaoGrupoSVC.XRule
        public abstract class XRule : XServiceRule<ComissaoGrupoSVC.XDataSet, ComissaoGrupoSVC, ComissaoGrupoSVC.XTuple>
        {
        }
        #endregion ComissaoGrupoSVC.XRule

        [Guid(ComissaoGrupoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ComissaoGrupoSVC))]
        protected class _Service : Service<ComissaoGrupoSVC, XDataSet, XTuple>
        {
            public const String sCID = "5A7CD450-08EA-4BCB-AA96-FDBED430BDE6";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ComissaoGrupoSVC, XDataSet, XTuple>, XService
             where TModel : ComissaoGrupoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}