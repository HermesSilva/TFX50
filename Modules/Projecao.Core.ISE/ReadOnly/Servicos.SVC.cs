//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;

namespace Projecao.Core.ISE.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Projecao.Core.ISE.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\ReadOnly\Servicos.dssvc")]
    [XRegister(typeof(ServicosSVC), sCID)]
    public class ServicosSVC : XSVCModel
    {
        #region ServicosFilterFRM

        [XRegister(typeof(ServicosFilterFRM), sCID)]
        public class ServicosFilterFRM : XFRMModel
        {
            public const String sCID = "65A8C48E-D258-458D-A416-E9A9C38491B1";
            public static new readonly Guid gCID = new Guid(sCID);
            static ServicosFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ServicosFilterFRM()
            {
                ID = gCID;
                Name = "ServicosFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.EqualTo;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("0BC4AD6F-224F-4931-9EBE-E8091F02CF70"), "Nome", "Nome", XString.CID, 2, 32, false, gCID, null, new Guid("272640B4-8322-4EBB-9123-F5128CF0BC66")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("0BC4AD6F-224F-4931-9EBE-E8091F02CF70"), "Nome", "Nome", typeof(String), false, "");
            }
        }

        #endregion ServicosFilterFRM

        public const String sCID = "70E804C8-AD92-446D-95F5-48A56C7B820D";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExServico_ISExServicoID_ISExItem_ISExItemID; // ISExServico.ISExServicoID --> ISExItem.ISExItemID
        public static XSVCReference ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID; // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("2F6A6BF6-F658-4ED3-B957-F494186761E8");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("965C372C-2F7A-4DA4-844E-EA9A88613DBD"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("9D6D4619-7BB0-4531-A7EA-91450FDB08F3"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("92838B47-979A-41FE-93BB-66EDE0DCB2DF"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("1C37069E-858C-47BA-8E7F-6A6D38AFC732"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("0A1AC9C7-BAD3-4156-BFC1-EC52AEC29E11"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("F0C0EC43-9E25-4BBF-A252-AE3EDCEA6C95"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("272640B4-8322-4EBB-9123-F5128CF0BC66"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("246B133F-93EF-4392-BCD9-97053AC73223"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("B595A51F-C9FD-49F7-9F81-84BDC6840972"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExServico 
        public class xISExServico : XSVCTable
        {

            public static Guid gCID => new Guid("BFCCC784-C362-4228-8450-6967E881AFDB");

            public xISExServico()
            {
                Name = "ISExServico";
                Alias = "ISExServico";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExServico.gCID;

                Items.Add(ISExServicoID, ISExServicoID.ID);
                ISExServicoID.Owner = this;
                ISExServicoID.OwnerID = ID;
                ISExServicoID.TableName = Name;
            }

            public static XORMPKField ISExServicoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExServico.ISExServicoID, new Guid("ED224D2B-5B88-45AF-BF20-7B9021599F14"), "ISExServicoID", "Serviço");
        }
        #endregion xISExServico 


        #region xISExGrupo 
        public class xISExGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("CCBD9BD5-1200-41FA-A9C4-AC3242539C17");

            public xISExGrupo()
            {
                Name = "ISExGrupo";
                Alias = "ISExGrupo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.gCID;

                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(GrupoID, GrupoID.ID);
                GrupoID.Owner = this;
                GrupoID.OwnerID = ID;
                GrupoID.TableName = Name;
            }

            public static XORMField Grupo = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.Grupo, new Guid("DB10B261-755A-420F-8B40-40577A4B68FC"), "Grupo", "Grupo");
            public static XORMFaceField ISExGrupoID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.ISExGrupoID, new Guid("6D2C3B8A-02FF-4E19-83A8-B22BC89F9E73"), "ISExGrupoID", "Grupo");
            public static XORMField GrupoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.GrupoID, new Guid("6BDBE0B2-FC1A-4C91-9FA2-D7A46B613E19"), "GrupoID", "Código Legado");
        }
        #endregion xISExGrupo 


        public xISExGrupo ISExGrupo;
        public xISExItem ISExItem;
        public xISExServico ISExServico;
        public static readonly XORMParameterField Tipo = new XORMParameterField(new Guid("66D44382-FED4-4DEC-B21B-95CEABAF37D5"), "Tipo", "Tipo", XString.CID, 0, 0, false, gCID, null);
        public static readonly XORMParameterField TipoID = new XORMParameterField(new Guid("D5848C07-F0FD-493C-903A-A1AB8F8292E3"), "TipoID", "TipoID", XInt16.CID, 0, 0, false, gCID, null);

        public ServicosSVC()
        {
            TupleType = typeof(ServicosSVC.XTuple);
            DataSetType = typeof(ServicosSVC.XDataSet);
            ServiceRuleCID = new Guid("BB0F8C9E-AF41-49D4-8C2E-14ABE03F1556");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("70E804C8-AD92-446D-95F5-48A56C7B820D");
            Name = "Servicos";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("65A8C48E-D258-458D-A416-E9A9C38491B1");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { xISExItem.ISExItemID.ID, xISExItem.Nome.ID, xISExItem.ProdutoID.ID, xISExGrupo.Grupo.ID, Tipo.ID, TipoID.ID };
            PKField = xISExItem.ISExItemID.ID;
            ConfigTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            MasterRuleCID = new Guid("BB0F8C9E-AF41-49D4-8C2E-14ABE03F1556");
            ISExGrupo = new xISExGrupo();
            ISExGrupo.IsReadOnly = true;
            AddTable(ISExGrupo);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExServico = new xISExServico();
            ISExServico.IsReadOnly = true;
            AddTable(ISExServico);
            MasterTableID = ISExItem.ID;
            ISExServico_ISExServicoID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("13974577-0A59-455C-BE8B-167B10D23D23"), "FK_139745770A59455CBE8B167B10D23D23", ServicosSVC.xISExServico.gCID, xISExServico.ISExServicoID.ID, ServicosSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExServico.ISExServicoID --> ISExItem.ISExItemID
            ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID = AddReference(new XSVCReference(new Guid("7093311C-67D1-4FCE-88D6-B7BFC19361EE"), "FK_7093311C67D14FCE88D6B7BFC19361EE", ServicosSVC.xISExGrupo.gCID, xISExGrupo.ISExGrupoID.ID, ServicosSVC.xISExItem.gCID, xISExItem.ISExGrupoID.ID, XJoinType.Inner)); // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID
            AddField(Tipo);
            Tipo.IsParam = true;
            AddField(TipoID);
            TipoID.IsParam = true;
            xISExGrupo.Grupo.IsReadOnly = true;
            xISExGrupo.Grupo.Length = 40;
            xISExGrupo.Grupo.IsDataField = true;
            xISExGrupo.Grupo.AllowEmpty = true;
            xISExItem.ISExItemID.IsReadOnly = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItem.ProdutoID.IsReadOnly = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            Tipo.IsReadOnly = false;
            Tipo.Length = 0;
            Tipo.Scale = 0;
            Tipo.IsDataField = true;
            Tipo.AllowEmpty = true;
            TipoID.IsReadOnly = false;
            TipoID.Length = 0;
            TipoID.Scale = 0;
            TipoID.IsDataField = true;
            TipoID.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
        }

        #region XFields

        public class XFields
        {
        public XORMField Grupo => xISExGrupo.Grupo;
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Tipo => ServicosSVC.Tipo;
        public XORMField TipoID => ServicosSVC.TipoID;
        }
        #endregion XFields
        #region ServicosSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Grupo
        {
            get
            {
                return (String)Value[ServicosSVC.xISExGrupo.Grupo.ID];
            }
            set
            {
                Value[ServicosSVC.xISExGrupo.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(ServicosSVC.xISExGrupo.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[ServicosSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[ServicosSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(ServicosSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ServicosSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[ServicosSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ServicosSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[ServicosSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[ServicosSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(ServicosSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String Tipo
        {
            get
            {
                return (String)Value[ServicosSVC.Tipo.ID];
            }
            set
            {
                Value[ServicosSVC.Tipo.ID] = value;
            }
        }
        public String? oTipo
        {
            get
            {
                GetOldValue(ServicosSVC.Tipo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 TipoID
        {
            get
            {
                return (Int16)Value[ServicosSVC.TipoID.ID];
            }
            set
            {
                Value[ServicosSVC.TipoID.ID] = value;
            }
        }
        public Int16? oTipoID
        {
            get
            {
                GetOldValue(ServicosSVC.TipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ServicosSVC.XTuple

        #region ServicosSVC.XDataSet

        public class XDataSet : XDataSet<ServicosSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ServicosSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ServicosSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Grupo => ServicosSVC.xISExGrupo.Grupo.ID;
                public Guid ISExItemID => ServicosSVC.xISExItem.ISExItemID.ID;
                public Guid Nome => ServicosSVC.xISExItem.Nome.ID;
                public Guid ProdutoID => ServicosSVC.xISExItem.ProdutoID.ID;
                public Guid Tipo => ServicosSVC.Tipo.ID;
                public Guid TipoID => ServicosSVC.TipoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ServicosSVC.XDataSet);
            }

        }
        #endregion ServicosSVC.XDataSet
        #if !OnlyDef
        #region ServicosSVC.XRule
        public abstract class XRule : XServiceRule<ServicosSVC.XDataSet, ServicosSVC, ServicosSVC.XTuple>
        {
        }
        #endregion ServicosSVC.XRule

        [Guid(ServicosSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ServicosSVC))]
        protected class _Service : Service<ServicosSVC, XDataSet, XTuple>
        {
            public const String sCID = "59B67D09-037B-4F5F-8C37-5370B5566DF3";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ServicosSVC, XDataSet, XTuple>, XService
             where TModel : ServicosSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}