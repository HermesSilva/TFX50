//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.ISE.DB;

namespace Projecao.Core.ISE.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Projecao.Core.ISE.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\ReadOnly\ComissaoEmpresa.dssvc")]
    [XRegister(typeof(ComissaoEmpresaSVC), sCID)]
    public class ComissaoEmpresaSVC : XSVCModel
    {
        public const String sCID = "811E39A3-5A1B-4E8C-B937-AAC9723E336C";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExItem_ISExItemID_ISExComissao_ISExItemID; // ISExItem.ISExItemID --> ISExComissao.ISExItemID

        #region xISExComissao 
        public class xISExComissao : XSVCTable
        {

            public static Guid gCID => new Guid("88F62B54-07A0-4FF7-8588-23BCA2B160BC");

            public xISExComissao()
            {
                Name = "ISExComissao";
                Alias = "ISExComissao";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExComissao.gCID;

                Items.Add(ISExComissaoID, ISExComissaoID.ID);
                ISExComissaoID.Owner = this;
                ISExComissaoID.OwnerID = ID;
                ISExComissaoID.TableName = Name;
                ISExComissaoID.Alias = "ISExComissaoID";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(ISExComissaoTipoID, ISExComissaoTipoID.ID);
                ISExComissaoTipoID.Owner = this;
                ISExComissaoTipoID.OwnerID = ID;
                ISExComissaoTipoID.TableName = Name;
                ISExComissaoTipoID.Alias = "ISExComissaoTipoID";
                Items.Add(Comissao, Comissao.ID);
                Comissao.Owner = this;
                Comissao.OwnerID = ID;
                Comissao.TableName = Name;
                Comissao.Alias = "Comissao";
                Items.Add(SYSxEmpresaID, SYSxEmpresaID.ID);
                SYSxEmpresaID.Owner = this;
                SYSxEmpresaID.OwnerID = ID;
                SYSxEmpresaID.TableName = Name;
                SYSxEmpresaID.Alias = "SYSxEmpresaID";
            }

            public static XORMPKField ISExComissaoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExComissao.ISExComissaoID, new Guid("17C3CF71-A624-4602-9EAF-5A7B41EB617B"), "ISExComissaoID", "Comiss찾o");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExComissao.ISExItemID, new Guid("26241C10-6EA7-43C8-A99B-89A75EFB96A4"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExComissaoTipoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExComissao.ISExComissaoTipoID, new Guid("6C3331F5-A61C-4777-A7F3-700BDD4CC97C"), "ISExComissaoTipoID", "Tipo de Comiss찾o");
            public static XORMDecimalField Comissao = new XORMDecimalField(global::Projecao.Core.ISE.DB.ISEx.ISExComissao.Comissao, new Guid("1A125C0B-E070-4CCD-914B-EB880E07E102"), "Comissao", "Comiss찾o");
            public static XORMFKField SYSxEmpresaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExComissao.SYSxEmpresaID, new Guid("2B829B37-20E6-4390-A3E5-86050231ABCD"), "SYSxEmpresaID", "Empresa");
        }
        #endregion xISExComissao 


        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("F5E4FAFA-BF4D-4A0B-9A13-D0483682596E");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("8C778C94-B413-410C-A963-99235CF502CE"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("804BBC21-90D7-42F2-97E9-C02DFB27E246"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("87ED499C-973A-4076-8D0B-82AF919CF2D2"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("9ED42650-53B1-4A4F-A6FD-BE612211934F"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("F29D2D1A-2D1C-48F2-9E79-31A25006C9A7"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("1FD9913B-4CB9-4C2D-ABE6-A3CD62F759DD"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("8C7786FD-566D-4838-8C06-B1FA875BAC66"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("E115ECB0-8B43-4A2E-B262-6E5484E856BB"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("05BE287D-DC25-4F29-BA20-1350EF85FB25"), "ProdutoID", "C처digo Legado");
        }
        #endregion xISExItem 


        public xISExComissao ISExComissao;
        public xISExItem ISExItem;

        public ComissaoEmpresaSVC()
        {
            TupleType = typeof(ComissaoEmpresaSVC.XTuple);
            DataSetType = typeof(ComissaoEmpresaSVC.XDataSet);
            ServiceRuleCID = new Guid("7DF8EF0D-AA5B-45DA-BA90-B880E9942A89");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("811E39A3-5A1B-4E8C-B937-AAC9723E336C");
            Name = "ComissaoEmpresa";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
            Rights = new Int16[] { 1 }; 
            IsReadOnly = true;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
            GridFields = new Guid[] { xISExComissao.Comissao.ID };
            DataSetFields = new Guid[] { xISExComissao.ISExItemID.ID, xISExComissao.ISExComissaoID.ID, xISExComissao.Comissao.ID, xISExComissao.ISExComissaoTipoID.ID, xISExComissao.SYSxEmpresaID.ID };
            PKField = xISExComissao.ISExComissaoID.ID;
            ConfigTableID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
            MasterRuleCID = new Guid("7DF8EF0D-AA5B-45DA-BA90-B880E9942A89");
            ISExComissao = new xISExComissao();
            ISExComissao.IsReadOnly = true;
            AddTable(ISExComissao);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            MasterTableID = ISExComissao.ID;
            ISExItem_ISExItemID_ISExComissao_ISExItemID = AddReference(new XSVCReference(new Guid("BF951568-4845-47FF-9537-AA79931FFBB2"), "FK_BF951568484547FF9537AA79931FFBB2", ComissaoEmpresaSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, ComissaoEmpresaSVC.xISExComissao.gCID, xISExComissao.ISExItemID.ID, XJoinType.Inner)); // ISExItem.ISExItemID --> ISExComissao.ISExItemID
            xISExComissao.Comissao.IsReadOnly = true;
            xISExComissao.Comissao.Length = 8;
            xISExComissao.Comissao.Scale = 2;
            xISExComissao.Comissao.IsDataField = true;
            xISExComissao.Comissao.AllowEmpty = true;
            xISExComissao.ISExComissaoID.IsReadOnly = true;
            xISExComissao.ISExComissaoID.IsDataField = true;
            xISExComissao.ISExComissaoID.AllowEmpty = true;
            xISExComissao.ISExComissaoTipoID.IsReadOnly = true;
            xISExComissao.ISExComissaoTipoID.IsDataField = true;
            xISExComissao.ISExComissaoTipoID.AllowEmpty = true;
            xISExComissao.ISExItemID.IsReadOnly = true;
            xISExComissao.ISExItemID.IsDataField = true;
            xISExComissao.ISExItemID.AllowEmpty = true;
            xISExComissao.SYSxEmpresaID.IsReadOnly = true;
            xISExComissao.SYSxEmpresaID.IsDataField = true;
            xISExComissao.SYSxEmpresaID.AllowEmpty = true;
        }

        protected override void AddWhere(XIExecContext pContext, List<Object> pWhere)
        {
            pWhere.Add(xISExComissao.SYSxEmpresaID);
            pWhere.Add(pContext.Logon.CurrentCompanyID);
        }

        #region XFields

        public class XFields
        {
        public XORMField Comissao => xISExComissao.Comissao;
        public XORMField ISExComissaoID => xISExComissao.ISExComissaoID;
        public XORMField ISExComissaoTipoID => xISExComissao.ISExComissaoTipoID;
        public XORMField ISExItemID => xISExComissao.ISExItemID;
        public XORMField SYSxEmpresaID => xISExComissao.SYSxEmpresaID;
        }
        #endregion XFields
        #region ComissaoEmpresaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public Decimal Comissao
        {
            get
            {
                return (Decimal)Value[ComissaoEmpresaSVC.xISExComissao.Comissao.ID];
            }
            set
            {
                Value[ComissaoEmpresaSVC.xISExComissao.Comissao.ID] = value;
            }
        }
        public Decimal? oComissao
        {
            get
            {
                GetOldValue(ComissaoEmpresaSVC.xISExComissao.Comissao, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

        public Guid ISExComissaoID
        {
            get
            {
                return (Guid)Value[ComissaoEmpresaSVC.xISExComissao.ISExComissaoID.ID];
            }
            set
            {
                Value[ComissaoEmpresaSVC.xISExComissao.ISExComissaoID.ID] = value;
            }
        }
        public Guid? oISExComissaoID
        {
            get
            {
                GetOldValue(ComissaoEmpresaSVC.xISExComissao.ISExComissaoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 ISExComissaoTipoID
        {
            get
            {
                return (Int16)Value[ComissaoEmpresaSVC.xISExComissao.ISExComissaoTipoID.ID];
            }
            set
            {
                Value[ComissaoEmpresaSVC.xISExComissao.ISExComissaoTipoID.ID] = value;
            }
        }
        public Int16? oISExComissaoTipoID
        {
            get
            {
                GetOldValue(ComissaoEmpresaSVC.xISExComissao.ISExComissaoTipoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[ComissaoEmpresaSVC.xISExComissao.ISExItemID.ID];
            }
            set
            {
                Value[ComissaoEmpresaSVC.xISExComissao.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(ComissaoEmpresaSVC.xISExComissao.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid SYSxEmpresaID
        {
            get
            {
                return (Guid)Value[ComissaoEmpresaSVC.xISExComissao.SYSxEmpresaID.ID];
            }
            set
            {
                Value[ComissaoEmpresaSVC.xISExComissao.SYSxEmpresaID.ID] = value;
            }
        }
        public Guid? oSYSxEmpresaID
        {
            get
            {
                GetOldValue(ComissaoEmpresaSVC.xISExComissao.SYSxEmpresaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ComissaoEmpresaSVC.XTuple

        #region ComissaoEmpresaSVC.XDataSet

        public class XDataSet : XDataSet<ComissaoEmpresaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ComissaoEmpresaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ComissaoEmpresaSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Comissao => ComissaoEmpresaSVC.xISExComissao.Comissao.ID;
                public Guid ISExComissaoID => ComissaoEmpresaSVC.xISExComissao.ISExComissaoID.ID;
                public Guid ISExComissaoTipoID => ComissaoEmpresaSVC.xISExComissao.ISExComissaoTipoID.ID;
                public Guid ISExItemID => ComissaoEmpresaSVC.xISExComissao.ISExItemID.ID;
                public Guid SYSxEmpresaID => ComissaoEmpresaSVC.xISExComissao.SYSxEmpresaID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ComissaoEmpresaSVC.XDataSet);
            }

        }
        #endregion ComissaoEmpresaSVC.XDataSet
        #if !OnlyDef
        #region ComissaoEmpresaSVC.XRule
        public abstract class XRule : XServiceRule<ComissaoEmpresaSVC.XDataSet, ComissaoEmpresaSVC, ComissaoEmpresaSVC.XTuple>
        {
        }
        #endregion ComissaoEmpresaSVC.XRule

        [Guid(ComissaoEmpresaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ComissaoEmpresaSVC))]
        protected class _Service : Service<ComissaoEmpresaSVC, XDataSet, XTuple>
        {
            public const String sCID = "7B3E9B78-4CF2-4013-96B4-BCCC69ED3DBB";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ComissaoEmpresaSVC, XDataSet, XTuple>, XService
             where TModel : ComissaoEmpresaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}