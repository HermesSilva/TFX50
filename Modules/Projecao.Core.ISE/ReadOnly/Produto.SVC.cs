//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Model.DIC.FRM;
using TFX.Core.Model.DIC.APP;
using TFX.Core.Model.DIC.RPT;
using Projecao.Core.ISE.DB;

namespace Projecao.Core.ISE.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Projecao.Core.ISE.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\ReadOnly\Produto.dssvc")]
    [XRegister(typeof(ProdutoSVC), sCID)]
    public class ProdutoSVC : XSVCModel
    {
        #region ProdutoFilterFRM

        [XRegister(typeof(ProdutoFilterFRM), sCID)]
        public class ProdutoFilterFRM : XFRMModel
        {
            public const String sCID = "69FAD8CA-EBF9-49C3-B8C4-20C7A34D4498";
            public static new readonly Guid gCID = new Guid(sCID);
            static ProdutoFilterFRM()
            {
                gCID = new Guid(sCID);
            }
            public ProdutoFilterFRM()
            {
                ID = gCID;
                Name = "ProdutoFilter";
                Title = "";
                MinRows = 2;
                ConfigCID = new Guid("00000000-0000-0000-0000-000000000000");
                ConfigPKFilter = false;
                ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
                Rect = new XRect(20, 20, 1018, 696);
                Style = XFRMStyle.Normal;
                ActionContext = XActionContext.All;
                AddItem(Nome);
                Nome.ForceRW = true;
                Nome.CanInsert = true;
                Nome.CanUpdate = true;
                Nome.RowCount = 2;
                Nome.ColCount = 32;
                Nome.RowCountSmall = 2;
                Nome.ColCountSmall = 32;
                Nome.IsHidden = false;
                Nome.IsHiddenSmall = false;
                Nome.AdditionalTitle = "";
                Nome.Icon = "";
                Nome.Location = 1;
                Nome.EditorCID = new Guid("AA2A0DB9-2C59-4833-994D-3DBF2AA0CB3C");
                Nome.Operator = XOperator.Like;
                Nome.ShowSpin = false;
                Nome.HotkeyChar = "";
                Nome.JustifyHeight = false;
                Nome.AllowEmpty = true;
                Nome.FontColor = "#000000";
                Nome.FontStyle = XFontStyle.Normal;
                Nome.ShowFooter = false;
                Nome.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
                Nome.Order = 1;
                Nome.Scale = -1;
                Nome.Length = -1;
                Nome.SearchAction = XSearchAction.Default;
                Nome.TypeID = XString.CID;
                Nome.AdditionalFieldsID = new Guid[] {  };
                Nome.AdditionalDataFieldsID = new Guid[] {  };
                Nome.TargetFilterFieldID = new Guid[] {  };
                Nome.SourceFilterFieldID = new Guid[] {  };
                Nome.TargetDisplayFieldID = new Guid[] {  };
                Nome.SourceDisplayFieldID = new Guid[] {  };
                Nome.AutoLoad = false;
                Nome.FilterInative = true;
                Nome.IsAnswer = false;
                Nome.AllowMultiSelect = false;
            }
            public XFRMField Nome = new XFRMField(new Guid("47FCF705-56F9-4BB4-9215-D522953F6291"), "Nome", "Pesquisar Produto", XString.CID, 2, 32, false, gCID, null, new Guid("F0789C62-DFFA-4680-81E2-0C62FAC85146")); // String;
            public static class Fields
            {
                public static XFieldInfo Nome = new XFieldInfo(new Guid("47FCF705-56F9-4BB4-9215-D522953F6291"), "Nome", "Pesquisar Produto", typeof(String), false, "");
            }
        }

        #endregion ProdutoFilterFRM

        public const String sCID = "AEFC07CB-9DCA-485A-8089-1E02DE5D6FF8";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExProduto_ISExProdutoID_ISExItem_ISExItemID; // ISExProduto.ISExProdutoID --> ISExItem.ISExItemID
        public static XSVCReference ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID; // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("0B32B0B4-EF6A-43E4-86F3-43BE17CC3C96");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("82836994-02E9-4B1F-8A55-DACD1B1C51CE"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("35180C2A-8A9B-47A9-970F-B0AAD92E23CF"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("12630EDE-0A7D-4804-BF95-85E08086FD8E"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("48277831-5E6A-41E5-8F1A-7215DC4DE1CF"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("B23BCB82-D37F-407F-9877-1F2FF7F60379"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("1C1BC1F0-8C78-4EE2-867B-15E49A046EFC"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("F0789C62-DFFA-4680-81E2-0C62FAC85146"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("92C98E2E-CC18-4087-AC15-948A5976CC67"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("2175BE40-30C9-46D9-949D-86740547A6CF"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExProduto 
        public class xISExProduto : XSVCTable
        {

            public static Guid gCID => new Guid("482A6763-FE25-4251-BB5F-94BC5F1F5513");

            public xISExProduto()
            {
                Name = "ISExProduto";
                Alias = "ISExProduto";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExProduto.gCID;

                Items.Add(ISExProdutoID, ISExProdutoID.ID);
                ISExProdutoID.Owner = this;
                ISExProdutoID.OwnerID = ID;
                ISExProdutoID.TableName = Name;
                ISExProdutoID.Alias = "ISExProdutoID";
            }

            public static XORMPKField ISExProdutoID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExProduto.ISExProdutoID, new Guid("28A5DA0A-625B-48CD-B8B7-784109EF944E"), "ISExProdutoID", "Acessórios");
        }
        #endregion xISExProduto 


        #region xISExGrupo 
        public class xISExGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("B8C10B28-7FEC-483A-998E-44AB8B109DA4");

            public xISExGrupo()
            {
                Name = "ISExGrupo";
                Alias = "ISExGrupo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.gCID;

                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(GrupoID, GrupoID.ID);
                GrupoID.Owner = this;
                GrupoID.OwnerID = ID;
                GrupoID.TableName = Name;
            }

            public static XORMField Grupo = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.Grupo, new Guid("A5E05EEB-8A44-49B5-AEBE-F1D89E38612B"), "Grupo", "Grupo");
            public static XORMFaceField ISExGrupoID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.ISExGrupoID, new Guid("5DD75902-CDE0-4639-B533-F4B31ADB3A4E"), "ISExGrupoID", "Grupo");
            public static XORMField GrupoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.GrupoID, new Guid("BD9FDE5A-6DC9-49D2-B545-F7B498EE724E"), "GrupoID", "Código Legado");
        }
        #endregion xISExGrupo 


        public xISExGrupo ISExGrupo;
        public xISExItem ISExItem;
        public xISExProduto ISExProduto;
        public static readonly XORMParameterField Valor = new XORMParameterField(new Guid("6D3147BD-F86C-4A19-9821-5C5270CBA1C8"), "Valor", "Valor de Tabela", XDecimal.CID, 25, 2, false, gCID, null);

        public ProdutoSVC()
        {
            TupleType = typeof(ProdutoSVC.XTuple);
            DataSetType = typeof(ProdutoSVC.XDataSet);
            ServiceRuleCID = new Guid("2191667F-9206-4989-AA79-7CA142C7126F");
            OnlyActives = true;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("AEFC07CB-9DCA-485A-8089-1E02DE5D6FF8");
            Name = "Produto";
            Title = "Produtos";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            FilterFormID = new Guid("69FAD8CA-EBF9-49C3-B8C4-20C7A34D4498");
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, Valor.ID, xISExItem.ProdutoID.ID, xISExGrupo.Grupo.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID };
            DataSetFields = new Guid[] { Valor.ID, xISExGrupo.Grupo.ID, xISExItem.ProdutoID.ID, xISExItem.Nome.ID, xISExProduto.ISExProdutoID.ID, xISExItem.SYSxEstadoID.ID };
            PKField = xISExProduto.ISExProdutoID.ID;
            ConfigTableID = new Guid("6F0B163E-0FAC-4DD2-8823-A4CAA8B96456");
            StateField = xISExItem.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("2191667F-9206-4989-AA79-7CA142C7126F");
            ISExGrupo = new xISExGrupo();
            ISExGrupo.IsReadOnly = true;
            AddTable(ISExGrupo);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            ISExProduto = new xISExProduto();
            ISExProduto.IsReadOnly = true;
            AddTable(ISExProduto);
            MasterTableID = ISExItem.ID;
            ISExProduto_ISExProdutoID_ISExItem_ISExItemID = AddReference(new XSVCReference(new Guid("5EF79ADB-F978-458F-BA6B-EA569BD310E2"), "FK_5EF79ADBF978458FBA6BEA569BD310E2", ProdutoSVC.xISExProduto.gCID, xISExProduto.ISExProdutoID.ID, ProdutoSVC.xISExItem.gCID, xISExItem.ISExItemID.ID, XJoinType.Inner)); // ISExProduto.ISExProdutoID --> ISExItem.ISExItemID
            ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID = AddReference(new XSVCReference(new Guid("886FBEB5-4BB8-4793-AA10-0328E2834C79"), "FK_886FBEB54BB84793AA100328E2834C79", ProdutoSVC.xISExGrupo.gCID, xISExGrupo.ISExGrupoID.ID, ProdutoSVC.xISExItem.gCID, xISExItem.ISExGrupoID.ID, XJoinType.Inner)); // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID
            AddField(Valor);
            Valor.IsParam = true;
            xISExGrupo.Grupo.IsReadOnly = true;
            xISExGrupo.Grupo.Length = 40;
            xISExGrupo.Grupo.IsDataField = true;
            xISExGrupo.Grupo.FilterUse = true;
            xISExGrupo.Grupo.AllowEmpty = true;
            xISExProduto.ISExProdutoID.IsReadOnly = true;
            xISExProduto.ISExProdutoID.IsDataField = true;
            xISExProduto.ISExProdutoID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItem.ProdutoID.IsReadOnly = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.FilterUse = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            xISExItem.SYSxEstadoID.IsReadOnly = true;
            xISExItem.SYSxEstadoID.IsDataField = true;
            xISExItem.SYSxEstadoID.AllowEmpty = true;
            Valor.IsReadOnly = false;
            Valor.Length = 25;
            Valor.Scale = 2;
            Valor.IsDataField = true;
            Valor.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
            xISExItem.SYSxEstadoID.DefaultValue = (Int16)1;
        }

        #region XFields

        public class XFields
        {
        public XORMField Grupo => xISExGrupo.Grupo;
        public XORMField ISExProdutoID => xISExProduto.ISExProdutoID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField SYSxEstadoID => xISExItem.SYSxEstadoID;
        public XORMField Valor => ProdutoSVC.Valor;
        }
        #endregion XFields
        #region ProdutoSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Grupo
        {
            get
            {
                return (String)Value[ProdutoSVC.xISExGrupo.Grupo.ID];
            }
            set
            {
                Value[ProdutoSVC.xISExGrupo.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(ProdutoSVC.xISExGrupo.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExProdutoID
        {
            get
            {
                return (Guid)Value[ProdutoSVC.xISExProduto.ISExProdutoID.ID];
            }
            set
            {
                Value[ProdutoSVC.xISExProduto.ISExProdutoID.ID] = value;
            }
        }
        public Guid? oISExProdutoID
        {
            get
            {
                GetOldValue(ProdutoSVC.xISExProduto.ISExProdutoID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ProdutoSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[ProdutoSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ProdutoSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[ProdutoSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[ProdutoSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(ProdutoSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ProdutoSVC.xISExItem.SYSxEstadoID.ID];
            }
            set
            {
                Value[ProdutoSVC.xISExItem.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ProdutoSVC.xISExItem.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[ProdutoSVC.Valor.ID];
            }
            set
            {
                Value[ProdutoSVC.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(ProdutoSVC.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ProdutoSVC.XTuple

        #region ProdutoSVC.XDataSet

        public class XDataSet : XDataSet<ProdutoSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ProdutoSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ProdutoSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Grupo => ProdutoSVC.xISExGrupo.Grupo.ID;
                public Guid ISExProdutoID => ProdutoSVC.xISExProduto.ISExProdutoID.ID;
                public Guid Nome => ProdutoSVC.xISExItem.Nome.ID;
                public Guid ProdutoID => ProdutoSVC.xISExItem.ProdutoID.ID;
                public Guid SYSxEstadoID => ProdutoSVC.xISExItem.SYSxEstadoID.ID;
                public Guid Valor => ProdutoSVC.Valor.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ProdutoSVC.XDataSet);
            }

        }
        #endregion ProdutoSVC.XDataSet
        #if !OnlyDef
        #region ProdutoSVC.XRule
        public abstract class XRule : XServiceRule<ProdutoSVC.XDataSet, ProdutoSVC, ProdutoSVC.XTuple>
        {
        }
        #endregion ProdutoSVC.XRule

        [Guid(ProdutoSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ProdutoSVC))]
        protected class _Service : Service<ProdutoSVC, XDataSet, XTuple>
        {
            public const String sCID = "A6DE3E39-F4FB-40C0-8464-C955066BC804";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ProdutoSVC, XDataSet, XTuple>, XService
             where TModel : ProdutoSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}