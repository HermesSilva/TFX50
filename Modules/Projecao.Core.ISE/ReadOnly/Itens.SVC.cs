//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.ISE.DB;

namespace Projecao.Core.ISE.ReadOnly
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Projecao.Core.ISE.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\ReadOnly\Itens.dssvc")]
    [XRegister(typeof(ItensSVC), sCID)]
    public class ItensSVC : XSVCModel
    {
        public const String sCID = "172B9D8A-7AD7-44B3-B665-4B7FB04B80AE";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID; // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID

        #region xISExItem 
        public class xISExItem : XSVCTable
        {

            public static Guid gCID => new Guid("1D9A66DC-9337-4758-BFFC-0DAE090A759F");

            public xISExItem()
            {
                Name = "ISExItem";
                Alias = "ISExItem";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItem.gCID;

                Items.Add(ISExLinhaID, ISExLinhaID.ID);
                ISExLinhaID.Owner = this;
                ISExLinhaID.OwnerID = ID;
                ISExLinhaID.TableName = Name;
                Items.Add(ISExTabelaID, ISExTabelaID.ID);
                ISExTabelaID.Owner = this;
                ISExTabelaID.OwnerID = ID;
                ISExTabelaID.TableName = Name;
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(ISExFabricanteID, ISExFabricanteID.ID);
                ISExFabricanteID.Owner = this;
                ISExFabricanteID.OwnerID = ID;
                ISExFabricanteID.TableName = Name;
                Items.Add(ISExMarcaID, ISExMarcaID.ID);
                ISExMarcaID.Owner = this;
                ISExMarcaID.OwnerID = ID;
                ISExMarcaID.TableName = Name;
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(Nome, Nome.ID);
                Nome.Owner = this;
                Nome.OwnerID = ID;
                Nome.TableName = Name;
                Nome.Alias = "Nome";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                Items.Add(ProdutoID, ProdutoID.ID);
                ProdutoID.Owner = this;
                ProdutoID.OwnerID = ID;
                ProdutoID.TableName = Name;
                ProdutoID.Alias = "ProdutoID";
            }

            public static XORMFKField ISExLinhaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExLinhaID, new Guid("DFB2846B-D002-4933-A79B-ED8146D69CFA"), "ISExLinhaID", "Linha");
            public static XORMFKField ISExTabelaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExTabelaID, new Guid("A0495260-ECC4-44CC-8853-EFB1F0AE9B5E"), "ISExTabelaID", "Tabela");
            public static XORMFaceField ISExItemID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExItemID, new Guid("657CA1C2-DFB6-4004-948E-76E4E2711E0F"), "ISExItemID", "Item de Estoque");
            public static XORMFKField ISExFabricanteID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExFabricanteID, new Guid("3BD68611-50AF-42AE-904C-224D8BDCA311"), "ISExFabricanteID", "Fabricante");
            public static XORMFKField ISExMarcaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExMarcaID, new Guid("BD531DCA-6B07-4719-A65E-2544E376FD92"), "ISExMarcaID", "Marca");
            public static XORMFKField ISExGrupoID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ISExGrupoID, new Guid("8058A48E-610C-4D38-9232-F06B709C9784"), "ISExGrupoID", "Grupo");
            public static XORMField Nome = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.Nome, new Guid("DFD6B25C-73D7-4A94-8919-87546C1BF0A3"), "Nome", "Nome");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.SYSxEstadoID, new Guid("26515C5C-ADBC-41B4-B94B-1492CE890176"), "SYSxEstadoID", "Estado");
            public static XORMField ProdutoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExItem.ProdutoID, new Guid("519ECD92-DC67-40CC-B627-D094961E6523"), "ProdutoID", "Código Legado");
        }
        #endregion xISExItem 


        #region xISExGrupo 
        public class xISExGrupo : XSVCTable
        {

            public static Guid gCID => new Guid("956EB0BF-6B30-4142-AF17-BC68070D992B");

            public xISExGrupo()
            {
                Name = "ISExGrupo";
                Alias = "ISExGrupo";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.gCID;

                Items.Add(Grupo, Grupo.ID);
                Grupo.Owner = this;
                Grupo.OwnerID = ID;
                Grupo.TableName = Name;
                Grupo.Alias = "Grupo";
                Items.Add(ISExGrupoID, ISExGrupoID.ID);
                ISExGrupoID.Owner = this;
                ISExGrupoID.OwnerID = ID;
                ISExGrupoID.TableName = Name;
                Items.Add(GrupoID, GrupoID.ID);
                GrupoID.Owner = this;
                GrupoID.OwnerID = ID;
                GrupoID.TableName = Name;
            }

            public static XORMField Grupo = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.Grupo, new Guid("B09406A1-AA4D-45BD-AD72-89CE029080D7"), "Grupo", "Grupo");
            public static XORMFaceField ISExGrupoID = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.ISExGrupoID, new Guid("4FBCE233-DD27-45C9-AD52-2941226E3CF0"), "ISExGrupoID", "Grupo");
            public static XORMField GrupoID = new XORMField(global::Projecao.Core.ISE.DB.ISEx.ISExGrupo.GrupoID, new Guid("56F562C2-109B-47F5-A9FD-4F42A293643D"), "GrupoID", "Código Legado");
        }
        #endregion xISExGrupo 


        public xISExGrupo ISExGrupo;
        public xISExItem ISExItem;
        public static readonly XORMParameterField Valor = new XORMParameterField(new Guid("387576A7-218E-4BE2-99E9-1F34801FD632"), "Valor", "Preço Venda", XDecimal.CID, 20, 2, false, gCID, null);

        public ItensSVC()
        {
            TupleType = typeof(ItensSVC.XTuple);
            DataSetType = typeof(ItensSVC.XDataSet);
            ServiceRuleCID = new Guid("42226F09-EAF4-46BA-B5CD-7C98A017C792");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("172B9D8A-7AD7-44B3-B665-4B7FB04B80AE");
            Name = "Itens";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
            GridFields = new Guid[] { xISExItem.Nome.ID, Valor.ID, xISExGrupo.Grupo.ID };
            OrderByFields = new Guid[] { xISExItem.Nome.ID, xISExGrupo.Grupo.ID };
            DataSetFields = new Guid[] { xISExGrupo.Grupo.ID, xISExItem.Nome.ID, xISExItem.ISExItemID.ID, xISExItem.ProdutoID.ID, Valor.ID };
            PKField = xISExItem.ISExItemID.ID;
            ConfigTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            MasterRuleCID = new Guid("42226F09-EAF4-46BA-B5CD-7C98A017C792");
            ISExGrupo = new xISExGrupo();
            ISExGrupo.IsReadOnly = true;
            AddTable(ISExGrupo);
            ISExItem = new xISExItem();
            ISExItem.IsReadOnly = true;
            AddTable(ISExItem);
            MasterTableID = ISExItem.ID;
            ISExGrupo_ISExGrupoID_ISExItem_ISExGrupoID = AddReference(new XSVCReference(new Guid("7678F1A4-372A-4D57-82DD-E8D228368C43"), "FK_7678F1A4372A4D5782DDE8D228368C43", ItensSVC.xISExGrupo.gCID, xISExGrupo.ISExGrupoID.ID, ItensSVC.xISExItem.gCID, xISExItem.ISExGrupoID.ID, XJoinType.Inner)); // ISExGrupo.ISExGrupoID --> ISExItem.ISExGrupoID
            AddField(Valor);
            Valor.IsParam = true;
            xISExGrupo.Grupo.IsReadOnly = true;
            xISExGrupo.Grupo.OrderType = XOrderType.Asc;
            xISExGrupo.Grupo.Length = 40;
            xISExGrupo.Grupo.IsDataField = true;
            xISExGrupo.Grupo.FilterUse = true;
            xISExGrupo.Grupo.AllowEmpty = true;
            xISExItem.ISExItemID.IsReadOnly = true;
            xISExItem.ISExItemID.IsDataField = true;
            xISExItem.ISExItemID.AllowEmpty = true;
            xISExItem.Nome.IsReadOnly = true;
            xISExItem.Nome.OrderType = XOrderType.Asc;
            xISExItem.Nome.Length = 60;
            xISExItem.Nome.IsDataField = true;
            xISExItem.Nome.FilterUse = true;
            xISExItem.Nome.AllowEmpty = true;
            xISExItem.ProdutoID.IsReadOnly = true;
            xISExItem.ProdutoID.Length = 8;
            xISExItem.ProdutoID.IsDataField = true;
            xISExItem.ProdutoID.AllowEmpty = true;
            Valor.IsReadOnly = false;
            Valor.Length = 20;
            Valor.Scale = 2;
            Valor.IsDataField = true;
            Valor.AllowEmpty = true;
            xISExItem.ProdutoID.DefaultValue = @"NA";
        }

        #region XFields

        public class XFields
        {
        public XORMField Grupo => xISExGrupo.Grupo;
        public XORMField ISExItemID => xISExItem.ISExItemID;
        public XORMField Nome => xISExItem.Nome;
        public XORMField ProdutoID => xISExItem.ProdutoID;
        public XORMField Valor => ItensSVC.Valor;
        }
        #endregion XFields
        #region ItensSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Grupo
        {
            get
            {
                return (String)Value[ItensSVC.xISExGrupo.Grupo.ID];
            }
            set
            {
                Value[ItensSVC.xISExGrupo.Grupo.ID] = value;
            }
        }
        public String? oGrupo
        {
            get
            {
                GetOldValue(ItensSVC.xISExGrupo.Grupo, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[ItensSVC.xISExItem.ISExItemID.ID];
            }
            set
            {
                Value[ItensSVC.xISExItem.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(ItensSVC.xISExItem.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public String Nome
        {
            get
            {
                return (String)Value[ItensSVC.xISExItem.Nome.ID];
            }
            set
            {
                Value[ItensSVC.xISExItem.Nome.ID] = value;
            }
        }
        public String? oNome
        {
            get
            {
                GetOldValue(ItensSVC.xISExItem.Nome, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public String ProdutoID
        {
            get
            {
                return (String)Value[ItensSVC.xISExItem.ProdutoID.ID];
            }
            set
            {
                Value[ItensSVC.xISExItem.ProdutoID.ID] = value;
            }
        }
        public String? oProdutoID
        {
            get
            {
                GetOldValue(ItensSVC.xISExItem.ProdutoID, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Decimal Valor
        {
            get
            {
                return (Decimal)Value[ItensSVC.Valor.ID];
            }
            set
            {
                Value[ItensSVC.Valor.ID] = value;
            }
        }
        public Decimal? oValor
        {
            get
            {
                GetOldValue(ItensSVC.Valor, out Object ovlr);
                return (Decimal?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ItensSVC.XTuple

        #region ItensSVC.XDataSet

        public class XDataSet : XDataSet<ItensSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ItensSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ItensSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Grupo => ItensSVC.xISExGrupo.Grupo.ID;
                public Guid ISExItemID => ItensSVC.xISExItem.ISExItemID.ID;
                public Guid Nome => ItensSVC.xISExItem.Nome.ID;
                public Guid ProdutoID => ItensSVC.xISExItem.ProdutoID.ID;
                public Guid Valor => ItensSVC.Valor.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ItensSVC.XDataSet);
            }

        }
        #endregion ItensSVC.XDataSet
        #if !OnlyDef
        #region ItensSVC.XRule
        public abstract class XRule : XServiceRule<ItensSVC.XDataSet, ItensSVC, ItensSVC.XTuple>
        {
        }
        #endregion ItensSVC.XRule

        [Guid(ItensSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ItensSVC))]
        protected class _Service : Service<ItensSVC, XDataSet, XTuple>
        {
            public const String sCID = "8DA8276F-3220-4C01-B96C-534A3E428C86";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ItensSVC, XDataSet, XTuple>, XService
             where TModel : ItensSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}