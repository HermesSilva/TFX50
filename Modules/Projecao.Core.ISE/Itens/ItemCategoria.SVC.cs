//<auto-generated/>
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Newtonsoft.Json;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.DIC.SVC;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.Services;
using TFX.Core.Reflections;
using TFX.Core.Objects;
#if !OnlyDef
using TFX.Core.Service.Job;
using TFX.Core.Service.SVC;
#endif
using Projecao.Core.ISE.DB;

namespace Projecao.Core.ISE.Itens
{
    [XDASESource(@"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Projecao.Core.ISE.csproj", @"D:\Tootega\Source\TFX20\Modules\Projecao.Core.ISE\Itens\ItemCategoria.dssvc")]
    [XRegister(typeof(ItemCategoriaSVC), sCID)]
    public class ItemCategoriaSVC : XSVCModel
    {
        public const String sCID = "8AEB3325-90E3-4C96-9C32-2EBF9109EAB2";
        public static Guid gCID = new Guid(sCID);
        public static XSVCReference ISExCategoria_ISExCategoriaID_ISExItemCategoria_ISExCategoriaID; // ISExCategoria.ISExCategoriaID --> ISExItemCategoria.ISExCategoriaID

        #region xISExCategoria 
        public class xISExCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("238A4841-ED5E-4F31-B624-5603467966CC");

            public xISExCategoria()
            {
                Name = "ISExCategoria";
                Alias = "ISExCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExCategoria.gCID;

                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                Items.Add(Categoria, Categoria.ID);
                Categoria.Owner = this;
                Categoria.OwnerID = ID;
                Categoria.TableName = Name;
                Categoria.Alias = "Categoria";
            }

            public static XORMPKField ISExCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExCategoria.ISExCategoriaID, new Guid("D74A3CE4-9105-4FE0-B632-199D4E8377C1"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFaceField Categoria = new XORMFaceField(global::Projecao.Core.ISE.DB.ISEx.ISExCategoria.Categoria, new Guid("04DD4D5E-F105-4B63-BA6B-656D969A8BBA"), "Categoria", "Categoria de Item");
        }
        #endregion xISExCategoria 


        #region xISExItemCategoria 
        public class xISExItemCategoria : XSVCTable
        {

            public static Guid gCID => new Guid("AF165A18-922D-4A74-A76E-A9573D51B6C6");

            public xISExItemCategoria()
            {
                Name = "ISExItemCategoria";
                Alias = "ISExItemCategoria";
                ID = gCID;
                ParentID =  global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.gCID;

                Items.Add(ISExItemCategoriaID, ISExItemCategoriaID.ID);
                ISExItemCategoriaID.Owner = this;
                ISExItemCategoriaID.OwnerID = ID;
                ISExItemCategoriaID.TableName = Name;
                ISExItemCategoriaID.Alias = "ISExItemCategoriaID";
                Items.Add(ISExCategoriaID, ISExCategoriaID.ID);
                ISExCategoriaID.Owner = this;
                ISExCategoriaID.OwnerID = ID;
                ISExCategoriaID.TableName = Name;
                ISExCategoriaID.Alias = "ISExCategoriaID";
                Items.Add(ISExItemID, ISExItemID.ID);
                ISExItemID.Owner = this;
                ISExItemID.OwnerID = ID;
                ISExItemID.TableName = Name;
                ISExItemID.Alias = "ISExItemID";
                Items.Add(SYSxEstadoID, SYSxEstadoID.ID);
                SYSxEstadoID.Owner = this;
                SYSxEstadoID.OwnerID = ID;
                SYSxEstadoID.TableName = Name;
                SYSxEstadoID.Alias = "SYSxEstadoID";
            }

            public static XORMPKField ISExItemCategoriaID = new XORMPKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemCategoriaID, new Guid("570B6B57-392A-4000-A491-DBF9553C9E9A"), "ISExItemCategoriaID", "Categorias de Item");
            public static XORMFKField ISExCategoriaID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExCategoriaID, new Guid("5F0352FC-02CE-4B00-8346-F3EF0311CE93"), "ISExCategoriaID", "Categorização de Itens");
            public static XORMFKField ISExItemID = new XORMFKField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.ISExItemID, new Guid("818C86D1-F15F-453F-AFA0-8487BAD24200"), "ISExItemID", "Item");
            public static XORMStateField SYSxEstadoID = new XORMStateField(global::Projecao.Core.ISE.DB.ISEx.ISExItemCategoria.SYSxEstadoID, new Guid("11B5CF4E-7996-4D1E-B65A-2164D590E372"), "SYSxEstadoID", "Estado");
        }
        #endregion xISExItemCategoria 


        public xISExCategoria ISExCategoria;
        public xISExItemCategoria ISExItemCategoria;

        public ItemCategoriaSVC()
        {
            TupleType = typeof(ItemCategoriaSVC.XTuple);
            DataSetType = typeof(ItemCategoriaSVC.XDataSet);
            ServiceRuleCID = new Guid("6FA58BB6-E2F5-4FFB-B172-BD72B27E8C91");
            OnlyActives = false;
            Actions = XSVCAction.All;
            Type = XServiceType.Default;
            ID = new Guid("8AEB3325-90E3-4C96-9C32-2EBF9109EAB2");
            Name = "ItemCategoria";
            Title = "";
            IsCacheable = false;
            CompanyControl = false;
            IsJob = false;
            AutoLoad = true;
            FreeForUsers = false;
            ServerSideNewRecord = false;
            UseDistinct = false;
            CheckTenant = true;
            JobType = XJobType.Default;
            ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
            Rights = new Int16[] { 1, 2, 3, 4, 5, 6, 7 }; 
            IsReadOnly = false;
            ReferenceScripts = new String[] { "TFX.Core.Service.js", "Projecao.Core.CEP.js", "Projecao.Core.ERP.js", "Projecao.Core.ISE.js" };
            GridFields = new Guid[] { xISExCategoria.Categoria.ID, xISExItemCategoria.SYSxEstadoID.ID };
            OrderByFields = new Guid[] { xISExCategoria.Categoria.ID };
            DataSetFields = new Guid[] { xISExItemCategoria.ISExItemCategoriaID.ID, xISExItemCategoria.ISExCategoriaID.ID, xISExItemCategoria.ISExItemID.ID, xISExItemCategoria.SYSxEstadoID.ID, xISExCategoria.Categoria.ID };
            PKField = xISExItemCategoria.ISExItemCategoriaID.ID;
            ConfigTableID = new Guid("3BFE9ACC-B209-4D3F-AB44-816B2D960229");
            StateField = xISExItemCategoria.SYSxEstadoID.ID;
            MasterRuleCID = new Guid("6FA58BB6-E2F5-4FFB-B172-BD72B27E8C91");
            ISExCategoria = new xISExCategoria();
            ISExCategoria.IsReadOnly = true;
            AddTable(ISExCategoria);
            ISExItemCategoria = new xISExItemCategoria();
            ISExItemCategoria.IsReadOnly = false;
            AddTable(ISExItemCategoria);
            MasterTableID = ISExItemCategoria.ID;
            ISExCategoria_ISExCategoriaID_ISExItemCategoria_ISExCategoriaID = AddReference(new XSVCReference(new Guid("013DC10E-A2A1-46EC-829F-C6FE334C627A"), "FK_013DC10EA2A146EC829FC6FE334C627A", ItemCategoriaSVC.xISExCategoria.gCID, xISExCategoria.ISExCategoriaID.ID, ItemCategoriaSVC.xISExItemCategoria.gCID, xISExItemCategoria.ISExCategoriaID.ID, XJoinType.Inner)); // ISExCategoria.ISExCategoriaID --> ISExItemCategoria.ISExCategoriaID
            xISExCategoria.Categoria.IsReadOnly = true;
            xISExCategoria.Categoria.OrderType = XOrderType.Asc;
            xISExCategoria.Categoria.IsDataField = true;
            xISExCategoria.Categoria.AllowEmpty = true;
            xISExItemCategoria.ISExCategoriaID.IsDataField = true;
            xISExItemCategoria.ISExCategoriaID.AllowEmpty = true;
            xISExItemCategoria.ISExItemCategoriaID.GeneratePK = true;
            xISExItemCategoria.ISExItemCategoriaID.IsDataField = true;
            xISExItemCategoria.ISExItemCategoriaID.AllowEmpty = true;
            xISExItemCategoria.ISExItemID.IsDataField = true;
            xISExItemCategoria.ISExItemID.AllowEmpty = true;
            xISExItemCategoria.SYSxEstadoID.IsDataField = true;
            xISExItemCategoria.SYSxEstadoID.AllowEmpty = true;
        }

        #region XFields

        public class XFields
        {
        public XORMField Categoria => xISExCategoria.Categoria;
        public XORMField ISExCategoriaID => xISExItemCategoria.ISExCategoriaID;
        public XORMField ISExItemCategoriaID => xISExItemCategoria.ISExItemCategoriaID;
        public XORMField ISExItemID => xISExItemCategoria.ISExItemID;
        public XORMField SYSxEstadoID => xISExItemCategoria.SYSxEstadoID;
        }
        #endregion XFields
        #region ItemCategoriaSVC.XTuple

        public  class XTuple : XDataTuple
        {

            public XTuple()
            {
            }

            public XTuple(Object[] pSource)
                : base(pSource)
            {
            }

            public XTuple(Int32 pColCount)
               : this(new Object[pColCount])
            {
            }

            public readonly XFields Fields = new XFields();

            #nullable enable

        public String Categoria
        {
            get
            {
                return (String)Value[ItemCategoriaSVC.xISExCategoria.Categoria.ID];
            }
            set
            {
                Value[ItemCategoriaSVC.xISExCategoria.Categoria.ID] = value;
            }
        }
        public String? oCategoria
        {
            get
            {
                GetOldValue(ItemCategoriaSVC.xISExCategoria.Categoria, out Object ovlr);
                return (String?)ovlr;
            }
        }

        public Int16 ISExCategoriaID
        {
            get
            {
                return (Int16)Value[ItemCategoriaSVC.xISExItemCategoria.ISExCategoriaID.ID];
            }
            set
            {
                Value[ItemCategoriaSVC.xISExItemCategoria.ISExCategoriaID.ID] = value;
            }
        }
        public Int16? oISExCategoriaID
        {
            get
            {
                GetOldValue(ItemCategoriaSVC.xISExItemCategoria.ISExCategoriaID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

        public Guid ISExItemCategoriaID
        {
            get
            {
                return (Guid)Value[ItemCategoriaSVC.xISExItemCategoria.ISExItemCategoriaID.ID];
            }
            set
            {
                Value[ItemCategoriaSVC.xISExItemCategoria.ISExItemCategoriaID.ID] = value;
            }
        }
        public Guid? oISExItemCategoriaID
        {
            get
            {
                GetOldValue(ItemCategoriaSVC.xISExItemCategoria.ISExItemCategoriaID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Guid ISExItemID
        {
            get
            {
                return (Guid)Value[ItemCategoriaSVC.xISExItemCategoria.ISExItemID.ID];
            }
            set
            {
                Value[ItemCategoriaSVC.xISExItemCategoria.ISExItemID.ID] = value;
            }
        }
        public Guid? oISExItemID
        {
            get
            {
                GetOldValue(ItemCategoriaSVC.xISExItemCategoria.ISExItemID, out Object ovlr);
                return (Guid?)ovlr;
            }
        }

        public Int16 SYSxEstadoID
        {
            get
            {
                return (Int16)Value[ItemCategoriaSVC.xISExItemCategoria.SYSxEstadoID.ID];
            }
            set
            {
                Value[ItemCategoriaSVC.xISExItemCategoria.SYSxEstadoID.ID] = value;
            }
        }
        public Int16? oSYSxEstadoID
        {
            get
            {
                GetOldValue(ItemCategoriaSVC.xISExItemCategoria.SYSxEstadoID, out Object ovlr);
                return (Int16?)ovlr;
            }
        }

            #nullable disable
        }
        #endregion ItemCategoriaSVC.XTuple

        #region ItemCategoriaSVC.XDataSet

        public class XDataSet : XDataSet<ItemCategoriaSVC.XTuple>
        {
            public XDataSet()
            {
                DataSetType = typeof(ItemCategoriaSVC.XDataSet);
            }
        }

        public class XDataSet<T> : XServiceDataSet<ItemCategoriaSVC.XTuple> where T : XDataTuple
        {

            public class xFLDs{
                public Guid Categoria => ItemCategoriaSVC.xISExCategoria.Categoria.ID;
                public Guid ISExCategoriaID => ItemCategoriaSVC.xISExItemCategoria.ISExCategoriaID.ID;
                public Guid ISExItemCategoriaID => ItemCategoriaSVC.xISExItemCategoria.ISExItemCategoriaID.ID;
                public Guid ISExItemID => ItemCategoriaSVC.xISExItemCategoria.ISExItemID.ID;
                public Guid SYSxEstadoID => ItemCategoriaSVC.xISExItemCategoria.SYSxEstadoID.ID;
            }

            public xFLDs FLDs = new xFLDs();

            public XDataSet()
            {
                DataSetType = typeof(ItemCategoriaSVC.XDataSet);
            }

        }
        #endregion ItemCategoriaSVC.XDataSet
        #if !OnlyDef
        #region ItemCategoriaSVC.XRule
        public abstract class XRule : XServiceRule<ItemCategoriaSVC.XDataSet, ItemCategoriaSVC, ItemCategoriaSVC.XTuple>
        {
        }
        #endregion ItemCategoriaSVC.XRule

        [Guid(ItemCategoriaSVC.sCID)]
        public  interface XService : XIBaseService
        {
            new XDataSet DataSet
            {
                get;
            }
            new XTuple NewTuple(Object pPKValue = null);
             IEnumerable<XTuple> Tuples
            {
                get;
            }
             XTuple Current
            {
                get;
            }
            new XDataSet Get(XServiceData pData);
             XDataSet Get(params Object[] pWhere);
        }
        [XRegister(typeof(_Service), _Service.sCID, typeof(ItemCategoriaSVC))]
        protected class _Service : Service<ItemCategoriaSVC, XDataSet, XTuple>
        {
            public const String sCID = "2BBEBA22-4737-4DB5-B4E4-026320576D3D";
            public Guid gCID = new Guid(sCID);
        }

        public class Service<TModel, TDataSet, TTuple> : XBaseService<ItemCategoriaSVC, XDataSet, XTuple>, XService
             where TModel : ItemCategoriaSVC, new()
             where TDataSet : XDataSet, new()
             where TTuple : XTuple
        {
            XDataSet XService.DataSet => (XDataSet)DataSet;
            XTuple XService.NewTuple(Object pPKValue)
            {
                return (XTuple)NewTuple(pPKValue);
            }
            public new XDataTuple NewTuple(Object pPKValue = null)
            {
                return (XTuple)base.NewTuple(pPKValue);
            }
            IEnumerable<XTuple> XService.Tuples => (IEnumerable<XTuple>)Tuples;
            XTuple XService.Current => (XTuple )Current;
            XDataSet XService.Get(XServiceData pData)
            {
                return (XDataSet)Get(pData);
            }
            XDataSet XService.Get(params Object[] pWhere)
            {
                return (XDataSet)Get(pWhere);
            }
            public Service()
            {
                ID = gCID;
            }
        }
        #endif
    }

}