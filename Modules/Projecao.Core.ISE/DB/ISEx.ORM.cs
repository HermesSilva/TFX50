//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using TFX.Core.Cache;
using TFX.Core.Model.Cache;
using TFX.Core.Model.Data;
using TFX.Core.Model.Interfaces;
using TFX.Core.Model.DIC.ORM;
using TFX.Core.Model.DIC.Types;
using TFX.Core.Reflections;
using TFX.Core.Model.DIC;
#if !OnlyDef
using TFX.Core.Service.SVC;
#endif
using TFX.Core.Service.Apps;
using Projecao.Core.ERP.DB;

namespace Projecao.Core.ISE.DB
{
    [XRegister(typeof(ISEx), "080F030F-049F-4EF9-98D4-5FB8E8D78C47")]
    public class ISEx : XModelDictionary
    {
        #region ISExCategoria

        [XRegister(typeof(ISExCategoria), sCID)]
        public class ISExCategoria : XORMTable
        {
            public const String sCID = "5D7985C0-17AD-4E1C-8DA3-FDEFBC593D42";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sMaterial_de_Consumo => _Titles[(Int16)1];
                public const Int16 Material_de_Consumo = (Int16)1;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)1] = "Material de Consumo"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Categoria
                {
                    get
                    {
                        return (String)Value[ISExCategoria.Categoria];
                    }
                    set
                    {
                        this[ISExCategoria.Categoria] = value;
                    }
                }
                public String? oCategoria
                {
                    get
                    {
                        GetOldValue(ISExCategoria.Categoria, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 ISExCategoriaID
                {
                    get
                    {
                        return (Int16)Value[ISExCategoria.ISExCategoriaID];
                    }
                    set
                    {
                        this[ISExCategoria.ISExCategoriaID] = value;
                    }
                }
                public Int16? oISExCategoriaID
                {
                    get
                    {
                        GetOldValue(ISExCategoria.ISExCategoriaID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExCategoria _Instance;
            public static ISExCategoria Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExCategoria>(gCID);
                    return _Instance;
                }
            }
            public static XORMFaceField Categoria = new XORMFaceField(new Guid("14E9A17B-CD43-4C9F-AF72-AF7D41F813FA"), "Categoria", "Categoria de Item", XString.CID, 0, 0, false, gCID, null);
            public static XORMPKField ISExCategoriaID = new XORMPKField(new Guid("7ECA11F3-FFBC-4FA1-92ED-F512A2F29DAF"), "ISExCategoriaID", "Categorização de Itens", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static ISExCategoria()
            {
                ISExCategoriaID.PKID = new Guid("889E023A041F401B818D7E892A80F552");
                ISExCategoriaID.UpdateStatic = true;
                ISExCategoriaID.InsertOnly = false;
                ISExCategoriaID.TableName = "ISExCategoria";
                ISExCategoriaID.SourceTableID = new Guid("5D7985C0-17AD-4E1C-8DA3-FDEFBC593D42");
                ISExCategoriaID.Index = 0;
                Categoria.UpdateStatic = true;
                Categoria.InsertOnly = false;
                Categoria.TableName = "ISExCategoria";
                Categoria.SourceTableID = new Guid("5D7985C0-17AD-4E1C-8DA3-FDEFBC593D42");
                Categoria.Index = 1;
                Categoria.IsFaceField = true;
            }
            protected ISExCategoria()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExCategoria);
            #endif
                ID = new Guid("5D7985C0-17AD-4E1C-8DA3-FDEFBC593D42");
                Name = "ISExCategoria";
                Title = "Categorização de Itens";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_7ECA11F3FFBC4FA192EDF512A2F29DAF";
                FaceField = Categoria;
                IsCached = true;
                DisplayField = Categoria;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)1, @"Material de Consumo"}), (Int16)1);
            }
        }

        #endregion ISExCategoria

        #region ISExCodigo

        [XRegister(typeof(ISExCodigo), sCID)]
        public class ISExCodigo : XORMTable
        {
            public const String sCID = "8477EAA3-2114-4287-AD0B-C1C0CD224BC1";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExCodigoID
                {
                    get
                    {
                        return (Guid)Value[ISExCodigo.ISExCodigoID];
                    }
                    set
                    {
                        this[ISExCodigo.ISExCodigoID] = value;
                    }
                }
                public Guid? oISExCodigoID
                {
                    get
                    {
                        GetOldValue(ISExCodigo.ISExCodigoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 ISExCodigoTipoID
                {
                    get
                    {
                        return (Int16)Value[ISExCodigo.ISExCodigoTipoID];
                    }
                    set
                    {
                        this[ISExCodigo.ISExCodigoTipoID] = value;
                    }
                }
                public Int16? oISExCodigoTipoID
                {
                    get
                    {
                        GetOldValue(ISExCodigo.ISExCodigoTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExCodigo.ISExItemID];
                    }
                    set
                    {
                        this[ISExCodigo.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExCodigo.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Numero
                {
                    get
                    {
                        return (String)Value[ISExCodigo.Numero];
                    }
                    set
                    {
                        this[ISExCodigo.Numero] = value;
                    }
                }
                public String? oNumero
                {
                    get
                    {
                        GetOldValue(ISExCodigo.Numero, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public String NumeroCurto
                {
                    get
                    {
                        return (String)Value[ISExCodigo.NumeroCurto];
                    }
                    set
                    {
                        this[ISExCodigo.NumeroCurto] = value;
                    }
                }
                public String? oNumeroCurto
                {
                    get
                    {
                        GetOldValue(ISExCodigo.NumeroCurto, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExCodigo _Instance;
            public static ISExCodigo Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExCodigo>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExCodigoID = new XORMPKField(new Guid("79F4886E-B3F1-49FC-8A2F-5FD50D073916"), "ISExCodigoID", "Tipo de Código", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExCodigoTipoID = new XORMFKField(new Guid("7094E063-C994-4E30-9191-4A5E6FCEBCFF"), "ISExCodigoTipoID", "Tipo de Código", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("ADD5152B-63C2-478E-ACEE-D2515AFCAF8E"), "ISExItemID", "Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Numero = new XORMField(new Guid("C2C9643F-B421-4CB6-9D2B-F441AA8CD8F8"), "Numero", "Número", XString.CID, 36, 0, true, gCID, null);
            public static XORMField NumeroCurto = new XORMField(new Guid("39FF7568-AB3E-4206-8F0C-5117D8D935F7"), "NumeroCurto", "Número Curto", XString.CID, 10, 0, true, gCID, null);
            public static readonly XORMReference FK_5586136603B24F1293332A1615203A8A = new XORMReference(new Guid("55861366-03B2-4F12-9333-2A1615203A8A"), "FK_5586136603B24F1293332A1615203A8A", gCID, ISExCodigoTipoID.ID, ISExCodigoTipo.gCID, ISExCodigoTipo.ISExCodigoTipoID.ID);
            public static readonly XORMReference FK_0DB849B8923843618526CCB7F4356D96 = new XORMReference(new Guid("0DB849B8-9238-4361-8526-CCB7F4356D96"), "FK_0DB849B8923843618526CCB7F4356D96", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMIndex IX_301C2D7C41C148559113BA9DD54D5E34 = new XORMIndex();
            public static readonly XORMIndex IX_67AAA4EE763F43198EDB13C7CD9BE707 = new XORMIndex();
            public static readonly XORMIndex IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE = new XORMIndex();
            public static readonly XORMIndex IX_5586136603B24F1293332A1615203A8A = new XORMIndex();
            public static readonly XORMIndex IX_0DB849B8923843618526CCB7F4356D96 = new XORMIndex();
            static ISExCodigo()
            {
                ISExCodigoID.PKID = new Guid("AC732C22DC4B49C0A617D888ED846AFD");
                ISExCodigoID.UpdateStatic = true;
                ISExCodigoID.InsertOnly = false;
                ISExCodigoID.TableName = "ISExCodigo";
                ISExCodigoID.SourceTableID = new Guid("8477EAA3-2114-4287-AD0B-C1C0CD224BC1");
                ISExCodigoID.Index = 0;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExCodigo";
                ISExItemID.SourceTableID = new Guid("8477EAA3-2114-4287-AD0B-C1C0CD224BC1");
                ISExItemID.Index = 1;
                ISExCodigoTipoID.UpdateStatic = true;
                ISExCodigoTipoID.InsertOnly = false;
                ISExCodigoTipoID.TableName = "ISExCodigo";
                ISExCodigoTipoID.SourceTableID = new Guid("8477EAA3-2114-4287-AD0B-C1C0CD224BC1");
                ISExCodigoTipoID.Index = 2;
                Numero.UpdateStatic = true;
                Numero.InsertOnly = false;
                Numero.TableName = "ISExCodigo";
                Numero.SourceTableID = new Guid("8477EAA3-2114-4287-AD0B-C1C0CD224BC1");
                Numero.Index = 3;
                NumeroCurto.UpdateStatic = true;
                NumeroCurto.InsertOnly = false;
                NumeroCurto.TableName = "ISExCodigo";
                NumeroCurto.SourceTableID = new Guid("8477EAA3-2114-4287-AD0B-C1C0CD224BC1");
                NumeroCurto.Index = 4;
                IX_301C2D7C41C148559113BA9DD54D5E34.Name = "IX_301C2D7C41C148559113BA9DD54D5E34";
                IX_301C2D7C41C148559113BA9DD54D5E34.ID = new Guid("301C2D7C-41C1-4855-9113-BA9DD54D5E34");
                IX_301C2D7C41C148559113BA9DD54D5E34.IsUnique = false;
                IX_301C2D7C41C148559113BA9DD54D5E34.Description = "";
                IX_301C2D7C41C148559113BA9DD54D5E34.AddItem(ISExItemID);
                IX_301C2D7C41C148559113BA9DD54D5E34.AddItem(ISExCodigoTipoID);
                IX_67AAA4EE763F43198EDB13C7CD9BE707.Name = "IX_67AAA4EE763F43198EDB13C7CD9BE707";
                IX_67AAA4EE763F43198EDB13C7CD9BE707.ID = new Guid("67AAA4EE-763F-4319-8EDB-13C7CD9BE707");
                IX_67AAA4EE763F43198EDB13C7CD9BE707.IsUnique = true;
                IX_67AAA4EE763F43198EDB13C7CD9BE707.Description = "";
                IX_67AAA4EE763F43198EDB13C7CD9BE707.AddItem(ISExCodigoTipoID);
                IX_67AAA4EE763F43198EDB13C7CD9BE707.AddItem(Numero);
                IX_67AAA4EE763F43198EDB13C7CD9BE707.NullDuplicate.Add(Numero);
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.Name = "IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE";
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.ID = new Guid("F3CC0CA5-7CDF-4DB0-ADD8-1FCC4F6EACDE");
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.IsUnique = true;
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.Description = "";
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.AddItem(ISExCodigoTipoID);
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.AddItem(NumeroCurto);
                IX_F3CC0CA57CDF4DB0ADD81FCC4F6EACDE.NullDuplicate.Add(NumeroCurto);
                IX_5586136603B24F1293332A1615203A8A.Name = "IX_5586136603B24F1293332A1615203A8A";
                IX_5586136603B24F1293332A1615203A8A.ID = new Guid("AAE39286-B932-4921-9847-C6C1323C6D1D");
                IX_5586136603B24F1293332A1615203A8A.IsUnique = false;
                IX_5586136603B24F1293332A1615203A8A.Description = "";
                IX_5586136603B24F1293332A1615203A8A.AddItem(ISExCodigoTipoID);
                IX_0DB849B8923843618526CCB7F4356D96.Name = "IX_0DB849B8923843618526CCB7F4356D96";
                IX_0DB849B8923843618526CCB7F4356D96.ID = new Guid("9C65800F-F2C3-471B-94E6-2A99F2904096");
                IX_0DB849B8923843618526CCB7F4356D96.IsUnique = false;
                IX_0DB849B8923843618526CCB7F4356D96.Description = "";
                IX_0DB849B8923843618526CCB7F4356D96.AddItem(ISExItemID);
                ISExCodigoTipoID.AllowZero = false;
                FK_5586136603B24F1293332A1615203A8A.AllowZero = false;
                ISExItemID.AllowZero = true;
                FK_0DB849B8923843618526CCB7F4356D96.AllowZero = true;
            }
            protected ISExCodigo()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExCodigo);
            #endif
                ID = new Guid("8477EAA3-2114-4287-AD0B-C1C0CD224BC1");
                Name = "ISExCodigo";
                Title = "Tipo de Código";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_79F4886EB3F149FC8A2F5FD50D073916";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExCodigo

        #region ISExCodigoTipo

        [XRegister(typeof(ISExCodigoTipo), sCID)]
        public class ISExCodigoTipo : XORMTable
        {
            public const String sCID = "D826BED7-8D29-4D4E-A4DB-C9EFE5D3DADB";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExCodigoTipoID
                {
                    get
                    {
                        return (Int16)Value[ISExCodigoTipo.ISExCodigoTipoID];
                    }
                    set
                    {
                        this[ISExCodigoTipo.ISExCodigoTipoID] = value;
                    }
                }
                public Int16? oISExCodigoTipoID
                {
                    get
                    {
                        GetOldValue(ISExCodigoTipo.ISExCodigoTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Tipo
                {
                    get
                    {
                        return (String)Value[ISExCodigoTipo.Tipo];
                    }
                    set
                    {
                        this[ISExCodigoTipo.Tipo] = value;
                    }
                }
                public String? oTipo
                {
                    get
                    {
                        GetOldValue(ISExCodigoTipo.Tipo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExCodigoTipo _Instance;
            public static ISExCodigoTipo Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExCodigoTipo>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExCodigoTipoID = new XORMPKField(new Guid("C724C0CB-7FA1-4372-8299-DB2E1AC9EC33"), "ISExCodigoTipoID", "Tipo de Código", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFaceField Tipo = new XORMFaceField(new Guid("9A6A2023-ECAC-45FB-8771-323B76705FBD"), "Tipo", "Tipo", XString.CID, 20, 0, false, gCID, null);
            static ISExCodigoTipo()
            {
                ISExCodigoTipoID.PKID = new Guid("1F88A66DD6604616B669D3A711B4D8B5");
                ISExCodigoTipoID.UpdateStatic = true;
                ISExCodigoTipoID.InsertOnly = false;
                ISExCodigoTipoID.TableName = "ISExCodigoTipo";
                ISExCodigoTipoID.SourceTableID = new Guid("D826BED7-8D29-4D4E-A4DB-C9EFE5D3DADB");
                ISExCodigoTipoID.Index = 0;
                Tipo.UpdateStatic = true;
                Tipo.InsertOnly = false;
                Tipo.TableName = "ISExCodigoTipo";
                Tipo.SourceTableID = new Guid("D826BED7-8D29-4D4E-A4DB-C9EFE5D3DADB");
                Tipo.Index = 1;
                Tipo.IsFaceField = true;
            }
            protected ISExCodigoTipo()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExCodigoTipo);
            #endif
                ID = new Guid("D826BED7-8D29-4D4E-A4DB-C9EFE5D3DADB");
                Name = "ISExCodigoTipo";
                Title = "Tipo de Código";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_C724C0CB7FA143728299DB2E1AC9EC33";
                FaceField = Tipo;
                IsCached = true;
                DisplayField = Tipo;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExCodigoTipo

        #region ISExComissao

        [XRegister(typeof(ISExComissao), sCID)]
        public class ISExComissao : XORMTable
        {
            public const String sCID = "F43A8891-52E8-4640-A0BF-F9A11E569C2B";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Decimal Comissao
                {
                    get
                    {
                        return (Decimal)Value[ISExComissao.Comissao];
                    }
                    set
                    {
                        this[ISExComissao.Comissao] = value;
                    }
                }
                public Decimal? oComissao
                {
                    get
                    {
                        GetOldValue(ISExComissao.Comissao, out Object ovlr);
                        return (Decimal?)ovlr;
                    }
                }
                public Guid ISExComissaoID
                {
                    get
                    {
                        return (Guid)Value[ISExComissao.ISExComissaoID];
                    }
                    set
                    {
                        this[ISExComissao.ISExComissaoID] = value;
                    }
                }
                public Guid? oISExComissaoID
                {
                    get
                    {
                        GetOldValue(ISExComissao.ISExComissaoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 ISExComissaoTipoID
                {
                    get
                    {
                        return (Int16)Value[ISExComissao.ISExComissaoTipoID];
                    }
                    set
                    {
                        this[ISExComissao.ISExComissaoTipoID] = value;
                    }
                }
                public Int16? oISExComissaoTipoID
                {
                    get
                    {
                        GetOldValue(ISExComissao.ISExComissaoTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExComissao.ISExItemID];
                    }
                    set
                    {
                        this[ISExComissao.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExComissao.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid SYSxEmpresaID
                {
                    get
                    {
                        return (Guid)Value[ISExComissao.SYSxEmpresaID];
                    }
                    set
                    {
                        this[ISExComissao.SYSxEmpresaID] = value;
                    }
                }
                public Guid? oSYSxEmpresaID
                {
                    get
                    {
                        GetOldValue(ISExComissao.SYSxEmpresaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExComissao _Instance;
            public static ISExComissao Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExComissao>(gCID);
                    return _Instance;
                }
            }
            public static XORMDecimalField Comissao = new XORMDecimalField(new Guid("C29C38E6-647E-4523-A7B3-005E3E147083"), "Comissao", "Comissão", XDecimal.CID, 8, 2, false, gCID, 0);
            public static XORMPKField ISExComissaoID = new XORMPKField(new Guid("958744A5-213F-481A-ACA4-C3D37FB075C6"), "ISExComissaoID", "Comissão", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExComissaoTipoID = new XORMFKField(new Guid("EB1FEBAE-39FC-4397-B95A-E1C5320B0828"), "ISExComissaoTipoID", "Tipo de Comissão", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("E284C852-78E7-40B6-977A-5F539DC94C47"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField SYSxEmpresaID = new XORMFKField(new Guid("B9DBA53B-3005-49CD-ACA0-805940076E06"), "SYSxEmpresaID", "Empresa", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_90808714270A43DB8ECE038981ECE96A = new XORMReference(new Guid("90808714-270A-43DB-8ECE-038981ECE96A"), "FK_90808714270A43DB8ECE038981ECE96A", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMReference FK_C321E25EB9134C9B806645D500964FDB = new XORMReference(new Guid("C321E25E-B913-4C9B-8066-45D500964FDB"), "FK_C321E25EB9134C9B806645D500964FDB", gCID, ISExComissaoTipoID.ID, ISExComissaoTipo.gCID, ISExComissaoTipo.ISExComissaoTipoID.ID);
            public static readonly XORMReference FK_8019760CABA74EF6BC154C8AA1BC0F1A = new XORMReference(new Guid("8019760C-ABA7-4EF6-BC15-4C8AA1BC0F1A"), "FK_8019760CABA74EF6BC154C8AA1BC0F1A", gCID, SYSxEmpresaID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEmpresa.SYSxEmpresaID.ID);
            public static readonly XORMIndex IX_A873CC0556F34E4D8868C580A0B3388C = new XORMIndex();
            public static readonly XORMIndex IX_90808714270A43DB8ECE038981ECE96A = new XORMIndex();
            public static readonly XORMIndex IX_C321E25EB9134C9B806645D500964FDB = new XORMIndex();
            public static readonly XORMIndex IX_8019760CABA74EF6BC154C8AA1BC0F1A = new XORMIndex();
            static ISExComissao()
            {
                ISExComissaoID.PKID = new Guid("695D0C31C9E7499287EDB6759458FB72");
                ISExComissaoID.UpdateStatic = true;
                ISExComissaoID.InsertOnly = false;
                ISExComissaoID.TableName = "ISExComissao";
                ISExComissaoID.SourceTableID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
                ISExComissaoID.Index = 0;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExComissao";
                ISExItemID.SourceTableID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
                ISExItemID.Index = 1;
                ISExComissaoTipoID.UpdateStatic = true;
                ISExComissaoTipoID.InsertOnly = false;
                ISExComissaoTipoID.TableName = "ISExComissao";
                ISExComissaoTipoID.SourceTableID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
                ISExComissaoTipoID.Index = 2;
                Comissao.UpdateStatic = true;
                Comissao.InsertOnly = false;
                Comissao.TableName = "ISExComissao";
                Comissao.SourceTableID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
                Comissao.Min = -79228162514264337593543950335M;
                Comissao.Max = 79228162514264337593543950335M;
                Comissao.Index = 3;
                SYSxEmpresaID.UpdateStatic = true;
                SYSxEmpresaID.InsertOnly = false;
                SYSxEmpresaID.TableName = "ISExComissao";
                SYSxEmpresaID.SourceTableID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
                SYSxEmpresaID.Index = 4;
                IX_A873CC0556F34E4D8868C580A0B3388C.Name = "IX_A873CC0556F34E4D8868C580A0B3388C";
                IX_A873CC0556F34E4D8868C580A0B3388C.ID = new Guid("A873CC05-56F3-4E4D-8868-C580A0B3388C");
                IX_A873CC0556F34E4D8868C580A0B3388C.IsUnique = false;
                IX_A873CC0556F34E4D8868C580A0B3388C.Description = "Não é permitido mais de uma comissção por Empresa, Item, Tipo";
                IX_A873CC0556F34E4D8868C580A0B3388C.AddItem(SYSxEmpresaID);
                IX_A873CC0556F34E4D8868C580A0B3388C.AddItem(ISExComissaoTipoID);
                IX_A873CC0556F34E4D8868C580A0B3388C.AddItem(ISExItemID);
                IX_90808714270A43DB8ECE038981ECE96A.Name = "IX_90808714270A43DB8ECE038981ECE96A";
                IX_90808714270A43DB8ECE038981ECE96A.ID = new Guid("37A4E2BF-3DAA-4095-A4D3-9C1BBCBD0A01");
                IX_90808714270A43DB8ECE038981ECE96A.IsUnique = false;
                IX_90808714270A43DB8ECE038981ECE96A.Description = "";
                IX_90808714270A43DB8ECE038981ECE96A.AddItem(ISExItemID);
                IX_C321E25EB9134C9B806645D500964FDB.Name = "IX_C321E25EB9134C9B806645D500964FDB";
                IX_C321E25EB9134C9B806645D500964FDB.ID = new Guid("2A385000-C830-40C1-B9B6-B09E252D5B2A");
                IX_C321E25EB9134C9B806645D500964FDB.IsUnique = false;
                IX_C321E25EB9134C9B806645D500964FDB.Description = "";
                IX_C321E25EB9134C9B806645D500964FDB.AddItem(ISExComissaoTipoID);
                IX_8019760CABA74EF6BC154C8AA1BC0F1A.Name = "IX_8019760CABA74EF6BC154C8AA1BC0F1A";
                IX_8019760CABA74EF6BC154C8AA1BC0F1A.ID = new Guid("34E8B3F6-E05B-4BFC-B2DA-7CF13100543B");
                IX_8019760CABA74EF6BC154C8AA1BC0F1A.IsUnique = false;
                IX_8019760CABA74EF6BC154C8AA1BC0F1A.Description = "";
                IX_8019760CABA74EF6BC154C8AA1BC0F1A.AddItem(SYSxEmpresaID);
                ISExItemID.AllowZero = true;
                FK_90808714270A43DB8ECE038981ECE96A.AllowZero = true;
                ISExComissaoTipoID.AllowZero = true;
                FK_C321E25EB9134C9B806645D500964FDB.AllowZero = true;
                SYSxEmpresaID.AllowZero = true;
                FK_8019760CABA74EF6BC154C8AA1BC0F1A.AllowZero = true;
            }
            protected ISExComissao()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExComissao);
            #endif
                ID = new Guid("F43A8891-52E8-4640-A0BF-F9A11E569C2B");
                Name = "ISExComissao";
                Title = "Comissão";
                CompanyControlType = XCompanyControlType.CurrentCompany;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_958744A5213F481AACA4C3D37FB075C6";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExComissao

        #region ISExComissaoTipo

        [XRegister(typeof(ISExComissaoTipo), sCID)]
        public class ISExComissaoTipo : XORMTable
        {
            public const String sCID = "9063C537-4ACE-4539-B663-E3D101CA7913";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sIntegracao => _Titles[(Int16)0];
                public const Int16 Integracao = (Int16)0;
                public static String sLojista => _Titles[(Int16)1];
                public const Int16 Lojista = (Int16)1;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)0] = "Integração",
                [(Int16)1] = "Lojista"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExComissaoTipoID
                {
                    get
                    {
                        return (Int16)Value[ISExComissaoTipo.ISExComissaoTipoID];
                    }
                    set
                    {
                        this[ISExComissaoTipo.ISExComissaoTipoID] = value;
                    }
                }
                public Int16? oISExComissaoTipoID
                {
                    get
                    {
                        GetOldValue(ISExComissaoTipo.ISExComissaoTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Tipo
                {
                    get
                    {
                        return (String)Value[ISExComissaoTipo.Tipo];
                    }
                    set
                    {
                        this[ISExComissaoTipo.Tipo] = value;
                    }
                }
                public String? oTipo
                {
                    get
                    {
                        GetOldValue(ISExComissaoTipo.Tipo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExComissaoTipo _Instance;
            public static ISExComissaoTipo Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExComissaoTipo>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExComissaoTipoID = new XORMPKField(new Guid("0DBAAAB2-E7B1-4675-BF49-CBACF17C2AF8"), "ISExComissaoTipoID", "Tipo de Comissão", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFaceField Tipo = new XORMFaceField(new Guid("48D0ED1A-8FFD-4204-BAC7-EB31BABC26E4"), "Tipo", "Tipo", XString.CID, 20, 0, false, gCID, null);
            static ISExComissaoTipo()
            {
                ISExComissaoTipoID.PKID = new Guid("30B3709367C94364AFBEA49126AEE7B6");
                ISExComissaoTipoID.UpdateStatic = true;
                ISExComissaoTipoID.InsertOnly = false;
                ISExComissaoTipoID.TableName = "ISExComissaoTipo";
                ISExComissaoTipoID.SourceTableID = new Guid("9063C537-4ACE-4539-B663-E3D101CA7913");
                ISExComissaoTipoID.Index = 0;
                Tipo.UpdateStatic = true;
                Tipo.InsertOnly = false;
                Tipo.TableName = "ISExComissaoTipo";
                Tipo.SourceTableID = new Guid("9063C537-4ACE-4539-B663-E3D101CA7913");
                Tipo.Index = 1;
                Tipo.IsFaceField = true;
            }
            protected ISExComissaoTipo()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExComissaoTipo);
            #endif
                ID = new Guid("9063C537-4ACE-4539-B663-E3D101CA7913");
                Name = "ISExComissaoTipo";
                Title = "Tipo de Comissão";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_0DBAAAB2E7B14675BF49CBACF17C2AF8";
                FaceField = Tipo;
                IsCached = true;
                DisplayField = Tipo;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)0, @"Integração"}), (Int16)0);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)1, @"Lojista"}), (Int16)1);
            }
        }

        #endregion ISExComissaoTipo

        #region ISExEmbalagem

        [XRegister(typeof(ISExEmbalagem), sCID)]
        public class ISExEmbalagem : XORMTable
        {
            public const String sCID = "C3FC8FD4-C242-48D6-8EBB-666F5E1390EA";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_0 => _Titles[(Int16)0];
                public const Int16 _0 = (Int16)0;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)0] = "0"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Embalagem
                {
                    get
                    {
                        return (String)Value[ISExEmbalagem.Embalagem];
                    }
                    set
                    {
                        this[ISExEmbalagem.Embalagem] = value;
                    }
                }
                public String? oEmbalagem
                {
                    get
                    {
                        GetOldValue(ISExEmbalagem.Embalagem, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 ISExEmbalagemID
                {
                    get
                    {
                        return (Int16)Value[ISExEmbalagem.ISExEmbalagemID];
                    }
                    set
                    {
                        this[ISExEmbalagem.ISExEmbalagemID] = value;
                    }
                }
                public Int16? oISExEmbalagemID
                {
                    get
                    {
                        GetOldValue(ISExEmbalagem.ISExEmbalagemID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExEmbalagem _Instance;
            public static ISExEmbalagem Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExEmbalagem>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Embalagem = new XORMField(new Guid("8DBAE320-97BB-4B6C-B56F-7FB32B38A64F"), "Embalagem", "Embalagem", XString.CID, 25, 0, false, gCID, null);
            public static XORMPKField ISExEmbalagemID = new XORMPKField(new Guid("6B83C302-6647-436D-BFA0-C031A3405F51"), "ISExEmbalagemID", "Embalagem", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static ISExEmbalagem()
            {
                Embalagem.UpdateStatic = true;
                Embalagem.InsertOnly = false;
                Embalagem.TableName = "ISExEmbalagem";
                Embalagem.SourceTableID = new Guid("C3FC8FD4-C242-48D6-8EBB-666F5E1390EA");
                Embalagem.Index = 0;
                ISExEmbalagemID.PKID = new Guid("C728F1E4396647E0A3CE730E665747A1");
                ISExEmbalagemID.UpdateStatic = true;
                ISExEmbalagemID.InsertOnly = false;
                ISExEmbalagemID.TableName = "ISExEmbalagem";
                ISExEmbalagemID.SourceTableID = new Guid("C3FC8FD4-C242-48D6-8EBB-666F5E1390EA");
                ISExEmbalagemID.Index = 1;
                ISExEmbalagemID.IsFaceField = true;
            }
            protected ISExEmbalagem()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExEmbalagem);
            #endif
                ID = new Guid("C3FC8FD4-C242-48D6-8EBB-666F5E1390EA");
                Name = "ISExEmbalagem";
                Title = "Embalagem";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_6B83C3026647436DBFA0C031A3405F51";
                FaceField = ISExEmbalagemID;
                DisplayField = ISExEmbalagemID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"NA", (Int16)0}), (Int16)0);
            }
        }

        #endregion ISExEmbalagem

        #region ISExEmbalagemUnidade

        [XRegister(typeof(ISExEmbalagemUnidade), sCID)]
        public class ISExEmbalagemUnidade : XORMTable
        {
            public const String sCID = "5D60A6DD-C5EF-4539-BD42-99B0C43AD17B";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_00000000000000000000000000000000 => _Titles[new Guid("00000000-0000-0000-0000-000000000000")];
                public static Guid _00000000000000000000000000000000 = new Guid("00000000-0000-0000-0000-000000000000");
                private static Dictionary<Guid, String> _Titles = new Dictionary<Guid, String>()
                {
                [new Guid("00000000-0000-0000-0000-000000000000")] = "00000000-0000-0000-0000-000000000000"
                };
                public static String GetTitle(Guid pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExEmbalagemID
                {
                    get
                    {
                        return (Int16)Value[ISExEmbalagemUnidade.ISExEmbalagemID];
                    }
                    set
                    {
                        this[ISExEmbalagemUnidade.ISExEmbalagemID] = value;
                    }
                }
                public Int16? oISExEmbalagemID
                {
                    get
                    {
                        GetOldValue(ISExEmbalagemUnidade.ISExEmbalagemID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid ISExEmbalagemUnidadeID
                {
                    get
                    {
                        return (Guid)Value[ISExEmbalagemUnidade.ISExEmbalagemUnidadeID];
                    }
                    set
                    {
                        this[ISExEmbalagemUnidade.ISExEmbalagemUnidadeID] = value;
                    }
                }
                public Guid? oISExEmbalagemUnidadeID
                {
                    get
                    {
                        GetOldValue(ISExEmbalagemUnidade.ISExEmbalagemUnidadeID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 ISExUnidadeID
                {
                    get
                    {
                        return (Int16)Value[ISExEmbalagemUnidade.ISExUnidadeID];
                    }
                    set
                    {
                        this[ISExEmbalagemUnidade.ISExUnidadeID] = value;
                    }
                }
                public Int16? oISExUnidadeID
                {
                    get
                    {
                        GetOldValue(ISExEmbalagemUnidade.ISExUnidadeID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExEmbalagemUnidade _Instance;
            public static ISExEmbalagemUnidade Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExEmbalagemUnidade>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExEmbalagemID = new XORMFKField(new Guid("08BB275A-8B9A-44D1-9071-C9D42622EE0B"), "ISExEmbalagemID", "Embalagem", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMPKField ISExEmbalagemUnidadeID = new XORMPKField(new Guid("1365742A-5AF0-4BCD-83D6-6A7F2552CF80"), "ISExEmbalagemUnidadeID", "Unidades por Embalagens", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExUnidadeID = new XORMFKField(new Guid("95ABBD14-1668-459E-885C-E7C9D44C5DCD"), "ISExUnidadeID", "Unidade", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static readonly XORMReference FK_79C2AE79B8DE4C7ABF28FBC506D511F7 = new XORMReference(new Guid("79C2AE79-B8DE-4C7A-BF28-FBC506D511F7"), "FK_79C2AE79B8DE4C7ABF28FBC506D511F7", gCID, ISExUnidadeID.ID, ISExUnidade.gCID, ISExUnidade.ISExUnidadeID.ID);
            public static readonly XORMReference FK_4B6792EC760048179CF326A58ED7862A = new XORMReference(new Guid("4B6792EC-7600-4817-9CF3-26A58ED7862A"), "FK_4B6792EC760048179CF326A58ED7862A", gCID, ISExEmbalagemID.ID, ISExEmbalagem.gCID, ISExEmbalagem.ISExEmbalagemID.ID);
            public static readonly XORMIndex IX_79C2AE79B8DE4C7ABF28FBC506D511F7 = new XORMIndex();
            public static readonly XORMIndex IX_4B6792EC760048179CF326A58ED7862A = new XORMIndex();
            static ISExEmbalagemUnidade()
            {
                ISExEmbalagemID.UpdateStatic = true;
                ISExEmbalagemID.InsertOnly = false;
                ISExEmbalagemID.TableName = "ISExEmbalagemUnidade";
                ISExEmbalagemID.SourceTableID = new Guid("5D60A6DD-C5EF-4539-BD42-99B0C43AD17B");
                ISExEmbalagemID.Index = 0;
                ISExUnidadeID.UpdateStatic = true;
                ISExUnidadeID.InsertOnly = false;
                ISExUnidadeID.TableName = "ISExEmbalagemUnidade";
                ISExUnidadeID.SourceTableID = new Guid("5D60A6DD-C5EF-4539-BD42-99B0C43AD17B");
                ISExUnidadeID.Index = 1;
                ISExEmbalagemUnidadeID.PKID = new Guid("9714AF101026479EA083553271D27C79");
                ISExEmbalagemUnidadeID.UpdateStatic = true;
                ISExEmbalagemUnidadeID.InsertOnly = false;
                ISExEmbalagemUnidadeID.TableName = "ISExEmbalagemUnidade";
                ISExEmbalagemUnidadeID.SourceTableID = new Guid("5D60A6DD-C5EF-4539-BD42-99B0C43AD17B");
                ISExEmbalagemUnidadeID.Index = 2;
                ISExEmbalagemUnidadeID.IsFaceField = true;
                IX_79C2AE79B8DE4C7ABF28FBC506D511F7.Name = "IX_79C2AE79B8DE4C7ABF28FBC506D511F7";
                IX_79C2AE79B8DE4C7ABF28FBC506D511F7.ID = new Guid("A5656CD3-12EB-4989-AF3F-0F2CD9D33ED2");
                IX_79C2AE79B8DE4C7ABF28FBC506D511F7.IsUnique = false;
                IX_79C2AE79B8DE4C7ABF28FBC506D511F7.Description = "";
                IX_79C2AE79B8DE4C7ABF28FBC506D511F7.AddItem(ISExUnidadeID);
                IX_4B6792EC760048179CF326A58ED7862A.Name = "IX_4B6792EC760048179CF326A58ED7862A";
                IX_4B6792EC760048179CF326A58ED7862A.ID = new Guid("01F05C01-84E1-4E91-8596-085785EE7A7D");
                IX_4B6792EC760048179CF326A58ED7862A.IsUnique = false;
                IX_4B6792EC760048179CF326A58ED7862A.Description = "";
                IX_4B6792EC760048179CF326A58ED7862A.AddItem(ISExEmbalagemID);
                ISExUnidadeID.AllowZero = true;
                FK_79C2AE79B8DE4C7ABF28FBC506D511F7.AllowZero = true;
                ISExEmbalagemID.AllowZero = true;
                FK_4B6792EC760048179CF326A58ED7862A.AllowZero = true;
            }
            protected ISExEmbalagemUnidade()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExEmbalagemUnidade);
            #endif
                ID = new Guid("5D60A6DD-C5EF-4539-BD42-99B0C43AD17B");
                Name = "ISExEmbalagemUnidade";
                Title = "Unidades por Embalagens";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_1365742A5AF04BCD83D66A7F2552CF80";
                FaceField = ISExEmbalagemUnidadeID;
                DisplayField = ISExEmbalagemUnidadeID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {(Int16)0, (Int16)0, new Guid("00000000-0000-0000-0000-000000000000")}), new Guid("00000000-0000-0000-0000-000000000000"));
            }
        }

        #endregion ISExEmbalagemUnidade

        #region ISExExame

        [XRegister(typeof(ISExExame), sCID)]
        public class ISExExame : XORMTable
        {
            public const String sCID = "595ACC56-167F-4F55-A641-CDCEA3EF9F16";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExExameID
                {
                    get
                    {
                        return (Guid)Value[ISExExame.ISExExameID];
                    }
                    set
                    {
                        this[ISExExame.ISExExameID] = value;
                    }
                }
                public Guid? oISExExameID
                {
                    get
                    {
                        GetOldValue(ISExExame.ISExExameID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExExame _Instance;
            public static ISExExame Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExExame>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExExameID = new XORMPKField(new Guid("3D2B0B67-F205-47FD-8B2D-35D6DFFF71B7"), "ISExExameID", "Exames", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_4D8916B3A27C4918BBDBC5D1AF19A3F6 = new XORMReference(new Guid("4D8916B3-A27C-4918-BBDB-C5D1AF19A3F6"), "FK_4D8916B3A27C4918BBDBC5D1AF19A3F6", gCID, ISExExameID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            static ISExExame()
            {
                ISExExameID.PKID = new Guid("E01B68B8723D41C7BB843971E8D75B88");
                ISExExameID.UpdateStatic = true;
                ISExExameID.InsertOnly = false;
                ISExExameID.TableName = "ISExExame";
                ISExExameID.SourceTableID = new Guid("595ACC56-167F-4F55-A641-CDCEA3EF9F16");
                ISExExameID.Index = 0;
                ISExExameID.AllowZero = true;
                FK_4D8916B3A27C4918BBDBC5D1AF19A3F6.AllowZero = true;
            }
            protected ISExExame()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExExame);
            #endif
                ID = new Guid("595ACC56-167F-4F55-A641-CDCEA3EF9F16");
                Name = "ISExExame";
                Title = "Exames";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_3D2B0B67F20547FD8B2D35D6DFFF71B7";
                InheritanceID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExExame

        #region ISExFabricante

        [XRegister(typeof(ISExFabricante), sCID)]
        public class ISExFabricante : XORMTable
        {
            public const String sCID = "59C12585-0881-468C-A0F7-B63220D80CBE";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault : global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.XDefault
            {
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExFabricanteID
                {
                    get
                    {
                        return (Guid)Value[ISExFabricante.ISExFabricanteID];
                    }
                    set
                    {
                        this[ISExFabricante.ISExFabricanteID] = value;
                    }
                }
                public Guid? oISExFabricanteID
                {
                    get
                    {
                        GetOldValue(ISExFabricante.ISExFabricanteID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[ISExFabricante.SYSxEstadoID];
                    }
                    set
                    {
                        this[ISExFabricante.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(ISExFabricante.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExFabricante _Instance;
            public static ISExFabricante Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExFabricante>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExFabricanteID = new XORMPKField(new Guid("1DBF03E3-BCBB-4DE1-8A41-0F570B73754C"), "ISExFabricanteID", "Fabricante", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("449E56BF-A55C-4702-98AE-25030AC79D08"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)1);
            public static readonly XORMReference FK_5AB373B4E9644F2187290B1D3199ACA4 = new XORMReference(new Guid("5AB373B4-E964-4F21-8729-0B1D3199ACA4"), "FK_5AB373B4E9644F2187290B1D3199ACA4", gCID, ISExFabricanteID.ID, global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.gCID, global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.ERPxPessoaJuridicaID.ID);
            public static readonly XORMReference FK_E3162E5EFB7040B38B5CFED03F1CA52C = new XORMReference(new Guid("E3162E5E-FB70-40B3-8B5C-FED03F1CA52C"), "FK_E3162E5EFB7040B38B5CFED03F1CA52C", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMIndex IX_E3162E5EFB7040B38B5CFED03F1CA52C = new XORMIndex();
            static ISExFabricante()
            {
                ISExFabricanteID.PKID = new Guid("7BA5B32113DF44DE8F0EA34AA98EE3FB");
                ISExFabricanteID.UpdateStatic = true;
                ISExFabricanteID.InsertOnly = false;
                ISExFabricanteID.TableName = "ISExFabricante";
                ISExFabricanteID.SourceTableID = new Guid("59C12585-0881-468C-A0F7-B63220D80CBE");
                ISExFabricanteID.Index = 0;
                ISExFabricanteID.IsFaceField = true;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "ISExFabricante";
                SYSxEstadoID.SourceTableID = new Guid("59C12585-0881-468C-A0F7-B63220D80CBE");
                SYSxEstadoID.Index = 1;
                IX_E3162E5EFB7040B38B5CFED03F1CA52C.Name = "IX_E3162E5EFB7040B38B5CFED03F1CA52C";
                IX_E3162E5EFB7040B38B5CFED03F1CA52C.ID = new Guid("6813B338-EAA3-4964-8464-0A4AF27F9126");
                IX_E3162E5EFB7040B38B5CFED03F1CA52C.IsUnique = false;
                IX_E3162E5EFB7040B38B5CFED03F1CA52C.Description = "";
                IX_E3162E5EFB7040B38B5CFED03F1CA52C.AddItem(SYSxEstadoID);
                ISExFabricanteID.AllowZero = true;
                FK_5AB373B4E9644F2187290B1D3199ACA4.AllowZero = true;
                SYSxEstadoID.AllowZero = false;
                FK_E3162E5EFB7040B38B5CFED03F1CA52C.AllowZero = false;
            }
            protected ISExFabricante()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExFabricante);
            #endif
                ID = new Guid("59C12585-0881-468C-A0F7-B63220D80CBE");
                Name = "ISExFabricante";
                Title = "Fabricante";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_1DBF03E3BCBB4DE18A410F570B73754C";
                FaceField = ISExFabricanteID;
                StateField = SYSxEstadoID;
                DisplayField = ISExFabricanteID;
                InheritanceID = new Guid("CADE0A69-A787-4BFE-8DC5-A3F3E89C68ED");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {new Guid("00000000-0000-0000-0000-000000000000"), (Int16)0}), new Guid("00000000-0000-0000-0000-000000000000"));
            }
        }

        #endregion ISExFabricante

        #region ISExFinalidade

        [XRegister(typeof(ISExFinalidade), sCID)]
        public class ISExFinalidade : XORMTable
        {
            public const String sCID = "84A15E12-8E2D-4FDA-8839-D0AE14EC9E86";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Finalidade
                {
                    get
                    {
                        return (String)Value[ISExFinalidade.Finalidade];
                    }
                    set
                    {
                        this[ISExFinalidade.Finalidade] = value;
                    }
                }
                public String? oFinalidade
                {
                    get
                    {
                        GetOldValue(ISExFinalidade.Finalidade, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 ISExFinalidadeID
                {
                    get
                    {
                        return (Int16)Value[ISExFinalidade.ISExFinalidadeID];
                    }
                    set
                    {
                        this[ISExFinalidade.ISExFinalidadeID] = value;
                    }
                }
                public Int16? oISExFinalidadeID
                {
                    get
                    {
                        GetOldValue(ISExFinalidade.ISExFinalidadeID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExFinalidade _Instance;
            public static ISExFinalidade Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExFinalidade>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Finalidade = new XORMField(new Guid("58BA53EF-192F-4B24-BA8C-C6541A07D827"), "Finalidade", "Finalidade", XString.CID, 25, 0, false, gCID, null);
            public static XORMPKField ISExFinalidadeID = new XORMPKField(new Guid("CD8E8EB0-D6E9-4033-971C-7C402222A6E0"), "ISExFinalidadeID", "Finalidade", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static ISExFinalidade()
            {
                Finalidade.UpdateStatic = true;
                Finalidade.InsertOnly = false;
                Finalidade.TableName = "ISExFinalidade";
                Finalidade.SourceTableID = new Guid("84A15E12-8E2D-4FDA-8839-D0AE14EC9E86");
                Finalidade.Index = 0;
                ISExFinalidadeID.PKID = new Guid("3275916CB8B941D68D8DB0F17972A220");
                ISExFinalidadeID.UpdateStatic = true;
                ISExFinalidadeID.InsertOnly = false;
                ISExFinalidadeID.TableName = "ISExFinalidade";
                ISExFinalidadeID.SourceTableID = new Guid("84A15E12-8E2D-4FDA-8839-D0AE14EC9E86");
                ISExFinalidadeID.Index = 1;
            }
            protected ISExFinalidade()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExFinalidade);
            #endif
                ID = new Guid("84A15E12-8E2D-4FDA-8839-D0AE14EC9E86");
                Name = "ISExFinalidade";
                Title = "Finalidade";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_CD8E8EB0D6E94033971C7C402222A6E0";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExFinalidade

        #region ISExFornecedor

        [XRegister(typeof(ISExFornecedor), sCID)]
        public class ISExFornecedor : XORMTable
        {
            public const String sCID = "C6531D7D-0452-443C-9D37-FD114030DEFF";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault : global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.XDefault
            {
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExFornecedorID
                {
                    get
                    {
                        return (Guid)Value[ISExFornecedor.ISExFornecedorID];
                    }
                    set
                    {
                        this[ISExFornecedor.ISExFornecedorID] = value;
                    }
                }
                public Guid? oISExFornecedorID
                {
                    get
                    {
                        GetOldValue(ISExFornecedor.ISExFornecedorID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[ISExFornecedor.SYSxEstadoID];
                    }
                    set
                    {
                        this[ISExFornecedor.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(ISExFornecedor.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExFornecedor _Instance;
            public static ISExFornecedor Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExFornecedor>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExFornecedorID = new XORMPKField(new Guid("2C01F4C3-AA1B-4AA6-9971-4133B23934EE"), "ISExFornecedorID", "Fornecedor", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("7294061E-ABA6-43D6-8F7F-0C6694C5F0C3"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)1);
            public static readonly XORMReference FK_E79B7F141C2C4B768B9D84920F138264 = new XORMReference(new Guid("E79B7F14-1C2C-4B76-8B9D-84920F138264"), "FK_E79B7F141C2C4B768B9D84920F138264", gCID, ISExFornecedorID.ID, global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.gCID, global::Projecao.Core.ERP.DB.ERPx.ERPxPessoaJuridica.ERPxPessoaJuridicaID.ID);
            public static readonly XORMReference FK_6E84B5512FFE49A19238173BFC8FA3EF = new XORMReference(new Guid("6E84B551-2FFE-49A1-9238-173BFC8FA3EF"), "FK_6E84B5512FFE49A19238173BFC8FA3EF", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMIndex IX_6E84B5512FFE49A19238173BFC8FA3EF = new XORMIndex();
            static ISExFornecedor()
            {
                ISExFornecedorID.PKID = new Guid("91F02A78D04A4E2ABF41881FC232CB12");
                ISExFornecedorID.UpdateStatic = true;
                ISExFornecedorID.InsertOnly = false;
                ISExFornecedorID.TableName = "ISExFornecedor";
                ISExFornecedorID.SourceTableID = new Guid("C6531D7D-0452-443C-9D37-FD114030DEFF");
                ISExFornecedorID.Index = 0;
                ISExFornecedorID.IsFaceField = true;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "ISExFornecedor";
                SYSxEstadoID.SourceTableID = new Guid("C6531D7D-0452-443C-9D37-FD114030DEFF");
                SYSxEstadoID.Index = 1;
                IX_6E84B5512FFE49A19238173BFC8FA3EF.Name = "IX_6E84B5512FFE49A19238173BFC8FA3EF";
                IX_6E84B5512FFE49A19238173BFC8FA3EF.ID = new Guid("D4333BAC-4C20-4C1A-82BE-1636C03EB78D");
                IX_6E84B5512FFE49A19238173BFC8FA3EF.IsUnique = false;
                IX_6E84B5512FFE49A19238173BFC8FA3EF.Description = "";
                IX_6E84B5512FFE49A19238173BFC8FA3EF.AddItem(SYSxEstadoID);
                ISExFornecedorID.AllowZero = true;
                FK_E79B7F141C2C4B768B9D84920F138264.AllowZero = true;
                SYSxEstadoID.AllowZero = false;
                FK_6E84B5512FFE49A19238173BFC8FA3EF.AllowZero = false;
            }
            protected ISExFornecedor()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExFornecedor);
            #endif
                ID = new Guid("C6531D7D-0452-443C-9D37-FD114030DEFF");
                Name = "ISExFornecedor";
                Title = "Fornecedor";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_2C01F4C3AA1B4AA699714133B23934EE";
                FaceField = ISExFornecedorID;
                StateField = SYSxEstadoID;
                DisplayField = ISExFornecedorID;
                InheritanceID = new Guid("CADE0A69-A787-4BFE-8DC5-A3F3E89C68ED");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {new Guid("00000000-0000-0000-0000-000000000000"), (Int16)0}), new Guid("00000000-0000-0000-0000-000000000000"));
            }
        }

        #endregion ISExFornecedor

        #region ISExGrupo

        [XRegister(typeof(ISExGrupo), sCID)]
        public class ISExGrupo : XORMTable
        {
            public const String sCID = "EE759945-8A0B-4CC2-AD54-D08E6A49A0A1";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_0 => _Titles[0];
                public const Int32 _0 = 0;
                private static Dictionary<Int32, String> _Titles = new Dictionary<Int32, String>()
                {
                [0] = "0"
                };
                public static String GetTitle(Int32 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Grupo
                {
                    get
                    {
                        return (String)Value[ISExGrupo.Grupo];
                    }
                    set
                    {
                        this[ISExGrupo.Grupo] = value;
                    }
                }
                public String? oGrupo
                {
                    get
                    {
                        GetOldValue(ISExGrupo.Grupo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public String GrupoID
                {
                    get
                    {
                        return (String)Value[ISExGrupo.GrupoID];
                    }
                    set
                    {
                        this[ISExGrupo.GrupoID] = value;
                    }
                }
                public String? oGrupoID
                {
                    get
                    {
                        GetOldValue(ISExGrupo.GrupoID, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int32 ISExGrupoID
                {
                    get
                    {
                        return (Int32)Value[ISExGrupo.ISExGrupoID];
                    }
                    set
                    {
                        this[ISExGrupo.ISExGrupoID] = value;
                    }
                }
                public Int32? oISExGrupoID
                {
                    get
                    {
                        GetOldValue(ISExGrupo.ISExGrupoID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExGrupo _Instance;
            public static ISExGrupo Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExGrupo>(gCID);
                    return _Instance;
                }
            }
            public static XORMField Grupo = new XORMField(new Guid("5AD2FE67-49B3-4165-A41E-9B0A07FDF863"), "Grupo", "Grupo", XString.CID, 40, 0, false, gCID, null);
            public static XORMField GrupoID = new XORMField(new Guid("207C1BA3-3E63-4218-B3E0-431531B2424E"), "GrupoID", "Código Legado", XString.CID, 8, 0, false, gCID, @"NA");
            public static XORMPKField ISExGrupoID = new XORMPKField(new Guid("E0F0A98E-BD23-43E2-BDB6-73BF6A0781DA"), "ISExGrupoID", "Grupo", XInt32.CID, 0, 0, false, gCID, 0);
            static ISExGrupo()
            {
                Grupo.UpdateStatic = true;
                Grupo.InsertOnly = false;
                Grupo.TableName = "ISExGrupo";
                Grupo.SourceTableID = new Guid("EE759945-8A0B-4CC2-AD54-D08E6A49A0A1");
                Grupo.Index = 0;
                ISExGrupoID.PKID = new Guid("28D9079F33DF421DBEC46700CE973927");
                ISExGrupoID.UpdateStatic = true;
                ISExGrupoID.InsertOnly = false;
                ISExGrupoID.TableName = "ISExGrupo";
                ISExGrupoID.SourceTableID = new Guid("EE759945-8A0B-4CC2-AD54-D08E6A49A0A1");
                ISExGrupoID.Index = 1;
                ISExGrupoID.IsFaceField = true;
                GrupoID.UpdateStatic = true;
                GrupoID.InsertOnly = false;
                GrupoID.TableName = "ISExGrupo";
                GrupoID.SourceTableID = new Guid("EE759945-8A0B-4CC2-AD54-D08E6A49A0A1");
                GrupoID.Index = 2;
            }
            protected ISExGrupo()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExGrupo);
            #endif
                ID = new Guid("EE759945-8A0B-4CC2-AD54-D08E6A49A0A1");
                Name = "ISExGrupo";
                Title = "Grupo";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_E0F0A98EBD2343E2BDB673BF6A0781DA";
                FaceField = ISExGrupoID;
                DisplayField = ISExGrupoID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"NA", 0, @"NA"}), 0);
            }
        }

        #endregion ISExGrupo

        #region ISExItem

        [XRegister(typeof(ISExItem), sCID)]
        public class ISExItem : XORMTable
        {
            public const String sCID = "8BB836C8-EC72-48FA-A5AB-95DC2BD05E22";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_00000000000000000000000000000000 => _Titles[new Guid("00000000-0000-0000-0000-000000000000")];
                public static Guid _00000000000000000000000000000000 = new Guid("00000000-0000-0000-0000-000000000000");
                private static Dictionary<Guid, String> _Titles = new Dictionary<Guid, String>()
                {
                [new Guid("00000000-0000-0000-0000-000000000000")] = "00000000-0000-0000-0000-000000000000"
                };
                public static String GetTitle(Guid pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExFabricanteID
                {
                    get
                    {
                        return (Guid)Value[ISExItem.ISExFabricanteID];
                    }
                    set
                    {
                        this[ISExItem.ISExFabricanteID] = value;
                    }
                }
                public Guid? oISExFabricanteID
                {
                    get
                    {
                        GetOldValue(ISExItem.ISExFabricanteID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int32 ISExGrupoID
                {
                    get
                    {
                        return (Int32)Value[ISExItem.ISExGrupoID];
                    }
                    set
                    {
                        this[ISExItem.ISExGrupoID] = value;
                    }
                }
                public Int32? oISExGrupoID
                {
                    get
                    {
                        GetOldValue(ISExItem.ISExGrupoID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItem.ISExItemID];
                    }
                    set
                    {
                        this[ISExItem.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItem.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int32 ISExLinhaID
                {
                    get
                    {
                        return (Int32)Value[ISExItem.ISExLinhaID];
                    }
                    set
                    {
                        this[ISExItem.ISExLinhaID] = value;
                    }
                }
                public Int32? oISExLinhaID
                {
                    get
                    {
                        GetOldValue(ISExItem.ISExLinhaID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Int32 ISExMarcaID
                {
                    get
                    {
                        return (Int32)Value[ISExItem.ISExMarcaID];
                    }
                    set
                    {
                        this[ISExItem.ISExMarcaID] = value;
                    }
                }
                public Int32? oISExMarcaID
                {
                    get
                    {
                        GetOldValue(ISExItem.ISExMarcaID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Guid ISExTabelaID
                {
                    get
                    {
                        return (Guid)Value[ISExItem.ISExTabelaID];
                    }
                    set
                    {
                        this[ISExItem.ISExTabelaID] = value;
                    }
                }
                public Guid? oISExTabelaID
                {
                    get
                    {
                        GetOldValue(ISExItem.ISExTabelaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Nome
                {
                    get
                    {
                        return (String)Value[ISExItem.Nome];
                    }
                    set
                    {
                        this[ISExItem.Nome] = value;
                    }
                }
                public String? oNome
                {
                    get
                    {
                        GetOldValue(ISExItem.Nome, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public String ProdutoID
                {
                    get
                    {
                        return (String)Value[ISExItem.ProdutoID];
                    }
                    set
                    {
                        this[ISExItem.ProdutoID] = value;
                    }
                }
                public String? oProdutoID
                {
                    get
                    {
                        GetOldValue(ISExItem.ProdutoID, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[ISExItem.SYSxEstadoID];
                    }
                    set
                    {
                        this[ISExItem.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(ISExItem.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItem _Instance;
            public static ISExItem Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItem>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExFabricanteID = new XORMFKField(new Guid("B801F4C6-A1E7-4EF3-A207-39A0EFDC8322"), "ISExFabricanteID", "Fabricante", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExGrupoID = new XORMFKField(new Guid("203F94B1-5D19-4D39-99EE-95214B2CE7DC"), "ISExGrupoID", "Grupo", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMPKField ISExItemID = new XORMPKField(new Guid("6B1433C3-0407-462E-9AA8-C056D4009887"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExLinhaID = new XORMFKField(new Guid("87BF41E8-CB75-4C95-8BF8-4E56399545B0"), "ISExLinhaID", "Linha", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField ISExMarcaID = new XORMFKField(new Guid("5F834209-1DE5-4163-914B-B44B9A022ED1"), "ISExMarcaID", "Marca", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField ISExTabelaID = new XORMFKField(new Guid("5059FF4C-AC3B-4A3E-93CF-3AF00B7D9DAF"), "ISExTabelaID", "Tabela", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Nome = new XORMField(new Guid("3BB90C77-EC1B-4110-B077-FBCE37A615BD"), "Nome", "Nome", XString.CID, 60, 0, false, gCID, null);
            public static XORMField ProdutoID = new XORMField(new Guid("DDECB7D3-3B2B-4F28-A418-1A457353648F"), "ProdutoID", "Código Legado", XString.CID, 8, 0, true, gCID, @"NA");
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("47FC8745-A5E6-4484-8688-F3AFC1D242A8"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)1);
            public static readonly XORMReference FK_1A00D02CA0094E118C4974315CB9E1B8 = new XORMReference(new Guid("1A00D02C-A009-4E11-8C49-74315CB9E1B8"), "FK_1A00D02CA0094E118C4974315CB9E1B8", gCID, ISExLinhaID.ID, ISExLinha.gCID, ISExLinha.ISExLinhaID.ID);
            public static readonly XORMReference FK_D0F8240C477B4CD4A8453A24AB7606AE = new XORMReference(new Guid("D0F8240C-477B-4CD4-A845-3A24AB7606AE"), "FK_D0F8240C477B4CD4A8453A24AB7606AE", gCID, ISExTabelaID.ID, ISExEmbalagemUnidade.gCID, ISExEmbalagemUnidade.ISExEmbalagemUnidadeID.ID);
            public static readonly XORMReference FK_D12973BA6E284208A2ACE90DD0849B31 = new XORMReference(new Guid("D12973BA-6E28-4208-A2AC-E90DD0849B31"), "FK_D12973BA6E284208A2ACE90DD0849B31", gCID, ISExFabricanteID.ID, ISExFabricante.gCID, ISExFabricante.ISExFabricanteID.ID);
            public static readonly XORMReference FK_0DA381512FE5405C9229B40CDBB45F84 = new XORMReference(new Guid("0DA38151-2FE5-405C-9229-B40CDBB45F84"), "FK_0DA381512FE5405C9229B40CDBB45F84", gCID, ISExMarcaID.ID, ISExMarca.gCID, ISExMarca.ISExMarcaID.ID);
            public static readonly XORMReference FK_91A9211F7F474B65AEF9962AAD0EBABC = new XORMReference(new Guid("91A9211F-7F47-4B65-AEF9-962AAD0EBABC"), "FK_91A9211F7F474B65AEF9962AAD0EBABC", gCID, ISExGrupoID.ID, ISExGrupo.gCID, ISExGrupo.ISExGrupoID.ID);
            public static readonly XORMReference FK_FED568D08B584E75A3D767020C6E37CA = new XORMReference(new Guid("FED568D0-8B58-4E75-A3D7-67020C6E37CA"), "FK_FED568D08B584E75A3D767020C6E37CA", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMIndex IX_B100A1D582F44B6D9970186460D78FCD = new XORMIndex();
            public static readonly XORMIndex IX_1A00D02CA0094E118C4974315CB9E1B8 = new XORMIndex();
            public static readonly XORMIndex IX_D0F8240C477B4CD4A8453A24AB7606AE = new XORMIndex();
            public static readonly XORMIndex IX_D12973BA6E284208A2ACE90DD0849B31 = new XORMIndex();
            public static readonly XORMIndex IX_0DA381512FE5405C9229B40CDBB45F84 = new XORMIndex();
            public static readonly XORMIndex IX_91A9211F7F474B65AEF9962AAD0EBABC = new XORMIndex();
            public static readonly XORMIndex IX_FED568D08B584E75A3D767020C6E37CA = new XORMIndex();
            static ISExItem()
            {
                ISExLinhaID.UpdateStatic = true;
                ISExLinhaID.InsertOnly = false;
                ISExLinhaID.TableName = "ISExItem";
                ISExLinhaID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ISExLinhaID.Index = 0;
                ISExTabelaID.UpdateStatic = true;
                ISExTabelaID.InsertOnly = false;
                ISExTabelaID.TableName = "ISExItem";
                ISExTabelaID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ISExTabelaID.Index = 1;
                ISExGrupoID.UpdateStatic = true;
                ISExGrupoID.InsertOnly = false;
                ISExGrupoID.TableName = "ISExItem";
                ISExGrupoID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ISExGrupoID.Index = 2;
                ISExFabricanteID.UpdateStatic = true;
                ISExFabricanteID.InsertOnly = false;
                ISExFabricanteID.TableName = "ISExItem";
                ISExFabricanteID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ISExFabricanteID.Index = 3;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "ISExItem";
                SYSxEstadoID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                SYSxEstadoID.Index = 4;
                Nome.UpdateStatic = true;
                Nome.InsertOnly = false;
                Nome.TableName = "ISExItem";
                Nome.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                Nome.Index = 5;
                ISExMarcaID.UpdateStatic = true;
                ISExMarcaID.InsertOnly = false;
                ISExMarcaID.TableName = "ISExItem";
                ISExMarcaID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ISExMarcaID.Index = 6;
                ISExItemID.PKID = new Guid("98A8A8DA343949769D3A250D47E3515E");
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItem";
                ISExItemID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ISExItemID.Index = 7;
                ISExItemID.IsFaceField = true;
                ProdutoID.UpdateStatic = true;
                ProdutoID.InsertOnly = false;
                ProdutoID.TableName = "ISExItem";
                ProdutoID.SourceTableID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                ProdutoID.Index = 8;
                IX_B100A1D582F44B6D9970186460D78FCD.Name = "IX_B100A1D582F44B6D9970186460D78FCD";
                IX_B100A1D582F44B6D9970186460D78FCD.ID = new Guid("B100A1D5-82F4-4B6D-9970-186460D78FCD");
                IX_B100A1D582F44B6D9970186460D78FCD.IsUnique = true;
                IX_B100A1D582F44B6D9970186460D78FCD.Description = "";
                IX_B100A1D582F44B6D9970186460D78FCD.AddItem(ProdutoID);
                IX_1A00D02CA0094E118C4974315CB9E1B8.Name = "IX_1A00D02CA0094E118C4974315CB9E1B8";
                IX_1A00D02CA0094E118C4974315CB9E1B8.ID = new Guid("D7B56D19-5A75-4FF5-B7FF-7285FB38E304");
                IX_1A00D02CA0094E118C4974315CB9E1B8.IsUnique = false;
                IX_1A00D02CA0094E118C4974315CB9E1B8.Description = "";
                IX_1A00D02CA0094E118C4974315CB9E1B8.AddItem(ISExLinhaID);
                IX_D0F8240C477B4CD4A8453A24AB7606AE.Name = "IX_D0F8240C477B4CD4A8453A24AB7606AE";
                IX_D0F8240C477B4CD4A8453A24AB7606AE.ID = new Guid("6D816F58-A4D3-4279-9015-54E0EC0F19A9");
                IX_D0F8240C477B4CD4A8453A24AB7606AE.IsUnique = false;
                IX_D0F8240C477B4CD4A8453A24AB7606AE.Description = "";
                IX_D0F8240C477B4CD4A8453A24AB7606AE.AddItem(ISExTabelaID);
                IX_D12973BA6E284208A2ACE90DD0849B31.Name = "IX_D12973BA6E284208A2ACE90DD0849B31";
                IX_D12973BA6E284208A2ACE90DD0849B31.ID = new Guid("DF73876E-0F41-406F-B1B8-2C7EE79B8F89");
                IX_D12973BA6E284208A2ACE90DD0849B31.IsUnique = false;
                IX_D12973BA6E284208A2ACE90DD0849B31.Description = "";
                IX_D12973BA6E284208A2ACE90DD0849B31.AddItem(ISExFabricanteID);
                IX_0DA381512FE5405C9229B40CDBB45F84.Name = "IX_0DA381512FE5405C9229B40CDBB45F84";
                IX_0DA381512FE5405C9229B40CDBB45F84.ID = new Guid("A15A569F-E852-40C6-B2DD-2D33B3D5531F");
                IX_0DA381512FE5405C9229B40CDBB45F84.IsUnique = false;
                IX_0DA381512FE5405C9229B40CDBB45F84.Description = "";
                IX_0DA381512FE5405C9229B40CDBB45F84.AddItem(ISExMarcaID);
                IX_91A9211F7F474B65AEF9962AAD0EBABC.Name = "IX_91A9211F7F474B65AEF9962AAD0EBABC";
                IX_91A9211F7F474B65AEF9962AAD0EBABC.ID = new Guid("C3F83543-0F69-4FC4-A50C-A7B6DA7265FB");
                IX_91A9211F7F474B65AEF9962AAD0EBABC.IsUnique = false;
                IX_91A9211F7F474B65AEF9962AAD0EBABC.Description = "";
                IX_91A9211F7F474B65AEF9962AAD0EBABC.AddItem(ISExGrupoID);
                IX_FED568D08B584E75A3D767020C6E37CA.Name = "IX_FED568D08B584E75A3D767020C6E37CA";
                IX_FED568D08B584E75A3D767020C6E37CA.ID = new Guid("F8C61180-C83E-48A3-ACBD-0CB762C2F607");
                IX_FED568D08B584E75A3D767020C6E37CA.IsUnique = false;
                IX_FED568D08B584E75A3D767020C6E37CA.Description = "";
                IX_FED568D08B584E75A3D767020C6E37CA.AddItem(SYSxEstadoID);
                ISExLinhaID.AllowZero = true;
                FK_1A00D02CA0094E118C4974315CB9E1B8.AllowZero = true;
                ISExTabelaID.AllowZero = true;
                FK_D0F8240C477B4CD4A8453A24AB7606AE.AllowZero = true;
                ISExFabricanteID.AllowZero = true;
                FK_D12973BA6E284208A2ACE90DD0849B31.AllowZero = true;
                ISExMarcaID.AllowZero = true;
                FK_0DA381512FE5405C9229B40CDBB45F84.AllowZero = true;
                ISExGrupoID.AllowZero = true;
                FK_91A9211F7F474B65AEF9962AAD0EBABC.AllowZero = true;
                SYSxEstadoID.AllowZero = false;
                FK_FED568D08B584E75A3D767020C6E37CA.AllowZero = false;
            }
            protected ISExItem()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItem);
            #endif
                ID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
                Name = "ISExItem";
                Title = "Item de Estoque";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_6B1433C30407462E9AA8C056D4009887";
                FaceField = ISExItemID;
                StateField = SYSxEstadoID;
                DisplayField = ISExItemID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {0, new Guid("00000000-0000-0000-0000-000000000000"), 0, new Guid("00000000-0000-0000-0000-000000000000"), (Int16)0, @"NA", 0, new Guid("00000000-0000-0000-0000-000000000000"), @"NA"}), new Guid("00000000-0000-0000-0000-000000000000"));
            }
        }

        #endregion ISExItem

        #region ISExItemCategoria

        [XRegister(typeof(ISExItemCategoria), sCID)]
        public class ISExItemCategoria : XORMTable
        {
            public const String sCID = "3BFE9ACC-B209-4D3F-AB44-816B2D960229";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExCategoriaID
                {
                    get
                    {
                        return (Int16)Value[ISExItemCategoria.ISExCategoriaID];
                    }
                    set
                    {
                        this[ISExItemCategoria.ISExCategoriaID] = value;
                    }
                }
                public Int16? oISExCategoriaID
                {
                    get
                    {
                        GetOldValue(ISExItemCategoria.ISExCategoriaID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid ISExItemCategoriaID
                {
                    get
                    {
                        return (Guid)Value[ISExItemCategoria.ISExItemCategoriaID];
                    }
                    set
                    {
                        this[ISExItemCategoria.ISExItemCategoriaID] = value;
                    }
                }
                public Guid? oISExItemCategoriaID
                {
                    get
                    {
                        GetOldValue(ISExItemCategoria.ISExItemCategoriaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItemCategoria.ISExItemID];
                    }
                    set
                    {
                        this[ISExItemCategoria.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItemCategoria.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[ISExItemCategoria.SYSxEstadoID];
                    }
                    set
                    {
                        this[ISExItemCategoria.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(ISExItemCategoria.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemCategoria _Instance;
            public static ISExItemCategoria Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemCategoria>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExCategoriaID = new XORMFKField(new Guid("4B0091A5-81B7-4C28-AD13-FB7B86656141"), "ISExCategoriaID", "Categorização de Itens", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMPKField ISExItemCategoriaID = new XORMPKField(new Guid("5C8B0DC0-4301-4862-A4C5-CDE6C719FF40"), "ISExItemCategoriaID", "Categorias de Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("C5DE54B4-7BBE-4DB7-A120-1B87AC407072"), "ISExItemID", "Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("6B5129DF-DE72-4F41-92FF-D7914DE49E85"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static readonly XORMReference FK_57D52894773D4D1D9F9F8097A72FBCF2 = new XORMReference(new Guid("57D52894-773D-4D1D-9F9F-8097A72FBCF2"), "FK_57D52894773D4D1D9F9F8097A72FBCF2", gCID, ISExCategoriaID.ID, ISExCategoria.gCID, ISExCategoria.ISExCategoriaID.ID);
            public static readonly XORMReference FK_078EAC4D4D03419AAD8F334EE1F7A4AD = new XORMReference(new Guid("078EAC4D-4D03-419A-AD8F-334EE1F7A4AD"), "FK_078EAC4D4D03419AAD8F334EE1F7A4AD", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMReference FK_40F3F8A030354AE3A0664F5B4082A04F = new XORMReference(new Guid("40F3F8A0-3035-4AE3-A066-4F5B4082A04F"), "FK_40F3F8A030354AE3A0664F5B4082A04F", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMIndex IX_984DB7CD39BE43099294ACBE73A4B22D = new XORMIndex();
            public static readonly XORMIndex IX_A490D153470345DFB1DAE8BADD78468D = new XORMIndex();
            public static readonly XORMIndex IX_57D52894773D4D1D9F9F8097A72FBCF2 = new XORMIndex();
            public static readonly XORMIndex IX_078EAC4D4D03419AAD8F334EE1F7A4AD = new XORMIndex();
            public static readonly XORMIndex IX_40F3F8A030354AE3A0664F5B4082A04F = new XORMIndex();
            static ISExItemCategoria()
            {
                ISExItemCategoriaID.PKID = new Guid("F423E84F08344F3CBF4F1C0A830131E2");
                ISExItemCategoriaID.UpdateStatic = true;
                ISExItemCategoriaID.InsertOnly = false;
                ISExItemCategoriaID.TableName = "ISExItemCategoria";
                ISExItemCategoriaID.SourceTableID = new Guid("3BFE9ACC-B209-4D3F-AB44-816B2D960229");
                ISExItemCategoriaID.Index = 0;
                ISExCategoriaID.UpdateStatic = true;
                ISExCategoriaID.InsertOnly = false;
                ISExCategoriaID.TableName = "ISExItemCategoria";
                ISExCategoriaID.SourceTableID = new Guid("3BFE9ACC-B209-4D3F-AB44-816B2D960229");
                ISExCategoriaID.Index = 1;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItemCategoria";
                ISExItemID.SourceTableID = new Guid("3BFE9ACC-B209-4D3F-AB44-816B2D960229");
                ISExItemID.Index = 2;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "ISExItemCategoria";
                SYSxEstadoID.SourceTableID = new Guid("3BFE9ACC-B209-4D3F-AB44-816B2D960229");
                SYSxEstadoID.Index = 3;
                IX_984DB7CD39BE43099294ACBE73A4B22D.Name = "IX_984DB7CD39BE43099294ACBE73A4B22D";
                IX_984DB7CD39BE43099294ACBE73A4B22D.ID = new Guid("984DB7CD-39BE-4309-9294-ACBE73A4B22D");
                IX_984DB7CD39BE43099294ACBE73A4B22D.IsUnique = true;
                IX_984DB7CD39BE43099294ACBE73A4B22D.Description = "";
                IX_984DB7CD39BE43099294ACBE73A4B22D.AddItem(ISExItemID);
                IX_984DB7CD39BE43099294ACBE73A4B22D.AddItem(ISExCategoriaID);
                IX_A490D153470345DFB1DAE8BADD78468D.Name = "IX_A490D153470345DFB1DAE8BADD78468D";
                IX_A490D153470345DFB1DAE8BADD78468D.ID = new Guid("A490D153-4703-45DF-B1DA-E8BADD78468D");
                IX_A490D153470345DFB1DAE8BADD78468D.IsUnique = false;
                IX_A490D153470345DFB1DAE8BADD78468D.Description = "";
                IX_A490D153470345DFB1DAE8BADD78468D.AddItem(ISExCategoriaID);
                IX_A490D153470345DFB1DAE8BADD78468D.AddItem(ISExItemID);
                IX_57D52894773D4D1D9F9F8097A72FBCF2.Name = "IX_57D52894773D4D1D9F9F8097A72FBCF2";
                IX_57D52894773D4D1D9F9F8097A72FBCF2.ID = new Guid("6F8B5235-D40A-47B6-9052-54AABA058577");
                IX_57D52894773D4D1D9F9F8097A72FBCF2.IsUnique = false;
                IX_57D52894773D4D1D9F9F8097A72FBCF2.Description = "";
                IX_57D52894773D4D1D9F9F8097A72FBCF2.AddItem(ISExCategoriaID);
                IX_078EAC4D4D03419AAD8F334EE1F7A4AD.Name = "IX_078EAC4D4D03419AAD8F334EE1F7A4AD";
                IX_078EAC4D4D03419AAD8F334EE1F7A4AD.ID = new Guid("7A4F6D8D-E667-40AF-962B-53CBC3A23B36");
                IX_078EAC4D4D03419AAD8F334EE1F7A4AD.IsUnique = false;
                IX_078EAC4D4D03419AAD8F334EE1F7A4AD.Description = "";
                IX_078EAC4D4D03419AAD8F334EE1F7A4AD.AddItem(ISExItemID);
                IX_40F3F8A030354AE3A0664F5B4082A04F.Name = "IX_40F3F8A030354AE3A0664F5B4082A04F";
                IX_40F3F8A030354AE3A0664F5B4082A04F.ID = new Guid("57FA38B5-4FA0-4AFA-8E9F-721507F4A8C7");
                IX_40F3F8A030354AE3A0664F5B4082A04F.IsUnique = false;
                IX_40F3F8A030354AE3A0664F5B4082A04F.Description = "";
                IX_40F3F8A030354AE3A0664F5B4082A04F.AddItem(SYSxEstadoID);
                ISExCategoriaID.AllowZero = false;
                FK_57D52894773D4D1D9F9F8097A72FBCF2.AllowZero = false;
                ISExItemID.AllowZero = true;
                FK_078EAC4D4D03419AAD8F334EE1F7A4AD.AllowZero = true;
                SYSxEstadoID.AllowZero = false;
                FK_40F3F8A030354AE3A0664F5B4082A04F.AllowZero = false;
            }
            protected ISExItemCategoria()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemCategoria);
            #endif
                ID = new Guid("3BFE9ACC-B209-4D3F-AB44-816B2D960229");
                Name = "ISExItemCategoria";
                Title = "Categorias de Item";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_5C8B0DC043014862A4C5CDE6C719FF40";
                StateField = SYSxEstadoID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemCategoria

        #region ISExItemClasse

        [XRegister(typeof(ISExItemClasse), sCID)]
        public class ISExItemClasse : XORMTable
        {
            public const String sCID = "3BB3D3C4-5126-451C-AAE8-E903C07D79EE";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sProduto_Acabado => _Titles[(Int16)0];
                public const Int16 Produto_Acabado = (Int16)0;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)0] = "Produto Acabado"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public String Classe
                {
                    get
                    {
                        return (String)Value[ISExItemClasse.Classe];
                    }
                    set
                    {
                        this[ISExItemClasse.Classe] = value;
                    }
                }
                public String? oClasse
                {
                    get
                    {
                        GetOldValue(ISExItemClasse.Classe, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int16 ISExItemClasseID
                {
                    get
                    {
                        return (Int16)Value[ISExItemClasse.ISExItemClasseID];
                    }
                    set
                    {
                        this[ISExItemClasse.ISExItemClasseID] = value;
                    }
                }
                public Int16? oISExItemClasseID
                {
                    get
                    {
                        GetOldValue(ISExItemClasse.ISExItemClasseID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemClasse _Instance;
            public static ISExItemClasse Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemClasse>(gCID);
                    return _Instance;
                }
            }
            public static XORMFaceField Classe = new XORMFaceField(new Guid("FF733F70-436B-4A10-9F51-4897593BD948"), "Classe", "Classe", XString.CID, 35, 0, false, gCID, null);
            public static XORMPKField ISExItemClasseID = new XORMPKField(new Guid("FD8588DC-8C21-4788-8A20-A7A9B5DF571F"), "ISExItemClasseID", "Classe de Item", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            static ISExItemClasse()
            {
                Classe.UpdateStatic = true;
                Classe.InsertOnly = false;
                Classe.TableName = "ISExItemClasse";
                Classe.SourceTableID = new Guid("3BB3D3C4-5126-451C-AAE8-E903C07D79EE");
                Classe.Index = 0;
                Classe.IsFaceField = true;
                ISExItemClasseID.PKID = new Guid("5103702282744D6AA132D7A607C36CE7");
                ISExItemClasseID.UpdateStatic = true;
                ISExItemClasseID.InsertOnly = false;
                ISExItemClasseID.TableName = "ISExItemClasse";
                ISExItemClasseID.SourceTableID = new Guid("3BB3D3C4-5126-451C-AAE8-E903C07D79EE");
                ISExItemClasseID.Index = 1;
            }
            protected ISExItemClasse()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemClasse);
            #endif
                ID = new Guid("3BB3D3C4-5126-451C-AAE8-E903C07D79EE");
                Name = "ISExItemClasse";
                Title = "Classe de Item";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_FD8588DC8C2147888A20A7A9B5DF571F";
                FaceField = Classe;
                IsCached = true;
                DisplayField = Classe;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Produto Acabado", (Int16)0}), (Int16)0);
            }
        }

        #endregion ISExItemClasse

        #region ISExItemClassificacao

        [XRegister(typeof(ISExItemClassificacao), sCID)]
        public class ISExItemClassificacao : XORMTable
        {
            public const String sCID = "A6F2A603-3BF0-48DD-8D32-CD0C468C4E8E";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExItemClasseID
                {
                    get
                    {
                        return (Int16)Value[ISExItemClassificacao.ISExItemClasseID];
                    }
                    set
                    {
                        this[ISExItemClassificacao.ISExItemClasseID] = value;
                    }
                }
                public Int16? oISExItemClasseID
                {
                    get
                    {
                        GetOldValue(ISExItemClassificacao.ISExItemClasseID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Guid ISExItemClassificacaoID
                {
                    get
                    {
                        return (Guid)Value[ISExItemClassificacao.ISExItemClassificacaoID];
                    }
                    set
                    {
                        this[ISExItemClassificacao.ISExItemClassificacaoID] = value;
                    }
                }
                public Guid? oISExItemClassificacaoID
                {
                    get
                    {
                        GetOldValue(ISExItemClassificacao.ISExItemClassificacaoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItemClassificacao.ISExItemID];
                    }
                    set
                    {
                        this[ISExItemClassificacao.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItemClassificacao.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemClassificacao _Instance;
            public static ISExItemClassificacao Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemClassificacao>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExItemClasseID = new XORMFKField(new Guid("30D3EFAF-8D8C-4CF9-8614-014032F5112F"), "ISExItemClasseID", "Classe do Item", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMPKField ISExItemClassificacaoID = new XORMPKField(new Guid("5288D70D-299D-42F5-B67C-17C73CD421E4"), "ISExItemClassificacaoID", "Classificação de Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("6087C421-4F65-48CA-BBB8-2085059127EE"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_427A1B3752B54F80A4678204B6D5CFC6 = new XORMReference(new Guid("427A1B37-52B5-4F80-A467-8204B6D5CFC6"), "FK_427A1B3752B54F80A4678204B6D5CFC6", gCID, ISExItemClasseID.ID, ISExItemClasse.gCID, ISExItemClasse.ISExItemClasseID.ID);
            public static readonly XORMReference FK_24634D67DF584C2B9A90AB965FFF99C7 = new XORMReference(new Guid("24634D67-DF58-4C2B-9A90-AB965FFF99C7"), "FK_24634D67DF584C2B9A90AB965FFF99C7", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMIndex IX_047AF850F603438CB36A03841BADF43A = new XORMIndex();
            public static readonly XORMIndex IX_427A1B3752B54F80A4678204B6D5CFC6 = new XORMIndex();
            public static readonly XORMIndex IX_24634D67DF584C2B9A90AB965FFF99C7 = new XORMIndex();
            static ISExItemClassificacao()
            {
                ISExItemClasseID.UpdateStatic = true;
                ISExItemClasseID.InsertOnly = false;
                ISExItemClasseID.TableName = "ISExItemClassificacao";
                ISExItemClasseID.SourceTableID = new Guid("A6F2A603-3BF0-48DD-8D32-CD0C468C4E8E");
                ISExItemClasseID.Index = 0;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItemClassificacao";
                ISExItemID.SourceTableID = new Guid("A6F2A603-3BF0-48DD-8D32-CD0C468C4E8E");
                ISExItemID.Index = 1;
                ISExItemClassificacaoID.PKID = new Guid("A7F9A69F32A6429BB814829427368CA8");
                ISExItemClassificacaoID.UpdateStatic = true;
                ISExItemClassificacaoID.InsertOnly = false;
                ISExItemClassificacaoID.TableName = "ISExItemClassificacao";
                ISExItemClassificacaoID.SourceTableID = new Guid("A6F2A603-3BF0-48DD-8D32-CD0C468C4E8E");
                ISExItemClassificacaoID.Index = 2;
                IX_047AF850F603438CB36A03841BADF43A.Name = "IX_047AF850F603438CB36A03841BADF43A";
                IX_047AF850F603438CB36A03841BADF43A.ID = new Guid("047AF850-F603-438C-B36A-03841BADF43A");
                IX_047AF850F603438CB36A03841BADF43A.IsUnique = true;
                IX_047AF850F603438CB36A03841BADF43A.Description = "";
                IX_047AF850F603438CB36A03841BADF43A.AddItem(ISExItemClasseID);
                IX_047AF850F603438CB36A03841BADF43A.AddItem(ISExItemID);
                IX_427A1B3752B54F80A4678204B6D5CFC6.Name = "IX_427A1B3752B54F80A4678204B6D5CFC6";
                IX_427A1B3752B54F80A4678204B6D5CFC6.ID = new Guid("AB05C735-55B2-4B53-AF9E-9A81B608A722");
                IX_427A1B3752B54F80A4678204B6D5CFC6.IsUnique = false;
                IX_427A1B3752B54F80A4678204B6D5CFC6.Description = "";
                IX_427A1B3752B54F80A4678204B6D5CFC6.AddItem(ISExItemClasseID);
                IX_24634D67DF584C2B9A90AB965FFF99C7.Name = "IX_24634D67DF584C2B9A90AB965FFF99C7";
                IX_24634D67DF584C2B9A90AB965FFF99C7.ID = new Guid("038B0791-F946-4D3F-8C2B-CDD40C26D593");
                IX_24634D67DF584C2B9A90AB965FFF99C7.IsUnique = false;
                IX_24634D67DF584C2B9A90AB965FFF99C7.Description = "";
                IX_24634D67DF584C2B9A90AB965FFF99C7.AddItem(ISExItemID);
                ISExItemClasseID.AllowZero = true;
                FK_427A1B3752B54F80A4678204B6D5CFC6.AllowZero = true;
                ISExItemID.AllowZero = true;
                FK_24634D67DF584C2B9A90AB965FFF99C7.AllowZero = true;
            }
            protected ISExItemClassificacao()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemClassificacao);
            #endif
                ID = new Guid("A6F2A603-3BF0-48DD-8D32-CD0C468C4E8E");
                Name = "ISExItemClassificacao";
                Title = "Classificação de Item";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_5288D70D299D42F5B67C17C73CD421E4";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemClassificacao

        #region ISExItemFinalidade

        [XRegister(typeof(ISExItemFinalidade), sCID)]
        public class ISExItemFinalidade : XORMTable
        {
            public const String sCID = "38E07DCE-6A02-41EB-8520-04C0BD01D5F0";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExFinalidadeID
                {
                    get
                    {
                        return (Int16)Value[ISExItemFinalidade.ISExFinalidadeID];
                    }
                    set
                    {
                        this[ISExItemFinalidade.ISExFinalidadeID] = value;
                    }
                }
                public Int16? oISExFinalidadeID
                {
                    get
                    {
                        GetOldValue(ISExItemFinalidade.ISExFinalidadeID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Int32 ISExItemFinalidadeID
                {
                    get
                    {
                        return (Int32)Value[ISExItemFinalidade.ISExItemFinalidadeID];
                    }
                    set
                    {
                        this[ISExItemFinalidade.ISExItemFinalidadeID] = value;
                    }
                }
                public Int32? oISExItemFinalidadeID
                {
                    get
                    {
                        GetOldValue(ISExItemFinalidade.ISExItemFinalidadeID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItemFinalidade.ISExItemID];
                    }
                    set
                    {
                        this[ISExItemFinalidade.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItemFinalidade.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemFinalidade _Instance;
            public static ISExItemFinalidade Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemFinalidade>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExFinalidadeID = new XORMFKField(new Guid("C1C98679-26CF-4B12-AA9C-F8956AB4C59A"), "ISExFinalidadeID", "Finalidade", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMPKField ISExItemFinalidadeID = new XORMPKField(new Guid("96B67F5B-70DF-40B9-B921-351D0579F79D"), "ISExItemFinalidadeID", "Finalidade do Item", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("F780AA53-6493-4193-9916-0C87079C371C"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_476C028F97894D92AD627CFF2D0E8089 = new XORMReference(new Guid("476C028F-9789-4D92-AD62-7CFF2D0E8089"), "FK_476C028F97894D92AD627CFF2D0E8089", gCID, ISExFinalidadeID.ID, ISExFinalidade.gCID, ISExFinalidade.ISExFinalidadeID.ID);
            public static readonly XORMReference FK_712E9925809244E6881A42CD94BBD0FB = new XORMReference(new Guid("712E9925-8092-44E6-881A-42CD94BBD0FB"), "FK_712E9925809244E6881A42CD94BBD0FB", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMIndex IX_476C028F97894D92AD627CFF2D0E8089 = new XORMIndex();
            public static readonly XORMIndex IX_712E9925809244E6881A42CD94BBD0FB = new XORMIndex();
            static ISExItemFinalidade()
            {
                ISExFinalidadeID.UpdateStatic = true;
                ISExFinalidadeID.InsertOnly = false;
                ISExFinalidadeID.TableName = "ISExItemFinalidade";
                ISExFinalidadeID.SourceTableID = new Guid("38E07DCE-6A02-41EB-8520-04C0BD01D5F0");
                ISExFinalidadeID.Index = 0;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItemFinalidade";
                ISExItemID.SourceTableID = new Guid("38E07DCE-6A02-41EB-8520-04C0BD01D5F0");
                ISExItemID.Index = 1;
                ISExItemFinalidadeID.PKID = new Guid("A5413676E3E04E0AB42C0646C6D1651D");
                ISExItemFinalidadeID.UpdateStatic = true;
                ISExItemFinalidadeID.InsertOnly = false;
                ISExItemFinalidadeID.TableName = "ISExItemFinalidade";
                ISExItemFinalidadeID.SourceTableID = new Guid("38E07DCE-6A02-41EB-8520-04C0BD01D5F0");
                ISExItemFinalidadeID.Index = 2;
                IX_476C028F97894D92AD627CFF2D0E8089.Name = "IX_476C028F97894D92AD627CFF2D0E8089";
                IX_476C028F97894D92AD627CFF2D0E8089.ID = new Guid("CEBEE377-B462-41B9-B147-90C67619EC2D");
                IX_476C028F97894D92AD627CFF2D0E8089.IsUnique = false;
                IX_476C028F97894D92AD627CFF2D0E8089.Description = "";
                IX_476C028F97894D92AD627CFF2D0E8089.AddItem(ISExFinalidadeID);
                IX_712E9925809244E6881A42CD94BBD0FB.Name = "IX_712E9925809244E6881A42CD94BBD0FB";
                IX_712E9925809244E6881A42CD94BBD0FB.ID = new Guid("AD341CA9-2FC6-4397-BB26-39FCA9B25607");
                IX_712E9925809244E6881A42CD94BBD0FB.IsUnique = false;
                IX_712E9925809244E6881A42CD94BBD0FB.Description = "";
                IX_712E9925809244E6881A42CD94BBD0FB.AddItem(ISExItemID);
                ISExFinalidadeID.AllowZero = false;
                FK_476C028F97894D92AD627CFF2D0E8089.AllowZero = false;
                ISExItemID.AllowZero = true;
                FK_712E9925809244E6881A42CD94BBD0FB.AllowZero = true;
            }
            protected ISExItemFinalidade()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemFinalidade);
            #endif
                ID = new Guid("38E07DCE-6A02-41EB-8520-04C0BD01D5F0");
                Name = "ISExItemFinalidade";
                Title = "Finalidade do Item";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_96B67F5B70DF40B9B921351D0579F79D";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemFinalidade

        #region ISExItemFornecedor

        [XRegister(typeof(ISExItemFornecedor), sCID)]
        public class ISExItemFornecedor : XORMTable
        {
            public const String sCID = "8E3E2EDF-1B2F-45E4-8E5D-B15FFB76E44E";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExFornecedorID
                {
                    get
                    {
                        return (Guid)Value[ISExItemFornecedor.ISExFornecedorID];
                    }
                    set
                    {
                        this[ISExItemFornecedor.ISExFornecedorID] = value;
                    }
                }
                public Guid? oISExFornecedorID
                {
                    get
                    {
                        GetOldValue(ISExItemFornecedor.ISExFornecedorID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int32 ISExItemFornecedorID
                {
                    get
                    {
                        return (Int32)Value[ISExItemFornecedor.ISExItemFornecedorID];
                    }
                    set
                    {
                        this[ISExItemFornecedor.ISExItemFornecedorID] = value;
                    }
                }
                public Int32? oISExItemFornecedorID
                {
                    get
                    {
                        GetOldValue(ISExItemFornecedor.ISExItemFornecedorID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItemFornecedor.ISExItemID];
                    }
                    set
                    {
                        this[ISExItemFornecedor.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItemFornecedor.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemFornecedor _Instance;
            public static ISExItemFornecedor Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemFornecedor>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExFornecedorID = new XORMFKField(new Guid("2A4F815D-AD0C-43B6-9919-589AC8EA42AF"), "ISExFornecedorID", "Fornecedor", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMPKField ISExItemFornecedorID = new XORMPKField(new Guid("8AC4BCB0-56C5-4FFB-83AB-5E6E9C0EE7BD"), "ISExItemFornecedorID", "Tabela", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("68909D4C-2A49-4D3B-9E76-DD1E42895B97"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_F3C507D9514E44E0831F520FB4D9E490 = new XORMReference(new Guid("F3C507D9-514E-44E0-831F-520FB4D9E490"), "FK_F3C507D9514E44E0831F520FB4D9E490", gCID, ISExFornecedorID.ID, ISExFornecedor.gCID, ISExFornecedor.ISExFornecedorID.ID);
            public static readonly XORMReference FK_89D42404D72145DCAFD4D53DC8CD30FA = new XORMReference(new Guid("89D42404-D721-45DC-AFD4-D53DC8CD30FA"), "FK_89D42404D72145DCAFD4D53DC8CD30FA", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMIndex IX_F3C507D9514E44E0831F520FB4D9E490 = new XORMIndex();
            public static readonly XORMIndex IX_89D42404D72145DCAFD4D53DC8CD30FA = new XORMIndex();
            static ISExItemFornecedor()
            {
                ISExFornecedorID.UpdateStatic = true;
                ISExFornecedorID.InsertOnly = false;
                ISExFornecedorID.TableName = "ISExItemFornecedor";
                ISExFornecedorID.SourceTableID = new Guid("8E3E2EDF-1B2F-45E4-8E5D-B15FFB76E44E");
                ISExFornecedorID.Index = 0;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItemFornecedor";
                ISExItemID.SourceTableID = new Guid("8E3E2EDF-1B2F-45E4-8E5D-B15FFB76E44E");
                ISExItemID.Index = 1;
                ISExItemFornecedorID.PKID = new Guid("32AADC65747E48C78550EFFAFB4A084A");
                ISExItemFornecedorID.UpdateStatic = true;
                ISExItemFornecedorID.InsertOnly = false;
                ISExItemFornecedorID.TableName = "ISExItemFornecedor";
                ISExItemFornecedorID.SourceTableID = new Guid("8E3E2EDF-1B2F-45E4-8E5D-B15FFB76E44E");
                ISExItemFornecedorID.Index = 2;
                IX_F3C507D9514E44E0831F520FB4D9E490.Name = "IX_F3C507D9514E44E0831F520FB4D9E490";
                IX_F3C507D9514E44E0831F520FB4D9E490.ID = new Guid("63FD6C06-283D-44A6-BB44-8447FBACBF6D");
                IX_F3C507D9514E44E0831F520FB4D9E490.IsUnique = false;
                IX_F3C507D9514E44E0831F520FB4D9E490.Description = "";
                IX_F3C507D9514E44E0831F520FB4D9E490.AddItem(ISExFornecedorID);
                IX_89D42404D72145DCAFD4D53DC8CD30FA.Name = "IX_89D42404D72145DCAFD4D53DC8CD30FA";
                IX_89D42404D72145DCAFD4D53DC8CD30FA.ID = new Guid("5D948946-CA47-429B-9005-45EB06CF00B0");
                IX_89D42404D72145DCAFD4D53DC8CD30FA.IsUnique = false;
                IX_89D42404D72145DCAFD4D53DC8CD30FA.Description = "";
                IX_89D42404D72145DCAFD4D53DC8CD30FA.AddItem(ISExItemID);
                ISExFornecedorID.AllowZero = true;
                FK_F3C507D9514E44E0831F520FB4D9E490.AllowZero = true;
                ISExItemID.AllowZero = true;
                FK_89D42404D72145DCAFD4D53DC8CD30FA.AllowZero = true;
            }
            protected ISExItemFornecedor()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemFornecedor);
            #endif
                ID = new Guid("8E3E2EDF-1B2F-45E4-8E5D-B15FFB76E44E");
                Name = "ISExItemFornecedor";
                Title = "Tabela";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_8AC4BCB056C54FFB83AB5E6E9C0EE7BD";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemFornecedor

        #region ISExItemPreco

        [XRegister(typeof(ISExItemPreco), sCID)]
        public class ISExItemPreco : XORMTable
        {
            public const String sCID = "A55EF434-E814-4A6D-958B-DD338D67102F";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public DateTime FimValidade
                {
                    get
                    {
                        return (DateTime)Value[ISExItemPreco.FimValidade];
                    }
                    set
                    {
                        this[ISExItemPreco.FimValidade] = value;
                    }
                }
                public DateTime? oFimValidade
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.FimValidade, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public DateTime InicioValidade
                {
                    get
                    {
                        return (DateTime)Value[ISExItemPreco.InicioValidade];
                    }
                    set
                    {
                        this[ISExItemPreco.InicioValidade] = value;
                    }
                }
                public DateTime? oInicioValidade
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.InicioValidade, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPreco.ISExItemID];
                    }
                    set
                    {
                        this[ISExItemPreco.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid ISExItemPrecoID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPreco.ISExItemPrecoID];
                    }
                    set
                    {
                        this[ISExItemPreco.ISExItemPrecoID] = value;
                    }
                }
                public Guid? oISExItemPrecoID
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.ISExItemPrecoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 ISExItemPrecoTipoID
                {
                    get
                    {
                        return (Int16)Value[ISExItemPreco.ISExItemPrecoTipoID];
                    }
                    set
                    {
                        this[ISExItemPreco.ISExItemPrecoTipoID] = value;
                    }
                }
                public Int16? oISExItemPrecoTipoID
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.ISExItemPrecoTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Int16 SYSxEstadoID
                {
                    get
                    {
                        return (Int16)Value[ISExItemPreco.SYSxEstadoID];
                    }
                    set
                    {
                        this[ISExItemPreco.SYSxEstadoID] = value;
                    }
                }
                public Int16? oSYSxEstadoID
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.SYSxEstadoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public Decimal Valor
                {
                    get
                    {
                        return (Decimal)Value[ISExItemPreco.Valor];
                    }
                    set
                    {
                        this[ISExItemPreco.Valor] = value;
                    }
                }
                public Decimal? oValor
                {
                    get
                    {
                        GetOldValue(ISExItemPreco.Valor, out Object ovlr);
                        return (Decimal?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemPreco _Instance;
            public static ISExItemPreco Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemPreco>(gCID);
                    return _Instance;
                }
            }
            public static XORMDateTimeField FimValidade = new XORMDateTimeField(new Guid("EA9A97F0-6320-4CB3-ADAB-9A65B7AC4FA7"), "FimValidade", "Fim da Validade", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMDateTimeField InicioValidade = new XORMDateTimeField(new Guid("437DF671-DC32-4E76-ADBF-F621F671A6F7"), "InicioValidade", "Início da Validade", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("13F654AA-B60F-4178-B5C5-BEFD311309A7"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMPKField ISExItemPrecoID = new XORMPKField(new Guid("ABD4C1A4-F89D-4B19-88D9-2AF873FC8429"), "ISExItemPrecoID", "Preço de Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExItemPrecoTipoID = new XORMFKField(new Guid("94C42AAC-93B8-494A-9781-F91ECD0F50F1"), "ISExItemPrecoTipoID", "Tipo de Preço", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMStateField SYSxEstadoID = new XORMStateField(new Guid("6254A639-75FE-46FD-97B9-A5A0EDDC59CE"), "SYSxEstadoID", "Estado", XInt16.CID, 0, 0, false, gCID, (Int16)1);
            public static XORMDecimalField Valor = new XORMDecimalField(new Guid("EE9DDE3C-C8B4-4206-9C29-B0A4259C7D0D"), "Valor", "Valor", XDecimal.CID, 25, 4, false, gCID, 0);
            public static readonly XORMReference FK_8B318DF234724A86A659B4496305FE3F = new XORMReference(new Guid("8B318DF2-3472-4A86-A659-B4496305FE3F"), "FK_8B318DF234724A86A659B4496305FE3F", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMReference FK_C811CCEB8AB44470B1E3536611DA661C = new XORMReference(new Guid("C811CCEB-8AB4-4470-B1E3-536611DA661C"), "FK_C811CCEB8AB44470B1E3536611DA661C", gCID, SYSxEstadoID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxEstado.SYSxEstadoID.ID);
            public static readonly XORMReference FK_6DC8688ABC3643B4927FA62ED835A2A6 = new XORMReference(new Guid("6DC8688A-BC36-43B4-927F-A62ED835A2A6"), "FK_6DC8688ABC3643B4927FA62ED835A2A6", gCID, ISExItemPrecoTipoID.ID, ISExItemPrecoTipo.gCID, ISExItemPrecoTipo.ISExItemPrecoTipoID.ID);
            public static readonly XORMIndex IX_78332C72327E4CE9A315A1A208953A55 = new XORMIndex();
            public static readonly XORMIndex IX_FD2D5C2175814C23BCDAF89DB501ECE2 = new XORMIndex();
            public static readonly XORMIndex IX_8B318DF234724A86A659B4496305FE3F = new XORMIndex();
            public static readonly XORMIndex IX_C811CCEB8AB44470B1E3536611DA661C = new XORMIndex();
            public static readonly XORMIndex IX_6DC8688ABC3643B4927FA62ED835A2A6 = new XORMIndex();
            static ISExItemPreco()
            {
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItemPreco";
                ISExItemID.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                ISExItemID.Index = 0;
                ISExItemPrecoID.PKID = new Guid("E627D9518F884C0D96FE57F6B72A00E2");
                ISExItemPrecoID.UpdateStatic = true;
                ISExItemPrecoID.InsertOnly = false;
                ISExItemPrecoID.TableName = "ISExItemPreco";
                ISExItemPrecoID.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                ISExItemPrecoID.Index = 1;
                Valor.UpdateStatic = true;
                Valor.InsertOnly = false;
                Valor.TableName = "ISExItemPreco";
                Valor.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                Valor.Min = -79228162514264337593543950335M;
                Valor.Max = 79228162514264337593543950335M;
                Valor.Index = 2;
                InicioValidade.UpdateStatic = true;
                InicioValidade.InsertOnly = false;
                InicioValidade.TableName = "ISExItemPreco";
                InicioValidade.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                InicioValidade.Index = 3;
                FimValidade.UpdateStatic = true;
                FimValidade.InsertOnly = false;
                FimValidade.TableName = "ISExItemPreco";
                FimValidade.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                FimValidade.Index = 4;
                SYSxEstadoID.UpdateStatic = true;
                SYSxEstadoID.InsertOnly = false;
                SYSxEstadoID.TableName = "ISExItemPreco";
                SYSxEstadoID.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                SYSxEstadoID.Index = 5;
                ISExItemPrecoTipoID.UpdateStatic = true;
                ISExItemPrecoTipoID.InsertOnly = false;
                ISExItemPrecoTipoID.TableName = "ISExItemPreco";
                ISExItemPrecoTipoID.SourceTableID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                ISExItemPrecoTipoID.Index = 6;
                IX_78332C72327E4CE9A315A1A208953A55.Name = "IX_78332C72327E4CE9A315A1A208953A55";
                IX_78332C72327E4CE9A315A1A208953A55.ID = new Guid("78332C72-327E-4CE9-A315-A1A208953A55");
                IX_78332C72327E4CE9A315A1A208953A55.IsUnique = false;
                IX_78332C72327E4CE9A315A1A208953A55.Description = "";
                IX_78332C72327E4CE9A315A1A208953A55.AddItem(ISExItemID);
                IX_78332C72327E4CE9A315A1A208953A55.AddItem(FimValidade);
                IX_78332C72327E4CE9A315A1A208953A55.AddItem(ISExItemPrecoTipoID);
                IX_78332C72327E4CE9A315A1A208953A55.AddItem(InicioValidade);
                IX_FD2D5C2175814C23BCDAF89DB501ECE2.Name = "IX_FD2D5C2175814C23BCDAF89DB501ECE2";
                IX_FD2D5C2175814C23BCDAF89DB501ECE2.ID = new Guid("FD2D5C21-7581-4C23-BCDA-F89DB501ECE2");
                IX_FD2D5C2175814C23BCDAF89DB501ECE2.IsUnique = false;
                IX_FD2D5C2175814C23BCDAF89DB501ECE2.Description = "";
                IX_FD2D5C2175814C23BCDAF89DB501ECE2.AddItem(ISExItemID);
                IX_FD2D5C2175814C23BCDAF89DB501ECE2.AddItem(ISExItemPrecoTipoID);
                IX_8B318DF234724A86A659B4496305FE3F.Name = "IX_8B318DF234724A86A659B4496305FE3F";
                IX_8B318DF234724A86A659B4496305FE3F.ID = new Guid("D43B9AB3-2A68-486F-B8F4-CC0BF3646127");
                IX_8B318DF234724A86A659B4496305FE3F.IsUnique = false;
                IX_8B318DF234724A86A659B4496305FE3F.Description = "";
                IX_8B318DF234724A86A659B4496305FE3F.AddItem(ISExItemID);
                IX_C811CCEB8AB44470B1E3536611DA661C.Name = "IX_C811CCEB8AB44470B1E3536611DA661C";
                IX_C811CCEB8AB44470B1E3536611DA661C.ID = new Guid("37CAE6FF-8F0B-4FCB-8FD5-5C0F7F7A6A85");
                IX_C811CCEB8AB44470B1E3536611DA661C.IsUnique = false;
                IX_C811CCEB8AB44470B1E3536611DA661C.Description = "";
                IX_C811CCEB8AB44470B1E3536611DA661C.AddItem(SYSxEstadoID);
                IX_6DC8688ABC3643B4927FA62ED835A2A6.Name = "IX_6DC8688ABC3643B4927FA62ED835A2A6";
                IX_6DC8688ABC3643B4927FA62ED835A2A6.ID = new Guid("A6FB2FB2-3C3A-45F6-973B-CF6DFE88864E");
                IX_6DC8688ABC3643B4927FA62ED835A2A6.IsUnique = false;
                IX_6DC8688ABC3643B4927FA62ED835A2A6.Description = "";
                IX_6DC8688ABC3643B4927FA62ED835A2A6.AddItem(ISExItemPrecoTipoID);
                ISExItemID.AllowZero = true;
                FK_8B318DF234724A86A659B4496305FE3F.AllowZero = true;
                SYSxEstadoID.AllowZero = false;
                FK_C811CCEB8AB44470B1E3536611DA661C.AllowZero = false;
                ISExItemPrecoTipoID.AllowZero = false;
                FK_6DC8688ABC3643B4927FA62ED835A2A6.AllowZero = false;
            }
            protected ISExItemPreco()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemPreco);
            #endif
                ID = new Guid("A55EF434-E814-4A6D-958B-DD338D67102F");
                Name = "ISExItemPreco";
                Title = "Preço de Item";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_ABD4C1A4F89D4B1988D92AF873FC8429";
                StateField = SYSxEstadoID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemPreco

        #region ISExItemPrecoTipo

        [XRegister(typeof(ISExItemPrecoTipo), sCID)]
        public class ISExItemPrecoTipo : XORMTable
        {
            public const String sCID = "9150AB9D-68F5-4C6D-9FA1-C25A960B7D1A";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sNormal_de_Venda => _Titles[(Int16)2];
                public const Int16 Normal_de_Venda = (Int16)2;
                public static String sPromocional_Venda => _Titles[(Int16)3];
                public const Int16 Promocional_Venda = (Int16)3;
                public static String sMinimo => _Titles[(Int16)1];
                public const Int16 Minimo = (Int16)1;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)2] = "Normal de Venda",
                [(Int16)3] = "Promocional Venda",
                [(Int16)1] = "Mínimo"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExItemPrecoTipoID
                {
                    get
                    {
                        return (Int16)Value[ISExItemPrecoTipo.ISExItemPrecoTipoID];
                    }
                    set
                    {
                        this[ISExItemPrecoTipo.ISExItemPrecoTipoID] = value;
                    }
                }
                public Int16? oISExItemPrecoTipoID
                {
                    get
                    {
                        GetOldValue(ISExItemPrecoTipo.ISExItemPrecoTipoID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Tipo
                {
                    get
                    {
                        return (String)Value[ISExItemPrecoTipo.Tipo];
                    }
                    set
                    {
                        this[ISExItemPrecoTipo.Tipo] = value;
                    }
                }
                public String? oTipo
                {
                    get
                    {
                        GetOldValue(ISExItemPrecoTipo.Tipo, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemPrecoTipo _Instance;
            public static ISExItemPrecoTipo Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemPrecoTipo>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExItemPrecoTipoID = new XORMPKField(new Guid("0CA501EB-65ED-493D-AA36-F2FED95E88F9"), "ISExItemPrecoTipoID", "Tipo de Preço", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFaceField Tipo = new XORMFaceField(new Guid("36E478C6-9FD5-4C2C-8176-1F945BF35FAA"), "Tipo", "Tipo", XString.CID, 25, 0, false, gCID, null);
            static ISExItemPrecoTipo()
            {
                Tipo.UpdateStatic = true;
                Tipo.InsertOnly = false;
                Tipo.TableName = "ISExItemPrecoTipo";
                Tipo.SourceTableID = new Guid("9150AB9D-68F5-4C6D-9FA1-C25A960B7D1A");
                Tipo.Index = 0;
                Tipo.IsFaceField = true;
                ISExItemPrecoTipoID.PKID = new Guid("81CF4B93B7CF416C8F424FCD380ABE25");
                ISExItemPrecoTipoID.UpdateStatic = true;
                ISExItemPrecoTipoID.InsertOnly = false;
                ISExItemPrecoTipoID.TableName = "ISExItemPrecoTipo";
                ISExItemPrecoTipoID.SourceTableID = new Guid("9150AB9D-68F5-4C6D-9FA1-C25A960B7D1A");
                ISExItemPrecoTipoID.Index = 1;
            }
            protected ISExItemPrecoTipo()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemPrecoTipo);
            #endif
                ID = new Guid("9150AB9D-68F5-4C6D-9FA1-C25A960B7D1A");
                Name = "ISExItemPrecoTipo";
                Title = "Tipo de Preço";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_0CA501EB65ED493DAA36F2FED95E88F9";
                FaceField = Tipo;
                IsCached = true;
                DisplayField = Tipo;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Normal de Venda", (Int16)2}), (Int16)2);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Promocional Venda", (Int16)3}), (Int16)3);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Mínimo", (Int16)1}), (Int16)1);
            }
        }

        #endregion ISExItemPrecoTipo

        #region ISExItemPromocao

        [XRegister(typeof(ISExItemPromocao), sCID)]
        public class ISExItemPromocao : XORMTable
        {
            public const String sCID = "D1A76AEE-491E-4C37-958F-DDF654D56F90";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public DateTime Fim
                {
                    get
                    {
                        return (DateTime)Value[ISExItemPromocao.Fim];
                    }
                    set
                    {
                        this[ISExItemPromocao.Fim] = value;
                    }
                }
                public DateTime? oFim
                {
                    get
                    {
                        GetOldValue(ISExItemPromocao.Fim, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public DateTime Inicio
                {
                    get
                    {
                        return (DateTime)Value[ISExItemPromocao.Inicio];
                    }
                    set
                    {
                        this[ISExItemPromocao.Inicio] = value;
                    }
                }
                public DateTime? oInicio
                {
                    get
                    {
                        GetOldValue(ISExItemPromocao.Inicio, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public Guid ISExItemPromocaoID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPromocao.ISExItemPromocaoID];
                    }
                    set
                    {
                        this[ISExItemPromocao.ISExItemPromocaoID] = value;
                    }
                }
                public Guid? oISExItemPromocaoID
                {
                    get
                    {
                        GetOldValue(ISExItemPromocao.ISExItemPromocaoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Nome
                {
                    get
                    {
                        return (String)Value[ISExItemPromocao.Nome];
                    }
                    set
                    {
                        this[ISExItemPromocao.Nome] = value;
                    }
                }
                public String? oNome
                {
                    get
                    {
                        GetOldValue(ISExItemPromocao.Nome, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Guid SYSxEmpresaID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPromocao.SYSxEmpresaID];
                    }
                    set
                    {
                        this[ISExItemPromocao.SYSxEmpresaID] = value;
                    }
                }
                public Guid? oSYSxEmpresaID
                {
                    get
                    {
                        GetOldValue(ISExItemPromocao.SYSxEmpresaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemPromocao _Instance;
            public static ISExItemPromocao Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemPromocao>(gCID);
                    return _Instance;
                }
            }
            public static XORMDateTimeField Fim = new XORMDateTimeField(new Guid("546D3A02-868B-4EDC-BED4-4D9D57271A63"), "Fim", "Fim", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMDateTimeField Inicio = new XORMDateTimeField(new Guid("B5A2D6B1-C716-47F4-9D76-DF4D714F0A6C"), "Inicio", "Início", XDateTime.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMPKField ISExItemPromocaoID = new XORMPKField(new Guid("BDB3A9A2-04B6-4FC3-898F-D6D5D3EA29AB"), "ISExItemPromocaoID", "Promoção por Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Nome = new XORMField(new Guid("A319CF63-4172-4393-9EA3-7A6443E1DB0C"), "Nome", "Nome", XString.CID, 20, 0, false, gCID, null);
            public static XORMFKField SYSxEmpresaID = new XORMFKField(new Guid("74067B12-7BFF-4C6F-8F3A-8E718DAED8F0"), "SYSxEmpresaID", "Empresa", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_09967DD1266241489DE7B108B94878FA = new XORMReference(new Guid("09967DD1-2662-4148-9DE7-B108B94878FA"), "FK_09967DD1266241489DE7B108B94878FA", gCID, SYSxEmpresaID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID.ID);
            public static readonly XORMIndex IX_DB775E10333E4F738C92DCDF472DECAD = new XORMIndex();
            public static readonly XORMIndex IX_09967DD1266241489DE7B108B94878FA = new XORMIndex();
            static ISExItemPromocao()
            {
                SYSxEmpresaID.UpdateStatic = true;
                SYSxEmpresaID.InsertOnly = false;
                SYSxEmpresaID.TableName = "ISExItemPromocao";
                SYSxEmpresaID.SourceTableID = new Guid("D1A76AEE-491E-4C37-958F-DDF654D56F90");
                SYSxEmpresaID.Index = 0;
                ISExItemPromocaoID.PKID = new Guid("3586F5D67D4F46B7A189E29008030F35");
                ISExItemPromocaoID.UpdateStatic = true;
                ISExItemPromocaoID.InsertOnly = false;
                ISExItemPromocaoID.TableName = "ISExItemPromocao";
                ISExItemPromocaoID.SourceTableID = new Guid("D1A76AEE-491E-4C37-958F-DDF654D56F90");
                ISExItemPromocaoID.Index = 1;
                Inicio.UpdateStatic = true;
                Inicio.InsertOnly = false;
                Inicio.TableName = "ISExItemPromocao";
                Inicio.SourceTableID = new Guid("D1A76AEE-491E-4C37-958F-DDF654D56F90");
                Inicio.Index = 2;
                Fim.UpdateStatic = true;
                Fim.InsertOnly = false;
                Fim.TableName = "ISExItemPromocao";
                Fim.SourceTableID = new Guid("D1A76AEE-491E-4C37-958F-DDF654D56F90");
                Fim.Index = 3;
                Nome.UpdateStatic = true;
                Nome.InsertOnly = false;
                Nome.TableName = "ISExItemPromocao";
                Nome.SourceTableID = new Guid("D1A76AEE-491E-4C37-958F-DDF654D56F90");
                Nome.Index = 4;
                IX_DB775E10333E4F738C92DCDF472DECAD.Name = "IX_DB775E10333E4F738C92DCDF472DECAD";
                IX_DB775E10333E4F738C92DCDF472DECAD.ID = new Guid("DB775E10-333E-4F73-8C92-DCDF472DECAD");
                IX_DB775E10333E4F738C92DCDF472DECAD.IsUnique = true;
                IX_DB775E10333E4F738C92DCDF472DECAD.Description = "";
                IX_DB775E10333E4F738C92DCDF472DECAD.AddItem(Nome);
                IX_DB775E10333E4F738C92DCDF472DECAD.AddItem(SYSxEmpresaID);
                IX_09967DD1266241489DE7B108B94878FA.Name = "IX_09967DD1266241489DE7B108B94878FA";
                IX_09967DD1266241489DE7B108B94878FA.ID = new Guid("7D87BB37-F0DB-41E0-B75C-4CD578658DB3");
                IX_09967DD1266241489DE7B108B94878FA.IsUnique = false;
                IX_09967DD1266241489DE7B108B94878FA.Description = "";
                IX_09967DD1266241489DE7B108B94878FA.AddItem(SYSxEmpresaID);
                SYSxEmpresaID.AllowZero = true;
                FK_09967DD1266241489DE7B108B94878FA.AllowZero = true;
            }
            protected ISExItemPromocao()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemPromocao);
            #endif
                ID = new Guid("D1A76AEE-491E-4C37-958F-DDF654D56F90");
                Name = "ISExItemPromocao";
                Title = "Promoção por Item";
                CompanyControlType = XCompanyControlType.CurrentCompany;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_BDB3A9A204B64FC3898FD6D5D3EA29AB";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemPromocao

        #region ISExItemPromocaoDetalhe

        [XRegister(typeof(ISExItemPromocaoDetalhe), sCID)]
        public class ISExItemPromocaoDetalhe : XORMTable
        {
            public const String sCID = "965DEA1D-BE88-412E-8B3A-01496DA75272";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPromocaoDetalhe.ISExItemID];
                    }
                    set
                    {
                        this[ISExItemPromocaoDetalhe.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExItemPromocaoDetalhe.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid ISExItemPromocaoDetalheID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPromocaoDetalhe.ISExItemPromocaoDetalheID];
                    }
                    set
                    {
                        this[ISExItemPromocaoDetalhe.ISExItemPromocaoDetalheID] = value;
                    }
                }
                public Guid? oISExItemPromocaoDetalheID
                {
                    get
                    {
                        GetOldValue(ISExItemPromocaoDetalhe.ISExItemPromocaoDetalheID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid ISExItemPromocaoID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPromocaoDetalhe.ISExItemPromocaoID];
                    }
                    set
                    {
                        this[ISExItemPromocaoDetalhe.ISExItemPromocaoID] = value;
                    }
                }
                public Guid? oISExItemPromocaoID
                {
                    get
                    {
                        GetOldValue(ISExItemPromocaoDetalhe.ISExItemPromocaoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Nome
                {
                    get
                    {
                        return (String)Value[ISExItemPromocaoDetalhe.Nome];
                    }
                    set
                    {
                        this[ISExItemPromocaoDetalhe.Nome] = value;
                    }
                }
                public String? oNome
                {
                    get
                    {
                        GetOldValue(ISExItemPromocaoDetalhe.Nome, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Guid SYSxEmpresaID
                {
                    get
                    {
                        return (Guid)Value[ISExItemPromocaoDetalhe.SYSxEmpresaID];
                    }
                    set
                    {
                        this[ISExItemPromocaoDetalhe.SYSxEmpresaID] = value;
                    }
                }
                public Guid? oSYSxEmpresaID
                {
                    get
                    {
                        GetOldValue(ISExItemPromocaoDetalhe.SYSxEmpresaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Decimal Valor
                {
                    get
                    {
                        return (Decimal)Value[ISExItemPromocaoDetalhe.Valor];
                    }
                    set
                    {
                        this[ISExItemPromocaoDetalhe.Valor] = value;
                    }
                }
                public Decimal? oValor
                {
                    get
                    {
                        GetOldValue(ISExItemPromocaoDetalhe.Valor, out Object ovlr);
                        return (Decimal?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExItemPromocaoDetalhe _Instance;
            public static ISExItemPromocaoDetalhe Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExItemPromocaoDetalhe>(gCID);
                    return _Instance;
                }
            }
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("BC7D5BDD-A5E1-4A9C-ABC9-ECFA6991487B"), "ISExItemID", "Item de Estoque", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMPKField ISExItemPromocaoDetalheID = new XORMPKField(new Guid("78E0D828-B560-4677-8575-65FB09A7FB53"), "ISExItemPromocaoDetalheID", "Detalhe da Promoção", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExItemPromocaoID = new XORMFKField(new Guid("68A2110A-4178-4630-B50E-7D7C968075CA"), "ISExItemPromocaoID", "Promoção por Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Nome = new XORMField(new Guid("60B1F2F0-3737-4C9F-B02F-096483357B0C"), "Nome", "Nome", XString.CID, 20, 0, false, gCID, null);
            public static XORMFKField SYSxEmpresaID = new XORMFKField(new Guid("2FB2F031-4E33-4B95-9583-F90EB3A44CF8"), "SYSxEmpresaID", "Empresa", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMDecimalField Valor = new XORMDecimalField(new Guid("E8E79C8E-82A1-4D49-B1B4-64394338CC85"), "Valor", "Valor", XDecimal.CID, 25, 2, false, gCID, 0);
            public static readonly XORMReference FK_41AA93F4F6564D52A682AD24335B4A34 = new XORMReference(new Guid("41AA93F4-F656-4D52-A682-AD24335B4A34"), "FK_41AA93F4F6564D52A682AD24335B4A34", gCID, ISExItemPromocaoID.ID, ISExItemPromocao.gCID, ISExItemPromocao.ISExItemPromocaoID.ID);
            public static readonly XORMReference FK_0E0B8F89F00A4ED1B4A531719B90EBC5 = new XORMReference(new Guid("0E0B8F89-F00A-4ED1-B4A5-31719B90EBC5"), "FK_0E0B8F89F00A4ED1B4A531719B90EBC5", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMReference FK_C0F2843E16C345759F0B0C40C5BC57D3 = new XORMReference(new Guid("C0F2843E-16C3-4575-9F0B-0C40C5BC57D3"), "FK_C0F2843E16C345759F0B0C40C5BC57D3", gCID, SYSxEmpresaID.ID, global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.gCID, global::TFX.Core.Service.Apps.SYSx.SYSxPessoa.SYSxPessoaID.ID);
            public static readonly XORMIndex IX_6A839403007046FAB6A6D202B5E3DBFE = new XORMIndex();
            public static readonly XORMIndex IX_7561B78E0AC342A8AA7DB8D7B19B2AF6 = new XORMIndex();
            public static readonly XORMIndex IX_F52B4434525041CA9002DAF93270127A = new XORMIndex();
            public static readonly XORMIndex IX_41AA93F4F6564D52A682AD24335B4A34 = new XORMIndex();
            public static readonly XORMIndex IX_0E0B8F89F00A4ED1B4A531719B90EBC5 = new XORMIndex();
            public static readonly XORMIndex IX_C0F2843E16C345759F0B0C40C5BC57D3 = new XORMIndex();
            static ISExItemPromocaoDetalhe()
            {
                SYSxEmpresaID.UpdateStatic = true;
                SYSxEmpresaID.InsertOnly = false;
                SYSxEmpresaID.TableName = "ISExItemPromocaoDetalhe";
                SYSxEmpresaID.SourceTableID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                SYSxEmpresaID.Index = 0;
                ISExItemPromocaoID.UpdateStatic = true;
                ISExItemPromocaoID.InsertOnly = false;
                ISExItemPromocaoID.TableName = "ISExItemPromocaoDetalhe";
                ISExItemPromocaoID.SourceTableID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                ISExItemPromocaoID.Index = 1;
                Valor.UpdateStatic = true;
                Valor.InsertOnly = false;
                Valor.TableName = "ISExItemPromocaoDetalhe";
                Valor.SourceTableID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                Valor.Min = -79228162514264337593543950335M;
                Valor.Max = 79228162514264337593543950335M;
                Valor.Index = 2;
                ISExItemPromocaoDetalheID.PKID = new Guid("64FEDF386E6B4199A15D55FA8DDD29AA");
                ISExItemPromocaoDetalheID.UpdateStatic = true;
                ISExItemPromocaoDetalheID.InsertOnly = false;
                ISExItemPromocaoDetalheID.TableName = "ISExItemPromocaoDetalhe";
                ISExItemPromocaoDetalheID.SourceTableID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                ISExItemPromocaoDetalheID.Index = 3;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExItemPromocaoDetalhe";
                ISExItemID.SourceTableID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                ISExItemID.Index = 4;
                Nome.UpdateStatic = true;
                Nome.InsertOnly = false;
                Nome.TableName = "ISExItemPromocaoDetalhe";
                Nome.SourceTableID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                Nome.Index = 5;
                IX_6A839403007046FAB6A6D202B5E3DBFE.Name = "IX_6A839403007046FAB6A6D202B5E3DBFE";
                IX_6A839403007046FAB6A6D202B5E3DBFE.ID = new Guid("6A839403-0070-46FA-B6A6-D202B5E3DBFE");
                IX_6A839403007046FAB6A6D202B5E3DBFE.IsUnique = true;
                IX_6A839403007046FAB6A6D202B5E3DBFE.Description = "";
                IX_6A839403007046FAB6A6D202B5E3DBFE.AddItem(ISExItemPromocaoID);
                IX_6A839403007046FAB6A6D202B5E3DBFE.AddItem(ISExItemID);
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.Name = "IX_7561B78E0AC342A8AA7DB8D7B19B2AF6";
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.ID = new Guid("7561B78E-0AC3-42A8-AA7D-B8D7B19B2AF6");
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.IsUnique = false;
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.Description = "";
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.AddItem(Nome);
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.AddItem(SYSxEmpresaID);
                IX_7561B78E0AC342A8AA7DB8D7B19B2AF6.AddItem(ISExItemID);
                IX_F52B4434525041CA9002DAF93270127A.Name = "IX_F52B4434525041CA9002DAF93270127A";
                IX_F52B4434525041CA9002DAF93270127A.ID = new Guid("F52B4434-5250-41CA-9002-DAF93270127A");
                IX_F52B4434525041CA9002DAF93270127A.IsUnique = false;
                IX_F52B4434525041CA9002DAF93270127A.Description = "";
                IX_F52B4434525041CA9002DAF93270127A.AddItem(ISExItemID);
                IX_F52B4434525041CA9002DAF93270127A.AddItem(ISExItemPromocaoDetalheID);
                IX_F52B4434525041CA9002DAF93270127A.AddItem(ISExItemPromocaoID);
                IX_41AA93F4F6564D52A682AD24335B4A34.Name = "IX_41AA93F4F6564D52A682AD24335B4A34";
                IX_41AA93F4F6564D52A682AD24335B4A34.ID = new Guid("7D0AEFF7-E7C1-44AA-BE5A-921D0D8E9EE7");
                IX_41AA93F4F6564D52A682AD24335B4A34.IsUnique = false;
                IX_41AA93F4F6564D52A682AD24335B4A34.Description = "";
                IX_41AA93F4F6564D52A682AD24335B4A34.AddItem(ISExItemPromocaoID);
                IX_0E0B8F89F00A4ED1B4A531719B90EBC5.Name = "IX_0E0B8F89F00A4ED1B4A531719B90EBC5";
                IX_0E0B8F89F00A4ED1B4A531719B90EBC5.ID = new Guid("9C38E232-B149-4132-AD41-01C71F222245");
                IX_0E0B8F89F00A4ED1B4A531719B90EBC5.IsUnique = false;
                IX_0E0B8F89F00A4ED1B4A531719B90EBC5.Description = "";
                IX_0E0B8F89F00A4ED1B4A531719B90EBC5.AddItem(ISExItemID);
                IX_C0F2843E16C345759F0B0C40C5BC57D3.Name = "IX_C0F2843E16C345759F0B0C40C5BC57D3";
                IX_C0F2843E16C345759F0B0C40C5BC57D3.ID = new Guid("35E5AC01-ECD2-4FD2-A26D-D0E1864D0BFA");
                IX_C0F2843E16C345759F0B0C40C5BC57D3.IsUnique = false;
                IX_C0F2843E16C345759F0B0C40C5BC57D3.Description = "";
                IX_C0F2843E16C345759F0B0C40C5BC57D3.AddItem(SYSxEmpresaID);
                ISExItemPromocaoID.AllowZero = false;
                FK_41AA93F4F6564D52A682AD24335B4A34.AllowZero = false;
                ISExItemID.AllowZero = true;
                FK_0E0B8F89F00A4ED1B4A531719B90EBC5.AllowZero = true;
                SYSxEmpresaID.AllowZero = true;
                FK_C0F2843E16C345759F0B0C40C5BC57D3.AllowZero = true;
            }
            protected ISExItemPromocaoDetalhe()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExItemPromocaoDetalhe);
            #endif
                ID = new Guid("965DEA1D-BE88-412E-8B3A-01496DA75272");
                Name = "ISExItemPromocaoDetalhe";
                Title = "Detalhe da Promoção";
                CompanyControlType = XCompanyControlType.CurrentCompany;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_78E0D828B5604677857565FB09A7FB53";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExItemPromocaoDetalhe

        #region ISExLinha

        [XRegister(typeof(ISExLinha), sCID)]
        public class ISExLinha : XORMTable
        {
            public const String sCID = "E9411661-357F-480D-98CE-37287483B55B";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_0 => _Titles[0];
                public const Int32 _0 = 0;
                private static Dictionary<Int32, String> _Titles = new Dictionary<Int32, String>()
                {
                [0] = "0"
                };
                public static String GetTitle(Int32 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int32 ISExLinhaID
                {
                    get
                    {
                        return (Int32)Value[ISExLinha.ISExLinhaID];
                    }
                    set
                    {
                        this[ISExLinha.ISExLinhaID] = value;
                    }
                }
                public Int32? oISExLinhaID
                {
                    get
                    {
                        GetOldValue(ISExLinha.ISExLinhaID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public String Linha
                {
                    get
                    {
                        return (String)Value[ISExLinha.Linha];
                    }
                    set
                    {
                        this[ISExLinha.Linha] = value;
                    }
                }
                public String? oLinha
                {
                    get
                    {
                        GetOldValue(ISExLinha.Linha, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public String LinhaID
                {
                    get
                    {
                        return (String)Value[ISExLinha.LinhaID];
                    }
                    set
                    {
                        this[ISExLinha.LinhaID] = value;
                    }
                }
                public String? oLinhaID
                {
                    get
                    {
                        GetOldValue(ISExLinha.LinhaID, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExLinha _Instance;
            public static ISExLinha Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExLinha>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExLinhaID = new XORMPKField(new Guid("C9711B6A-5F29-461A-A0D1-15A4B57AEDBA"), "ISExLinhaID", "Linha", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMField Linha = new XORMField(new Guid("1795FDB0-04FF-4B16-A798-C3E315B7D2CA"), "Linha", "Linha", XString.CID, 40, 0, false, gCID, null);
            public static XORMField LinhaID = new XORMField(new Guid("12137CC7-3358-4643-8151-ADD4DDB806CA"), "LinhaID", "Código Legado", XString.CID, 8, 0, false, gCID, @"NA");
            static ISExLinha()
            {
                Linha.UpdateStatic = true;
                Linha.InsertOnly = false;
                Linha.TableName = "ISExLinha";
                Linha.SourceTableID = new Guid("E9411661-357F-480D-98CE-37287483B55B");
                Linha.Index = 0;
                LinhaID.UpdateStatic = true;
                LinhaID.InsertOnly = false;
                LinhaID.TableName = "ISExLinha";
                LinhaID.SourceTableID = new Guid("E9411661-357F-480D-98CE-37287483B55B");
                LinhaID.Index = 1;
                ISExLinhaID.PKID = new Guid("B8407F8FCAF444C29F0BD5C4B94A549B");
                ISExLinhaID.UpdateStatic = true;
                ISExLinhaID.InsertOnly = false;
                ISExLinhaID.TableName = "ISExLinha";
                ISExLinhaID.SourceTableID = new Guid("E9411661-357F-480D-98CE-37287483B55B");
                ISExLinhaID.Index = 2;
                ISExLinhaID.IsFaceField = true;
            }
            protected ISExLinha()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExLinha);
            #endif
                ID = new Guid("E9411661-357F-480D-98CE-37287483B55B");
                Name = "ISExLinha";
                Title = "Linha";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_C9711B6A5F29461AA0D115A4B57AEDBA";
                FaceField = ISExLinhaID;
                DisplayField = ISExLinhaID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"NA", @"NA", 0}), 0);
            }
        }

        #endregion ISExLinha

        #region ISExLote

        [XRegister(typeof(ISExLote), sCID)]
        public class ISExLote : XORMTable
        {
            public const String sCID = "B3297762-79BA-42E9-B066-64594E92A572";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public DateTime Fabricacao
                {
                    get
                    {
                        return (DateTime)Value[ISExLote.Fabricacao];
                    }
                    set
                    {
                        this[ISExLote.Fabricacao] = value;
                    }
                }
                public DateTime? oFabricacao
                {
                    get
                    {
                        GetOldValue(ISExLote.Fabricacao, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                public Guid ISExItemID
                {
                    get
                    {
                        return (Guid)Value[ISExLote.ISExItemID];
                    }
                    set
                    {
                        this[ISExLote.ISExItemID] = value;
                    }
                }
                public Guid? oISExItemID
                {
                    get
                    {
                        GetOldValue(ISExLote.ISExItemID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Guid ISExLoteID
                {
                    get
                    {
                        return (Guid)Value[ISExLote.ISExLoteID];
                    }
                    set
                    {
                        this[ISExLote.ISExLoteID] = value;
                    }
                }
                public Guid? oISExLoteID
                {
                    get
                    {
                        GetOldValue(ISExLote.ISExLoteID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public String Numero
                {
                    get
                    {
                        return (String)Value[ISExLote.Numero];
                    }
                    set
                    {
                        this[ISExLote.Numero] = value;
                    }
                }
                public String? oNumero
                {
                    get
                    {
                        GetOldValue(ISExLote.Numero, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public DateTime Validade
                {
                    get
                    {
                        return (DateTime)Value[ISExLote.Validade];
                    }
                    set
                    {
                        this[ISExLote.Validade] = value;
                    }
                }
                public DateTime? oValidade
                {
                    get
                    {
                        GetOldValue(ISExLote.Validade, out Object ovlr);
                        return (DateTime?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExLote _Instance;
            public static ISExLote Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExLote>(gCID);
                    return _Instance;
                }
            }
            public static XORMDateField Fabricacao = new XORMDateField(new Guid("FCD420CA-E733-4DF0-8E41-B3CF61ED2171"), "Fabricacao", "Fabricação", XDate.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static XORMFKField ISExItemID = new XORMFKField(new Guid("8A6FF753-756F-4B45-A3F0-9CE49490675D"), "ISExItemID", "Item", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMPKField ISExLoteID = new XORMPKField(new Guid("BD8E1495-3E33-456D-A0E9-80E329B76E68"), "ISExLoteID", "Lote", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMField Numero = new XORMField(new Guid("138A8C66-73AC-4990-A24F-EFAB116D60AB"), "Numero", "Número do Lote", XString.CID, 20, 0, false, gCID, null);
            public static XORMDateField Validade = new XORMDateField(new Guid("E832ECC9-3AFC-498E-8CCC-A517D365BBAB"), "Validade", "Validade", XDate.CID, 0, 0, false, gCID, TFX.Core.XDefault.NullDateTime);
            public static readonly XORMReference FK_42561E723A7341699B935B4936986272 = new XORMReference(new Guid("42561E72-3A73-4169-9B93-5B4936986272"), "FK_42561E723A7341699B935B4936986272", gCID, ISExItemID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMIndex IX_447DDDE71B3D4FB6A7B7DF0B70E2A411 = new XORMIndex();
            public static readonly XORMIndex IX_42561E723A7341699B935B4936986272 = new XORMIndex();
            static ISExLote()
            {
                ISExLoteID.PKID = new Guid("888A9BD3E9E74F11BEBB6519D8AC1F4B");
                ISExLoteID.UpdateStatic = true;
                ISExLoteID.InsertOnly = false;
                ISExLoteID.TableName = "ISExLote";
                ISExLoteID.SourceTableID = new Guid("B3297762-79BA-42E9-B066-64594E92A572");
                ISExLoteID.Index = 0;
                Numero.UpdateStatic = true;
                Numero.InsertOnly = false;
                Numero.TableName = "ISExLote";
                Numero.SourceTableID = new Guid("B3297762-79BA-42E9-B066-64594E92A572");
                Numero.Index = 1;
                Fabricacao.UpdateStatic = true;
                Fabricacao.InsertOnly = false;
                Fabricacao.TableName = "ISExLote";
                Fabricacao.SourceTableID = new Guid("B3297762-79BA-42E9-B066-64594E92A572");
                Fabricacao.Index = 2;
                Validade.UpdateStatic = true;
                Validade.InsertOnly = false;
                Validade.TableName = "ISExLote";
                Validade.SourceTableID = new Guid("B3297762-79BA-42E9-B066-64594E92A572");
                Validade.Index = 3;
                ISExItemID.UpdateStatic = true;
                ISExItemID.InsertOnly = false;
                ISExItemID.TableName = "ISExLote";
                ISExItemID.SourceTableID = new Guid("B3297762-79BA-42E9-B066-64594E92A572");
                ISExItemID.Index = 4;
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.Name = "IX_447DDDE71B3D4FB6A7B7DF0B70E2A411";
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.ID = new Guid("447DDDE7-1B3D-4FB6-A7B7-DF0B70E2A411");
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.IsUnique = true;
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.Description = "Não é permitido dois ou mais lotes, cujos números sejam iguais às datas de validade e fabricação.";
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.AddItem(Numero);
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.AddItem(Validade);
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.AddItem(Fabricacao);
                IX_447DDDE71B3D4FB6A7B7DF0B70E2A411.AddItem(ISExItemID);
                IX_42561E723A7341699B935B4936986272.Name = "IX_42561E723A7341699B935B4936986272";
                IX_42561E723A7341699B935B4936986272.ID = new Guid("C24A520A-4E55-4584-B195-3356BB5545D6");
                IX_42561E723A7341699B935B4936986272.IsUnique = false;
                IX_42561E723A7341699B935B4936986272.Description = "";
                IX_42561E723A7341699B935B4936986272.AddItem(ISExItemID);
                ISExItemID.AllowZero = true;
                FK_42561E723A7341699B935B4936986272.AllowZero = true;
            }
            protected ISExLote()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExLote);
            #endif
                ID = new Guid("B3297762-79BA-42E9-B066-64594E92A572");
                Name = "ISExLote";
                Title = "Lote";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_BD8E14953E33456DA0E980E329B76E68";
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExLote

        #region ISExMarca

        [XRegister(typeof(ISExMarca), sCID)]
        public class ISExMarca : XORMTable
        {
            public const String sCID = "CDE89A60-264F-481E-B7E4-E52D93DED124";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_0 => _Titles[0];
                public const Int32 _0 = 0;
                private static Dictionary<Int32, String> _Titles = new Dictionary<Int32, String>()
                {
                [0] = "0"
                };
                public static String GetTitle(Int32 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int32 ISExMarcaID
                {
                    get
                    {
                        return (Int32)Value[ISExMarca.ISExMarcaID];
                    }
                    set
                    {
                        this[ISExMarca.ISExMarcaID] = value;
                    }
                }
                public Int32? oISExMarcaID
                {
                    get
                    {
                        GetOldValue(ISExMarca.ISExMarcaID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                public String Marca
                {
                    get
                    {
                        return (String)Value[ISExMarca.Marca];
                    }
                    set
                    {
                        this[ISExMarca.Marca] = value;
                    }
                }
                public String? oMarca
                {
                    get
                    {
                        GetOldValue(ISExMarca.Marca, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                public Int32 MarcaID
                {
                    get
                    {
                        return (Int32)Value[ISExMarca.MarcaID];
                    }
                    set
                    {
                        this[ISExMarca.MarcaID] = value;
                    }
                }
                public Int32? oMarcaID
                {
                    get
                    {
                        GetOldValue(ISExMarca.MarcaID, out Object ovlr);
                        return (Int32?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExMarca _Instance;
            public static ISExMarca Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExMarca>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExMarcaID = new XORMPKField(new Guid("73E55859-C927-4D78-8A16-405D398EBDEC"), "ISExMarcaID", "Marca", XInt32.CID, 0, 0, false, gCID, 0);
            public static XORMField Marca = new XORMField(new Guid("243C1889-FF3F-4942-A999-9A678DB1FD28"), "Marca", "Marca", XString.CID, 50, 0, false, gCID, null);
            public static XORMField MarcaID = new XORMField(new Guid("A8CD51E7-B392-4710-B2F5-0129DD8AA83A"), "MarcaID", "Código Legado", XInt32.CID, 0, 0, false, gCID, 0);
            static ISExMarca()
            {
                Marca.UpdateStatic = true;
                Marca.InsertOnly = false;
                Marca.TableName = "ISExMarca";
                Marca.SourceTableID = new Guid("CDE89A60-264F-481E-B7E4-E52D93DED124");
                Marca.Index = 0;
                MarcaID.UpdateStatic = true;
                MarcaID.InsertOnly = false;
                MarcaID.TableName = "ISExMarca";
                MarcaID.SourceTableID = new Guid("CDE89A60-264F-481E-B7E4-E52D93DED124");
                MarcaID.Min = -2147483648;
                MarcaID.Max = 2147483647;
                MarcaID.Index = 1;
                ISExMarcaID.PKID = new Guid("1EC915F63BE44F3EBEEB310EAD8F2558");
                ISExMarcaID.UpdateStatic = true;
                ISExMarcaID.InsertOnly = false;
                ISExMarcaID.TableName = "ISExMarca";
                ISExMarcaID.SourceTableID = new Guid("CDE89A60-264F-481E-B7E4-E52D93DED124");
                ISExMarcaID.Index = 2;
                ISExMarcaID.IsFaceField = true;
            }
            protected ISExMarca()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExMarca);
            #endif
                ID = new Guid("CDE89A60-264F-481E-B7E4-E52D93DED124");
                Name = "ISExMarca";
                Title = "Marca";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_73E55859C9274D788A16405D398EBDEC";
                FaceField = ISExMarcaID;
                DisplayField = ISExMarcaID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"NI", 0, 0}), 0);
            }
        }

        #endregion ISExMarca

        #region ISExProduto

        [XRegister(typeof(ISExProduto), sCID)]
        public class ISExProduto : XORMTable
        {
            public const String sCID = "6F0B163E-0FAC-4DD2-8823-A4CAA8B96456";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExProdutoID
                {
                    get
                    {
                        return (Guid)Value[ISExProduto.ISExProdutoID];
                    }
                    set
                    {
                        this[ISExProduto.ISExProdutoID] = value;
                    }
                }
                public Guid? oISExProdutoID
                {
                    get
                    {
                        GetOldValue(ISExProduto.ISExProdutoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExProduto _Instance;
            public static ISExProduto Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExProduto>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExProdutoID = new XORMPKField(new Guid("6CA8CCB1-368D-4B81-B42D-50D4D8C6A83F"), "ISExProdutoID", "Acessórios", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_0E23F33B5BC449D7A9B989D763272B47 = new XORMReference(new Guid("0E23F33B-5BC4-49D7-A9B9-89D763272B47"), "FK_0E23F33B5BC449D7A9B989D763272B47", gCID, ISExProdutoID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            static ISExProduto()
            {
                ISExProdutoID.PKID = new Guid("E54B3F56BCB94E919FB2BD329EFA83DA");
                ISExProdutoID.UpdateStatic = true;
                ISExProdutoID.InsertOnly = false;
                ISExProdutoID.TableName = "ISExProduto";
                ISExProdutoID.SourceTableID = new Guid("6F0B163E-0FAC-4DD2-8823-A4CAA8B96456");
                ISExProdutoID.Index = 0;
                ISExProdutoID.AllowZero = true;
                FK_0E23F33B5BC449D7A9B989D763272B47.AllowZero = true;
            }
            protected ISExProduto()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExProduto);
            #endif
                ID = new Guid("6F0B163E-0FAC-4DD2-8823-A4CAA8B96456");
                Name = "ISExProduto";
                Title = "Acessórios";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_6CA8CCB1368D4B81B42D50D4D8C6A83F";
                InheritanceID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExProduto

        #region ISExServico

        [XRegister(typeof(ISExServico), sCID)]
        public class ISExServico : XORMTable
        {
            public const String sCID = "C62F2947-B834-440D-9F60-D1731DF68BE8";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExServicoID
                {
                    get
                    {
                        return (Guid)Value[ISExServico.ISExServicoID];
                    }
                    set
                    {
                        this[ISExServico.ISExServicoID] = value;
                    }
                }
                public Guid? oISExServicoID
                {
                    get
                    {
                        GetOldValue(ISExServico.ISExServicoID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExServico _Instance;
            public static ISExServico Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExServico>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExServicoID = new XORMPKField(new Guid("FC8C0EA7-39D1-4145-8F46-1FCBBC9FFD2F"), "ISExServicoID", "Serviço", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static readonly XORMReference FK_246DAB74468A4AA4B950295AFB4BAF26 = new XORMReference(new Guid("246DAB74-468A-4AA4-B950-295AFB4BAF26"), "FK_246DAB74468A4AA4B950295AFB4BAF26", gCID, ISExServicoID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            static ISExServico()
            {
                ISExServicoID.PKID = new Guid("AC8B1B56B2C945308BE5448F06DFFC80");
                ISExServicoID.UpdateStatic = true;
                ISExServicoID.InsertOnly = false;
                ISExServicoID.TableName = "ISExServico";
                ISExServicoID.SourceTableID = new Guid("C62F2947-B834-440D-9F60-D1731DF68BE8");
                ISExServicoID.Index = 0;
                ISExServicoID.AllowZero = true;
                FK_246DAB74468A4AA4B950295AFB4BAF26.AllowZero = true;
            }
            protected ISExServico()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExServico);
            #endif
                ID = new Guid("C62F2947-B834-440D-9F60-D1731DF68BE8");
                Name = "ISExServico";
                Title = "Serviço";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_FC8C0EA739D141458F461FCBBC9FFD2F";
                InheritanceID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExServico

        #region ISExUnidade

        [XRegister(typeof(ISExUnidade), sCID)]
        public class ISExUnidade : XORMTable
        {
            public const String sCID = "7707E9BC-BE89-4806-8FEA-F13FBB659826";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String s_0 => _Titles[(Int16)0];
                public const Int16 _0 = (Int16)0;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)0] = "0"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExUnidadeID
                {
                    get
                    {
                        return (Int16)Value[ISExUnidade.ISExUnidadeID];
                    }
                    set
                    {
                        this[ISExUnidade.ISExUnidadeID] = value;
                    }
                }
                public Int16? oISExUnidadeID
                {
                    get
                    {
                        GetOldValue(ISExUnidade.ISExUnidadeID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Unidade
                {
                    get
                    {
                        return (String)Value[ISExUnidade.Unidade];
                    }
                    set
                    {
                        this[ISExUnidade.Unidade] = value;
                    }
                }
                public String? oUnidade
                {
                    get
                    {
                        GetOldValue(ISExUnidade.Unidade, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExUnidade _Instance;
            public static ISExUnidade Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExUnidade>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExUnidadeID = new XORMPKField(new Guid("8EB886F0-D1D7-4DD1-AC73-0A667F21FA14"), "ISExUnidadeID", "Unidade", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMField Unidade = new XORMField(new Guid("377D61A7-872B-49B0-BE98-BACCF04800C4"), "Unidade", "Unidade", XString.CID, 20, 0, false, gCID, null);
            static ISExUnidade()
            {
                Unidade.UpdateStatic = true;
                Unidade.InsertOnly = false;
                Unidade.TableName = "ISExUnidade";
                Unidade.SourceTableID = new Guid("7707E9BC-BE89-4806-8FEA-F13FBB659826");
                Unidade.Index = 0;
                ISExUnidadeID.PKID = new Guid("C7EBC9CBD25649D5BACDD77561049F03");
                ISExUnidadeID.UpdateStatic = true;
                ISExUnidadeID.InsertOnly = false;
                ISExUnidadeID.TableName = "ISExUnidade";
                ISExUnidadeID.SourceTableID = new Guid("7707E9BC-BE89-4806-8FEA-F13FBB659826");
                ISExUnidadeID.Index = 1;
                ISExUnidadeID.IsFaceField = true;
            }
            protected ISExUnidade()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExUnidade);
            #endif
                ID = new Guid("7707E9BC-BE89-4806-8FEA-F13FBB659826");
                Name = "ISExUnidade";
                Title = "Unidade";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_8EB886F0D1D74DD1AC730A667F21FA14";
                FaceField = ISExUnidadeID;
                DisplayField = ISExUnidadeID;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"NA", (Int16)0}), (Int16)0);
            }
        }

        #endregion ISExUnidade

        #region ISExVacina

        [XRegister(typeof(ISExVacina), sCID)]
        public class ISExVacina : XORMTable
        {
            public const String sCID = "7DEFD389-F7FA-4C80-AD98-8D565ACDE8FC";
            public static Guid gCID = new Guid(sCID);
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Guid ISExVacinaID
                {
                    get
                    {
                        return (Guid)Value[ISExVacina.ISExVacinaID];
                    }
                    set
                    {
                        this[ISExVacina.ISExVacinaID] = value;
                    }
                }
                public Guid? oISExVacinaID
                {
                    get
                    {
                        GetOldValue(ISExVacina.ISExVacinaID, out Object ovlr);
                        return (Guid?)ovlr;
                    }
                }
                public Int16 ISExVacinaPeriodicidadeID
                {
                    get
                    {
                        return (Int16)Value[ISExVacina.ISExVacinaPeriodicidadeID];
                    }
                    set
                    {
                        this[ISExVacina.ISExVacinaPeriodicidadeID] = value;
                    }
                }
                public Int16? oISExVacinaPeriodicidadeID
                {
                    get
                    {
                        GetOldValue(ISExVacina.ISExVacinaPeriodicidadeID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExVacina _Instance;
            public static ISExVacina Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExVacina>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExVacinaID = new XORMPKField(new Guid("8140DB02-22D9-4BAF-BA7B-0010CFE461A9"), "ISExVacinaID", "Vacina", XGuid.CID, 0, 0, false, gCID, new Guid("00000000-0000-0000-0000-000000000000"));
            public static XORMFKField ISExVacinaPeriodicidadeID = new XORMFKField(new Guid("7FFB19FE-ADB3-4944-A42B-3FD3B81787B2"), "ISExVacinaPeriodicidadeID", "Periodicidade de Vacina", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static readonly XORMReference FK_83E0C7894A5E4C9FB4FD7CACDF39125B = new XORMReference(new Guid("83E0C789-4A5E-4C9F-B4FD-7CACDF39125B"), "FK_83E0C7894A5E4C9FB4FD7CACDF39125B", gCID, ISExVacinaID.ID, ISExItem.gCID, ISExItem.ISExItemID.ID);
            public static readonly XORMReference FK_B00E963F74714FF0B5A52B455A95B80A = new XORMReference(new Guid("B00E963F-7471-4FF0-B5A5-2B455A95B80A"), "FK_B00E963F74714FF0B5A52B455A95B80A", gCID, ISExVacinaPeriodicidadeID.ID, ISExVacinaPeriodicidade.gCID, ISExVacinaPeriodicidade.ISExVacinaPeriodicidadeID.ID);
            public static readonly XORMIndex IX_B00E963F74714FF0B5A52B455A95B80A = new XORMIndex();
            static ISExVacina()
            {
                ISExVacinaID.PKID = new Guid("C12CAA6F30144AC3BE92D1E2E7A7CEFC");
                ISExVacinaID.UpdateStatic = true;
                ISExVacinaID.InsertOnly = false;
                ISExVacinaID.TableName = "ISExVacina";
                ISExVacinaID.SourceTableID = new Guid("7DEFD389-F7FA-4C80-AD98-8D565ACDE8FC");
                ISExVacinaID.Index = 0;
                ISExVacinaPeriodicidadeID.UpdateStatic = true;
                ISExVacinaPeriodicidadeID.InsertOnly = false;
                ISExVacinaPeriodicidadeID.TableName = "ISExVacina";
                ISExVacinaPeriodicidadeID.SourceTableID = new Guid("7DEFD389-F7FA-4C80-AD98-8D565ACDE8FC");
                ISExVacinaPeriodicidadeID.Index = 1;
                IX_B00E963F74714FF0B5A52B455A95B80A.Name = "IX_B00E963F74714FF0B5A52B455A95B80A";
                IX_B00E963F74714FF0B5A52B455A95B80A.ID = new Guid("B6629C2D-2ED7-435D-ABF2-53AFDC98071D");
                IX_B00E963F74714FF0B5A52B455A95B80A.IsUnique = false;
                IX_B00E963F74714FF0B5A52B455A95B80A.Description = "";
                IX_B00E963F74714FF0B5A52B455A95B80A.AddItem(ISExVacinaPeriodicidadeID);
                ISExVacinaID.AllowZero = true;
                FK_83E0C7894A5E4C9FB4FD7CACDF39125B.AllowZero = true;
                ISExVacinaPeriodicidadeID.AllowZero = true;
                FK_B00E963F74714FF0B5A52B455A95B80A.AllowZero = true;
            }
            protected ISExVacina()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExVacina);
            #endif
                ID = new Guid("7DEFD389-F7FA-4C80-AD98-8D565ACDE8FC");
                Name = "ISExVacina";
                Title = "Vacina";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_8140DB0222D94BAFBA7B0010CFE461A9";
                InheritanceID = new Guid("8BB836C8-EC72-48FA-A5AB-95DC2BD05E22");
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
            }
        }

        #endregion ISExVacina

        #region ISExVacinaPeriodicidade

        [XRegister(typeof(ISExVacinaPeriodicidade), sCID)]
        public class ISExVacinaPeriodicidade : XORMTable
        {
            public const String sCID = "E5A52A65-E919-4A6D-AA76-D2C5A12FA15E";
            public static Guid gCID = new Guid(sCID);
            #region XDefault
            public class XDefault
            {
                public static String sMensal => _Titles[(Int16)1];
                public const Int16 Mensal = (Int16)1;
                public static String sUnica => _Titles[(Int16)4];
                public const Int16 Unica = (Int16)4;
                public static String sOutros => _Titles[(Int16)0];
                public const Int16 Outros = (Int16)0;
                public static String sSemestral => _Titles[(Int16)2];
                public const Int16 Semestral = (Int16)2;
                public static String sAnual => _Titles[(Int16)3];
                public const Int16 Anual = (Int16)3;
                private static Dictionary<Int16, String> _Titles = new Dictionary<Int16, String>()
                {
                [(Int16)1] = "Mensal",
                [(Int16)4] = "Única",
                [(Int16)0] = "Outros",
                [(Int16)2] = "Semestral",
                [(Int16)3] = "Anual"
                };
                public static String GetTitle(Int16 pIndex)
                {
                    if (!_Titles.ContainsKey(pIndex))
                        return "";
                    return _Titles[pIndex];
                }
            }
            #endregion XDefault
            #region XTuple
            public class XTuple : XDataTuple
            {
                public XTuple()
                {
                }
                public XTuple(Object[] pSource)
                    : base(pSource)
                {
                }
                public XTuple(Int32 pColCount)
                   : this(new Object[pColCount])
                {
                }
                #nullable enable
                public Int16 ISExVacinaPeriodicidadeID
                {
                    get
                    {
                        return (Int16)Value[ISExVacinaPeriodicidade.ISExVacinaPeriodicidadeID];
                    }
                    set
                    {
                        this[ISExVacinaPeriodicidade.ISExVacinaPeriodicidadeID] = value;
                    }
                }
                public Int16? oISExVacinaPeriodicidadeID
                {
                    get
                    {
                        GetOldValue(ISExVacinaPeriodicidade.ISExVacinaPeriodicidadeID, out Object ovlr);
                        return (Int16?)ovlr;
                    }
                }
                public String Periodicidade
                {
                    get
                    {
                        return (String)Value[ISExVacinaPeriodicidade.Periodicidade];
                    }
                    set
                    {
                        this[ISExVacinaPeriodicidade.Periodicidade] = value;
                    }
                }
                public String? oPeriodicidade
                {
                    get
                    {
                        GetOldValue(ISExVacinaPeriodicidade.Periodicidade, out Object ovlr);
                        return (String?)ovlr;
                    }
                }
                #nullable disable
            }
            #endregion XTuple
            private static ISExVacinaPeriodicidade _Instance;
            public static ISExVacinaPeriodicidade Instance
            {
                get
                {
                    if (_Instance == null)
                        _Instance = XTypeCache.CreateInstanceNP<ISExVacinaPeriodicidade>(gCID);
                    return _Instance;
                }
            }
            public static XORMPKField ISExVacinaPeriodicidadeID = new XORMPKField(new Guid("9E5AEB53-37A4-46BC-8E27-38776D969E4F"), "ISExVacinaPeriodicidadeID", "Periodicidade de Vacina", XInt16.CID, 0, 0, false, gCID, (Int16)0);
            public static XORMFaceField Periodicidade = new XORMFaceField(new Guid("E928009D-13C0-459B-A685-54C090D308C0"), "Periodicidade", "Periodicidade", XString.CID, 25, 0, false, gCID, null);
            static ISExVacinaPeriodicidade()
            {
                Periodicidade.UpdateStatic = true;
                Periodicidade.InsertOnly = false;
                Periodicidade.TableName = "ISExVacinaPeriodicidade";
                Periodicidade.SourceTableID = new Guid("E5A52A65-E919-4A6D-AA76-D2C5A12FA15E");
                Periodicidade.Index = 0;
                Periodicidade.IsFaceField = true;
                ISExVacinaPeriodicidadeID.PKID = new Guid("19934E08D123414E97968B60D804720B");
                ISExVacinaPeriodicidadeID.UpdateStatic = true;
                ISExVacinaPeriodicidadeID.InsertOnly = false;
                ISExVacinaPeriodicidadeID.TableName = "ISExVacinaPeriodicidade";
                ISExVacinaPeriodicidadeID.SourceTableID = new Guid("E5A52A65-E919-4A6D-AA76-D2C5A12FA15E");
                ISExVacinaPeriodicidadeID.Index = 1;
            }
            protected ISExVacinaPeriodicidade()
            {
                TupleType = typeof(XTuple);
            #if !OnlyDef
                PersistenceType = typeof(__ISExVacinaPeriodicidade);
            #endif
                ID = new Guid("E5A52A65-E919-4A6D-AA76-D2C5A12FA15E");
                Name = "ISExVacinaPeriodicidade";
                Title = "Periodicidade de Vacina";
                CompanyControlType = XCompanyControlType.None;
                ModuleID = new Guid("F28C7462-44A8-4233-9A88-4B89761423D3");
                DeleteOnDeactivate = false;
                PKName = "PK_9E5AEB5337A446BC8E2738776D969E4F";
                FaceField = Periodicidade;
                DisplayField = Periodicidade;
            }
            protected override void LoadDefaultData(XDataSet pDataSet)
            {
                base.LoadDefaultData(pDataSet);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Mensal", (Int16)1}), (Int16)1);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Única", (Int16)4}), (Int16)4);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Outros", (Int16)0}), (Int16)0);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Semestral", (Int16)2}), (Int16)2);
                pDataSet.AddDefaultTuple(new XTuple(new Object[] {@"Anual", (Int16)3}), (Int16)3);
            }
        }

        #endregion ISExVacinaPeriodicidade

        #region _ISExCategoria

            #if !OnlyDef
        [Guid(__ISExCategoria.sCID)]
        public interface _ISExCategoria : XIBasePersistence, IEnumerable<ISExCategoria.XTuple>
        {
            ISExCategoria.XTuple NewTuple();

            new ISExCategoria.XTuple NewTuple(Object pPKValue);

            new ISExCategoria.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExCategoria.XTuple FindTupleByPK(Object pPKValue);

            ISExCategoria.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExCategoria.XTuple Current
            {
                get;
            }

            IEnumerable<ISExCategoria.XTuple> Tuples
            {
                get;
            }

            ISExCategoria.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExCategoria

        #region _ISExCategoria<TModel, TTuple>

            #if !OnlyDef
        public class _ISExCategoria<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExCategoria where TModel : ISExCategoria where TTuple : ISExCategoria.XTuple 
        {
            protected _ISExCategoria()
            {
            }
            ISExCategoria.XTuple _ISExCategoria.this[Int32 pInex] => (ISExCategoria.XTuple)base[pInex];

            IEnumerable<ISExCategoria.XTuple> _ISExCategoria.Tuples => (IEnumerable<ISExCategoria.XTuple>)base.Tuples;

            ISExCategoria.XTuple _ISExCategoria.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExCategoria.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExCategoria.XTuple _ISExCategoria.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExCategoria.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExCategoria.XTuple _ISExCategoria.FindTupleByPK(Object pPKValue)
            {
                return (ISExCategoria.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExCategoria.XTuple _ISExCategoria.NewTuple()
            {
                return (ISExCategoria.XTuple)NewTuple();
            }

            ISExCategoria.XTuple _ISExCategoria.NewTuple(Object pPKValue)
            {
                return (ISExCategoria.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExCategoria.XTuple> IEnumerable<ISExCategoria.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExCategoria.XTuple _ISExCategoria.Current => base.Current;
        }
            #endif

        #endregion _ISExCategoria<TModel, TTuple>

        #region __ISExCategoria

            #if !OnlyDef
        [XRegister(typeof(__ISExCategoria), sCID, typeof(ISExCategoria))]
        public class __ISExCategoria : _ISExCategoria<ISExCategoria, ISExCategoria.XTuple>
        {
            public const String sCID = "3049B2FD-F8D8-4FDB-871F-F5596AE447A3";
            public static Guid gCID = new Guid(sCID);
            protected __ISExCategoria()
            {
                TupleType = typeof(ISExCategoria.XTuple);
            }
        }
            #endif

        #endregion __ISExCategoria

        #region _ISExCodigo

            #if !OnlyDef
        [Guid(__ISExCodigo.sCID)]
        public interface _ISExCodigo : XIBasePersistence, IEnumerable<ISExCodigo.XTuple>
        {
            ISExCodigo.XTuple NewTuple();

            new ISExCodigo.XTuple NewTuple(Object pPKValue);

            new ISExCodigo.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExCodigo.XTuple FindTupleByPK(Object pPKValue);

            ISExCodigo.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExCodigo.XTuple Current
            {
                get;
            }

            IEnumerable<ISExCodigo.XTuple> Tuples
            {
                get;
            }

            ISExCodigo.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExCodigo

        #region _ISExCodigo<TModel, TTuple>

            #if !OnlyDef
        public class _ISExCodigo<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExCodigo where TModel : ISExCodigo where TTuple : ISExCodigo.XTuple 
        {
            protected _ISExCodigo()
            {
            }
            ISExCodigo.XTuple _ISExCodigo.this[Int32 pInex] => (ISExCodigo.XTuple)base[pInex];

            IEnumerable<ISExCodigo.XTuple> _ISExCodigo.Tuples => (IEnumerable<ISExCodigo.XTuple>)base.Tuples;

            ISExCodigo.XTuple _ISExCodigo.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExCodigo.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExCodigo.XTuple _ISExCodigo.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExCodigo.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExCodigo.XTuple _ISExCodigo.FindTupleByPK(Object pPKValue)
            {
                return (ISExCodigo.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExCodigo.XTuple _ISExCodigo.NewTuple()
            {
                return (ISExCodigo.XTuple)NewTuple();
            }

            ISExCodigo.XTuple _ISExCodigo.NewTuple(Object pPKValue)
            {
                return (ISExCodigo.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExCodigo.XTuple> IEnumerable<ISExCodigo.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExCodigo.XTuple _ISExCodigo.Current => base.Current;
        }
            #endif

        #endregion _ISExCodigo<TModel, TTuple>

        #region __ISExCodigo

            #if !OnlyDef
        [XRegister(typeof(__ISExCodigo), sCID, typeof(ISExCodigo))]
        public class __ISExCodigo : _ISExCodigo<ISExCodigo, ISExCodigo.XTuple>
        {
            public const String sCID = "07DEF738-A578-4F58-9272-01F2A7AB730E";
            public static Guid gCID = new Guid(sCID);
            protected __ISExCodigo()
            {
                TupleType = typeof(ISExCodigo.XTuple);
            }
        }
            #endif

        #endregion __ISExCodigo

        #region _ISExCodigoTipo

            #if !OnlyDef
        [Guid(__ISExCodigoTipo.sCID)]
        public interface _ISExCodigoTipo : XIBasePersistence, IEnumerable<ISExCodigoTipo.XTuple>
        {
            ISExCodigoTipo.XTuple NewTuple();

            new ISExCodigoTipo.XTuple NewTuple(Object pPKValue);

            new ISExCodigoTipo.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExCodigoTipo.XTuple FindTupleByPK(Object pPKValue);

            ISExCodigoTipo.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExCodigoTipo.XTuple Current
            {
                get;
            }

            IEnumerable<ISExCodigoTipo.XTuple> Tuples
            {
                get;
            }

            ISExCodigoTipo.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExCodigoTipo

        #region _ISExCodigoTipo<TModel, TTuple>

            #if !OnlyDef
        public class _ISExCodigoTipo<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExCodigoTipo where TModel : ISExCodigoTipo where TTuple : ISExCodigoTipo.XTuple 
        {
            protected _ISExCodigoTipo()
            {
            }
            ISExCodigoTipo.XTuple _ISExCodigoTipo.this[Int32 pInex] => (ISExCodigoTipo.XTuple)base[pInex];

            IEnumerable<ISExCodigoTipo.XTuple> _ISExCodigoTipo.Tuples => (IEnumerable<ISExCodigoTipo.XTuple>)base.Tuples;

            ISExCodigoTipo.XTuple _ISExCodigoTipo.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExCodigoTipo.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExCodigoTipo.XTuple _ISExCodigoTipo.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExCodigoTipo.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExCodigoTipo.XTuple _ISExCodigoTipo.FindTupleByPK(Object pPKValue)
            {
                return (ISExCodigoTipo.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExCodigoTipo.XTuple _ISExCodigoTipo.NewTuple()
            {
                return (ISExCodigoTipo.XTuple)NewTuple();
            }

            ISExCodigoTipo.XTuple _ISExCodigoTipo.NewTuple(Object pPKValue)
            {
                return (ISExCodigoTipo.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExCodigoTipo.XTuple> IEnumerable<ISExCodigoTipo.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExCodigoTipo.XTuple _ISExCodigoTipo.Current => base.Current;
        }
            #endif

        #endregion _ISExCodigoTipo<TModel, TTuple>

        #region __ISExCodigoTipo

            #if !OnlyDef
        [XRegister(typeof(__ISExCodigoTipo), sCID, typeof(ISExCodigoTipo))]
        public class __ISExCodigoTipo : _ISExCodigoTipo<ISExCodigoTipo, ISExCodigoTipo.XTuple>
        {
            public const String sCID = "A574579F-D8F9-4443-8A65-431B52F96B9B";
            public static Guid gCID = new Guid(sCID);
            protected __ISExCodigoTipo()
            {
                TupleType = typeof(ISExCodigoTipo.XTuple);
            }
        }
            #endif

        #endregion __ISExCodigoTipo

        #region _ISExComissao

            #if !OnlyDef
        [Guid(__ISExComissao.sCID)]
        public interface _ISExComissao : XIBasePersistence, IEnumerable<ISExComissao.XTuple>
        {
            ISExComissao.XTuple NewTuple();

            new ISExComissao.XTuple NewTuple(Object pPKValue);

            new ISExComissao.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExComissao.XTuple FindTupleByPK(Object pPKValue);

            ISExComissao.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExComissao.XTuple Current
            {
                get;
            }

            IEnumerable<ISExComissao.XTuple> Tuples
            {
                get;
            }

            ISExComissao.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExComissao

        #region _ISExComissao<TModel, TTuple>

            #if !OnlyDef
        public class _ISExComissao<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExComissao where TModel : ISExComissao where TTuple : ISExComissao.XTuple 
        {
            protected _ISExComissao()
            {
            }
            ISExComissao.XTuple _ISExComissao.this[Int32 pInex] => (ISExComissao.XTuple)base[pInex];

            IEnumerable<ISExComissao.XTuple> _ISExComissao.Tuples => (IEnumerable<ISExComissao.XTuple>)base.Tuples;

            ISExComissao.XTuple _ISExComissao.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExComissao.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExComissao.XTuple _ISExComissao.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExComissao.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExComissao.XTuple _ISExComissao.FindTupleByPK(Object pPKValue)
            {
                return (ISExComissao.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExComissao.XTuple _ISExComissao.NewTuple()
            {
                return (ISExComissao.XTuple)NewTuple();
            }

            ISExComissao.XTuple _ISExComissao.NewTuple(Object pPKValue)
            {
                return (ISExComissao.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExComissao.XTuple> IEnumerable<ISExComissao.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExComissao.XTuple _ISExComissao.Current => base.Current;
        }
            #endif

        #endregion _ISExComissao<TModel, TTuple>

        #region __ISExComissao

            #if !OnlyDef
        [XRegister(typeof(__ISExComissao), sCID, typeof(ISExComissao))]
        public class __ISExComissao : _ISExComissao<ISExComissao, ISExComissao.XTuple>
        {
            public const String sCID = "C12AA64F-549A-43A4-A479-38B8AA06560F";
            public static Guid gCID = new Guid(sCID);
            protected __ISExComissao()
            {
                TupleType = typeof(ISExComissao.XTuple);
            }
        }
            #endif

        #endregion __ISExComissao

        #region _ISExComissaoTipo

            #if !OnlyDef
        [Guid(__ISExComissaoTipo.sCID)]
        public interface _ISExComissaoTipo : XIBasePersistence, IEnumerable<ISExComissaoTipo.XTuple>
        {
            ISExComissaoTipo.XTuple NewTuple();

            new ISExComissaoTipo.XTuple NewTuple(Object pPKValue);

            new ISExComissaoTipo.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExComissaoTipo.XTuple FindTupleByPK(Object pPKValue);

            ISExComissaoTipo.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExComissaoTipo.XTuple Current
            {
                get;
            }

            IEnumerable<ISExComissaoTipo.XTuple> Tuples
            {
                get;
            }

            ISExComissaoTipo.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExComissaoTipo

        #region _ISExComissaoTipo<TModel, TTuple>

            #if !OnlyDef
        public class _ISExComissaoTipo<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExComissaoTipo where TModel : ISExComissaoTipo where TTuple : ISExComissaoTipo.XTuple 
        {
            protected _ISExComissaoTipo()
            {
            }
            ISExComissaoTipo.XTuple _ISExComissaoTipo.this[Int32 pInex] => (ISExComissaoTipo.XTuple)base[pInex];

            IEnumerable<ISExComissaoTipo.XTuple> _ISExComissaoTipo.Tuples => (IEnumerable<ISExComissaoTipo.XTuple>)base.Tuples;

            ISExComissaoTipo.XTuple _ISExComissaoTipo.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExComissaoTipo.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExComissaoTipo.XTuple _ISExComissaoTipo.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExComissaoTipo.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExComissaoTipo.XTuple _ISExComissaoTipo.FindTupleByPK(Object pPKValue)
            {
                return (ISExComissaoTipo.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExComissaoTipo.XTuple _ISExComissaoTipo.NewTuple()
            {
                return (ISExComissaoTipo.XTuple)NewTuple();
            }

            ISExComissaoTipo.XTuple _ISExComissaoTipo.NewTuple(Object pPKValue)
            {
                return (ISExComissaoTipo.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExComissaoTipo.XTuple> IEnumerable<ISExComissaoTipo.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExComissaoTipo.XTuple _ISExComissaoTipo.Current => base.Current;
        }
            #endif

        #endregion _ISExComissaoTipo<TModel, TTuple>

        #region __ISExComissaoTipo

            #if !OnlyDef
        [XRegister(typeof(__ISExComissaoTipo), sCID, typeof(ISExComissaoTipo))]
        public class __ISExComissaoTipo : _ISExComissaoTipo<ISExComissaoTipo, ISExComissaoTipo.XTuple>
        {
            public const String sCID = "C8D2E57A-77D8-49E8-A7BE-25B25010455B";
            public static Guid gCID = new Guid(sCID);
            protected __ISExComissaoTipo()
            {
                TupleType = typeof(ISExComissaoTipo.XTuple);
            }
        }
            #endif

        #endregion __ISExComissaoTipo

        #region _ISExEmbalagem

            #if !OnlyDef
        [Guid(__ISExEmbalagem.sCID)]
        public interface _ISExEmbalagem : XIBasePersistence, IEnumerable<ISExEmbalagem.XTuple>
        {
            ISExEmbalagem.XTuple NewTuple();

            new ISExEmbalagem.XTuple NewTuple(Object pPKValue);

            new ISExEmbalagem.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExEmbalagem.XTuple FindTupleByPK(Object pPKValue);

            ISExEmbalagem.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExEmbalagem.XTuple Current
            {
                get;
            }

            IEnumerable<ISExEmbalagem.XTuple> Tuples
            {
                get;
            }

            ISExEmbalagem.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExEmbalagem

        #region _ISExEmbalagem<TModel, TTuple>

            #if !OnlyDef
        public class _ISExEmbalagem<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExEmbalagem where TModel : ISExEmbalagem where TTuple : ISExEmbalagem.XTuple 
        {
            protected _ISExEmbalagem()
            {
            }
            ISExEmbalagem.XTuple _ISExEmbalagem.this[Int32 pInex] => (ISExEmbalagem.XTuple)base[pInex];

            IEnumerable<ISExEmbalagem.XTuple> _ISExEmbalagem.Tuples => (IEnumerable<ISExEmbalagem.XTuple>)base.Tuples;

            ISExEmbalagem.XTuple _ISExEmbalagem.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExEmbalagem.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExEmbalagem.XTuple _ISExEmbalagem.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExEmbalagem.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExEmbalagem.XTuple _ISExEmbalagem.FindTupleByPK(Object pPKValue)
            {
                return (ISExEmbalagem.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExEmbalagem.XTuple _ISExEmbalagem.NewTuple()
            {
                return (ISExEmbalagem.XTuple)NewTuple();
            }

            ISExEmbalagem.XTuple _ISExEmbalagem.NewTuple(Object pPKValue)
            {
                return (ISExEmbalagem.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExEmbalagem.XTuple> IEnumerable<ISExEmbalagem.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExEmbalagem.XTuple _ISExEmbalagem.Current => base.Current;
        }
            #endif

        #endregion _ISExEmbalagem<TModel, TTuple>

        #region __ISExEmbalagem

            #if !OnlyDef
        [XRegister(typeof(__ISExEmbalagem), sCID, typeof(ISExEmbalagem))]
        public class __ISExEmbalagem : _ISExEmbalagem<ISExEmbalagem, ISExEmbalagem.XTuple>
        {
            public const String sCID = "C3BCDD6A-A836-4B97-9D1B-7C61CC73F44C";
            public static Guid gCID = new Guid(sCID);
            protected __ISExEmbalagem()
            {
                TupleType = typeof(ISExEmbalagem.XTuple);
            }
        }
            #endif

        #endregion __ISExEmbalagem

        #region _ISExEmbalagemUnidade

            #if !OnlyDef
        [Guid(__ISExEmbalagemUnidade.sCID)]
        public interface _ISExEmbalagemUnidade : XIBasePersistence, IEnumerable<ISExEmbalagemUnidade.XTuple>
        {
            ISExEmbalagemUnidade.XTuple NewTuple();

            new ISExEmbalagemUnidade.XTuple NewTuple(Object pPKValue);

            new ISExEmbalagemUnidade.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExEmbalagemUnidade.XTuple FindTupleByPK(Object pPKValue);

            ISExEmbalagemUnidade.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExEmbalagemUnidade.XTuple Current
            {
                get;
            }

            IEnumerable<ISExEmbalagemUnidade.XTuple> Tuples
            {
                get;
            }

            ISExEmbalagemUnidade.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExEmbalagemUnidade

        #region _ISExEmbalagemUnidade<TModel, TTuple>

            #if !OnlyDef
        public class _ISExEmbalagemUnidade<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExEmbalagemUnidade where TModel : ISExEmbalagemUnidade where TTuple : ISExEmbalagemUnidade.XTuple 
        {
            protected _ISExEmbalagemUnidade()
            {
            }
            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.this[Int32 pInex] => (ISExEmbalagemUnidade.XTuple)base[pInex];

            IEnumerable<ISExEmbalagemUnidade.XTuple> _ISExEmbalagemUnidade.Tuples => (IEnumerable<ISExEmbalagemUnidade.XTuple>)base.Tuples;

            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExEmbalagemUnidade.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExEmbalagemUnidade.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.FindTupleByPK(Object pPKValue)
            {
                return (ISExEmbalagemUnidade.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.NewTuple()
            {
                return (ISExEmbalagemUnidade.XTuple)NewTuple();
            }

            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.NewTuple(Object pPKValue)
            {
                return (ISExEmbalagemUnidade.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExEmbalagemUnidade.XTuple> IEnumerable<ISExEmbalagemUnidade.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExEmbalagemUnidade.XTuple _ISExEmbalagemUnidade.Current => base.Current;
        }
            #endif

        #endregion _ISExEmbalagemUnidade<TModel, TTuple>

        #region __ISExEmbalagemUnidade

            #if !OnlyDef
        [XRegister(typeof(__ISExEmbalagemUnidade), sCID, typeof(ISExEmbalagemUnidade))]
        public class __ISExEmbalagemUnidade : _ISExEmbalagemUnidade<ISExEmbalagemUnidade, ISExEmbalagemUnidade.XTuple>
        {
            public const String sCID = "0F37627C-CAF8-4C58-A15B-2A4C861C77EB";
            public static Guid gCID = new Guid(sCID);
            protected __ISExEmbalagemUnidade()
            {
                TupleType = typeof(ISExEmbalagemUnidade.XTuple);
            }
        }
            #endif

        #endregion __ISExEmbalagemUnidade

        #region _ISExExame

            #if !OnlyDef
        [Guid(__ISExExame.sCID)]
        public interface _ISExExame : XIBasePersistence, IEnumerable<ISExExame.XTuple>
        {
            ISExExame.XTuple NewTuple();

            new ISExExame.XTuple NewTuple(Object pPKValue);

            new ISExExame.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExExame.XTuple FindTupleByPK(Object pPKValue);

            ISExExame.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExExame.XTuple Current
            {
                get;
            }

            IEnumerable<ISExExame.XTuple> Tuples
            {
                get;
            }

            ISExExame.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExExame

        #region _ISExExame<TModel, TTuple>

            #if !OnlyDef
        public class _ISExExame<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExExame where TModel : ISExExame where TTuple : ISExExame.XTuple 
        {
            protected _ISExExame()
            {
            }
            ISExExame.XTuple _ISExExame.this[Int32 pInex] => (ISExExame.XTuple)base[pInex];

            IEnumerable<ISExExame.XTuple> _ISExExame.Tuples => (IEnumerable<ISExExame.XTuple>)base.Tuples;

            ISExExame.XTuple _ISExExame.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExExame.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExExame.XTuple _ISExExame.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExExame.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExExame.XTuple _ISExExame.FindTupleByPK(Object pPKValue)
            {
                return (ISExExame.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExExame.XTuple _ISExExame.NewTuple()
            {
                return (ISExExame.XTuple)NewTuple();
            }

            ISExExame.XTuple _ISExExame.NewTuple(Object pPKValue)
            {
                return (ISExExame.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExExame.XTuple> IEnumerable<ISExExame.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExExame.XTuple _ISExExame.Current => base.Current;
        }
            #endif

        #endregion _ISExExame<TModel, TTuple>

        #region __ISExExame

            #if !OnlyDef
        [XRegister(typeof(__ISExExame), sCID, typeof(ISExExame))]
        public class __ISExExame : _ISExExame<ISExExame, ISExExame.XTuple>
        {
            public const String sCID = "15B7BC47-A133-4968-A458-E12371168E8B";
            public static Guid gCID = new Guid(sCID);
            protected __ISExExame()
            {
                TupleType = typeof(ISExExame.XTuple);
            }
        }
            #endif

        #endregion __ISExExame

        #region _ISExFabricante

            #if !OnlyDef
        [Guid(__ISExFabricante.sCID)]
        public interface _ISExFabricante : XIBasePersistence, IEnumerable<ISExFabricante.XTuple>
        {
            ISExFabricante.XTuple NewTuple();

            new ISExFabricante.XTuple NewTuple(Object pPKValue);

            new ISExFabricante.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExFabricante.XTuple FindTupleByPK(Object pPKValue);

            ISExFabricante.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExFabricante.XTuple Current
            {
                get;
            }

            IEnumerable<ISExFabricante.XTuple> Tuples
            {
                get;
            }

            ISExFabricante.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExFabricante

        #region _ISExFabricante<TModel, TTuple>

            #if !OnlyDef
        public class _ISExFabricante<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExFabricante where TModel : ISExFabricante where TTuple : ISExFabricante.XTuple 
        {
            protected _ISExFabricante()
            {
            }
            ISExFabricante.XTuple _ISExFabricante.this[Int32 pInex] => (ISExFabricante.XTuple)base[pInex];

            IEnumerable<ISExFabricante.XTuple> _ISExFabricante.Tuples => (IEnumerable<ISExFabricante.XTuple>)base.Tuples;

            ISExFabricante.XTuple _ISExFabricante.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExFabricante.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExFabricante.XTuple _ISExFabricante.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExFabricante.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExFabricante.XTuple _ISExFabricante.FindTupleByPK(Object pPKValue)
            {
                return (ISExFabricante.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExFabricante.XTuple _ISExFabricante.NewTuple()
            {
                return (ISExFabricante.XTuple)NewTuple();
            }

            ISExFabricante.XTuple _ISExFabricante.NewTuple(Object pPKValue)
            {
                return (ISExFabricante.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExFabricante.XTuple> IEnumerable<ISExFabricante.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExFabricante.XTuple _ISExFabricante.Current => base.Current;
        }
            #endif

        #endregion _ISExFabricante<TModel, TTuple>

        #region __ISExFabricante

            #if !OnlyDef
        [XRegister(typeof(__ISExFabricante), sCID, typeof(ISExFabricante))]
        public class __ISExFabricante : _ISExFabricante<ISExFabricante, ISExFabricante.XTuple>
        {
            public const String sCID = "2251134D-809D-4D31-AE50-E3BF6D39A2B2";
            public static Guid gCID = new Guid(sCID);
            protected __ISExFabricante()
            {
                TupleType = typeof(ISExFabricante.XTuple);
            }
        }
            #endif

        #endregion __ISExFabricante

        #region _ISExFinalidade

            #if !OnlyDef
        [Guid(__ISExFinalidade.sCID)]
        public interface _ISExFinalidade : XIBasePersistence, IEnumerable<ISExFinalidade.XTuple>
        {
            ISExFinalidade.XTuple NewTuple();

            new ISExFinalidade.XTuple NewTuple(Object pPKValue);

            new ISExFinalidade.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExFinalidade.XTuple FindTupleByPK(Object pPKValue);

            ISExFinalidade.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExFinalidade.XTuple Current
            {
                get;
            }

            IEnumerable<ISExFinalidade.XTuple> Tuples
            {
                get;
            }

            ISExFinalidade.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExFinalidade

        #region _ISExFinalidade<TModel, TTuple>

            #if !OnlyDef
        public class _ISExFinalidade<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExFinalidade where TModel : ISExFinalidade where TTuple : ISExFinalidade.XTuple 
        {
            protected _ISExFinalidade()
            {
            }
            ISExFinalidade.XTuple _ISExFinalidade.this[Int32 pInex] => (ISExFinalidade.XTuple)base[pInex];

            IEnumerable<ISExFinalidade.XTuple> _ISExFinalidade.Tuples => (IEnumerable<ISExFinalidade.XTuple>)base.Tuples;

            ISExFinalidade.XTuple _ISExFinalidade.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExFinalidade.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExFinalidade.XTuple _ISExFinalidade.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExFinalidade.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExFinalidade.XTuple _ISExFinalidade.FindTupleByPK(Object pPKValue)
            {
                return (ISExFinalidade.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExFinalidade.XTuple _ISExFinalidade.NewTuple()
            {
                return (ISExFinalidade.XTuple)NewTuple();
            }

            ISExFinalidade.XTuple _ISExFinalidade.NewTuple(Object pPKValue)
            {
                return (ISExFinalidade.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExFinalidade.XTuple> IEnumerable<ISExFinalidade.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExFinalidade.XTuple _ISExFinalidade.Current => base.Current;
        }
            #endif

        #endregion _ISExFinalidade<TModel, TTuple>

        #region __ISExFinalidade

            #if !OnlyDef
        [XRegister(typeof(__ISExFinalidade), sCID, typeof(ISExFinalidade))]
        public class __ISExFinalidade : _ISExFinalidade<ISExFinalidade, ISExFinalidade.XTuple>
        {
            public const String sCID = "B521C622-7643-4513-8738-7A4F7DEBD1B7";
            public static Guid gCID = new Guid(sCID);
            protected __ISExFinalidade()
            {
                TupleType = typeof(ISExFinalidade.XTuple);
            }
        }
            #endif

        #endregion __ISExFinalidade

        #region _ISExFornecedor

            #if !OnlyDef
        [Guid(__ISExFornecedor.sCID)]
        public interface _ISExFornecedor : XIBasePersistence, IEnumerable<ISExFornecedor.XTuple>
        {
            ISExFornecedor.XTuple NewTuple();

            new ISExFornecedor.XTuple NewTuple(Object pPKValue);

            new ISExFornecedor.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExFornecedor.XTuple FindTupleByPK(Object pPKValue);

            ISExFornecedor.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExFornecedor.XTuple Current
            {
                get;
            }

            IEnumerable<ISExFornecedor.XTuple> Tuples
            {
                get;
            }

            ISExFornecedor.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExFornecedor

        #region _ISExFornecedor<TModel, TTuple>

            #if !OnlyDef
        public class _ISExFornecedor<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExFornecedor where TModel : ISExFornecedor where TTuple : ISExFornecedor.XTuple 
        {
            protected _ISExFornecedor()
            {
            }
            ISExFornecedor.XTuple _ISExFornecedor.this[Int32 pInex] => (ISExFornecedor.XTuple)base[pInex];

            IEnumerable<ISExFornecedor.XTuple> _ISExFornecedor.Tuples => (IEnumerable<ISExFornecedor.XTuple>)base.Tuples;

            ISExFornecedor.XTuple _ISExFornecedor.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExFornecedor.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExFornecedor.XTuple _ISExFornecedor.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExFornecedor.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExFornecedor.XTuple _ISExFornecedor.FindTupleByPK(Object pPKValue)
            {
                return (ISExFornecedor.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExFornecedor.XTuple _ISExFornecedor.NewTuple()
            {
                return (ISExFornecedor.XTuple)NewTuple();
            }

            ISExFornecedor.XTuple _ISExFornecedor.NewTuple(Object pPKValue)
            {
                return (ISExFornecedor.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExFornecedor.XTuple> IEnumerable<ISExFornecedor.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExFornecedor.XTuple _ISExFornecedor.Current => base.Current;
        }
            #endif

        #endregion _ISExFornecedor<TModel, TTuple>

        #region __ISExFornecedor

            #if !OnlyDef
        [XRegister(typeof(__ISExFornecedor), sCID, typeof(ISExFornecedor))]
        public class __ISExFornecedor : _ISExFornecedor<ISExFornecedor, ISExFornecedor.XTuple>
        {
            public const String sCID = "8A651C83-3C1A-46E1-9560-3AAE5A9649CE";
            public static Guid gCID = new Guid(sCID);
            protected __ISExFornecedor()
            {
                TupleType = typeof(ISExFornecedor.XTuple);
            }
        }
            #endif

        #endregion __ISExFornecedor

        #region _ISExGrupo

            #if !OnlyDef
        [Guid(__ISExGrupo.sCID)]
        public interface _ISExGrupo : XIBasePersistence, IEnumerable<ISExGrupo.XTuple>
        {
            ISExGrupo.XTuple NewTuple();

            new ISExGrupo.XTuple NewTuple(Object pPKValue);

            new ISExGrupo.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExGrupo.XTuple FindTupleByPK(Object pPKValue);

            ISExGrupo.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExGrupo.XTuple Current
            {
                get;
            }

            IEnumerable<ISExGrupo.XTuple> Tuples
            {
                get;
            }

            ISExGrupo.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExGrupo

        #region _ISExGrupo<TModel, TTuple>

            #if !OnlyDef
        public class _ISExGrupo<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExGrupo where TModel : ISExGrupo where TTuple : ISExGrupo.XTuple 
        {
            protected _ISExGrupo()
            {
            }
            ISExGrupo.XTuple _ISExGrupo.this[Int32 pInex] => (ISExGrupo.XTuple)base[pInex];

            IEnumerable<ISExGrupo.XTuple> _ISExGrupo.Tuples => (IEnumerable<ISExGrupo.XTuple>)base.Tuples;

            ISExGrupo.XTuple _ISExGrupo.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExGrupo.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExGrupo.XTuple _ISExGrupo.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExGrupo.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExGrupo.XTuple _ISExGrupo.FindTupleByPK(Object pPKValue)
            {
                return (ISExGrupo.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExGrupo.XTuple _ISExGrupo.NewTuple()
            {
                return (ISExGrupo.XTuple)NewTuple();
            }

            ISExGrupo.XTuple _ISExGrupo.NewTuple(Object pPKValue)
            {
                return (ISExGrupo.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExGrupo.XTuple> IEnumerable<ISExGrupo.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExGrupo.XTuple _ISExGrupo.Current => base.Current;
        }
            #endif

        #endregion _ISExGrupo<TModel, TTuple>

        #region __ISExGrupo

            #if !OnlyDef
        [XRegister(typeof(__ISExGrupo), sCID, typeof(ISExGrupo))]
        public class __ISExGrupo : _ISExGrupo<ISExGrupo, ISExGrupo.XTuple>
        {
            public const String sCID = "617964C9-47AD-4EFC-8A58-0EABAA53A87C";
            public static Guid gCID = new Guid(sCID);
            protected __ISExGrupo()
            {
                TupleType = typeof(ISExGrupo.XTuple);
            }
        }
            #endif

        #endregion __ISExGrupo

        #region _ISExItem

            #if !OnlyDef
        [Guid(__ISExItem.sCID)]
        public interface _ISExItem : XIBasePersistence, IEnumerable<ISExItem.XTuple>
        {
            ISExItem.XTuple NewTuple();

            new ISExItem.XTuple NewTuple(Object pPKValue);

            new ISExItem.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItem.XTuple FindTupleByPK(Object pPKValue);

            ISExItem.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItem.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItem.XTuple> Tuples
            {
                get;
            }

            ISExItem.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItem

        #region _ISExItem<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItem<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItem where TModel : ISExItem where TTuple : ISExItem.XTuple 
        {
            protected _ISExItem()
            {
            }
            ISExItem.XTuple _ISExItem.this[Int32 pInex] => (ISExItem.XTuple)base[pInex];

            IEnumerable<ISExItem.XTuple> _ISExItem.Tuples => (IEnumerable<ISExItem.XTuple>)base.Tuples;

            ISExItem.XTuple _ISExItem.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItem.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItem.XTuple _ISExItem.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItem.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItem.XTuple _ISExItem.FindTupleByPK(Object pPKValue)
            {
                return (ISExItem.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItem.XTuple _ISExItem.NewTuple()
            {
                return (ISExItem.XTuple)NewTuple();
            }

            ISExItem.XTuple _ISExItem.NewTuple(Object pPKValue)
            {
                return (ISExItem.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItem.XTuple> IEnumerable<ISExItem.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItem.XTuple _ISExItem.Current => base.Current;
        }
            #endif

        #endregion _ISExItem<TModel, TTuple>

        #region __ISExItem

            #if !OnlyDef
        [XRegister(typeof(__ISExItem), sCID, typeof(ISExItem))]
        public class __ISExItem : _ISExItem<ISExItem, ISExItem.XTuple>
        {
            public const String sCID = "542D12D2-0271-41FE-B88F-FCB7E5EEE00B";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItem()
            {
                TupleType = typeof(ISExItem.XTuple);
            }
        }
            #endif

        #endregion __ISExItem

        #region _ISExItemCategoria

            #if !OnlyDef
        [Guid(__ISExItemCategoria.sCID)]
        public interface _ISExItemCategoria : XIBasePersistence, IEnumerable<ISExItemCategoria.XTuple>
        {
            ISExItemCategoria.XTuple NewTuple();

            new ISExItemCategoria.XTuple NewTuple(Object pPKValue);

            new ISExItemCategoria.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemCategoria.XTuple FindTupleByPK(Object pPKValue);

            ISExItemCategoria.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemCategoria.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemCategoria.XTuple> Tuples
            {
                get;
            }

            ISExItemCategoria.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemCategoria

        #region _ISExItemCategoria<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemCategoria<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemCategoria where TModel : ISExItemCategoria where TTuple : ISExItemCategoria.XTuple 
        {
            protected _ISExItemCategoria()
            {
            }
            ISExItemCategoria.XTuple _ISExItemCategoria.this[Int32 pInex] => (ISExItemCategoria.XTuple)base[pInex];

            IEnumerable<ISExItemCategoria.XTuple> _ISExItemCategoria.Tuples => (IEnumerable<ISExItemCategoria.XTuple>)base.Tuples;

            ISExItemCategoria.XTuple _ISExItemCategoria.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemCategoria.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemCategoria.XTuple _ISExItemCategoria.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemCategoria.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemCategoria.XTuple _ISExItemCategoria.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemCategoria.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemCategoria.XTuple _ISExItemCategoria.NewTuple()
            {
                return (ISExItemCategoria.XTuple)NewTuple();
            }

            ISExItemCategoria.XTuple _ISExItemCategoria.NewTuple(Object pPKValue)
            {
                return (ISExItemCategoria.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemCategoria.XTuple> IEnumerable<ISExItemCategoria.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemCategoria.XTuple _ISExItemCategoria.Current => base.Current;
        }
            #endif

        #endregion _ISExItemCategoria<TModel, TTuple>

        #region __ISExItemCategoria

            #if !OnlyDef
        [XRegister(typeof(__ISExItemCategoria), sCID, typeof(ISExItemCategoria))]
        public class __ISExItemCategoria : _ISExItemCategoria<ISExItemCategoria, ISExItemCategoria.XTuple>
        {
            public const String sCID = "2F843338-C436-4762-8E22-F7DB65731021";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemCategoria()
            {
                TupleType = typeof(ISExItemCategoria.XTuple);
            }
        }
            #endif

        #endregion __ISExItemCategoria

        #region _ISExItemClasse

            #if !OnlyDef
        [Guid(__ISExItemClasse.sCID)]
        public interface _ISExItemClasse : XIBasePersistence, IEnumerable<ISExItemClasse.XTuple>
        {
            ISExItemClasse.XTuple NewTuple();

            new ISExItemClasse.XTuple NewTuple(Object pPKValue);

            new ISExItemClasse.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemClasse.XTuple FindTupleByPK(Object pPKValue);

            ISExItemClasse.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemClasse.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemClasse.XTuple> Tuples
            {
                get;
            }

            ISExItemClasse.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemClasse

        #region _ISExItemClasse<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemClasse<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemClasse where TModel : ISExItemClasse where TTuple : ISExItemClasse.XTuple 
        {
            protected _ISExItemClasse()
            {
            }
            ISExItemClasse.XTuple _ISExItemClasse.this[Int32 pInex] => (ISExItemClasse.XTuple)base[pInex];

            IEnumerable<ISExItemClasse.XTuple> _ISExItemClasse.Tuples => (IEnumerable<ISExItemClasse.XTuple>)base.Tuples;

            ISExItemClasse.XTuple _ISExItemClasse.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemClasse.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemClasse.XTuple _ISExItemClasse.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemClasse.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemClasse.XTuple _ISExItemClasse.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemClasse.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemClasse.XTuple _ISExItemClasse.NewTuple()
            {
                return (ISExItemClasse.XTuple)NewTuple();
            }

            ISExItemClasse.XTuple _ISExItemClasse.NewTuple(Object pPKValue)
            {
                return (ISExItemClasse.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemClasse.XTuple> IEnumerable<ISExItemClasse.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemClasse.XTuple _ISExItemClasse.Current => base.Current;
        }
            #endif

        #endregion _ISExItemClasse<TModel, TTuple>

        #region __ISExItemClasse

            #if !OnlyDef
        [XRegister(typeof(__ISExItemClasse), sCID, typeof(ISExItemClasse))]
        public class __ISExItemClasse : _ISExItemClasse<ISExItemClasse, ISExItemClasse.XTuple>
        {
            public const String sCID = "4D0E3F97-2907-4D40-9843-43E1A5BB0846";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemClasse()
            {
                TupleType = typeof(ISExItemClasse.XTuple);
            }
        }
            #endif

        #endregion __ISExItemClasse

        #region _ISExItemClassificacao

            #if !OnlyDef
        [Guid(__ISExItemClassificacao.sCID)]
        public interface _ISExItemClassificacao : XIBasePersistence, IEnumerable<ISExItemClassificacao.XTuple>
        {
            ISExItemClassificacao.XTuple NewTuple();

            new ISExItemClassificacao.XTuple NewTuple(Object pPKValue);

            new ISExItemClassificacao.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemClassificacao.XTuple FindTupleByPK(Object pPKValue);

            ISExItemClassificacao.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemClassificacao.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemClassificacao.XTuple> Tuples
            {
                get;
            }

            ISExItemClassificacao.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemClassificacao

        #region _ISExItemClassificacao<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemClassificacao<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemClassificacao where TModel : ISExItemClassificacao where TTuple : ISExItemClassificacao.XTuple 
        {
            protected _ISExItemClassificacao()
            {
            }
            ISExItemClassificacao.XTuple _ISExItemClassificacao.this[Int32 pInex] => (ISExItemClassificacao.XTuple)base[pInex];

            IEnumerable<ISExItemClassificacao.XTuple> _ISExItemClassificacao.Tuples => (IEnumerable<ISExItemClassificacao.XTuple>)base.Tuples;

            ISExItemClassificacao.XTuple _ISExItemClassificacao.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemClassificacao.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemClassificacao.XTuple _ISExItemClassificacao.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemClassificacao.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemClassificacao.XTuple _ISExItemClassificacao.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemClassificacao.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemClassificacao.XTuple _ISExItemClassificacao.NewTuple()
            {
                return (ISExItemClassificacao.XTuple)NewTuple();
            }

            ISExItemClassificacao.XTuple _ISExItemClassificacao.NewTuple(Object pPKValue)
            {
                return (ISExItemClassificacao.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemClassificacao.XTuple> IEnumerable<ISExItemClassificacao.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemClassificacao.XTuple _ISExItemClassificacao.Current => base.Current;
        }
            #endif

        #endregion _ISExItemClassificacao<TModel, TTuple>

        #region __ISExItemClassificacao

            #if !OnlyDef
        [XRegister(typeof(__ISExItemClassificacao), sCID, typeof(ISExItemClassificacao))]
        public class __ISExItemClassificacao : _ISExItemClassificacao<ISExItemClassificacao, ISExItemClassificacao.XTuple>
        {
            public const String sCID = "EF6EAA2F-C81E-48BF-963C-EEB753D69801";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemClassificacao()
            {
                TupleType = typeof(ISExItemClassificacao.XTuple);
            }
        }
            #endif

        #endregion __ISExItemClassificacao

        #region _ISExItemFinalidade

            #if !OnlyDef
        [Guid(__ISExItemFinalidade.sCID)]
        public interface _ISExItemFinalidade : XIBasePersistence, IEnumerable<ISExItemFinalidade.XTuple>
        {
            ISExItemFinalidade.XTuple NewTuple();

            new ISExItemFinalidade.XTuple NewTuple(Object pPKValue);

            new ISExItemFinalidade.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemFinalidade.XTuple FindTupleByPK(Object pPKValue);

            ISExItemFinalidade.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemFinalidade.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemFinalidade.XTuple> Tuples
            {
                get;
            }

            ISExItemFinalidade.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemFinalidade

        #region _ISExItemFinalidade<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemFinalidade<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemFinalidade where TModel : ISExItemFinalidade where TTuple : ISExItemFinalidade.XTuple 
        {
            protected _ISExItemFinalidade()
            {
            }
            ISExItemFinalidade.XTuple _ISExItemFinalidade.this[Int32 pInex] => (ISExItemFinalidade.XTuple)base[pInex];

            IEnumerable<ISExItemFinalidade.XTuple> _ISExItemFinalidade.Tuples => (IEnumerable<ISExItemFinalidade.XTuple>)base.Tuples;

            ISExItemFinalidade.XTuple _ISExItemFinalidade.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemFinalidade.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemFinalidade.XTuple _ISExItemFinalidade.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemFinalidade.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemFinalidade.XTuple _ISExItemFinalidade.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemFinalidade.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemFinalidade.XTuple _ISExItemFinalidade.NewTuple()
            {
                return (ISExItemFinalidade.XTuple)NewTuple();
            }

            ISExItemFinalidade.XTuple _ISExItemFinalidade.NewTuple(Object pPKValue)
            {
                return (ISExItemFinalidade.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemFinalidade.XTuple> IEnumerable<ISExItemFinalidade.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemFinalidade.XTuple _ISExItemFinalidade.Current => base.Current;
        }
            #endif

        #endregion _ISExItemFinalidade<TModel, TTuple>

        #region __ISExItemFinalidade

            #if !OnlyDef
        [XRegister(typeof(__ISExItemFinalidade), sCID, typeof(ISExItemFinalidade))]
        public class __ISExItemFinalidade : _ISExItemFinalidade<ISExItemFinalidade, ISExItemFinalidade.XTuple>
        {
            public const String sCID = "5D9D0F5D-A13A-4E21-A410-471A6381292C";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemFinalidade()
            {
                TupleType = typeof(ISExItemFinalidade.XTuple);
            }
        }
            #endif

        #endregion __ISExItemFinalidade

        #region _ISExItemFornecedor

            #if !OnlyDef
        [Guid(__ISExItemFornecedor.sCID)]
        public interface _ISExItemFornecedor : XIBasePersistence, IEnumerable<ISExItemFornecedor.XTuple>
        {
            ISExItemFornecedor.XTuple NewTuple();

            new ISExItemFornecedor.XTuple NewTuple(Object pPKValue);

            new ISExItemFornecedor.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemFornecedor.XTuple FindTupleByPK(Object pPKValue);

            ISExItemFornecedor.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemFornecedor.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemFornecedor.XTuple> Tuples
            {
                get;
            }

            ISExItemFornecedor.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemFornecedor

        #region _ISExItemFornecedor<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemFornecedor<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemFornecedor where TModel : ISExItemFornecedor where TTuple : ISExItemFornecedor.XTuple 
        {
            protected _ISExItemFornecedor()
            {
            }
            ISExItemFornecedor.XTuple _ISExItemFornecedor.this[Int32 pInex] => (ISExItemFornecedor.XTuple)base[pInex];

            IEnumerable<ISExItemFornecedor.XTuple> _ISExItemFornecedor.Tuples => (IEnumerable<ISExItemFornecedor.XTuple>)base.Tuples;

            ISExItemFornecedor.XTuple _ISExItemFornecedor.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemFornecedor.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemFornecedor.XTuple _ISExItemFornecedor.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemFornecedor.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemFornecedor.XTuple _ISExItemFornecedor.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemFornecedor.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemFornecedor.XTuple _ISExItemFornecedor.NewTuple()
            {
                return (ISExItemFornecedor.XTuple)NewTuple();
            }

            ISExItemFornecedor.XTuple _ISExItemFornecedor.NewTuple(Object pPKValue)
            {
                return (ISExItemFornecedor.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemFornecedor.XTuple> IEnumerable<ISExItemFornecedor.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemFornecedor.XTuple _ISExItemFornecedor.Current => base.Current;
        }
            #endif

        #endregion _ISExItemFornecedor<TModel, TTuple>

        #region __ISExItemFornecedor

            #if !OnlyDef
        [XRegister(typeof(__ISExItemFornecedor), sCID, typeof(ISExItemFornecedor))]
        public class __ISExItemFornecedor : _ISExItemFornecedor<ISExItemFornecedor, ISExItemFornecedor.XTuple>
        {
            public const String sCID = "2135C71F-DE3C-4239-93CB-1F73BE463566";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemFornecedor()
            {
                TupleType = typeof(ISExItemFornecedor.XTuple);
            }
        }
            #endif

        #endregion __ISExItemFornecedor

        #region _ISExItemPreco

            #if !OnlyDef
        [Guid(__ISExItemPreco.sCID)]
        public interface _ISExItemPreco : XIBasePersistence, IEnumerable<ISExItemPreco.XTuple>
        {
            ISExItemPreco.XTuple NewTuple();

            new ISExItemPreco.XTuple NewTuple(Object pPKValue);

            new ISExItemPreco.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemPreco.XTuple FindTupleByPK(Object pPKValue);

            ISExItemPreco.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemPreco.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemPreco.XTuple> Tuples
            {
                get;
            }

            ISExItemPreco.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemPreco

        #region _ISExItemPreco<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemPreco<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemPreco where TModel : ISExItemPreco where TTuple : ISExItemPreco.XTuple 
        {
            protected _ISExItemPreco()
            {
            }
            ISExItemPreco.XTuple _ISExItemPreco.this[Int32 pInex] => (ISExItemPreco.XTuple)base[pInex];

            IEnumerable<ISExItemPreco.XTuple> _ISExItemPreco.Tuples => (IEnumerable<ISExItemPreco.XTuple>)base.Tuples;

            ISExItemPreco.XTuple _ISExItemPreco.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemPreco.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemPreco.XTuple _ISExItemPreco.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemPreco.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemPreco.XTuple _ISExItemPreco.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemPreco.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemPreco.XTuple _ISExItemPreco.NewTuple()
            {
                return (ISExItemPreco.XTuple)NewTuple();
            }

            ISExItemPreco.XTuple _ISExItemPreco.NewTuple(Object pPKValue)
            {
                return (ISExItemPreco.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemPreco.XTuple> IEnumerable<ISExItemPreco.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemPreco.XTuple _ISExItemPreco.Current => base.Current;
        }
            #endif

        #endregion _ISExItemPreco<TModel, TTuple>

        #region __ISExItemPreco

            #if !OnlyDef
        [XRegister(typeof(__ISExItemPreco), sCID, typeof(ISExItemPreco))]
        public class __ISExItemPreco : _ISExItemPreco<ISExItemPreco, ISExItemPreco.XTuple>
        {
            public const String sCID = "644F71E4-EA13-4B66-9979-E762A5420498";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemPreco()
            {
                TupleType = typeof(ISExItemPreco.XTuple);
            }
        }
            #endif

        #endregion __ISExItemPreco

        #region _ISExItemPrecoTipo

            #if !OnlyDef
        [Guid(__ISExItemPrecoTipo.sCID)]
        public interface _ISExItemPrecoTipo : XIBasePersistence, IEnumerable<ISExItemPrecoTipo.XTuple>
        {
            ISExItemPrecoTipo.XTuple NewTuple();

            new ISExItemPrecoTipo.XTuple NewTuple(Object pPKValue);

            new ISExItemPrecoTipo.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemPrecoTipo.XTuple FindTupleByPK(Object pPKValue);

            ISExItemPrecoTipo.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemPrecoTipo.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemPrecoTipo.XTuple> Tuples
            {
                get;
            }

            ISExItemPrecoTipo.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemPrecoTipo

        #region _ISExItemPrecoTipo<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemPrecoTipo<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemPrecoTipo where TModel : ISExItemPrecoTipo where TTuple : ISExItemPrecoTipo.XTuple 
        {
            protected _ISExItemPrecoTipo()
            {
            }
            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.this[Int32 pInex] => (ISExItemPrecoTipo.XTuple)base[pInex];

            IEnumerable<ISExItemPrecoTipo.XTuple> _ISExItemPrecoTipo.Tuples => (IEnumerable<ISExItemPrecoTipo.XTuple>)base.Tuples;

            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemPrecoTipo.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemPrecoTipo.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemPrecoTipo.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.NewTuple()
            {
                return (ISExItemPrecoTipo.XTuple)NewTuple();
            }

            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.NewTuple(Object pPKValue)
            {
                return (ISExItemPrecoTipo.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemPrecoTipo.XTuple> IEnumerable<ISExItemPrecoTipo.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemPrecoTipo.XTuple _ISExItemPrecoTipo.Current => base.Current;
        }
            #endif

        #endregion _ISExItemPrecoTipo<TModel, TTuple>

        #region __ISExItemPrecoTipo

            #if !OnlyDef
        [XRegister(typeof(__ISExItemPrecoTipo), sCID, typeof(ISExItemPrecoTipo))]
        public class __ISExItemPrecoTipo : _ISExItemPrecoTipo<ISExItemPrecoTipo, ISExItemPrecoTipo.XTuple>
        {
            public const String sCID = "865450B0-7C01-4C46-AA55-E2135B640A01";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemPrecoTipo()
            {
                TupleType = typeof(ISExItemPrecoTipo.XTuple);
            }
        }
            #endif

        #endregion __ISExItemPrecoTipo

        #region _ISExItemPromocao

            #if !OnlyDef
        [Guid(__ISExItemPromocao.sCID)]
        public interface _ISExItemPromocao : XIBasePersistence, IEnumerable<ISExItemPromocao.XTuple>
        {
            ISExItemPromocao.XTuple NewTuple();

            new ISExItemPromocao.XTuple NewTuple(Object pPKValue);

            new ISExItemPromocao.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemPromocao.XTuple FindTupleByPK(Object pPKValue);

            ISExItemPromocao.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemPromocao.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemPromocao.XTuple> Tuples
            {
                get;
            }

            ISExItemPromocao.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemPromocao

        #region _ISExItemPromocao<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemPromocao<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemPromocao where TModel : ISExItemPromocao where TTuple : ISExItemPromocao.XTuple 
        {
            protected _ISExItemPromocao()
            {
            }
            ISExItemPromocao.XTuple _ISExItemPromocao.this[Int32 pInex] => (ISExItemPromocao.XTuple)base[pInex];

            IEnumerable<ISExItemPromocao.XTuple> _ISExItemPromocao.Tuples => (IEnumerable<ISExItemPromocao.XTuple>)base.Tuples;

            ISExItemPromocao.XTuple _ISExItemPromocao.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemPromocao.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemPromocao.XTuple _ISExItemPromocao.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemPromocao.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemPromocao.XTuple _ISExItemPromocao.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemPromocao.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemPromocao.XTuple _ISExItemPromocao.NewTuple()
            {
                return (ISExItemPromocao.XTuple)NewTuple();
            }

            ISExItemPromocao.XTuple _ISExItemPromocao.NewTuple(Object pPKValue)
            {
                return (ISExItemPromocao.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemPromocao.XTuple> IEnumerable<ISExItemPromocao.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemPromocao.XTuple _ISExItemPromocao.Current => base.Current;
        }
            #endif

        #endregion _ISExItemPromocao<TModel, TTuple>

        #region __ISExItemPromocao

            #if !OnlyDef
        [XRegister(typeof(__ISExItemPromocao), sCID, typeof(ISExItemPromocao))]
        public class __ISExItemPromocao : _ISExItemPromocao<ISExItemPromocao, ISExItemPromocao.XTuple>
        {
            public const String sCID = "3F6EF9AA-5E7D-4689-8B47-F9F5D6F9E564";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemPromocao()
            {
                TupleType = typeof(ISExItemPromocao.XTuple);
            }
        }
            #endif

        #endregion __ISExItemPromocao

        #region _ISExItemPromocaoDetalhe

            #if !OnlyDef
        [Guid(__ISExItemPromocaoDetalhe.sCID)]
        public interface _ISExItemPromocaoDetalhe : XIBasePersistence, IEnumerable<ISExItemPromocaoDetalhe.XTuple>
        {
            ISExItemPromocaoDetalhe.XTuple NewTuple();

            new ISExItemPromocaoDetalhe.XTuple NewTuple(Object pPKValue);

            new ISExItemPromocaoDetalhe.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExItemPromocaoDetalhe.XTuple FindTupleByPK(Object pPKValue);

            ISExItemPromocaoDetalhe.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExItemPromocaoDetalhe.XTuple Current
            {
                get;
            }

            IEnumerable<ISExItemPromocaoDetalhe.XTuple> Tuples
            {
                get;
            }

            ISExItemPromocaoDetalhe.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExItemPromocaoDetalhe

        #region _ISExItemPromocaoDetalhe<TModel, TTuple>

            #if !OnlyDef
        public class _ISExItemPromocaoDetalhe<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExItemPromocaoDetalhe where TModel : ISExItemPromocaoDetalhe where TTuple : ISExItemPromocaoDetalhe.XTuple 
        {
            protected _ISExItemPromocaoDetalhe()
            {
            }
            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.this[Int32 pInex] => (ISExItemPromocaoDetalhe.XTuple)base[pInex];

            IEnumerable<ISExItemPromocaoDetalhe.XTuple> _ISExItemPromocaoDetalhe.Tuples => (IEnumerable<ISExItemPromocaoDetalhe.XTuple>)base.Tuples;

            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExItemPromocaoDetalhe.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExItemPromocaoDetalhe.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.FindTupleByPK(Object pPKValue)
            {
                return (ISExItemPromocaoDetalhe.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.NewTuple()
            {
                return (ISExItemPromocaoDetalhe.XTuple)NewTuple();
            }

            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.NewTuple(Object pPKValue)
            {
                return (ISExItemPromocaoDetalhe.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExItemPromocaoDetalhe.XTuple> IEnumerable<ISExItemPromocaoDetalhe.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExItemPromocaoDetalhe.XTuple _ISExItemPromocaoDetalhe.Current => base.Current;
        }
            #endif

        #endregion _ISExItemPromocaoDetalhe<TModel, TTuple>

        #region __ISExItemPromocaoDetalhe

            #if !OnlyDef
        [XRegister(typeof(__ISExItemPromocaoDetalhe), sCID, typeof(ISExItemPromocaoDetalhe))]
        public class __ISExItemPromocaoDetalhe : _ISExItemPromocaoDetalhe<ISExItemPromocaoDetalhe, ISExItemPromocaoDetalhe.XTuple>
        {
            public const String sCID = "ED93839A-484F-4E81-AEA6-51212DD0329E";
            public static Guid gCID = new Guid(sCID);
            protected __ISExItemPromocaoDetalhe()
            {
                TupleType = typeof(ISExItemPromocaoDetalhe.XTuple);
            }
        }
            #endif

        #endregion __ISExItemPromocaoDetalhe

        #region _ISExLinha

            #if !OnlyDef
        [Guid(__ISExLinha.sCID)]
        public interface _ISExLinha : XIBasePersistence, IEnumerable<ISExLinha.XTuple>
        {
            ISExLinha.XTuple NewTuple();

            new ISExLinha.XTuple NewTuple(Object pPKValue);

            new ISExLinha.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExLinha.XTuple FindTupleByPK(Object pPKValue);

            ISExLinha.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExLinha.XTuple Current
            {
                get;
            }

            IEnumerable<ISExLinha.XTuple> Tuples
            {
                get;
            }

            ISExLinha.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExLinha

        #region _ISExLinha<TModel, TTuple>

            #if !OnlyDef
        public class _ISExLinha<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExLinha where TModel : ISExLinha where TTuple : ISExLinha.XTuple 
        {
            protected _ISExLinha()
            {
            }
            ISExLinha.XTuple _ISExLinha.this[Int32 pInex] => (ISExLinha.XTuple)base[pInex];

            IEnumerable<ISExLinha.XTuple> _ISExLinha.Tuples => (IEnumerable<ISExLinha.XTuple>)base.Tuples;

            ISExLinha.XTuple _ISExLinha.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExLinha.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExLinha.XTuple _ISExLinha.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExLinha.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExLinha.XTuple _ISExLinha.FindTupleByPK(Object pPKValue)
            {
                return (ISExLinha.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExLinha.XTuple _ISExLinha.NewTuple()
            {
                return (ISExLinha.XTuple)NewTuple();
            }

            ISExLinha.XTuple _ISExLinha.NewTuple(Object pPKValue)
            {
                return (ISExLinha.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExLinha.XTuple> IEnumerable<ISExLinha.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExLinha.XTuple _ISExLinha.Current => base.Current;
        }
            #endif

        #endregion _ISExLinha<TModel, TTuple>

        #region __ISExLinha

            #if !OnlyDef
        [XRegister(typeof(__ISExLinha), sCID, typeof(ISExLinha))]
        public class __ISExLinha : _ISExLinha<ISExLinha, ISExLinha.XTuple>
        {
            public const String sCID = "53A23461-59F0-4A51-B42E-B21E91E9BAC7";
            public static Guid gCID = new Guid(sCID);
            protected __ISExLinha()
            {
                TupleType = typeof(ISExLinha.XTuple);
            }
        }
            #endif

        #endregion __ISExLinha

        #region _ISExLote

            #if !OnlyDef
        [Guid(__ISExLote.sCID)]
        public interface _ISExLote : XIBasePersistence, IEnumerable<ISExLote.XTuple>
        {
            ISExLote.XTuple NewTuple();

            new ISExLote.XTuple NewTuple(Object pPKValue);

            new ISExLote.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExLote.XTuple FindTupleByPK(Object pPKValue);

            ISExLote.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExLote.XTuple Current
            {
                get;
            }

            IEnumerable<ISExLote.XTuple> Tuples
            {
                get;
            }

            ISExLote.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExLote

        #region _ISExLote<TModel, TTuple>

            #if !OnlyDef
        public class _ISExLote<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExLote where TModel : ISExLote where TTuple : ISExLote.XTuple 
        {
            protected _ISExLote()
            {
            }
            ISExLote.XTuple _ISExLote.this[Int32 pInex] => (ISExLote.XTuple)base[pInex];

            IEnumerable<ISExLote.XTuple> _ISExLote.Tuples => (IEnumerable<ISExLote.XTuple>)base.Tuples;

            ISExLote.XTuple _ISExLote.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExLote.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExLote.XTuple _ISExLote.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExLote.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExLote.XTuple _ISExLote.FindTupleByPK(Object pPKValue)
            {
                return (ISExLote.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExLote.XTuple _ISExLote.NewTuple()
            {
                return (ISExLote.XTuple)NewTuple();
            }

            ISExLote.XTuple _ISExLote.NewTuple(Object pPKValue)
            {
                return (ISExLote.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExLote.XTuple> IEnumerable<ISExLote.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExLote.XTuple _ISExLote.Current => base.Current;
        }
            #endif

        #endregion _ISExLote<TModel, TTuple>

        #region __ISExLote

            #if !OnlyDef
        [XRegister(typeof(__ISExLote), sCID, typeof(ISExLote))]
        public class __ISExLote : _ISExLote<ISExLote, ISExLote.XTuple>
        {
            public const String sCID = "596C0186-050E-4CB8-AE28-A778AB63674B";
            public static Guid gCID = new Guid(sCID);
            protected __ISExLote()
            {
                TupleType = typeof(ISExLote.XTuple);
            }
        }
            #endif

        #endregion __ISExLote

        #region _ISExMarca

            #if !OnlyDef
        [Guid(__ISExMarca.sCID)]
        public interface _ISExMarca : XIBasePersistence, IEnumerable<ISExMarca.XTuple>
        {
            ISExMarca.XTuple NewTuple();

            new ISExMarca.XTuple NewTuple(Object pPKValue);

            new ISExMarca.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExMarca.XTuple FindTupleByPK(Object pPKValue);

            ISExMarca.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExMarca.XTuple Current
            {
                get;
            }

            IEnumerable<ISExMarca.XTuple> Tuples
            {
                get;
            }

            ISExMarca.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExMarca

        #region _ISExMarca<TModel, TTuple>

            #if !OnlyDef
        public class _ISExMarca<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExMarca where TModel : ISExMarca where TTuple : ISExMarca.XTuple 
        {
            protected _ISExMarca()
            {
            }
            ISExMarca.XTuple _ISExMarca.this[Int32 pInex] => (ISExMarca.XTuple)base[pInex];

            IEnumerable<ISExMarca.XTuple> _ISExMarca.Tuples => (IEnumerable<ISExMarca.XTuple>)base.Tuples;

            ISExMarca.XTuple _ISExMarca.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExMarca.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExMarca.XTuple _ISExMarca.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExMarca.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExMarca.XTuple _ISExMarca.FindTupleByPK(Object pPKValue)
            {
                return (ISExMarca.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExMarca.XTuple _ISExMarca.NewTuple()
            {
                return (ISExMarca.XTuple)NewTuple();
            }

            ISExMarca.XTuple _ISExMarca.NewTuple(Object pPKValue)
            {
                return (ISExMarca.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExMarca.XTuple> IEnumerable<ISExMarca.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExMarca.XTuple _ISExMarca.Current => base.Current;
        }
            #endif

        #endregion _ISExMarca<TModel, TTuple>

        #region __ISExMarca

            #if !OnlyDef
        [XRegister(typeof(__ISExMarca), sCID, typeof(ISExMarca))]
        public class __ISExMarca : _ISExMarca<ISExMarca, ISExMarca.XTuple>
        {
            public const String sCID = "87A7A9BF-EFB1-421C-9612-7DAB7D9DEC66";
            public static Guid gCID = new Guid(sCID);
            protected __ISExMarca()
            {
                TupleType = typeof(ISExMarca.XTuple);
            }
        }
            #endif

        #endregion __ISExMarca

        #region _ISExProduto

            #if !OnlyDef
        [Guid(__ISExProduto.sCID)]
        public interface _ISExProduto : XIBasePersistence, IEnumerable<ISExProduto.XTuple>
        {
            ISExProduto.XTuple NewTuple();

            new ISExProduto.XTuple NewTuple(Object pPKValue);

            new ISExProduto.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExProduto.XTuple FindTupleByPK(Object pPKValue);

            ISExProduto.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExProduto.XTuple Current
            {
                get;
            }

            IEnumerable<ISExProduto.XTuple> Tuples
            {
                get;
            }

            ISExProduto.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExProduto

        #region _ISExProduto<TModel, TTuple>

            #if !OnlyDef
        public class _ISExProduto<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExProduto where TModel : ISExProduto where TTuple : ISExProduto.XTuple 
        {
            protected _ISExProduto()
            {
            }
            ISExProduto.XTuple _ISExProduto.this[Int32 pInex] => (ISExProduto.XTuple)base[pInex];

            IEnumerable<ISExProduto.XTuple> _ISExProduto.Tuples => (IEnumerable<ISExProduto.XTuple>)base.Tuples;

            ISExProduto.XTuple _ISExProduto.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExProduto.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExProduto.XTuple _ISExProduto.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExProduto.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExProduto.XTuple _ISExProduto.FindTupleByPK(Object pPKValue)
            {
                return (ISExProduto.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExProduto.XTuple _ISExProduto.NewTuple()
            {
                return (ISExProduto.XTuple)NewTuple();
            }

            ISExProduto.XTuple _ISExProduto.NewTuple(Object pPKValue)
            {
                return (ISExProduto.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExProduto.XTuple> IEnumerable<ISExProduto.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExProduto.XTuple _ISExProduto.Current => base.Current;
        }
            #endif

        #endregion _ISExProduto<TModel, TTuple>

        #region __ISExProduto

            #if !OnlyDef
        [XRegister(typeof(__ISExProduto), sCID, typeof(ISExProduto))]
        public class __ISExProduto : _ISExProduto<ISExProduto, ISExProduto.XTuple>
        {
            public const String sCID = "2DEB9CAB-EF59-483D-90BB-23F31C44BDFF";
            public static Guid gCID = new Guid(sCID);
            protected __ISExProduto()
            {
                TupleType = typeof(ISExProduto.XTuple);
            }
        }
            #endif

        #endregion __ISExProduto

        #region _ISExServico

            #if !OnlyDef
        [Guid(__ISExServico.sCID)]
        public interface _ISExServico : XIBasePersistence, IEnumerable<ISExServico.XTuple>
        {
            ISExServico.XTuple NewTuple();

            new ISExServico.XTuple NewTuple(Object pPKValue);

            new ISExServico.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExServico.XTuple FindTupleByPK(Object pPKValue);

            ISExServico.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExServico.XTuple Current
            {
                get;
            }

            IEnumerable<ISExServico.XTuple> Tuples
            {
                get;
            }

            ISExServico.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExServico

        #region _ISExServico<TModel, TTuple>

            #if !OnlyDef
        public class _ISExServico<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExServico where TModel : ISExServico where TTuple : ISExServico.XTuple 
        {
            protected _ISExServico()
            {
            }
            ISExServico.XTuple _ISExServico.this[Int32 pInex] => (ISExServico.XTuple)base[pInex];

            IEnumerable<ISExServico.XTuple> _ISExServico.Tuples => (IEnumerable<ISExServico.XTuple>)base.Tuples;

            ISExServico.XTuple _ISExServico.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExServico.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExServico.XTuple _ISExServico.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExServico.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExServico.XTuple _ISExServico.FindTupleByPK(Object pPKValue)
            {
                return (ISExServico.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExServico.XTuple _ISExServico.NewTuple()
            {
                return (ISExServico.XTuple)NewTuple();
            }

            ISExServico.XTuple _ISExServico.NewTuple(Object pPKValue)
            {
                return (ISExServico.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExServico.XTuple> IEnumerable<ISExServico.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExServico.XTuple _ISExServico.Current => base.Current;
        }
            #endif

        #endregion _ISExServico<TModel, TTuple>

        #region __ISExServico

            #if !OnlyDef
        [XRegister(typeof(__ISExServico), sCID, typeof(ISExServico))]
        public class __ISExServico : _ISExServico<ISExServico, ISExServico.XTuple>
        {
            public const String sCID = "8B058081-40E7-4158-93A2-02576F3FBEBC";
            public static Guid gCID = new Guid(sCID);
            protected __ISExServico()
            {
                TupleType = typeof(ISExServico.XTuple);
            }
        }
            #endif

        #endregion __ISExServico

        #region _ISExUnidade

            #if !OnlyDef
        [Guid(__ISExUnidade.sCID)]
        public interface _ISExUnidade : XIBasePersistence, IEnumerable<ISExUnidade.XTuple>
        {
            ISExUnidade.XTuple NewTuple();

            new ISExUnidade.XTuple NewTuple(Object pPKValue);

            new ISExUnidade.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExUnidade.XTuple FindTupleByPK(Object pPKValue);

            ISExUnidade.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExUnidade.XTuple Current
            {
                get;
            }

            IEnumerable<ISExUnidade.XTuple> Tuples
            {
                get;
            }

            ISExUnidade.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExUnidade

        #region _ISExUnidade<TModel, TTuple>

            #if !OnlyDef
        public class _ISExUnidade<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExUnidade where TModel : ISExUnidade where TTuple : ISExUnidade.XTuple 
        {
            protected _ISExUnidade()
            {
            }
            ISExUnidade.XTuple _ISExUnidade.this[Int32 pInex] => (ISExUnidade.XTuple)base[pInex];

            IEnumerable<ISExUnidade.XTuple> _ISExUnidade.Tuples => (IEnumerable<ISExUnidade.XTuple>)base.Tuples;

            ISExUnidade.XTuple _ISExUnidade.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExUnidade.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExUnidade.XTuple _ISExUnidade.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExUnidade.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExUnidade.XTuple _ISExUnidade.FindTupleByPK(Object pPKValue)
            {
                return (ISExUnidade.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExUnidade.XTuple _ISExUnidade.NewTuple()
            {
                return (ISExUnidade.XTuple)NewTuple();
            }

            ISExUnidade.XTuple _ISExUnidade.NewTuple(Object pPKValue)
            {
                return (ISExUnidade.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExUnidade.XTuple> IEnumerable<ISExUnidade.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExUnidade.XTuple _ISExUnidade.Current => base.Current;
        }
            #endif

        #endregion _ISExUnidade<TModel, TTuple>

        #region __ISExUnidade

            #if !OnlyDef
        [XRegister(typeof(__ISExUnidade), sCID, typeof(ISExUnidade))]
        public class __ISExUnidade : _ISExUnidade<ISExUnidade, ISExUnidade.XTuple>
        {
            public const String sCID = "458128AD-3C16-44F3-9F5C-F342F99ED211";
            public static Guid gCID = new Guid(sCID);
            protected __ISExUnidade()
            {
                TupleType = typeof(ISExUnidade.XTuple);
            }
        }
            #endif

        #endregion __ISExUnidade

        #region _ISExVacina

            #if !OnlyDef
        [Guid(__ISExVacina.sCID)]
        public interface _ISExVacina : XIBasePersistence, IEnumerable<ISExVacina.XTuple>
        {
            ISExVacina.XTuple NewTuple();

            new ISExVacina.XTuple NewTuple(Object pPKValue);

            new ISExVacina.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExVacina.XTuple FindTupleByPK(Object pPKValue);

            ISExVacina.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExVacina.XTuple Current
            {
                get;
            }

            IEnumerable<ISExVacina.XTuple> Tuples
            {
                get;
            }

            ISExVacina.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExVacina

        #region _ISExVacina<TModel, TTuple>

            #if !OnlyDef
        public class _ISExVacina<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExVacina where TModel : ISExVacina where TTuple : ISExVacina.XTuple 
        {
            protected _ISExVacina()
            {
            }
            ISExVacina.XTuple _ISExVacina.this[Int32 pInex] => (ISExVacina.XTuple)base[pInex];

            IEnumerable<ISExVacina.XTuple> _ISExVacina.Tuples => (IEnumerable<ISExVacina.XTuple>)base.Tuples;

            ISExVacina.XTuple _ISExVacina.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExVacina.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExVacina.XTuple _ISExVacina.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExVacina.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExVacina.XTuple _ISExVacina.FindTupleByPK(Object pPKValue)
            {
                return (ISExVacina.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExVacina.XTuple _ISExVacina.NewTuple()
            {
                return (ISExVacina.XTuple)NewTuple();
            }

            ISExVacina.XTuple _ISExVacina.NewTuple(Object pPKValue)
            {
                return (ISExVacina.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExVacina.XTuple> IEnumerable<ISExVacina.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExVacina.XTuple _ISExVacina.Current => base.Current;
        }
            #endif

        #endregion _ISExVacina<TModel, TTuple>

        #region __ISExVacina

            #if !OnlyDef
        [XRegister(typeof(__ISExVacina), sCID, typeof(ISExVacina))]
        public class __ISExVacina : _ISExVacina<ISExVacina, ISExVacina.XTuple>
        {
            public const String sCID = "4B25DB71-7673-46D7-84EE-4A50D51CDD79";
            public static Guid gCID = new Guid(sCID);
            protected __ISExVacina()
            {
                TupleType = typeof(ISExVacina.XTuple);
            }
        }
            #endif

        #endregion __ISExVacina

        #region _ISExVacinaPeriodicidade

            #if !OnlyDef
        [Guid(__ISExVacinaPeriodicidade.sCID)]
        public interface _ISExVacinaPeriodicidade : XIBasePersistence, IEnumerable<ISExVacinaPeriodicidade.XTuple>
        {
            ISExVacinaPeriodicidade.XTuple NewTuple();

            new ISExVacinaPeriodicidade.XTuple NewTuple(Object pPKValue);

            new ISExVacinaPeriodicidade.XTuple FindTuple(params Object[] pFieldValuePar);

            new ISExVacinaPeriodicidade.XTuple FindTupleByPK(Object pPKValue);

            ISExVacinaPeriodicidade.XTuple this[Int32 pInex]
            {
                get;
            }


            new ISExVacinaPeriodicidade.XTuple Current
            {
                get;
            }

            IEnumerable<ISExVacinaPeriodicidade.XTuple> Tuples
            {
                get;
            }

            ISExVacinaPeriodicidade.XTuple FindByIndex(String pIndexName, params Object[] pValues);
        }
            #endif

        #endregion _ISExVacinaPeriodicidade

        #region _ISExVacinaPeriodicidade<TModel, TTuple>

            #if !OnlyDef
        public class _ISExVacinaPeriodicidade<TModel, TTuple> : XBasePersistence<TModel, TTuple>, _ISExVacinaPeriodicidade where TModel : ISExVacinaPeriodicidade where TTuple : ISExVacinaPeriodicidade.XTuple 
        {
            protected _ISExVacinaPeriodicidade()
            {
            }
            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.this[Int32 pInex] => (ISExVacinaPeriodicidade.XTuple)base[pInex];

            IEnumerable<ISExVacinaPeriodicidade.XTuple> _ISExVacinaPeriodicidade.Tuples => (IEnumerable<ISExVacinaPeriodicidade.XTuple>)base.Tuples;

            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.FindByIndex(String pIndexName, params Object[] pValues)
            {
                return (ISExVacinaPeriodicidade.XTuple)base.FindByIndex(pIndexName, pValues);
            }

            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.FindTuple(params Object[] pFieldValuePar)
            {
                return (ISExVacinaPeriodicidade.XTuple)base.FindTuple(pFieldValuePar);
            }

            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.FindTupleByPK(Object pPKValue)
            {
                return (ISExVacinaPeriodicidade.XTuple)base.FindTupleByPK(pPKValue);
            }

            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.NewTuple()
            {
                return (ISExVacinaPeriodicidade.XTuple)NewTuple();
            }

            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.NewTuple(Object pPKValue)
            {
                return (ISExVacinaPeriodicidade.XTuple)base.NewTuple(pPKValue);
            }
            IEnumerator<ISExVacinaPeriodicidade.XTuple> IEnumerable<ISExVacinaPeriodicidade.XTuple>.GetEnumerator()
            {
            return Tuples.GetEnumerator();
            }
            ISExVacinaPeriodicidade.XTuple _ISExVacinaPeriodicidade.Current => base.Current;
        }
            #endif

        #endregion _ISExVacinaPeriodicidade<TModel, TTuple>

        #region __ISExVacinaPeriodicidade

            #if !OnlyDef
        [XRegister(typeof(__ISExVacinaPeriodicidade), sCID, typeof(ISExVacinaPeriodicidade))]
        public class __ISExVacinaPeriodicidade : _ISExVacinaPeriodicidade<ISExVacinaPeriodicidade, ISExVacinaPeriodicidade.XTuple>
        {
            public const String sCID = "2BDF2B55-5891-46FD-8935-05C277E0C427";
            public static Guid gCID = new Guid(sCID);
            protected __ISExVacinaPeriodicidade()
            {
                TupleType = typeof(ISExVacinaPeriodicidade.XTuple);
            }
        }
            #endif

        #endregion __ISExVacinaPeriodicidade

        static ISEx()
        {
        }

        public ISEx(XModelCache pInstance)
            :base(pInstance)
        {
            ID = new Guid("080F030F-049F-4EF9-98D4-5FB8E8D78C47");
            Solution = "Projecao.Core.ISE";
            Project = "Projecao.Core.ISE";
            Name = "ISEx";
            Title = "ISEx";
            AddTable(ISExCategoria.Instance);
            AddTable(ISExCodigo.Instance);
            AddTable(ISExCodigoTipo.Instance);
            AddTable(ISExComissao.Instance);
            AddTable(ISExComissaoTipo.Instance);
            AddTable(ISExEmbalagem.Instance);
            AddTable(ISExEmbalagemUnidade.Instance);
            AddTable(ISExExame.Instance);
            AddTable(ISExFabricante.Instance);
            AddTable(ISExFinalidade.Instance);
            AddTable(ISExFornecedor.Instance);
            AddTable(ISExGrupo.Instance);
            AddTable(ISExItem.Instance);
            AddTable(ISExItemCategoria.Instance);
            AddTable(ISExItemClasse.Instance);
            AddTable(ISExItemClassificacao.Instance);
            AddTable(ISExItemFinalidade.Instance);
            AddTable(ISExItemFornecedor.Instance);
            AddTable(ISExItemPreco.Instance);
            AddTable(ISExItemPrecoTipo.Instance);
            AddTable(ISExItemPromocao.Instance);
            AddTable(ISExItemPromocaoDetalhe.Instance);
            AddTable(ISExLinha.Instance);
            AddTable(ISExLote.Instance);
            AddTable(ISExMarca.Instance);
            AddTable(ISExProduto.Instance);
            AddTable(ISExServico.Instance);
            AddTable(ISExUnidade.Instance);
            AddTable(ISExVacina.Instance);
            AddTable(ISExVacinaPeriodicidade.Instance);
        }

        public override Int32 SortedBy
        {
            get
            {
                return 0;
            }
        }
    }
}