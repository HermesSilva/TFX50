//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.Profissional
{
    public class HorariosServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("C491121C-26B3-400D-8A45-7593CC13AE7E");
        public HorariosServiceModel()
        {
            SearchPath = "Horarios/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "Inicio", Title = "Início", Type = "DateTime", Mask = "HH:mm", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxProfissionalID", Title = "Profissionais", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Horario", Title = "Tipo de Horário", Type = "String", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxProfissionalHorarioID", Title = "Itens de Horário", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxProfissionalHorarioTipoID", Title = "Tipos de Horários", Type = "Int16", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Fim", Title = "Fim", Type = "DateTime", Mask = "HH:mm", 
                                                      Visible = true });
            Forms.Add(new FRMHorariosFilter());
        }
    }
    public class HorariosTuple : XServiceDataTuple
    {
        public HorariosTuple()
        {
            Initialize();
        }

        public HorariosTuple(DateTime pInicio, Guid pERPxProfissionalID, String pHorario, Guid? pERPxProfissionalHorarioID, Int16 pERPxProfissionalHorarioTipoID, DateTime pFim)
            : this()
        {
            Inicio.Value = pInicio;
            ERPxProfissionalID.Value = pERPxProfissionalID;
            Horario.Value = pHorario;
            ERPxProfissionalHorarioID.Value = pERPxProfissionalHorarioID;
            ERPxProfissionalHorarioTipoID.Value = pERPxProfissionalHorarioTipoID;
            Fim.Value = pFim;
        }

        public override void Initialize()
        {
            Inicio = new XDateTimeDataField();
            ERPxProfissionalID = new XGuidDataField();
            Horario = new XStringDataField();
            ERPxProfissionalHorarioID = new XGuidNullableDataField();
            ERPxProfissionalHorarioTipoID = new XInt16DataField();
            Fim = new XDateTimeDataField();
        }

        [Display(Name = "Início")]
        public XDateTimeDataField Inicio {get;set;}
        [Display(Name = "Profissionais")]
        public XGuidDataField ERPxProfissionalID {get;set;}
        [Display(Name = "Tipo de Horário")]
        public XStringDataField Horario {get;set;}
        [Display(Name = "Itens de Horário")]
        public XGuidNullableDataField ERPxProfissionalHorarioID {get;set;}
        [Display(Name = "Tipos de Horários")]
        public XInt16DataField ERPxProfissionalHorarioTipoID {get;set;}
        public XDateTimeDataField Fim {get;set;}
    }

    public class HorariosFilter : XFilter
    {

        public HorariosFilter()
        {
        }
    }
    public class FRMHorariosFilter : XFRMModel
    {
        public FRMHorariosFilter()
        {
            ID = new Guid("BF362237-1C48-40D6-9E96-EEA8520C4984");
            Name = "HorariosFilter";
            Title = "";
            MinRows = 0;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
        }
    }


    public class HorariosRequest : XRequest
    {
        public Guid ERPxProfissionalHorarioID {get;set;}
    }

    public interface IHorariosService : XIService
    {
        object Flush(HorariosDataSet pDataSet);

        HorariosDataSet Execute(HorariosFilter pFilter);
        IQueryable<HorariosTuple> ExecuteQuery(HorariosFilter pFilter);
    }

    public abstract class BaseHorariosRule : XServiceRule<HorariosTuple, HorariosTuple>
    {
        public BaseHorariosRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual HorariosFilter Execute(HorariosFilter pFilter)
        {
            return pFilter;
        }
    }

    public class HorariosDataSet : XDataSet<HorariosTuple>
    {
        public override Guid ID => new Guid("C491121C-26B3-400D-8A45-7593CC13AE7E");
    }
}