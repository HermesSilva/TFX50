//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.Profissional
{
    public class CategoriaServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("59D73CAE-2254-4721-9DE0-97F54D83391E");
        public CategoriaServiceModel()
        {
            SearchPath = "Categoria/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxCategoriaID", Title = "Categoria de Profissional", Type = "Int16", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Categoria", Title = "Categoria", Type = "String", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxProfissionalCategoriaID", Title = "Categorias por Profissional", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxProfissionalID", Title = "Profissionais", Type = "Guid", Mask = "", 
                                                      Visible = false });
            Forms.Add(new FRMCategoriaFilter());
        }
    }
    public class CategoriaTuple : XServiceDataTuple
    {
        public CategoriaTuple()
        {
            Initialize();
        }

        public CategoriaTuple(Int16 pERPxCategoriaID, String pCategoria, Guid? pERPxProfissionalCategoriaID, Guid pERPxProfissionalID)
            : this()
        {
            ERPxCategoriaID.Value = pERPxCategoriaID;
            Categoria.Value = pCategoria;
            ERPxProfissionalCategoriaID.Value = pERPxProfissionalCategoriaID;
            ERPxProfissionalID.Value = pERPxProfissionalID;
        }

        public override void Initialize()
        {
            ERPxCategoriaID = new XInt16DataField();
            Categoria = new XStringDataField();
            ERPxProfissionalCategoriaID = new XGuidNullableDataField();
            ERPxProfissionalID = new XGuidDataField();
        }

        [Display(Name = "Categoria de Profissional")]
        public XInt16DataField ERPxCategoriaID {get;set;}
        public XStringDataField Categoria {get;set;}
        [Display(Name = "Categorias por Profissional")]
        public XGuidNullableDataField ERPxProfissionalCategoriaID {get;set;}
        [Display(Name = "Profissionais")]
        public XGuidDataField ERPxProfissionalID {get;set;}
    }

    public class CategoriaFilter : XFilter
    {

        public CategoriaFilter()
        {
        }
    }
    public class FRMCategoriaFilter : XFRMModel
    {
        public FRMCategoriaFilter()
        {
            ID = new Guid("2A9DD919-8DB3-4C32-9316-24316EE00895");
            Name = "CategoriaFilter";
            Title = "";
            MinRows = 0;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
        }
    }


    public class CategoriaRequest : XRequest
    {
        public Guid ERPxProfissionalCategoriaID {get;set;}
    }

    public interface ICategoriaService : XIService
    {
        object Flush(CategoriaDataSet pDataSet);

        CategoriaDataSet Execute(CategoriaFilter pFilter);
        IQueryable<CategoriaTuple> ExecuteQuery(CategoriaFilter pFilter);
    }

    public abstract class BaseCategoriaRule : XServiceRule<CategoriaTuple, CategoriaTuple>
    {
        public BaseCategoriaRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual CategoriaFilter Execute(CategoriaFilter pFilter)
        {
            return pFilter;
        }
    }

    public class CategoriaDataSet : XDataSet<CategoriaTuple>
    {
        public override Guid ID => new Guid("59D73CAE-2254-4721-9DE0-97F54D83391E");
    }
}