//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.Pessoa
{
    public class BuscaPessoaServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("A3C45B46-82AA-41EC-B62F-A58F16B71F20");
        public BuscaPessoaServiceModel()
        {
            SearchPath = "BuscaPessoa/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "PrimaryKeyID", Title = "Chave Primária", Type = "Int32", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Contato", Title = "E-Mail, Telefone e ETC.", Type = "String", Mask = "", 
                                                      Visible = true, IsFreeSearch = true, Operator = XOperator.EqualTo });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxContatoTipoID", Title = "Tipo de Contato", Type = "Int16", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "ContatoMascara", Title = "Máscara", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "ContatoTipo", Title = "Tipo Contato", Type = "String", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxDocumentoTipoID", Title = "Tipo de Documento", Type = "Int16", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Numero", Title = "Número Documento", Type = "String", Mask = "", 
                                                      Visible = true, IsFreeSearch = true, Operator = XOperator.EqualTo });
            DataView.Columns.Add(new XColumnModel() { Name = "DocumentoMascara", Title = "Máscara", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "DocumentoTipo", Title = "Tipo Documento", Type = "String", Mask = "", 
                                                      Visible = true, IsFreeSearch = true, Operator = XOperator.EqualTo });
            DataView.Columns.Add(new XColumnModel() { Name = "Finalidade", Title = "Finalidade", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Observacao", Title = "Observação", Type = "String", Mask = "", 
                                                      Visible = true, IsFreeSearch = true, Operator = XOperator.EqualTo });
            Forms.Add(new FRMBuscaPessoaFilter());
        }
    }
    public class BuscaPessoaTuple : XServiceDataTuple
    {
        public BuscaPessoaTuple()
        {
            Initialize();
        }

        public BuscaPessoaTuple(Int32 pPrimaryKeyID, String pContato, Int16 pERPxContatoTipoID, String pContatoMascara, String pContatoTipo, Int16 pERPxDocumentoTipoID, String pNumero, String pDocumentoMascara, String pDocumentoTipo, String pFinalidade, String pObservacao)
            : this()
        {
            PrimaryKeyID.Value = pPrimaryKeyID;
            Contato.Value = pContato;
            ERPxContatoTipoID.Value = pERPxContatoTipoID;
            ContatoMascara.Value = pContatoMascara;
            ContatoTipo.Value = pContatoTipo;
            ERPxDocumentoTipoID.Value = pERPxDocumentoTipoID;
            Numero.Value = pNumero;
            DocumentoMascara.Value = pDocumentoMascara;
            DocumentoTipo.Value = pDocumentoTipo;
            Finalidade.Value = pFinalidade;
            Observacao.Value = pObservacao;
        }

        public override void Initialize()
        {
            PrimaryKeyID = new XInt32DataField();
            Contato = new XStringDataField();
            ERPxContatoTipoID = new XInt16DataField();
            ContatoMascara = new XStringDataField();
            ContatoTipo = new XStringDataField();
            ERPxDocumentoTipoID = new XInt16DataField();
            Numero = new XStringDataField();
            DocumentoMascara = new XStringDataField();
            DocumentoTipo = new XStringDataField();
            Finalidade = new XStringDataField();
            Observacao = new XStringDataField();
        }

        [Display(Name = "Chave Primária")]
        public XInt32DataField PrimaryKeyID {get;set;}
        [Display(Name = "E-Mail, Telefone e ETC.")]
        public XStringDataField Contato {get;set;}
        [Display(Name = "Tipo de Contato")]
        public XInt16DataField ERPxContatoTipoID {get;set;}
        [Display(Name = "Máscara")]
        public XStringDataField ContatoMascara {get;set;}
        [Display(Name = "Tipo Contato")]
        public XStringDataField ContatoTipo {get;set;}
        [Display(Name = "Tipo de Documento")]
        public XInt16DataField ERPxDocumentoTipoID {get;set;}
        [Display(Name = "Número Documento")]
        public XStringDataField Numero {get;set;}
        [Display(Name = "Máscara")]
        public XStringDataField DocumentoMascara {get;set;}
        [Display(Name = "Tipo Documento")]
        public XStringDataField DocumentoTipo {get;set;}
        public XStringDataField Finalidade {get;set;}
        [Display(Name = "Observação")]
        public XStringDataField Observacao {get;set;}
    }

    public class BuscaPessoaFilter : XFilter
    {

        public BuscaPessoaFilter()
        {
        }
    }
    public class FRMBuscaPessoaFilter : XFRMModel
    {
        public FRMBuscaPessoaFilter()
        {
            ID = new Guid("8AC2409A-93A2-42AD-AE85-AEC7880BDCFD");
            Name = "BuscaPessoaFilter";
            Title = "";
            MinRows = 0;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
        }
    }


    public class BuscaPessoaRequest : XRequest
    {
        public Int32 PrimaryKeyID {get;set;}
    }

    public interface IBuscaPessoaService : XIService
    {

        BuscaPessoaDataSet Execute(BuscaPessoaFilter pFilter);
        IQueryable<BuscaPessoaTuple> ExecuteQuery(BuscaPessoaFilter pFilter);
    }

    public abstract class BaseBuscaPessoaRule : XServiceRule<BuscaPessoaTuple, BuscaPessoaTuple>
    {
        public BaseBuscaPessoaRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual BuscaPessoaFilter Execute(BuscaPessoaFilter pFilter)
        {
            return pFilter;
        }
    }

    public class BuscaPessoaDataSet : XDataSet<BuscaPessoaTuple>
    {
        public override Guid ID => new Guid("A3C45B46-82AA-41EC-B62F-A58F16B71F20");
    }
}