//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.ReadOnly
{
    public class TipoDocumentoServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("8EF7B9BB-4F2B-4245-B181-2CA6D8399462");
        public TipoDocumentoServiceModel()
        {
            SearchPath = "TipoDocumento/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "Mascara", Title = "Máscara", Type = "String", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "Tipo", Title = "Tipo de Documento", Type = "String", Mask = "", 
                                                      Visible = true, IsFreeSearch = true, Operator = XOperator.EqualTo });
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxDocumentoTipoID", Title = "Tipo de Documento", Type = "Int16", Mask = "", 
                                                      Visible = false });
            Forms.Add(new FRMTipoDocumentoFilter());
        }
    }
    public class TipoDocumentoTuple : XServiceDataTuple
    {
        public TipoDocumentoTuple()
        {
            Initialize();
        }

        public TipoDocumentoTuple(String pMascara, String pTipo, Int16 pERPxDocumentoTipoID)
            : this()
        {
            Mascara.Value = pMascara;
            Tipo.Value = pTipo;
            ERPxDocumentoTipoID.Value = pERPxDocumentoTipoID;
        }

        public override void Initialize()
        {
            Mascara = new XStringDataField();
            Tipo = new XStringDataField();
            ERPxDocumentoTipoID = new XInt16DataField();
        }

        [Display(Name = "Máscara")]
        public XStringDataField Mascara {get;set;}
        [Display(Name = "Tipo de Documento")]
        public XStringDataField Tipo {get;set;}
        [Display(Name = "Tipo de Documento")]
        public XInt16DataField ERPxDocumentoTipoID {get;set;}
    }

    public class TipoDocumentoFilter : XFilter
    {

        public TipoDocumentoFilter()
        {
        }

        public TipoDocumentoFilter(String pTipo)
        {
            Tipo = pTipo;
        }
        public String Tipo {get;set;}
    }
    public class FRMTipoDocumentoFilter : XFRMModel
    {
        public FRMTipoDocumentoFilter()
        {
            ID = new Guid("48FAA8DD-3448-4051-8C39-E1B402A04035");
            Name = "TipoDocumentoFilter";
            Title = "";
            MinRows = 2;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
            fld = AddField(new XFRMField());
            fld.ForceRW = true;
            fld.Title = "Tipo de Documento";
            fld.CanInsert = true;
            fld.CanUpdate = true;
            fld.RowCount = 2;
            fld.ColCount = 32;
            fld.IsHidden = false;
            fld.Location = 1;
            fld.EditorCID = XModelEditors.XString;
            fld.Operator = XOperator.Like;
            fld.JustifyHeight = false;
            fld.AllowEmpty = true;
            fld.FontColor = "#000000";
            fld.FontStyle = XFontStyle.Normal;
            fld.ShowFooter = false;
            fld.ViewSAM = new Guid("00000000-0000-0000-0000-000000000000");
            fld.Order = 1;
            fld.Scale = -1;
            fld.Length = -1;
            fld.TypeID = XDataTypes.XString;
            fld.AdditionalFieldsID = new Guid[] {  };
            fld.AdditionalDataFieldsID = new Guid[] {  };
            fld.TargetFilterFieldID = new Guid[] {  };
            fld.SourceFilterFieldID = new Guid[] {  };
            fld.TargetDisplayFieldID = new Guid[] {  };
            fld.SourceDisplayFieldID = new Guid[] {  };
            fld.AutoLoad = false;
            fld.FilterInative = true;
            fld.IsAnswer = false;
            fld.AllowMultiSelect = false;
        }
    }


    public class TipoDocumentoRequest : XRequest
    {
        public Int16 ERPxDocumentoTipoID {get;set;}
    }

    public interface ITipoDocumentoService : XIService
    {

        TipoDocumentoDataSet Execute(TipoDocumentoFilter pFilter);
        IQueryable<TipoDocumentoTuple> ExecuteQuery(TipoDocumentoFilter pFilter);
    }

    public abstract class BaseTipoDocumentoRule : XServiceRule<TipoDocumentoTuple, TipoDocumentoTuple>
    {
        public BaseTipoDocumentoRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual TipoDocumentoFilter Execute(TipoDocumentoFilter pFilter)
        {
            return pFilter;
        }
    }

    public class TipoDocumentoDataSet : XDataSet<TipoDocumentoTuple>
    {
        public override Guid ID => new Guid("8EF7B9BB-4F2B-4245-B181-2CA6D8399462");
    }
}