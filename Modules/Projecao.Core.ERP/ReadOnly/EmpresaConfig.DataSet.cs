//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.ReadOnly
{
    public class EmpresaConfigServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("44C651B9-54CB-4225-84FA-F51053C43F08");
        public EmpresaConfigServiceModel()
        {
            SearchPath = "EmpresaConfig/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "Numero", Title = "Número", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CORxPessoaID", Title = "Pessoa", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Nome", Title = "Nome", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CEPxLocalidadePrincipalID", Title = "Localidade", Type = "Int32", Mask = "", 
                                                      Visible = false });
        }
    }
    public class EmpresaConfigTuple : XServiceDataTuple
    {
        public EmpresaConfigTuple()
        {
            Initialize();
        }

        public EmpresaConfigTuple(String pNumero, Guid? pCORxPessoaID, String pNome, Int32 pCEPxLocalidadePrincipalID)
            : this()
        {
            Numero.Value = pNumero;
            CORxPessoaID.Value = pCORxPessoaID;
            Nome.Value = pNome;
            CEPxLocalidadePrincipalID.Value = pCEPxLocalidadePrincipalID;
        }

        public override void Initialize()
        {
            Numero = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            Nome = new XStringDataField();
            CEPxLocalidadePrincipalID = new XInt32DataField();
        }

        [Display(Name = "Número")]
        public XStringDataField Numero {get;set;}
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        public XStringDataField Nome {get;set;}
        [Display(Name = "Localidade")]
        public XInt32DataField CEPxLocalidadePrincipalID {get;set;}
    }

    public class EmpresaConfigRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IEmpresaConfigService : XIService
    {

        EmpresaConfigDataSet Execute();
        IQueryable<EmpresaConfigTuple> ExecuteQuery();
    }

    public abstract class BaseEmpresaConfigRule : XServiceRule<EmpresaConfigTuple, EmpresaConfigTuple>
    {
        public BaseEmpresaConfigRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual void Execute()
        {
        }
    }

    public class EmpresaConfigDataSet : XDataSet<EmpresaConfigTuple>
    {
        public override Guid ID => new Guid("44C651B9-54CB-4225-84FA-F51053C43F08");
    }
}