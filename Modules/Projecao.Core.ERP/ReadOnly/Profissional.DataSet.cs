//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.ReadOnly
{
    public class ProfissionalServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("9B992B44-13B0-4906-BDE4-B687AD9549F5");
        public ProfissionalServiceModel()
        {
            SearchPath = "Profissional/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "ERPxDocumentoTipoID", Title = "Tipo de Documento", Type = "Int16", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Nome", Title = "Nome", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CORxPessoaID", Title = "Pessoa", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CEPxLocalidadePrincipalID", Title = "Localidade", Type = "Int32", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Numero", Title = "Número", Type = "String", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "Nascimento", Title = "Data de Nascimento", Type = "DateTime", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "Genero", Title = "Gênero", Type = "String", Mask = "", 
                                                      Visible = true });
            Forms.Add(new FRMProfissionalFilter());
        }
    }
    public class ProfissionalTuple : XServiceDataTuple
    {
        public ProfissionalTuple()
        {
            Initialize();
        }

        public ProfissionalTuple(Int16 pERPxDocumentoTipoID, String pNome, Guid? pCORxPessoaID, Int32 pCEPxLocalidadePrincipalID, String pNumero, DateTime pNascimento, String pGenero)
            : this()
        {
            ERPxDocumentoTipoID.Value = pERPxDocumentoTipoID;
            Nome.Value = pNome;
            CORxPessoaID.Value = pCORxPessoaID;
            CEPxLocalidadePrincipalID.Value = pCEPxLocalidadePrincipalID;
            Numero.Value = pNumero;
            Nascimento.Value = pNascimento;
            Genero.Value = pGenero;
        }

        public override void Initialize()
        {
            ERPxDocumentoTipoID = new XInt16DataField();
            Nome = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            CEPxLocalidadePrincipalID = new XInt32DataField();
            Numero = new XStringDataField();
            Nascimento = new XDateTimeDataField();
            Genero = new XStringDataField();
        }

        [Display(Name = "Tipo de Documento")]
        public XInt16DataField ERPxDocumentoTipoID {get;set;}
        public XStringDataField Nome {get;set;}
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        [Display(Name = "Localidade")]
        public XInt32DataField CEPxLocalidadePrincipalID {get;set;}
        [Display(Name = "Número")]
        public XStringDataField Numero {get;set;}
        [Display(Name = "Data de Nascimento")]
        public XDateTimeDataField Nascimento {get;set;}
        [Display(Name = "Gênero")]
        public XStringDataField Genero {get;set;}
    }

    public class ProfissionalFilter : XFilter
    {

        public ProfissionalFilter()
        {
        }
    }
    public class FRMProfissionalFilter : XFRMModel
    {
        public FRMProfissionalFilter()
        {
            ID = new Guid("CD91619B-E061-4280-A537-DB4E7EA930AF");
            Name = "ProfissionalFilter";
            Title = "";
            MinRows = 0;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
        }
    }


    public class ProfissionalRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IProfissionalService : XIService
    {

        ProfissionalDataSet Execute(ProfissionalFilter pFilter);
        IQueryable<ProfissionalTuple> ExecuteQuery(ProfissionalFilter pFilter);
    }

    public abstract class BaseProfissionalRule : XServiceRule<ProfissionalTuple, ProfissionalTuple>
    {
        public BaseProfissionalRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual ProfissionalFilter Execute(ProfissionalFilter pFilter)
        {
            return pFilter;
        }
    }

    public class ProfissionalDataSet : XDataSet<ProfissionalTuple>
    {
        public override Guid ID => new Guid("9B992B44-13B0-4906-BDE4-B687AD9549F5");
    }
}