//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.ReadOnly
{
    public class EmpresaServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("1A5539DE-36CF-4423-8CCB-952EC72F7E76");
        public EmpresaServiceModel()
        {
            SearchPath = "Empresa/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "Nome", Title = "Nome", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CORxPessoaID", Title = "Pessoa", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CEPxLocalidadePrincipalID", Title = "Localidade", Type = "Int32", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Numero", Title = "Número", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Mascara", Title = "Máscara", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "RazaoSocial", Title = "Razão Social", Type = "String", Mask = "", 
                                                      Visible = false });
            Forms.Add(new FRMEmpresaFilter());
        }
    }
    public class EmpresaTuple : XServiceDataTuple
    {
        public EmpresaTuple()
        {
            Initialize();
        }

        public EmpresaTuple(String pNome, Guid? pCORxPessoaID, Int32 pCEPxLocalidadePrincipalID, String pNumero, String pMascara, String pRazaoSocial)
            : this()
        {
            Nome.Value = pNome;
            CORxPessoaID.Value = pCORxPessoaID;
            CEPxLocalidadePrincipalID.Value = pCEPxLocalidadePrincipalID;
            Numero.Value = pNumero;
            Mascara.Value = pMascara;
            RazaoSocial.Value = pRazaoSocial;
        }

        public override void Initialize()
        {
            Nome = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            CEPxLocalidadePrincipalID = new XInt32DataField();
            Numero = new XStringDataField();
            Mascara = new XStringDataField();
            RazaoSocial = new XStringDataField();
        }

        public XStringDataField Nome {get;set;}
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        [Display(Name = "Localidade")]
        public XInt32DataField CEPxLocalidadePrincipalID {get;set;}
        [Display(Name = "Número")]
        public XStringDataField Numero {get;set;}
        [Display(Name = "Máscara")]
        public XStringDataField Mascara {get;set;}
        [Display(Name = "Razão Social")]
        public XStringDataField RazaoSocial {get;set;}
    }

    public class EmpresaFilter : XFilter
    {

        public EmpresaFilter()
        {
        }
    }
    public class FRMEmpresaFilter : XFRMModel
    {
        public FRMEmpresaFilter()
        {
            ID = new Guid("3453EAF4-4EC1-4A77-9D6A-871A485600D8");
            Name = "EmpresaFilter";
            Title = "";
            MinRows = 0;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
        }
    }


    public class EmpresaRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IEmpresaService : XIService
    {

        EmpresaDataSet Execute(EmpresaFilter pFilter);
        IQueryable<EmpresaTuple> ExecuteQuery(EmpresaFilter pFilter);
    }

    public abstract class BaseEmpresaRule : XServiceRule<EmpresaTuple, EmpresaTuple>
    {
        public BaseEmpresaRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual EmpresaFilter Execute(EmpresaFilter pFilter)
        {
            return pFilter;
        }
    }

    public class EmpresaDataSet : XDataSet<EmpresaTuple>
    {
        public override Guid ID => new Guid("1A5539DE-36CF-4423-8CCB-952EC72F7E76");
    }
}