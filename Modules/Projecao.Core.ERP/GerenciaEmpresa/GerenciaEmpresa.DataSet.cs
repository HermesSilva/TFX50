//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;
using TFX.Core.Model.FRM;
using TFX.Core.DB;
using TFX.Core.Model.Service;

namespace Projecao.Core.ERP.GerenciaEmpresa
{
    public class GerenciaEmpresaServiceModel : XServiceModel
    {
        public static Guid CID = new Guid("E8C8F59A-C2AA-4FAC-B528-C7302E3C513A");
        public GerenciaEmpresaServiceModel()
        {
            SearchPath = "GerenciaEmpresa/Search";
            DataView.Columns.Add(new XColumnModel() { Name = "Configuracao", Title = "Configuração", Type = "Byte[]", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Numero", Title = "CNPJ", Type = "String", Mask = "00.000.000/0000-00", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "FormID", Title = "Formulário", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "RazaoSocial", Title = "Razão Social", Type = "String", Mask = "", 
                                                      Visible = true, IsFreeSearch = true, Operator = XOperator.EqualTo });
            DataView.Columns.Add(new XColumnModel() { Name = "UltimaChamada", Title = "Última Chamada", Type = "DateTime", Mask = "", 
                                                      Visible = true });
            DataView.Columns.Add(new XColumnModel() { Name = "IDEmpresa", Title = "ID da Empresa", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CORxPessoaID", Title = "Pessoa", Type = "Guid", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "Nome", Title = "Nome", Type = "String", Mask = "", 
                                                      Visible = false });
            DataView.Columns.Add(new XColumnModel() { Name = "CEPxLocalidadePrincipalID", Title = "Localidade", Type = "Int32", Mask = "", 
                                                      Visible = false });
            Forms.Add(new FRMGerenciaEmpresaFilter());
        }
    }
    public class GerenciaEmpresaTuple : XServiceDataTuple
    {
        public GerenciaEmpresaTuple()
        {
            Initialize();
        }

        public GerenciaEmpresaTuple(Byte[] pConfiguracao, String pNumero, Guid pFormID, String pRazaoSocial, DateTime pUltimaChamada, String pIDEmpresa, Guid? pCORxPessoaID, String pNome, Int32 pCEPxLocalidadePrincipalID)
            : this()
        {
            Configuracao.Value = pConfiguracao;
            Numero.Value = pNumero;
            FormID.Value = pFormID;
            RazaoSocial.Value = pRazaoSocial;
            UltimaChamada.Value = pUltimaChamada;
            IDEmpresa.Value = pIDEmpresa;
            CORxPessoaID.Value = pCORxPessoaID;
            Nome.Value = pNome;
            CEPxLocalidadePrincipalID.Value = pCEPxLocalidadePrincipalID;
        }

        public override void Initialize()
        {
            Configuracao = new XByte[]DataField();
            Numero = new XStringDataField();
            FormID = new XGuidDataField();
            RazaoSocial = new XStringDataField();
            UltimaChamada = new XDateTimeDataField();
            IDEmpresa = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            Nome = new XStringDataField();
            CEPxLocalidadePrincipalID = new XInt32DataField();
        }

        [Display(Name = "Configuração")]
        public XBinaryDataField Configuracao {get;set;}
        [Display(Name = "CNPJ")]
        public XStringDataField Numero {get;set;}
        [Display(Name = "Formulário")]
        public XGuidDataField FormID {get;set;}
        [Display(Name = "Razão Social")]
        public XStringDataField RazaoSocial {get;set;}
        [Display(Name = "Última Chamada")]
        public XDateTimeDataField UltimaChamada {get;set;}
        [Display(Name = "ID da Empresa")]
        public XStringDataField IDEmpresa {get;set;}
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        public XStringDataField Nome {get;set;}
        [Display(Name = "Localidade")]
        public XInt32DataField CEPxLocalidadePrincipalID {get;set;}
    }

    public class GerenciaEmpresaFilter : XFilter
    {

        public GerenciaEmpresaFilter()
        {
        }
    }
    public class FRMGerenciaEmpresaFilter : XFRMModel
    {
        public FRMGerenciaEmpresaFilter()
        {
            ID = new Guid("79406D7D-A049-41DE-9E6A-8AE75F438FD3");
            Name = "GerenciaEmpresaFilter";
            Title = "";
            MinRows = 0;
            Style = XFRMStyle.Normal;
            Type = XFRMType.SVCFilter;
            XFRMField fld;
        }
    }


    public class GerenciaEmpresaRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IGerenciaEmpresaService : XIService
    {

        GerenciaEmpresaDataSet Execute(GerenciaEmpresaFilter pFilter);
        IQueryable<GerenciaEmpresaTuple> ExecuteQuery(GerenciaEmpresaFilter pFilter);
    }

    public abstract class BaseGerenciaEmpresaRule : XServiceRule<GerenciaEmpresaTuple, GerenciaEmpresaTuple>
    {
        public BaseGerenciaEmpresaRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual GerenciaEmpresaFilter Execute(GerenciaEmpresaFilter pFilter)
        {
            return pFilter;
        }
    }

    public class GerenciaEmpresaDataSet : XDataSet<GerenciaEmpresaTuple>
    {
        public override Guid ID => new Guid("E8C8F59A-C2AA-4FAC-B528-C7302E3C513A");
    }
}