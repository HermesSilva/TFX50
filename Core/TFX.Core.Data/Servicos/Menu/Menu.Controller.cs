//<auto-generated/>
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using TFX.Core.Controllers;
using TFX.Core.Services;
using System;
using TFX.Core.Model;
using Microsoft.AspNetCore.Http;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using TFX.Core.Data;
using TFX.Core.Data.Servicos.Menu;
using TFX.Core.Data.Servicos.Menu.Rules;

namespace TFX.Core.Data.Servicos.Menu
{
    [Route("Menu")]
    [ApiController]
    public class MenuController : XController
    {
        public abstract class BaseINFMenuControllerRule : XControllerINFRule<MenuController>
        {
            public BaseINFMenuControllerRule(MenuController pController)
                :base(pController)
            {
            }

            public virtual ResultSet AppModel(AppData pData)
            {
                return Controller.Service.AppModel(pData);
            }
        }

        public MenuController(IMenuService pService)
        {
            Service = pService;
            _Rule = new INFMenuControllerRule(this);
        }

        internal readonly IMenuService Service;
        private readonly INFMenuControllerRule _Rule;

        [HttpPost("AppModel")]
        public IActionResult AppModel([FromBody] AppData pData)
        {
            try
            {
                var returns = _Rule.AppModel(pData);
                return Ok(returns);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }

        [HttpPost("Search")]
        public IActionResult Search()
        {
            try
            {
                var dst = Service.Execute();
                return Ok(dst);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }
    }
}