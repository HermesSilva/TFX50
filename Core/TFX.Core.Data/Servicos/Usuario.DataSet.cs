//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;

namespace TFX.Core.Data.Servicos
{
    public class UsuarioTuple : XServiceDataTuple
    {
        public UsuarioTuple()
        {
            Initialize();
        }

        public UsuarioTuple(String pEMail, Guid? pCORxPessoaID, String pNome)
            : this()
        {
            EMail.Value = pEMail;
            CORxPessoaID.Value = pCORxPessoaID;
            Nome.Value = pNome;
        }

        public override void Initialize()
        {
            EMail = new XStringDataField();
            CORxPessoaID = new XGuidNullableDataField();
            Nome = new XStringDataField();
        }

        [MaxLength(80)]
        [Required()]
        [Display(Name = "E-Mails")]
        public XStringDataField EMail {get;set;}
        [Required()]
        [Display(Name = "Pessoa")]
        public XGuidNullableDataField CORxPessoaID {get;set;}
        [MaxLength(180)]
        [Required()]
        public XStringDataField Nome {get;set;}
    }

    public class UsuarioFilter : XFilter
    {

        public UsuarioFilter()
        {
        }

        public String Nome {get;set;}
        public String EMail {get;set;}
    }
    public static class FRMUsuarioFilter
    {
        public static readonly XFRMField Nome = new XFRMField(new Guid("2188B3FE-9322-4DB9-A71C-2B35137F1C6C"), "Nome");
    }

    public class UsuarioRequest : XRequest
    {
        public Guid CORxPessoaID {get;set;}
    }

    public interface IUsuarioService : XIService
    {
        object Flush(UsuarioDataSet pDataSet);

        UsuarioDataSet Execute(UsuarioFilter pFilter);
        IQueryable<UsuarioTuple> ExecuteQuery(UsuarioFilter pFilter);
    }

    public abstract class BaseUsuarioRule : XServiceRule<UsuarioTuple, UsuarioTuple>
    {
        public BaseUsuarioRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual UsuarioFilter Execute(UsuarioFilter pFilter)
        {
            return pFilter;
        }
    }

    public class UsuarioDataSet : XDataSet<UsuarioTuple>
    {
        public override Guid ID => new Guid("53F17DAC-4376-4424-8454-0866B122BFDB");
    }
}