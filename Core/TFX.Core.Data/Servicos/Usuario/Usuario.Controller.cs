//<auto-generated/>
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using TFX.Core.Controllers;
using TFX.Core.Services;
using System;
using TFX.Core.Model;
using Microsoft.AspNetCore.Http;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using TFX.Core.Data;
using TFX.Core.Data.Servicos.Usuario;
using TFX.Core.Data.Servicos.Usuario.Rules;
using TFX.Core.Data.DB;

namespace TFX.Core.Data.Servicos.Usuario
{
    [Route("Usuario")]
    [ApiController]
    public class UsuarioController : XController
    {
        public abstract class BaseINFUsuarioControllerRule : XControllerINFRule<UsuarioController>
        {
            public BaseINFUsuarioControllerRule(UsuarioController pController)
                :base(pController)
            {
            }
        }

        public UsuarioController(IUsuarioService pService, ILogger<XController> pLogger)
               :base(pLogger)
        {
            Service = pService;
            _Rule = new INFUsuarioControllerRule(this);
        }

        internal readonly IUsuarioService Service;
        private readonly INFUsuarioControllerRule _Rule;

        [HttpPost("Lista")]
        public IActionResult Lista([FromBody] UsuarioFilter pFilter)
        {
            try
            {
                var dst = Service.Execute(pFilter);
                return Ok(dst);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }

        [HttpPost("Flush")]
        [XEndpointDescription(typeof(UsuarioService.CORxPessoa), typeof(UsuarioService.CORxUsuario))]
        public IActionResult Flush([FromBody] UsuarioDataSet pDataSet)
        {
            try
            {
                var result = Service.Flush(pDataSet);
                Service.GracefullyClose();
                return Ok(result);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }
    }
}