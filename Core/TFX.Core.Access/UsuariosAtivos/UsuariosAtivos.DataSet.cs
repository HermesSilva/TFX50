//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc;
using TFX.Core.Reflections;
using TFX.Core.Model;
using TFX.Core.Interfaces;
using TFX.Core;
using TFX.Core.Services;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using TFX.Core.Lzma;

namespace TFX.Core.Access.UsuariosAtivos
{
    public class UsuariosAtivosTuple : XServiceDataTuple
    {
        public UsuariosAtivosTuple()
        {
            Initialize();
        }

        public UsuariosAtivosTuple(Guid? pTAFxUsuarioID, String pLogin, String pNome)
            : this()
        {
            TAFxUsuarioID.Value = pTAFxUsuarioID;
            Login.Value = pLogin;
            Nome.Value = pNome;
        }

        public override void Initialize()
        {
            TAFxUsuarioID = new XGuidNullableDataField();
            Login = new XStringDataField();
            Nome = new XStringDataField();
        }

        [Display(Name = "Usu√°rios")]
        public XGuidNullableDataField TAFxUsuarioID {get;set;}
        public XStringDataField Login {get;set;}
        public XStringDataField Nome {get;set;}
    }

    public class UsuariosAtivosFilter : XFilter
    {

        public UsuariosAtivosFilter()
        {
        }
        public String Nome {get;set;}
        public String Login {get;set;}
    }
    public static class FRMUsuariosAtivosFilter
    {
        public static readonly XFRMField Nome = new XFRMField(new Guid("168443C3-D05D-4587-8C82-E3D4DEAE3A46"), "Nome");
    }

    public class UsuariosAtivosRequest : XRequest
    {
        public Guid TAFxUsuarioID {get;set;}
    }

    public interface IUsuariosAtivosService : XIService
    {
        object Flush(UsuariosAtivosDataSet pDataSet);

        UsuariosAtivosDataSet Execute(UsuariosAtivosFilter pFilter);
        IQueryable<UsuariosAtivosTuple> ExecuteQuery(UsuariosAtivosFilter pFilter);
    }

    public abstract class BaseUsuariosAtivosRule : XServiceRule<UsuariosAtivosTuple, UsuariosAtivosTuple>
    {
        public BaseUsuariosAtivosRule(XService pOwner)
            :base(pOwner)
        {
        }

        public virtual UsuariosAtivosFilter Execute(UsuariosAtivosFilter pFilter)
        {
            return pFilter;
        }
    }

    public class UsuariosAtivosDataSet : XDataSet<UsuariosAtivosTuple>
    {
        public override Guid ID => new Guid("961B7E48-A442-4096-80DF-B65F8C459754");
    }
}