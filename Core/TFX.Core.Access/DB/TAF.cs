//<auto-generated/>
using System;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore.Infrastructure;
using TFX.Core;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using TFX.Core.Lzma;

namespace TFX.Core.Access.DB
{
    public class TFXCoreAccessContext : XDBContext
    {
        #region _TAFxUsuario

        internal class _TAFxUsuario
        {
            public class XDefault
            {
                private static Dictionary<Guid, _TAFxUsuario> _SeedData = new Dictionary<Guid, _TAFxUsuario>()
                {
                    [new Guid("EBA53C9E-C110-4CA3-96FD-420DC75207B1")] = new _TAFxUsuario { TAFxUsuarioID = new Guid("EBA53C9E-C110-4CA3-96FD-420DC75207B1"), Login = @"Administrador", CORxEstadoID = (Int16)1 },
                    [new Guid("00000000-0000-0000-0000-000000000000")] = new _TAFxUsuario { TAFxUsuarioID = new Guid("00000000-0000-0000-0000-000000000000"), Login = @"NA", CORxEstadoID = (Int16)0 }
                };
                public static _TAFxUsuario[] SeedData => _SeedData.Values.ToArray();
            }
            [Display(Name = "Ativo")]
            [Required()]
            public Int16 CORxEstadoID {get; set;}
            [Required()]
            public String Login {get; set;}
            public Boolean IsPKEmpty => Object.Equals(TAFxUsuarioID, typeof(Guid).GetDefault());
            [Display(Name = "Usu√°rios")]
            [Required()]
            public Guid? TAFxUsuarioID {get; set;}
        }

        #endregion _TAFxUsuario


        protected TFXCoreAccessContext(DbContextOptions pOptions)
          : base(pOptions)
        {
        
        }

        public TFXCoreAccessContext(DbContextOptions<TFXCoreAccessContext> pOptions)
          : base(pOptions)
        {
        
        }

        internal DbSet<_TAFxUsuario> TAFxUsuario{get; set;}
        protected override void OnModelCreating(ModelBuilder pBuilder)
        {
            ConfigureTAFxUsuario(pBuilder);
        }

        private void ConfigureTAFxUsuario(ModelBuilder pBuilder)
        {
            pBuilder.Entity<_TAFxUsuario>(ett =>
            {
                ett.HasKey(e => e.TAFxUsuarioID).HasName("PK_TAFxUsuario");
                
                ett.Property(d => d.TAFxUsuarioID).HasColumnType(GetDBType("Guid"));
                ett.Property(d => d.Login).HasColumnType(GetDBType("String"));
                ett.Property(d => d.CORxEstadoID).HasColumnType(GetDBType("Int16"));
                ett.ToTable("TAFxUsuario");
                ett.HasData(_TAFxUsuario.XDefault.SeedData);
            });
        }
    }
}